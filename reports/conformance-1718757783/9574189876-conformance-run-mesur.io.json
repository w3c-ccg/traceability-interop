{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8ae292cb-3870-4ab4-acbf-1ea34f5768d6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f20062e5-f9e4-461e-abd8-7f5194fd18b9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2038f6a-05e9-4bdd-b58e-e00d151fa46b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6c1917ff-1c4d-4085-9baf-452eaa78cc4d"
                }
              }
            ]
          },
          {
            "id": "38460bf3-d6aa-4f97-aae6-fc88f4e0a8d7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81f6887d-023c-45d8-8563-675849a3feff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "370c3b2b-b50f-4654-8910-efdde76904b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "70065c23-601e-4914-84d6-768ea54a6984",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a946d149-0c2e-45af-b084-110625c00e02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12d7585f-7ae6-46ec-8b76-37e0dd76d9cf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdd916f1-6458-4e05-8d86-09d78e87382d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53d2e237-fecd-434e-8493-1d70c290c22b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ceaa1960-e41e-46a4-b446-134e3c911e75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40bd57eb-4e8b-4a59-889d-066cb308e12c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a700e0a7-d2d4-41b1-9b0b-17b930d4e1b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66cdce86-ff80-41c3-a8fc-888529677cb6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8b50fc5-922b-4866-aa19-a8d6a18b5ebe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "098cd60c-6cbe-4bbf-bd3b-2ed182bcff0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "561d1a42-b484-4d94-9d92-25cf47906e7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d925f89-ba20-4566-8966-91c48c06d7d2"
            }
          }
        ]
      },
      {
        "id": "74b6f392-e181-4a26-a55f-7266abe2cc03",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "610041f3-3568-4305-b8cb-8741e944aeec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "437f2f52-725a-4e8c-832d-acb884d8076c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e14d912-0e67-4dbf-89f3-42e9ceb76552",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2552876a-4a1c-4569-9b5c-f5a1394146f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42389165-4f4b-4165-9a9e-6ac267f72a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa1dc65-a96f-4487-92e6-c911db82de85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d86c16e-e5c1-4057-878c-6d4241e27ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fedd1e5-3602-4acd-adfd-77ec0a0c08df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8038a46a-d5c7-4d69-bf2d-7818a2525d5d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61524c7-e145-4da6-b4e8-43a4ba2e08ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "464e2947-783c-4f8d-a1dd-dae9690a1e4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2196530d-32bf-45f8-acd6-1335e48ae87a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f15a7c7c-0945-4c67-8143-05d1f9a4afda",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bdef48-b224-46ac-ba25-c76d1946c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc467f60-71a6-4907-9e80-9bc566948471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206be8b4-16c4-4d2d-aecc-96e4646ad2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f72184d-6931-4e91-9ddf-f9b853929669"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dd9dee8-1d51-4a22-bba0-eb848f4935c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd168ca6-80f6-4e16-b88c-b9bdaa7a48c0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee6a5554-59ae-4e4b-adff-e49358b829cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "742ea308-a31f-46b4-b016-031648609ad4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9603acd3-1ba7-4be3-8c8a-4c5947dc4409",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9bf07b76-cb96-4ba6-a1fe-44f09c36faee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be3d7fbf-c256-4cd9-8351-831272fa5c2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "707c7fb3-f269-41d0-a177-002815a9e194"
            }
          }
        ]
      },
      {
        "id": "6b8289bb-ec6e-46d5-aff4-a63054df9060",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0cdc4e34-d2a7-4e42-b4da-1b6c52f01991",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9474799-2c15-407c-bda2-b0799676a257",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a55d9999-70af-476b-89e0-9e71b8fc5130",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2580c1e3-70cf-426f-b35b-6739ddc6962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673e7d92-9b35-4b36-bb2e-e08f518c3a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496c614c-41f3-4efb-b4b1-8eec8ab1d442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bbb282c-714a-4aea-8b8b-9e94f2fa144c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476893cf-42a8-496d-93d0-1573f179b289",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a28f14-8935-4f35-a879-18a228bad38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b65ac97-21bd-4844-a7ac-f8d3bb9a30f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca28761d-80bc-4558-9994-b176b5082a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c2a3184-a9aa-4265-8de6-e366c3a752dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3074944a-1667-4c98-bc80-0c2bbb3dc3e0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f19fbec-3ef7-4282-9f97-1bf323740e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37078e35-470b-4def-8e4f-36bbb9a39280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc4bb34-cc79-452f-909d-f16600981f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99afc878-a4ee-4531-8e7a-65172872e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20713adf-2410-4901-b8f7-ddbc2fbc5f9e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34416e72-8a5c-4aed-a2dd-38d9dc483070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00761cea-8a6b-4c32-ae90-1178731d4433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453fe35a-8a8a-412c-9fd8-01a6378e40c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af15b34-83c5-433d-9041-a0b6efe37ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d178cb-b9c6-4f19-a462-d51e4e858f21",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06dedcf-cf9f-4e13-901b-8a10a4a7f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043c54be-0a65-40a8-a56e-881984500fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e092cb7a-c8ed-49f0-93e2-147f20a7079d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6dcb493-57be-4418-8a37-4bdd03f513aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3550321-08a3-4a1b-bfa2-c57d92d8e1e5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f60872f-928f-4b3c-8228-817aa688aee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87c2410-9473-41c1-9ae2-15824531710a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e712dd6-e98f-466e-a73d-c71e9901338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "290cdfd7-2535-45f6-8352-aba4fbcaf874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d63e687-2819-4a3e-bf12-1134e06b0f71",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319b0a3e-72f3-493d-9220-c29d5f424957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d73f07d-cb87-4077-bf11-c4054f522f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f2db30-94f9-4a5e-b3fb-6dcaf05cb4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c83f26-c671-481b-ae0a-1c2960dd078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d100301-7127-452c-92d8-f65af35986ae",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1c32f8-e9ba-448f-bbe8-e5e074cbcfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf8db5f-be93-4d9c-80ce-c2a82b0eaba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c97d97-166d-4809-a064-09aaf0327037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b135609-eba5-4e0b-abb1-d6381fa93fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab366b9-1427-4dcb-a095-749f9f71d415",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d78e55-61f3-41f5-864f-df0fb6f9e202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2509523-6404-42ab-98e4-d56a7b71e71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9ddfe0-5229-4e2f-93fe-ca837645cb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcdc1995-d2d7-4e4f-8680-c6f34e6ceab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996056ae-02d2-432a-a2a0-2ff55d8c75a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc6a06c-1d44-4f71-8e84-d8f709aa7ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7566ed-00f5-41f0-bfb9-289ae8be48ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d687f5-14c8-4017-ab9e-652b923b2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "898735e5-c456-45cb-8e32-55487cdad133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb53f87-93c4-4c04-a6c5-6871e05850f2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c2d666-1ef7-47e2-ba33-aa01029a3f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b02446c-d0a6-4815-84c0-26c9c8803832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a64a3e-7866-4b78-b6a9-345e9bf7e51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c2675ef-be6b-4c32-866e-3bfeef857971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b530ec-5912-4e1f-9e17-84ccb0af4f0f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53229ec1-eaf9-4408-908e-75c0b9a6fb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff9f3f0-6bb1-4f67-b304-c47971c07b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac36791b-61b0-4a1e-8bd3-15cd78d1a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4acdbc6-479b-46c3-897a-6dc2d84de3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d675926-038d-4320-b2d3-d6a7a077d154",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2345d-b779-4676-a2cb-8c4619363339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac33d87-40e2-44fd-b288-b4cf167fb44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e64809-c7d9-478d-a65a-56598d7181ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8193c4e7-1123-4cb7-ba65-a2c4d91fee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7753641-d9eb-4fb8-b5e3-22688b4bfe8d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62dfccc-19f3-493b-acf4-50861a991e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f797a5-d3e9-4d39-bd44-9aa47ca7e4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7440e0-3687-4860-bf59-2eb45f85f3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f23dd84-34b4-4618-bdc3-a1da3e12025f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40553031-36c2-44cc-b10d-5f265f3b8833",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc3fc03-7ecf-424c-bc03-326ad24fa1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3acbd84-6513-464d-86ae-7a55014e4fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f743aff-0059-4ad3-a1a1-fd72215576b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dafd136e-03c9-4111-a4c6-cadd79cb0256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ae669e-c615-411a-9dd5-402c7d99175d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f759e16-6c7f-45c7-bbd2-789d78ef92aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ec958f-8b21-4e00-83e5-25839dfa3923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15434ae1-c02c-44eb-b74d-f5b4c605af5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e25d0eb-c930-4b42-a548-b860a6764026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb3a0d1-c8a7-422a-a5db-ecfd87d002c2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3754d2d1-69a5-4357-a592-1633756d7f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee766ae-7fa7-4b7c-9130-9280a99c5fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160172b5-3a88-48ff-800d-a224e3e70353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "014136a5-de34-4628-8434-c87bfd4b481c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b4a4d7-43f5-436a-808b-3c533468d2b7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed777d94-bb0d-4002-aec9-7d8d9c82e921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0ecaa5-54d0-46da-b336-59f3e8eb0479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def7be85-eb0d-41a5-8a0b-d7562ab3c090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "27fc7bfc-1c7f-40e3-86a2-adc06a4f87d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0610e38-627d-46c3-be35-e0d5de76aa17",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c446a632-e5e4-4cb7-b115-75644f4dc52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b72ebe-c395-46d0-806b-20fa302350a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2ee5a3-bbcc-4504-8231-f74e72ba92a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ed3409-6d56-4683-9277-a541bd970320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553ce41f-f28d-4b30-8f9c-3716a08ff774",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dc693d-b468-4ea1-ac1e-a53ebe959b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc548264-e14a-42b6-89a0-7ccbf09ce55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dfbc98-21d4-4ac4-aad2-7d6159f8161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "026d7c12-df3a-4e77-9e1c-28e49a5c87fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543cb781-a74b-44f4-9664-7aee5c51c4ae",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db83c5c9-db3f-4a3f-92f7-829a788c2702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee6e76d-8d51-4517-8228-1f77c69791d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476730d-d2e5-4adf-9967-a9d3a0b7cb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1fd53f-1e52-4a51-b59a-337ed1d99de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147db1ad-bc9b-42c0-8fe5-71b8ada33e22",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fbd920-cf75-41ab-ae89-3480c271c37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed90d6ff-a5f1-4821-a271-566b70772233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6a0a89-d78e-4466-8aed-b2d7ea436660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b831ce-342f-41ba-8102-3d426d9fb2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf900cf-dd70-4114-8b6a-9c2cb9bea84d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc24c23e-0c74-4ed5-91fa-8e853292fdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dcdd9a-cd46-43d8-ad9e-9ed6cebd63b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e9db5c-8f79-4d2d-910d-fc37eb5e1289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f427a194-8384-4e8c-ab80-d0ad87a6564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b86c98-9197-4df3-9108-7f7cf00ca504",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7876d9-c8e6-438d-a02e-b3de4f4e012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9364ca6d-2db8-43b4-97e5-3c86aede2551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495501f8-eb39-48d3-9661-01dfc8139738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d6b8d9-aa4c-47b6-a9b5-21bc1b81f635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf49a6e5-405a-43ea-916f-7134b92cabab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ffccfb-4715-413f-b9eb-45565109cabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26122bc7-c62f-42eb-af69-269227e554ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aa3437-0466-40b8-b3b9-307bf51e6a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3c6fb7-3857-4ad2-82ba-7da310c7920b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a08b9d-e904-43c3-894f-9613f7057edb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7bd5e4-ffc9-4e0b-a181-b7870f2ae377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f78bf5e-6afb-431e-acc7-5e18f11b5f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7849305-1285-4609-830b-959db8bc8f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4361cd34-27e8-41ab-ab87-e76b51c92a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac580e-d6b4-4240-86ac-215a7887241f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef535e-cf86-4029-a97b-f4628d1e7740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39fd189-a7a0-4675-a5d0-8700c245aa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd8310c-545e-4441-9c2e-47c9b9cf83a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d406ab-7a92-4c21-a0a0-ea087d34f7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d7d2c9-a5e1-4c3e-9985-285ae035b454",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33414850-54c5-426a-9b6a-62636a561b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99790dab-e154-42a5-aea6-002de7a89b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3fb69e-7a12-482a-b28a-7dbb47307437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f10cff-b615-410e-8f7b-d715fdc788bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cef946-1573-40dd-8cc8-366e7616f4b2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7126adc-a87d-44ec-8bfa-ee454e9acb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bfe080-4f93-4747-b6a5-b9ab1f2b2ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948c7ce1-ad70-45e5-88f3-c13bec0e877b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6462a93-7fca-491b-9f1c-6b65fb63123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2563948-43c9-465f-8a4e-a34df3406a04",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4519ea-98bc-45ca-96fa-b565095248de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c17522-3d87-4908-8828-6adb64f2ac0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f358fba-ca38-4e12-a54b-0b8b69ad8780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "582a5385-08c5-4ea9-a9d3-c176595b2361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795aa863-59e5-46f6-b7c1-a4eac1403326",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dd000e-c48d-46ea-aafc-ff1b94b951a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4109092-f7a5-435b-81b2-299d1ee930b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd9b1fa-b461-4b5a-9f53-23a91596a720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24198bf8-d4e8-452a-9cb8-069f4f776b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a957186-ca97-4e5a-bf37-9cdefb67dd77",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cbb82a-d593-48db-8582-507b5df3d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddabd23b-87ac-47eb-abe0-f3b7239cbf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df7deeb-f2c3-4597-be71-2ea4d9f7d501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "598c3aa6-ce3f-4e60-9963-0f78502357b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c5c312-3769-4502-ad50-4fa22db6c5e7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76072024-8b96-4ac2-ab4b-e46280a3ce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c572019b-6f16-47eb-90a0-d5336fb353aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32c3820-5d51-498f-abfa-8ddab653895a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c976d4-ad5a-41e1-a026-3750cc8dd5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24541741-9dce-4347-ae5b-c1480302a173",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4514ea-4aaf-4fce-b840-ee0700111769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9f1833-69d5-4282-89e6-5d16a0aa2c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332d7fc8-bf7d-4f1a-8023-8cdbcdf16fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4dbf53-68f0-4f89-81e2-d16bf676e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb49926b-5c9a-45cd-9006-a38e0182a9c4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240df4b2-1f07-454f-b527-ff1f19b88310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a73bd6d-da29-4cca-998d-74533c371c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e1b80-6eb0-426c-92ec-c5b25fe8c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "36b66199-92db-4fc2-87f0-1edca0a7b17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6971c3d4-4b44-4b55-a553-c0bda9239cfa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc6ff0d-f94b-4db7-b419-f01d350abc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c032977e-881e-4776-8431-dce13b2b3c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b3746-6807-4802-a697-9d8ef3a3f720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24d2f927-c50e-42fc-b02a-05fc6b26591f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42b7fc2-142b-4576-a17d-91be0a44c753",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20ce0b9-3442-4b0f-bd02-1812aaef5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dd7325-d571-46a7-b10a-28c2d02c657c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d8b4e-081d-46ad-994a-dc923e3e6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d148536a-142f-4484-b6f7-640c9a37350d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de59953b-0bb6-4547-8b81-2aa0f7b8d8f9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427c4eee-29c3-48f9-b19d-5268d30dc9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca7018c-c5b0-4782-91b5-a0145cbffb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f4ef99-399e-4dc6-b8d6-7fcc676332bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "78865ef8-6ae4-4644-b2ea-9cbf774fde8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cb87bd-2fe7-4dc3-98f6-d30060a2dfb2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4ad7f-c4c4-4044-a85f-6da796179d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4155dae-cbfb-4cd2-be1d-ddfd39d97572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36478ac2-c17a-49f6-a452-cd9a15f16d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1fe1e8-5a2f-4201-9ce6-18b5b8e3d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b191eebf-357c-44b4-a794-387ea85adf4a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f3e519-0111-4964-bb3b-94af30784218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeee8ca-bb2c-41d4-b6d5-5cd1463f7d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950d499e-3018-4549-87b5-78e14ac53a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f261985-09a3-4155-99d7-7669cdb1a8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd4f5b0-2b35-4ba3-bf5f-78ad1e5e7a41",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc1cc4a-6ea2-49e7-9501-815abb49df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1379bcf0-e2ca-429b-9f4e-4a0c5a3f4e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168c3dcd-db34-402f-9b80-d38db73d7cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1f1f1f-5ac2-4fcf-8d7d-a81a04c9881d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695acbce-6599-4b07-b299-92b8b2794095",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ded25-0d7d-417a-ace0-606466aa4478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf287da-a55b-4bf8-9567-0920e12076a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5fb92c-ec80-4535-bff8-5b2c3b260b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "509b58c9-5d99-494a-960d-15817050cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260bd282-7a3e-44ad-a304-8677246b31fc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aef86af-5ba5-4bfb-b3d6-717f330c97db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bc2533-7ad6-4987-b73a-af39b0e722aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadea159-1689-49ac-90d3-82916d417df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f61de8d2-f8f2-4805-9a64-e3c78e2d2e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b72cb0e-1aee-4ed1-8849-10c9b2ecd2a9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a425b64f-ad71-4180-b5e6-a769a1151475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f822ae-0a0e-44c7-b812-6d9fac989414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51154126-0416-41e2-8d8c-8931bb8cb836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a89dc8-917f-4540-ab13-bfc8bb724d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae12072-67a8-47a6-a860-56fd11b991be",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61e727a-cdbf-4931-8b56-f5c37b071b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5709654d-ae3e-4fe3-91bd-2efce08cba9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e731df70-2d71-484a-b85d-c64095d2648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2bd5c8-ca37-4d54-bd52-bfc67143e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bf865c-926e-40d8-87cc-1a627de6df3f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879306ad-be90-4e26-8330-0692205eea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bf35cf-8200-4a15-9c8a-9f480e70e698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3af8ee4-fe2f-4f72-b128-d7ccf59a025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d86aa3-5869-47a4-b794-1b7fbfb18c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e849b9cb-cb08-458c-8824-69864e85f070",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa9a85c-c8d1-4ce0-a424-e88eb0c11bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e642d9be-1354-4aae-b029-755147be0f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3741293e-c87e-4414-bb54-db497bf9c97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "796a02c1-54bc-43a3-a46f-9575cf51a63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef2cbcd-a51d-4204-80ce-cdb85bb3a8f4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713bcb6e-1d10-4f14-9b0c-262c31ce9a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4523a4eb-e3c4-4990-a0a0-8bcb56f7fcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88250c0a-f647-460d-b1ff-0cc8931f907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b39dbaa1-8f3c-4d1f-8cba-7240b6e159eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a238d75d-ac3c-4c1a-bdfe-1b34eb255c6a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71598bfa-1121-447f-914e-3d851fb9d8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a41bdca-d699-4e8e-967a-0c5fe5c90b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150daf0f-28fd-48c7-a695-3e8b9d69d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7acc03-6e60-4193-8444-a2543c9e74e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8c5239-7c45-4285-ab7d-37cfc4c0eaf3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc83af3-9fa0-4c4d-b88d-57522e731df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773bafa9-cf63-474d-9d44-c21c06a531ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432619a5-3d10-4d49-9927-e2b942b8a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce53917c-40cc-4885-b027-8ac87bf6e4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee951318-f379-4bde-b77d-94ddc231dbee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e95397f-2207-41ff-96e1-b682e9d904dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ab983a-de16-41fe-a0f1-c8795c50945c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c56e6f5-5ef3-49c2-b902-f901ae5aef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ecd424-4328-47a4-89eb-70c6c56fb96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723aa944-a4fb-434e-ab68-d955915f1533",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98467614-90d8-427a-b2a1-f281d64ee5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc447c92-5256-4c9c-a9a5-7abe04ecdb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de597754-2ac1-4a1c-909e-47a88f8662c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ef71f6-b112-4a87-bfe7-d3fee0c81b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ec6288-fb55-4d7d-a1fd-0a000c18d6ff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f902605-4d3f-44d9-8a24-248faec6f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b3ccd3-d155-425a-a882-698a71bbf016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f63c383-febc-4a33-92f2-c43a32e40e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0842a2b6-72ce-4396-9e0e-dac3fba2dc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482aac29-23b4-481f-950c-7824bad72678",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc74012a-0e67-45ee-b7f7-70d0a3b70e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc137798-4dc6-4993-a77b-c8945a57457a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9b8ac2-d016-474e-8634-55472b087f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1d985c-7c5b-4fa6-9f65-02ab7a179451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c60b6a5-3f4f-4dfa-bb6a-8beb49097088",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18be9b-0aaf-4939-9e04-36cc46137052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be8cf53-8ae1-4340-88ae-13fe0c6f1344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeaf482-e6df-4eb9-9856-9ad3953554c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1085747-d157-4112-b1fa-c652c72988d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3849330e-427f-47d0-a82b-02849146160e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6570ab4c-4534-47c2-b4cd-499206c0e3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461eacc0-8ebb-4956-b266-eb615eeec373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d77999f-fa92-473b-a4bb-0d35cd6fea2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "63cf18ab-ac9b-4b41-9177-bac798fa81db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eec9d6b-bf35-45a0-8e2d-f0fbc6ab70c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992e5f9-b919-422a-8292-6d6aafabba60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c999406e-b026-4882-991b-9bf399664375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2af337-e8fb-43ca-9e09-06314c1684db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0502ff-60e2-4cf8-9a3b-1b8711dfc112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9b5a6e-c053-4887-a03c-59fd7d065ebd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8dfbf0-5fcf-4d97-b368-2ca6bb0d7564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f7e753-4ab3-4656-bc4d-87acad521077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bdf5e0-2da7-4e98-b797-34db665d916d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfc6168-844d-448c-a846-80416befe7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae10ac-15e8-44f9-ad05-ea723a3be26c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a98bb3-3576-46d8-bc59-f63459f2ab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d97e06-d67c-4628-8736-df6fb82fc86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042191ed-8213-4b73-80ff-ca3d7cc824f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44cc49cc-a245-4239-b230-e728e1692549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6364f7d7-5e34-470d-93d0-5afa08e71a12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682ea353-2375-484d-9155-7e7eedf538c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0d59c-387b-4ada-b775-facad742727e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a34ee1-3372-4a76-ae6e-658c72ba20e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c089df6c-ee1d-4df0-b65e-aa2ed86744a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02283b97-9a54-4e23-bbce-1ae3d6935dc4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a92bc-0ecd-4129-ac2b-b9c27c58be88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa9c89d-ffd5-43b6-be28-ef1ea684aa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5391486e-0d74-41cf-8df3-f45627c453fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb64d28-57ec-4ffe-a509-6603d412b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3795a112-c90d-4f5f-bbdf-a4f0ed9b6a10",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cee4e1-a8d3-4310-9c36-2abf62282ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb2023c-be05-4953-8185-c573cb34eb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91264f9-0114-49bf-9d12-a4135fb816cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd2199a-d672-4118-ac0a-0b87aa7d985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9dbe66-46ca-4da0-aa39-92f92224b448",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b844200-a7f4-4388-9691-13662ca9b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a378feab-7f43-45ee-9e35-c76d85e25be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e13e8f-1f4e-481b-94e7-1dd368ac1049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "528ef530-e1e6-4073-a2c0-251a420079b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70443e9-cc21-4ebe-a405-2ff7ac7b1b1e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5558d47-69f1-4d8e-b8e2-8ffea1339112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d2e95a-b087-4fb8-807d-4879952c052b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8caf39-d54c-44ef-a4e3-4927607a93fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60904a62-d172-4288-a938-92633066e93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f899383c-be8b-45ab-865e-1987b712b0a2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80f0dc5-6b15-4207-ae48-b4e1551fdf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c69f87-551d-4456-b500-c2815e74bb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b636899-fd65-4aa8-bca3-6e00f77f191c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f13f1285-d18b-4f3b-bb1e-94cfa91c843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc75825-a49a-4aa2-8703-8a2039679c2a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b06ca0-2711-41a1-94c2-8b0d7e940e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b1c8d2-1d7a-4652-9f74-e3650d7f558e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521ee42e-935c-4cb1-9787-d5617d7f4358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b644976c-0e91-4d18-8341-f87804c6a769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc07b1c7-a0b4-4af3-ad1b-15bc12c9ecd0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8330a03e-659a-42b3-bd0e-b9e41f2cdd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54d90d4-be89-40f4-8e91-ec6cfff936fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211c45da-82c8-4128-ae86-f85b13a430e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7721c29b-7849-4b50-99a6-23dd7e248054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e464ca-2a40-4c9f-880b-293aed279f5d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a1b5fe-ec90-493c-863e-3fea0c3f7e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f43d56-2220-4ef1-bd0a-fb5bb0b32a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac869b78-485d-4309-a4bd-35cc4d07163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea40a46-7031-4362-ad83-120462f3a6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd29771f-acf6-49e3-b22d-dbddabb348a1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3988444d-b0fb-400f-a4cc-62295a759b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729340fd-e290-4133-999d-9bf7e5925243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7296a283-de3d-4f01-bd11-0cfd7efe4aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cae32bc-bf16-423c-977e-f6e27011ab8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2d4a14-9cc3-47a3-a7fc-7eb4761b3b9e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed9db08-c9fa-4b60-ad7f-4e287c633a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7976ae85-14c7-464d-b6bf-bd49a852621a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71ec3be-ca82-43a0-b147-db0a3d819e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d32922d5-c67e-4486-a9b1-0c74e6cbd7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee0d0ee-1dad-4df2-8bd6-68516aa20525",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8549c4f-6854-4ad1-9c07-5134bb958ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552509fc-6ca3-4d1d-a5e9-64ef15e1bc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291b1559-e7be-4b9c-97e3-e1da484c3763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09939efb-6f80-4f4e-96ef-9a1ae1a21936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d01059-63ad-4a50-b5da-7034411abfe7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f6560-4f40-41ea-bb4a-a708451d4dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64682aaa-e744-4aeb-95e8-073db6a6e812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cba28cf-8722-47a5-a834-1ddd2945c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10cc9fc-0f48-4958-acbe-3090f7ac3231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd1022f-af31-4d00-b767-46f61bf43cd7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104842fe-4711-4f98-a4ad-6034ccb51c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb4090a-f2fd-4f37-98b3-8b81e8bcf932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdb0a40-2539-42a3-9229-1bdf3ddd68e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5da03ee5-fdfd-482c-85f7-789d52b04d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2667e692-3220-4d46-b6a2-513dca5668a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294c3a0f-99c5-476e-b74a-1a1e2cd29d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c5321b-b84c-4606-b594-92cf0a8736fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dd21c7-30c9-4718-a257-332d0527ad13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6ba177-e9d3-4767-8183-8dc570f6c679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f12c8-6c00-4b8c-89be-411fa11408a7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6b89d1-ca76-4d7f-b0aa-32478e7c8f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b1b847-28fe-4f6f-9ef9-e2db36952557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce64218-0656-416e-8b22-cdf024f71c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa101af-4aed-4f9e-ba08-e96b35a5aa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ccf83e-586d-4145-b2fe-4e52abb6b2c9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b34eb29-01d2-40fa-bffd-ea73b183b3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f0f3ef-ad64-4d45-8367-4ceb4e115f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0057cc94-5115-4703-afd6-4b0e1b9f65bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04df1ced-17c3-41ee-ac9f-ec5d7148dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c25cc82-dd6c-454f-8b38-6da9a7b0ab2c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c25289e-74a8-4414-b9e2-8742f8d7eb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782c2493-9b82-4939-adee-1a4e4c60098f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e2dc22-2037-4a7c-8da7-af5441149d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c416d5-4056-4fe6-a5b4-4ae367867e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f7f191-d420-4903-a7a3-e5f1c98acb5b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82700a2-bc81-4a1f-82f9-2984e2070585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bcdf39-2450-4be8-a06c-5b3b4a42380c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e695e26-b102-41d2-8096-2493e3117fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "865a126e-f2ce-4e03-ae98-444aee47eb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9911885-17a3-446e-82e8-ad7141dac6f8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a84ab9-c9c9-4fc1-b755-69e4960b0320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fa3f24-6233-4ce5-97dc-99ad217ab0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c006fe0-7eb2-4c5b-8df7-2ad774b08e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e424f8-ea03-4c1b-8e4a-e705b0b7bdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e2a607-b3f5-43ed-bfa3-4ae6b9f04968",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47880dc-95d1-442d-9c2c-8850b54bf1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17e6c9f-a264-4dbe-a61c-461e4d6e9bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2310e1-2225-4ae4-9f3c-d4ae1e6ffa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab1f35a-5131-4eae-8346-0a4b7af89f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262f5af9-0043-47bc-a287-f4aaa0c7c2eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd9fb9-b909-42cf-90da-c7d15d1c3dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d81f52-6de2-4c37-b04e-a815c0b853f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac549b-36a4-485e-9688-7daf68fde558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85c48ae-e555-437c-a366-c21321f5f6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577ba9bf-4810-458d-9a9a-0804cb515a9f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3b39e4-7931-41b6-b714-ede0b9c8d745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8c7cb7-2013-4556-838b-bc9900974a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e52ec9d-6d1f-4fe8-9aed-daa664b2f0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8453e82-fa73-43ee-9ac9-e718897ec611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28c4981-74b7-4cdf-9996-c64cfed3ac44",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e2c8a-9b2d-4c7e-a7c6-e1e4c9e1dec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73c1fa5-c03f-4eb4-869e-b611daed0dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a4a45c-cb99-42c6-9c59-e68c48861bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6afe9d30-1b31-48ea-8121-78af21134a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8887892-0756-40be-a459-6c9c5630f4f6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16976949-4a2c-4e97-ac3a-6f2a7ab7f795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a1fc46-24c6-42cb-8c56-9ca6cf2eef16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55f0e4e-b4c9-4483-9071-7be62e8506ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c7aa32-00aa-42a2-b46c-dbde3e323def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc0675c-4353-4c26-87bc-7de2e19a5ec8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519d30a5-0a5f-43a5-9927-7ebdae42a783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b2ba52-b326-4710-a5c8-8c3cec0848cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a020151-726a-4d36-b8ee-f6805ac0cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e72973-6d3e-419c-9a10-638ac66f7a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f1c768-163a-427e-b9e0-94b6439b8795",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f57ea37-584b-4297-a0e0-fc2665ac4e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2d92f8-c1b5-4bb2-9f99-1f7b1bf7521c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac903f1-0fd1-4225-aa70-29f2bfd0b71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f67af3f8-4059-47c6-b45a-e4683ac92389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc838f9-dc8c-41af-8372-e5e73e2a2888",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922af9ce-1fcd-4321-a524-4b280faa8417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f5ecf0-fd1a-4e9e-bda5-d32005dd3123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d0cfe4-36ab-4f84-acf8-06c2de4942bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7b9d3c-1c1e-4814-b967-0c8ad15668bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eaecd2-0a67-4024-ac14-666807c3a12b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5941e15-449b-40a8-9fbc-5ed26b93605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b09c811-d73f-444b-9da5-48d21a49e158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4177b610-b05f-4ca6-9253-b1a282aff02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "847b8007-a912-4951-953e-76c13c2b8a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc92bef-d0d4-49dc-a550-fb46fd8396b3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f2e57-c9fe-4ae8-8108-4463f50434f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b7d51a-f435-47f2-9a9f-a883c219cfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed239e6-c6ba-43da-b875-9041ec04909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efc18dd4-6e59-483d-9994-8368e86c46cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7442dab-3b5c-461b-9c66-313ff45b148a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29c7429-c12d-4c3b-9c9b-eeb93a57d2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364c14f6-7500-4f67-8e38-9d71d50d897b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4bec88-7618-4a00-ac6f-367bed018401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8692777-97eb-4da9-b242-953eb619eff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e52a21b-c6fa-4640-bd09-077d9bc4aa4c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e60941-99f0-476c-82e0-825aa6efe553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db19eade-c196-4a3e-a872-6648f601e538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d634f4-0c03-404e-a7d2-4bb1b7be8d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bfcb74-e8e1-45b9-8de6-a768508348c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91b8a44-5fda-4a70-bf2c-4adda6505610",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e2bfab-c240-4fd6-9d0d-7b93e13cbfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3e2b50af-22d1-44fa-9915-76b90282d887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608996f2-ba48-43f4-9743-ebe91a7be984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a052a329-7f0e-471d-adc7-88ff976da63f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a6c3447-3e83-4694-8e37-e8a6099464af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3a047f8-632a-4b97-afc0-7bc75456867e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2042cfb3-a1ba-4f97-b380-e32792f30605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71215763-894d-497c-8a78-ff860d9a6873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21af236-0d79-4517-9423-38d32979a899",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc6022c-5901-4fb2-b10d-73ebe22b9a40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "804dc8a0-f08f-4455-9a84-bc2f045f7853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb7aaab8-02f7-4184-a2a2-287f915036e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38f56048-4fff-4294-8bf6-b22ace1f7c23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7402aa60-e312-4a19-b2aa-40c9b72de12f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0db916b0-d92e-488e-aa2d-7a0321b51c15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a7f7951-1cc7-4683-aec5-e28e57e8b840"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e228b84-6fdb-44ab-8b82-b0d4e0f0a2ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be64e542-8745-42fd-a3f5-d631c8140200"
                }
              }
            ]
          },
          {
            "id": "bd608217-40e2-4437-97ac-c34700bbee90",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52d14a43-50db-46ce-9f1b-aa37d049067a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3a305228-0cbf-437f-9d91-bc4d5b770606",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aaaf6d-0a26-4eef-b904-74e26e9b6078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f11f5bd-b207-4dba-838e-d3d78a74cb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d0b106-4a6e-426a-8170-f6c886fb4885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a56ffc6-a528-4506-b70a-5d4060832c29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0749940-9bd2-45a7-9af2-cb7d49528286",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "114496ec-4815-4612-a636-7ab23970c933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f78075f7-426c-4c56-97c5-1cc4039a82ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dfcb616-9667-4e25-8eae-68e740a7147e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9c1ee43-2ab6-497a-a39b-eb166ba34543"
                    }
                  }
                ]
              },
              {
                "id": "8252021f-7c57-400b-9c72-e01188870a45",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7988ff39-d5ae-4e2a-9f7e-6d05c13be65c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fcb1b68-2efe-4bfe-bd7f-a5f407d2ce1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31822a26-e32e-4ca5-8a3b-e54b3b398583",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80e5e4a5-1688-4a56-941e-428f2e447250"
                    }
                  }
                ]
              },
              {
                "id": "6d52dc7f-9284-40a0-84f1-18ebedd2c024",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f568a1d-009f-4f45-a10e-4e16c8ea54b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef371be5-0038-44ed-b056-b5295a6871f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96fdd065-987c-49d2-ae05-8cbb3b24eabb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b0e2644-c589-44f5-9179-e0336b6a8816"
                    }
                  }
                ]
              },
              {
                "id": "738e604d-a0c7-414f-b987-eaba56fb36c3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "135e29eb-9032-4a09-ab50-50bbcf698532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb225c5f-5ee4-4e91-b3c9-616c2eef0bc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9c68555-faef-4ff1-96a0-c9c1915822dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "82a3a500-f385-43d6-93c0-6370564f910d"
                    }
                  }
                ]
              },
              {
                "id": "89419ff8-467b-4f76-bf3e-2d8d1a37881a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35231eb4-001d-4820-bc68-b112cc58bda7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d08ca336-1e23-4ec2-86c4-adbe3dd8cd1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2df35e7b-e616-43ff-b8ca-3e253a78439a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "35fbf78a-00eb-474d-9dd1-94ee4724a897"
                    }
                  }
                ]
              },
              {
                "id": "690d6a1d-f701-4539-8087-fccfe9f218cc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2642c06-7546-495a-b71e-4ea606846542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61932d1e-1350-4f1d-8372-f6394b5f6358"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57809836-915f-4a61-9b0e-bd29087b3de2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45b7f0ce-63be-4aff-9739-64dec5a34c3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d5da0a5-d28b-4f68-b086-77545e8e4555",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0209f4d-60cf-428c-9652-e5dc12547b38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "929a25e8-7342-4bf9-9a63-3e3738fafb85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb20b07e-8f9d-449e-adef-5a5d20401815"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca10c790-d691-4a0b-b010-1961554554e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "41796a63-b340-416f-8af9-327249217790"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f02f24c5-6acc-4f77-9139-2598cac7ff0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "455d4094-3349-427c-8af5-c409e6a96557"
            }
          }
        ]
      },
      {
        "id": "b3f1d123-bb70-43fe-9997-7a0081218c03",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4b23a3e8-4ad7-4ebf-94d2-6d02e7a4a3aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfd13051-ae79-431a-9b82-43999f603d61",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aa465702-51b8-480e-a248-39f1373056cd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b40bc1-b91c-444b-9afc-46eb27030dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c6bd8d-3616-40f8-a624-77e0f73a0f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993cb82d-3746-4ad4-82cf-3504aaf68b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "113e6d66-6768-4fe6-8213-301eae428a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74195577-2b28-4c82-9a65-c7ac8640fe8d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51137b07-f2a8-45e7-84b1-e7ddfef222ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7a73c3-08c5-4da4-894d-77958016a546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bc7274-2713-43ac-a95f-7e26803cb724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c08f51d4-2de4-4db6-ae1d-e75130cfe9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8230865d-c978-4c21-a507-3313fdbc258f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d9f8f3-81a6-4689-98e8-d124ade87925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c7db68-e5a5-4d50-b52f-64180952563c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d475f0-c5bc-4471-9be7-68eb01a17abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69011af0-1f31-4f3e-b9fe-088fdd190ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c85f7b-705d-43d7-b7c0-a3ca9414e116",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaed770-054e-43c3-b36a-9b2ba9d5fae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393b0ca3-1ff5-4d25-b006-0c269f8d31d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434e6df2-38fb-4d04-84e3-559117d06f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5337df35-840e-482f-ae26-87aaac8198f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2704645b-cede-474c-b5ff-5b312cad0af9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac986e31-30bf-498d-b3cf-38ab05326038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78ef393-e8d1-4599-a488-fc6b484dafef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1999874-97d9-446d-a965-041ae1c2733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4f788e-5c53-4123-a1a8-c7603c75ce2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79360f3c-386d-401a-ab3b-c39cefc842c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edda8ed-31ce-4dda-9f97-a9d8e7b97dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a7f3d8-b9cc-4b07-8128-1b74a0073836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe7ba1e-14ee-4aa3-9ec9-a913306b422b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83e1741-3cae-4c9d-b63f-2708aa05b8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fa4f70-0597-40ec-83f7-1ddbe765c4c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2981d81-cf68-402b-8ff4-ba07714c00af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe2655b-79ba-479d-8172-30a50fcff048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0daa94-4621-44c1-b44b-6c858e245877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "12bcb29b-e06c-4fa5-bde3-8d6e0524a3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a8b0a8-907c-4961-8df2-e6c62f9ddfa1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8d520b-ac7d-4d38-85fd-607e9692955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6d6783-8ceb-464e-b9e3-4424bf795637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28387da7-8f7c-4669-a387-ed929038616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0e9401-5122-445a-b241-4b0cb737d687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ff86a8-85a2-4388-a5ae-8ea1cd368b8d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ec1af8-de23-4c52-a4a1-34a649393e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62552406-902f-4b15-8ce5-ae4bc8150995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b63fd4c-8a66-4f06-bb31-49362eddd882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3eb362-9a17-4d30-844d-e298758400be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ba0e67-a1db-47b1-a133-6a3486cf3dc8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0fa77d-460d-493e-91d0-7fc86d084600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615e2a4c-7e53-4ab5-aca9-6ca90c17ad40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3df0dbe-8ecb-4d13-b104-0eafe4fd1a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "459de285-ef11-49b4-bb45-f3ecdfb9db94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78db7af-3b8e-4b75-b6e3-226ce7de5073",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa596c9-323a-4f1a-90ee-9347ec329588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7362a55e-9d7a-415c-8113-29abdc345e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b12fb1-2f65-4ff7-ab0b-d11ecebf8d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf3d3b3-e133-4eb3-8d6e-574b93f81579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3d620b-0873-4a75-912a-473676485a76",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc3d5d2-d310-4bd7-9720-beb463b621f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401b6df4-5121-4353-982c-81a60cab05d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7def4f66-5bf8-4dd3-9415-4be14b35419b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "913dcf30-6ff2-4bca-9e47-3bcc1c2a4c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65ee91c-ee72-4fb3-95ee-d77c198e0cae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f708e1-fe3f-481c-b65c-284ade3a7eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7222ec2-7d61-4e66-afa7-4a993d20d360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9372c013-a88e-4d06-bce0-b7581362b283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "938cbde9-935a-46eb-89a7-93faf7201c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fb4b92-2017-4173-a556-d2d5cb5dafd5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6560d2d8-0d08-4370-90cf-b8c2de8ecf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304fc099-3d7b-497f-96bc-1f66f8c0d03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057ecda0-437a-4595-a7c6-342a8e64ec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e2e4d9-025d-40ec-b4ba-efb38907d816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d7a15a-7435-458c-bac3-0ab95945e8bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488e744e-0b23-4df8-b5ab-4619fe8851c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b9f74b-4958-4ac0-918d-dbe444b36ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47305d4-18f1-49ab-af78-ad2a1b2e0d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1445a11-d508-4312-b759-47f0bbd05086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a10790-60d2-461e-b720-a55584fa3266",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001c2efa-268e-44af-bb76-432ee751612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6c1cd8-d5b6-4bf6-adc0-a92647f6d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21310e79-b8c8-4239-91ad-1edae178c37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "357c07e0-ad27-4253-a74b-9350d417992f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf679172-bbb8-4a92-9705-85d8004c925c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363a2576-b346-4452-b031-46add80a99ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed0f9ba-d7cf-48ee-b6c2-97274e7c8380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a931eb-7fce-4b92-9878-9344167be256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a456e0-78a7-4eec-bfd1-968c1c2684a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b364446-8c53-4bba-8d5e-c1ab6525e093",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ba5215-8327-4c5a-a9fa-f6cca71e5608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eac60c3-6559-4acd-bdf1-50365b32b526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff38eede-353e-4bc0-a117-33ae605f6976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec15d39b-c2c7-4f06-8b3e-2c375e8ea21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a4dc07-368c-412c-a5aa-c257ae61a854",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7c1baa-acd3-434b-ba95-9151392c47b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0991e3-6ef2-42ef-8506-58f82837a49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762b40f9-f902-4bbc-a574-dbd97d26298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b57ab43a-9102-4967-a96a-a6b91a7e6490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91168ea0-f5e5-439b-8299-5c4fe75cfc74",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1506584a-5039-4212-abf7-784b8774e526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35230481-a84e-4401-8c11-d87ee7f581b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9234d8-1e58-4cd4-acaa-9db07e152e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b286b4-bd02-4bfe-a782-fe650d37e482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edd4307-9dba-4629-be50-aa6b0ca142c6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eb57cd-a6fa-4929-863e-b61c16a31131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b3b08a-1055-42df-b6c8-8f9abd1dc02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1141117d-c377-4333-9d4c-d2006155adf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b93270-69ee-4cd1-98a7-27e370a1b624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15818ea9-573e-410b-b663-0b4252b1adf2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b343f-41cf-41a7-8f2d-44a1c0b45e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39538bad-7547-4495-91c1-7a014cb66b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3275a3-39a0-411a-b24c-8326da61cc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a171d92-a448-4b78-b9dd-e7ae52e7b7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2339cb2-d852-40ef-8db0-54f5c4bac37b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c125a29a-a492-4fe4-9035-656eafb28b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9704dfc-3919-4c0e-8950-cc0a9514ce97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0eb3a1-1deb-4eff-a276-6fdf19f63294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8247597f-0d4d-4b56-ad94-5fa4ce227b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9151298a-3844-4542-80c9-68c0e58e5f0c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0461dc-c2ed-4bf1-9cc1-1ed42b91b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ce82da-4614-4a26-8c77-1484d3906fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dd9dc3-9fc1-4145-9f10-0d6ca683371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed54d26-ff8d-4ea4-ac08-2fc912808bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9024c10-d4fc-4243-b012-41c53b232790",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de62059f-05e2-46df-afd3-82a79df47a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d0a9af-b2c3-4c2a-9cc9-df1f06cf6704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297afb3e-03da-4199-8fd6-cc89d04a140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a742d1-ad3f-4b21-bce7-904b5c2cfa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6aa110-0d7f-4307-845f-0e447d9a7a81",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5156f61c-0b8b-475c-8246-ac086be1160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce6f9a5-cfba-4a57-aa46-7e8b04f54545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442743c0-abf1-4ada-af09-a64d427d7754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf84f7d6-8656-4e4b-8b8d-28fa3f0d4d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0e5812-1b4c-4257-8edb-c1c13d2e1886",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a105e94-ae1b-40dc-a538-ed08c40f18f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c91865e-d194-44af-9cdc-7b442c6f5792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149c971f-1a11-46af-a55a-d522344e404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23d4b9e-62d3-490d-bfdb-b8151aae44dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cecfb84-2ce6-4b5c-ab20-80afb0f393d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3a79f9-47f8-42ab-9805-717e253b7a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5bb1ee-9aa0-460f-a21c-e0618d543573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7789e78c-1615-44a6-9d63-4346e2a659d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7dfe24-a9d0-4041-b691-89c009851c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5a4e60-aae2-48b5-a4e2-4f985125523d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61dd169-455d-40a4-a355-36cd3c9a467b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721309e8-722e-4a4d-979f-54653650810e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc08a08-e98a-448f-b589-a85064547c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4876e3da-fa70-4f30-af2e-5e603750108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa84481-0e18-44fb-8e12-ec5aa7dbd52b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0d1041-73d5-46ba-b8a0-6d2a9496e387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47dddde-4456-4597-be4a-c6178f2172c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0b8199-191d-480f-8b41-0caf8195fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bb8fbf-729b-434e-ac35-a5fb7020ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682c1a8f-2c31-445a-ae28-7264f80832ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09940495-ed03-4b57-8f4b-f94eab45b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee45afe-4203-4f78-8b1b-0ea76787ea44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2179ca13-ae74-4b33-b279-6abee3f5105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f0ec5f-0bf7-44bc-994b-91266cd7c6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dae977-cf3d-43da-aa33-ddd35f514434",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c5e364-aa6a-477b-9888-0e688ebce8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82c9226-d70c-4e48-bea3-bf6e1bcf08e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88be3882-f8bd-4f20-8576-bd34335c74a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45dbd2b-ca3c-43c7-8fa1-925bfc723393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25503037-cc69-4f41-8123-7e19ae2e41e5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619dd6e7-c5f7-4610-8301-6c82fcf7574c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6abaf0b-ca53-4697-b025-5609f2be195b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f5a234-79d9-463a-a837-46e3325e87d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79b510f-5204-4620-bedf-d87116fbf637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69934a23-b9ca-48f6-87ad-66825b8bc6ef",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8e77b1-1e89-4000-ab88-0a3552777333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e245d6c-7090-435c-bff2-9cef0b7c602e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4bd604-f066-4603-8010-fb09627fdc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbf7bee-6f91-426d-b5e2-4662f1140105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9632534d-9bef-4776-a3a1-57293ced02bd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57875b3b-9f76-40ab-be93-563342d9f35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d41b7c4-7ea9-49c7-b46d-f24f3a88d698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460a99c4-f836-4875-83bf-3a90814f0c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a49916c-0769-4f0f-9b8a-d03cabdc491a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbd319b-f057-4098-af1b-4eccaf33f658",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876be481-0bbd-4aad-94eb-511e7fbe5836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9ae048-62a3-485e-b5cf-e8061d3c83c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff95f42-57d9-4e68-b7bc-e6b2c8d18299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "290dcbdd-73f7-4c31-8322-f84d17e1d71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ba259c-a4c5-4d34-ba6b-3bd0c4233738",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1019e0e-c685-4403-b090-bafa5f67c018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90260233-70b3-4600-8d4b-ca679e0c8892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fefa897-fc70-4a33-8b99-eafb44044182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa3e256-30b3-48d0-ac6c-92e6f3f4c6e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dea60975-c55b-4971-b69a-479f5f7289dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52621285-64a3-4eab-a0a9-1275dc05a3bc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d75bae-10d2-4420-aff7-bc0b5f75e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e64b75-e636-4f84-b84f-2fca6630954f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f054d5b3-3fe8-41cc-b105-b9d576b06424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41b4abcc-d1cf-42d5-9d31-46d9f1483ecc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac0737f-ded9-43f0-9dcf-837209267c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05c5fc36-fa23-40da-9e9c-4eb9494b2e75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1deaf5e5-3667-400b-9ce8-6867c9a3f496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11e9f7e3-3763-4647-a77d-3870059894bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9856596a-8f01-41fd-a449-1759b4613b7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d67d39e0-573c-4d65-a299-939912b4f383"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee5a48ac-e2cf-440b-9ea0-7c770b320649",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1644f53d-d027-4abd-8a0f-8e179b4a019d"
            }
          }
        ]
      },
      {
        "id": "f460afd4-f64d-49b6-b4c7-6629e48e375b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1f750c33-e4d7-4ed1-b5b0-c451b53f3ec2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9723117-632e-44c1-ab72-c2d5209218bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "934ed73f-b40d-4b44-88de-96f0958447cf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7853da99-51a9-462e-8b64-d5c052f697c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48b5884-357b-447e-96c4-096c1b1c1b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26538106-acef-452a-8d6a-6085df1099f0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a892b-e43f-41f8-952a-9822ccd410d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dd3d06-3355-49af-ae9b-423978e52409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ba3de2-fd98-4477-8274-0b332c06925e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705e6897-843f-4b53-b8fb-da06548ba651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246016e0-6727-44ec-95d8-185c28d3551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6c8349-63e1-4a2f-adb0-eedbdf8a7e23",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8514b522-7651-4259-82e0-b91ddc1434b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223722f8-41c1-407a-a86f-6c554909a72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e188a2-f2f5-4bf7-bd58-ecb10aa31de1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d690d3fc-8afd-4973-a93b-f28fb9190fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df79335-774f-4d6f-8371-2fcb208ca45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67c22b8-d659-45c2-a674-172decaaf37f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10d86ba-53a1-4061-a206-7d015439c2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c659dcf-e739-42f9-8b69-bbe2db8d1404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0d4990-978c-4a3f-a52b-49811c9d45fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c7dfd1-e482-4921-a409-d3050eddcf7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c7eab5-64f1-4e33-92ec-fbbd898bb685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dece48-021e-4418-8a1d-a186a9b876b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82420f2-beb2-4554-81e7-cb062c5007f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9111c7c0-8a37-45d2-8d75-a9c6e3730b2c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0848c8b5-7732-40f0-b736-ddb53e471ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac4654c9-028f-42a6-a346-6634f1d0cf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49911a2f-7d5c-423f-8b84-8f00d196c613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d853c3-f645-4368-97c4-3c194ba42138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1589724-55db-47b7-8c09-a39fdf8db179",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cfa8ff-4f47-4f0b-af45-d5431e96af67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca39d58b-7716-48bc-8769-49036c4b64a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14eaa5-9020-4600-b720-0efc917fe525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321b86a7-18a1-4837-a99b-b10f6d9511b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d43aed3-e40e-4f2c-a28c-f9a44cc724f0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a315fdd1-8227-4687-ae6a-d20bf06771d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b7774b-4003-4e63-b2e8-37aea4ab6026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5247df8-e31e-4623-bf4f-3a637ba8508c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbd7612-4579-462e-8158-9302c795dffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff79916b-41cc-4c70-88cd-b5194f3c842c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2831cf-119d-4143-a919-265dd95b3435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bca04a-2ead-4537-815a-9e038273e048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc05aa1d-16b4-42eb-9f27-83ca843c6c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1062d25-dcf5-4456-bbef-34c7bb4becbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c0e84d-66be-400a-b094-0d35a2716200",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b8e298-cece-4e8f-bd4a-274ec7c01e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f194c250-ef99-4cec-acd9-e4880886fa60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3915e1b0-24b8-4586-a143-1dd33e70d844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803bed49-fae5-4408-81b7-5f43dc8a27b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12e6b13-ef4c-438d-a74b-ccb203d695c0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020d551c-bb6e-49a5-9eaf-b1f85326df01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6674c0-73bc-4490-9db1-c755503ce75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2c7432-1958-4a70-a9e4-7c9ac216d784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5f667c-b0cb-44d9-9282-57a8b46da81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c32e010-5166-463c-b7f7-4fd9776b60e7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15eaf9a1-832c-4194-bcb0-15f6416b0fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af533544-1aba-4684-ae45-391bdbcb29a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55dd736e-25a3-4c88-bac9-604a23b0be29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fc1292-2577-4a13-ad7e-57c21d9bbaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c3e61e-26a4-4c0f-95a1-4ee272cfafe4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e925e3e-aa7e-4ee9-8a41-52053e726920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce82fe86-fac6-40a7-b0e3-06fc7d47bb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba2398-2422-4021-a214-4f9a3bcece8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3a980d-c027-4f51-81df-e87235944760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315595a5-4da1-4b12-bee2-87d686ebfb03",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235462b7-fb71-4d24-a41b-28946c83a709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a9fc9e3-96cf-4b14-a6a9-326410845200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a38936-4525-42ff-b8bb-52f85714be50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90495bcb-4c8f-46f4-bdfa-968dcad7b2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18371977-6844-4a71-a662-821a880dd92e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdef15ef-1531-4b98-b5ce-8a64e7f75006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bc9a4d-e097-44a9-a890-2d5261b1619a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9560b4b-fe95-4691-8e13-220510782f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8da377d-554c-4a6f-968d-989394175b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34bb9b3-88d6-4f55-9000-fad13a86b268",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d11c29-47c6-4b0e-bc29-9baa213c70ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cb4c82-b3b7-4cfd-8551-5d94a4a14b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6830f709-8bc6-42d1-af7b-2a795159e4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f309f1-9051-4874-a5a9-cabe98415b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0509a43a-715a-42de-af37-be801132e98b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ad434e-b803-4a8f-b285-7cee37c63dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb692c6e-887b-45ad-887b-7d56ce202a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7bc6aa-be5b-4e2f-8200-1c5bdbecabe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdc52aa-b3d4-48d3-ad99-dea30eeea32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dc47f5-7b71-4e66-9509-7b3101c21992",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22675e4-ce1d-4219-8cc8-ab50a4e52dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5980a653-721c-47df-8dfd-f184458b27e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d64466-a187-4b8b-91d4-e8f04e58e81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d356ee-112e-4926-b5b5-5875a2967e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c985a096-469d-4b66-a42c-d84775022aa6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7642ad6f-95a8-4145-ab21-15825df5ed70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2c6a6e-3fb6-4223-a35f-f67ec3b3ea04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81112d-f551-4e09-9b09-141388f7f4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1abccd0-3562-4d68-93a2-adfdbb8d71e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf67eb-7c37-4bfd-8fea-d9a7acc87e83",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821ef36f-19d4-4bfc-9773-42a34f3ddd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d56102f-7c40-4eb7-b0f6-8b79bcfea833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603e8c7b-96f6-46c7-add2-3ee272bfbbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4230b5b-3f20-4a08-a602-b6a6b167f136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3443f010-cf02-47c2-8947-7cacca5523a5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1034570f-1856-42ab-9ee8-f00fb1dee0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d58037-2e7b-470a-acac-d3d6d17e6d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc081243-c209-40eb-b150-9c10e9029a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce691e0d-ec2b-468f-b0f7-6de6b447db68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94bb13-cd40-4d8b-8d41-de71f9a16749",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b30f471-3bb2-4d1c-999a-313e05624ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a690b50-69e3-4664-af7c-89a622b05334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b27c299-6f60-4aa2-982c-f143a6216263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78152097-8420-4ca1-bafc-26b0b2f3efb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae216cfd-57b7-4245-8d05-e6c815890613",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d60c2d-e4a6-43f4-afb4-37e763504efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7057c5-927f-4ab2-aa7c-d42d82c55dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c7f7af-d92a-4bef-9a9d-abda39ee63dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8760ac-10e5-46cb-8916-98437bcec967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3204a65-b850-43a8-a4a6-ba6aae0a1d22",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad102601-dfc7-4f37-90d8-3424563075f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283a341a-bbaa-4fb8-8588-98314f4f0dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e930e4-8fca-473a-b469-50cbccd368b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cc2e44-7975-4b81-9764-a1295842c625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead7860b-4c3b-41c3-85fd-1a5add42b776",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6215cf-3ee1-4b61-a377-b225db8a9c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fa3dbc-b6df-4300-8bb1-1be55f9b9640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a303f9-6a0f-4e7b-9479-35ca7e4336fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0703066-0730-4c4a-baea-4d8baad3562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de1dc77-6408-46cf-bc98-f9d5b4938c01",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e2c52c-4592-4791-bfd1-97ec98f6013f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8aaf39-6711-45d0-9533-84f97600b3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4eb080-2925-48c8-bd64-4fea9aa92d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e38e630-0d46-4b94-ac0b-47fbc6312f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bbcfcf-5f66-4e28-832e-c63c5a90b592",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc2d61c-5f99-4535-8f6a-8667807193ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e5ffb1f-a8eb-4894-bfac-9439ce8b12d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c283ce-1c0e-46b6-8659-4d0802a2facb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681b8fc6-308f-41f0-b358-e2327384a3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b849ac33-8131-45c5-886f-c7478d597e2c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb743b-b9f7-4f37-968c-13baaf0230b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c6a39f-a5af-4617-bdfe-6dcf30dd4ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4561639-64c1-4351-8d68-654e8889697c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b99c89-3f43-4a1f-a429-81fa541a7b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7098cc21-94bd-4fc9-bad2-2accb68554a8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea167a0-598c-416c-ae83-16754e18971c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12430303-bc0f-4586-9c68-4b2f2eb49e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff7d731-e654-4ccc-a28c-1d0538fa9ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9464da0-4db3-4306-9207-5c7ee3a3ff6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bea2de-59f1-43d4-9168-29ed4d2eb68b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93791d1b-d701-47f7-8489-f0e59f954cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d38d779-1256-4be3-ab07-ebb6eae9942e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475799b7-4083-4f74-b3f7-a6c71757f974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc52e78c-c58d-4bb1-b407-8ea007c5c4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67410a7f-ab45-4500-856e-c36ccf426550",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd97328e-9c22-4b12-9ceb-6952db2d48bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b23d734-7cb9-449c-9946-18c1f6a2696a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43588fea-e367-499f-857a-e93c965985c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c35d96-54d3-4da3-9085-7bf20b4fd0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edccccf2-317a-4fba-943a-4f313ca17b29",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb614bf-98e7-4220-8128-7fbb58e59586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b00617-3c4d-4c9f-b417-c80715497a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8beb4644-94f1-48a3-ba91-726d74695df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb5f15d-7eef-4d7c-9689-ccce9481730d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f9aff-29b4-441c-b162-f13b13d0563d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482d52df-0587-47ba-9b1a-cd241498443b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b7722b-05a1-4316-a541-7473272b4efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f61324e-a862-485d-9a9f-e4043953210c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff0df6e-0dd1-4850-acf1-615ac0db1607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648daa23-5223-47e1-92b5-77b11f20d543",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac5b27a-7e89-43d9-8001-6454e3353629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698d03fa-2699-4c80-9188-1ba824ba69e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c0ca79-3640-4f2c-8c50-135000a81a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f09d670-d829-4750-a3a7-1b5947b23e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200da57d-87c5-423e-8322-dcd861dcde8c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294cf788-d230-48bc-8cc2-da23b5de3b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e690565b-fbbd-4826-976d-a8a9f9d0dccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5692da40-cb8d-4525-8464-277b96ca65e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42927c2-a823-418a-96db-796c901dbfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb3d997-ee58-433f-8c30-70078c8256ed",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb47f97-144d-4012-991d-05831111ff0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c0c5d8-8e0f-4c68-a976-608dfd7eb226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15c9bfa-c4ba-4889-a20b-6c08df396b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d481ba-874b-4064-810f-286934c158b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece13cb0-63c5-47ed-b719-11a63380f101",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f66b7c-f974-4cd6-b75d-ebe7919a883e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0e21d5-5b6f-4174-b4d6-3343ede3370e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f4667c-8465-4f9b-8cd6-58760b62b73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c89423-f640-4832-b207-994cee86b579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd18cf55-a2c8-4b0f-bba7-4703a4387e3a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e435bd7-cf2c-4af0-9d4b-fcea63aa38d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d440205f-4942-4a94-83b4-31fd74c20df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b686be-083a-4219-89a9-eae139c20de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc347670-d11b-4309-908c-0ab023a21d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994d580a-ebbb-4bb2-88bb-94e05452ba5f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bb774b-ccfa-4f60-bb42-4c7e34880902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ab3042-7288-40a1-bac3-ab8a4693364a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a39d9f-0e79-40b2-a672-c7fa0b08c23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746939d7-c7ff-4129-adc2-7b8e597f34e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a734970c-89c7-45b0-aff5-7e7367585b4a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f68a38-3de8-42b1-a2ad-1c473f0ecfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737e6f99-d36b-4431-8209-7c522da228c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4416d723-ef7a-4fd2-a07f-b8c2e8a3df57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd207df-1403-4243-a3c1-27850f474cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2070ec-a606-417f-9d05-a79357f7b015",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbdcee8-c774-43f1-9f7f-a9c2cb8bb714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248fa453-ac9a-4698-a824-24a0af8e49e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1128d1f-bc2c-49ad-a205-5b74e9a42a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc162187-7083-4d48-a4bb-c433a78bc5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c01af0f-bf88-4aee-bf2c-c50a9d8b982b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83450df1-1c70-4c7f-95bf-a96cc4418617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32cd08b-84ef-4361-bbb0-a1226f6718ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6afb88-ac5c-4443-a49b-15a8d5bad02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e644fca3-8204-4317-b79e-af50aaffd6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62bcc06-72dd-4f96-9c9e-1c4f69338a60",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b4630b-54ee-4238-8a0f-a55adc066af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990e05b6-0425-4ff8-b501-6838a3ee72bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a1a87b-d39f-4b34-8b3c-ad88c3b786ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bb1e80-4337-4b2a-adc2-49db2ed7f4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba9bde8-bd44-4c9a-911c-019984c409e6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b311f12-98f6-477f-8d64-dcc545c5beb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9e4b29-6681-4480-bcfb-171ea98c2efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3e647e-8aa1-4c1e-9d95-0daa7707031c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0146963d-62c3-4905-93a9-f960601e433b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f458e28-5664-40ef-920c-249600045a05",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b5a9b2-3884-473f-9c2d-23442d8fe96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cfa633-78f7-4dbd-8e37-5772c4b7bd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b739e40c-6eab-44eb-9bbe-109b706222ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fee702d-5708-44ff-8457-a563b3583a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c09b1c-3aef-45e8-a789-494bced42e09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01053a71-4d4e-43c8-9a1c-dd3cefe4662f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5261d4f-2029-4ee2-8f35-f2373569a1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7a0224-1445-465a-be9f-8ba2a5c1ba50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749a1902-1f78-46ca-8df2-cc3d158d29ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c92c78c-7868-48be-b698-d7e4ad363b60",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8389d07-8e24-4ea7-ab37-c127d6b74826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828120bc-00e8-4dc5-9fbf-ab50a6e29740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4be6a12-83fa-4891-906e-1739b6855573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921c07bc-e3f8-4004-be50-c91de228a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3241b8-ca58-4f96-837b-922be7ebc6f5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e78475-3766-4742-a2d2-3ba5c4075990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f49e326-b2c6-41b9-9007-d59cc76cc72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab31f3d4-bb98-4a17-a8fc-f7f9f468ef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde05b65-7d6e-41cd-9fd6-56f7a9380cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5611ee57-bc31-4b76-a39a-b3003f6194ff",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dec102-b71e-44dc-bbe5-cd0595835ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c0020e-6e71-458d-9bf6-1f94f4f2fb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b2a381-7969-4e31-8769-e3ae5a846213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80de1ce-a258-4b42-9bb5-0d646dfd4b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391a83eb-c0ba-484f-8a1f-37750c5e9f7f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad09309-e500-4d86-81e9-3f508f370555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b7b35c-32af-433f-b9f8-5e575ca2a218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e17948d-79c9-46db-a1b4-a0b1288a41cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d14cc9-6244-4b82-98e6-478894ea44d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819b4d33-3a95-4960-a126-e30845df02b3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58463324-5edb-4750-b370-a586e3e101d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7094e3-b8f8-4953-9fca-04010a6567b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2649ee41-0414-454a-bbf5-f28a68a01a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42678926-db4a-482c-9d30-ba3758db4f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a374f3-7537-42ea-a988-76316fcef0f2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3021efc8-071a-4021-bcae-537f735d8326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3daa07-9a62-41bc-9d33-34337a550c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5783184-b254-4625-80d6-128f2dec9b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f552ee7d-72ea-49ac-b188-d4ff4554ea59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b72506-4ad4-49dc-a17d-617adcdf2a89",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b1b52b-7bf7-4584-82f1-16c51a901c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a720efe7-b300-4e19-b673-ae6963f3e24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e35cab-1a89-492b-b712-45f93cb7c213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d09bd23-bc3f-4fb8-a1e4-a0f8af5e9c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1e8bb7-502b-45dc-8171-dc205e21eb3b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77450f04-1cd6-4495-9101-f6f044e764bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb10e93-d5e9-4559-b5e7-81ed121e191e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98dcbaa-5ee3-4d1d-b8ee-f1785d8249ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f10c0b-7210-440a-a894-3245a04f3d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2712379-52a0-4c66-b07a-175d7f882426",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117a569e-2858-4dd4-99ee-7c2a12aa1fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae41cae-02b7-4a04-a153-e6f0e428440d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627f8204-cd2f-4312-8d45-0328f25ff415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f4a644-5aea-4109-b50d-6bfc7cdb9333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8888db2e-dcbf-46ed-81a7-88c7c1dcba5e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc81c522-5c4b-4b95-b388-1e51ced3ebb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6541ded-a952-42be-85ca-33865d6e6921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61cddf8-1578-4943-be48-e94abe420761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8a033e-0da3-4b2d-a8e9-61a5397b0159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2541a2d-256d-4507-892d-2dbb4f7faaec",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be48d4c-1c61-4d20-b784-784d6abf2d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f521973b-dcb6-4072-a533-fc499a0e718f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcbe4c4-12c1-452e-9966-7eecb9514f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e4e862-c766-4bd6-b34c-56197469920d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a586750-b77a-402b-930c-f4c60de4109b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489e1550-24af-4327-a960-ec8d39e97104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ef3e8a-aef6-4b15-a752-a9bdf02b7479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa360cbd-abdb-45ef-b578-fbbdf9c4071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f72a89-b798-42b0-be10-8700a4c01b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb9673a-b352-4c90-a2f2-013df0c84918",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee241676-9ff3-4186-bd00-9996b8143a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d239e45-2653-4c29-b01b-a7ce6845141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57cb077-637f-49a3-8e45-7dfd874faa1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d8053b-2cb9-4c5a-98ef-ad17160676fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a5f366-6696-4a0f-92dd-0eda198e5c01",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c45d9d-0cc6-419c-8661-70c26f2c991b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1d560e-23f9-4aea-8f75-ef20f4aff805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b0063b-2718-4c4b-84ad-7bcd41d2f800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9a1e65-ca9a-4325-941d-139065d50720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e8d70a-eab4-4041-ad8c-f17d52b5e946",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae75f991-5ab7-4c67-8ac2-584b3c27ad38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b2de12-8b8c-4696-b1de-a2d407ad18b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba716e7-9c55-4978-8ff3-d9ca9f0a113f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198b3165-6ac3-4c86-9486-49cb008aaa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12d8d05-4a99-4b0b-8b2f-9a9dd6b0cca1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23144c13-b6a4-477c-9e83-8f49d9a199d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ad9587-992d-4213-9971-0276b82682f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ccd731-9de1-401e-beb9-f86d976234f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d04c08-c8b9-4666-941b-60fba98e2974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9431d31e-26c5-4805-af28-01a31b0978f4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6448c0cc-7278-4053-a9c8-e297c9211dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a558cf79-5422-41b5-91f2-a74ca505c4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bb44dc-2b1e-48ad-8e99-10e1a8287f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bada35bd-7033-4990-bb8d-ffd0c1fe1578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a460b-a192-47cc-ae1d-38992b367fab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685eb190-71a1-46aa-b323-999f504de811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3906746f-c128-404b-bfaa-050b83d20392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204969d7-8879-4e58-8610-0f1cf2bd43bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d16834f-117a-43f4-bc14-6aa3250b5bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a3fdb-15d2-4116-960f-82f019620005",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8427880c-85b4-47c0-81d8-7f4cc94c9f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22286bff-dc07-4d10-956a-5e99f4f4c656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b259c10-a331-4f35-96dc-31149446cc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74692ede-5cdb-4214-a498-afd6d510beed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578a5525-97b8-42c2-a095-3e7cdfb0d29b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc392f-3881-44ec-acf7-e58fe265a084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b092a7-5e61-4e72-93d1-f4e4abb0c7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e8830b-7c27-4460-8904-6492f9c9d35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae26212f-7145-4bf8-a91a-051c0ed4c223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e777b496-913b-4e41-adca-68dbbe4a7097",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea9c73b-8d57-4cea-b3b3-97c982f0f5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f714f955-b62d-4214-9ecf-3e067cb5cb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472016ad-f2b5-4130-9fd2-8ef5e5e5e8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f2dd39-e193-4a92-8dc3-8578cbdce7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe020633-293a-4e27-882c-1321b9ac0100",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562c787b-f42b-4f13-9790-594518dfcb58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ed8314-466a-459f-8386-7cb3fc906b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ee6cf7-936f-4a3f-bc58-5891c01daece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0930eb91-48d1-4507-964f-68a2d822673f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598ef674-61f8-4064-9c58-cadad7b5e7d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e75f85a-c965-4612-85f0-cdd8608307c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03009b77-190f-400a-a5a0-74c62949a490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9298e91e-8ae1-46b4-a65e-b970fb2bee0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc0e175-762f-43c1-aaae-5de6804e9c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53b6bd5-badb-4a8c-b4eb-f0fecf9a1fb0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a642ea93-e1e4-4a12-aa02-b8d8d4ac1d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed0d781-bdde-462a-a93e-b63531e6b854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5c774c-baa0-4964-9fb4-705eed2eba53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9727a29-244a-45bc-bb7f-f6d9a1bdb7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3edbdce-78d7-4c79-bbb3-c4b78692d986",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804a0772-560b-4acd-9c8e-392702bf56f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f468a51-6dc7-470f-9087-678c85ec7d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870a89bb-08d9-4b7d-930d-6d87e8b7ebb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360ca4bb-efc5-46a4-8bad-8306c9ab1322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6300a16b-08ed-4325-9dc3-342101745057",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec492ce9-ea62-46d2-adc3-c5419e2c3aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9103040-2921-4366-a108-2317834a84ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ce78c4-f5e2-41f5-a55e-67d6613b2fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6831484-d1ae-4713-8b6e-85629bfcd4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c47c028-0363-441a-95e4-63ba729eb6ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b61dacc-edab-452f-b031-3804a5f45b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d1afc5-8f74-4b12-bff1-f62ddf903eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73915e1-749e-43c8-9a16-47f6750f0084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30e8ee3-18b4-4179-a7e2-6d755cc358a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fe1d27-0fed-49f4-a801-6479437967a7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce841c55-4631-4483-bddf-e3a2fdb323d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9fd5da-5ae0-4f44-a0d5-718c110f8425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acac0954-259b-440e-9920-dcd6745eabab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a7679d-e872-4657-9632-c4b68812c618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b57d3b4-f819-4142-9874-859071014c48",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d36fe-b4f5-4e23-bcaf-1ebec9c3b617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c09027-9e2d-4140-9fdd-ee6951223842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e005948d-3f99-4ed1-9891-b0bc2b704274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196c9709-4d47-467d-8501-07ac0efdb5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4398316f-1344-46d6-959d-d03c2cfc29c1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400bf526-14eb-4c34-8661-3d88a93f844f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166d10bd-b728-4474-9d61-fd0dbb02f054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11269bad-151c-42d6-b0c2-26edb7203d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e477ccbf-77f0-4491-a5a5-1a8084591f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ffa917-dfba-44a6-a807-9890d733e757",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ce5532-a676-4880-8a10-f57418c8027d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3f4638-e343-4d18-ac54-eacc88a580e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c56e9c8-c81f-4115-a613-ce57704dde9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b686a5-195a-4104-80a0-319213a77ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668edc11-7f38-4044-baf4-862bd3732570",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae9e8ed-17a5-4b7f-a43b-58f0e5b8d878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1fbb0f4-263f-405e-b146-8f443d4da530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9931338-cef3-4bf2-979a-c034bc950c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0623b93-ae38-4dc9-af05-8c5f4cb41b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cc7d95-9738-43ac-a98e-2d24ea613a4a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49226561-619a-4411-93d2-6ca7aa16fadd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51c9ade-2193-4367-b296-0c62d6ee5e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14a8d55-5166-4ffe-8e3d-0825061c8d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516ed492-8585-4bf2-9841-89ef80ec2b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97611aff-cf8d-4416-9ab1-42be0ee1d552",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a6ca7-e63c-482d-a36d-9023b73abb13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796f8207-265b-4984-a136-df8cefdc676a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93430911-354f-40ee-87fe-17820f435abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd65b552-2954-4573-82c7-71d27914d4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ed590f-71a0-4653-afb6-3eeaebe6b3c1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7703fe-8f58-49be-b8f4-b906ce1b4cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e3a810-22b9-4ad8-986d-6c6ee2b6070b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dfc274-0309-43b0-aaf1-77bf71c87e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534571c5-05ec-4c7d-b2d3-c1c7e982cab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fac7c75-ef09-465c-a217-4cf9a5a0a09f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ed7a5-c42d-4cc1-9391-bcfa1b317926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0608d2f-0a78-4e9e-a54d-5276c254e537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618e3623-c99d-48bc-9925-e1e6e1040f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2519df67-716b-4450-9d74-0676f56db59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa781e5-a9b6-4f8c-9577-e556be50d263",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e56ecf7-53a9-4f77-a843-3aea3f8f21b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65eae86-2357-447f-b913-193eb9953fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8af98b3-a14d-4433-9f3e-ed37575a3248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a29b1be-6f6f-4c7b-82cf-ad2a4392ce15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd1f718-099c-421b-b74a-a4e97200bb2f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660a327c-3d8a-4740-a174-f95c81522b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb57deb0-1be2-4a0f-a333-e2adf0f2919b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4565ea7a-e6f3-4927-bf1b-2d1623489754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0394e87f-fdb7-45ef-9684-d22b74e9fa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba21905-49b4-41b7-a595-b94b025d4b55",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbf79ec-272f-4248-b16c-f9a820cebe57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c980ea4-9483-4d84-8d80-3ea1ca868352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a89001a-381f-4cd1-87bb-a4a8f8e280ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f026285-1a8e-4c93-8ba1-d64c286dbe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b052ba21-dba9-4735-bb7d-2efa6e235465",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cd63b5-8635-4997-8cd5-dc54362d87e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f851b70-f478-4214-ad7d-125f75c327a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19f8c20-b638-45bc-a58b-b603dacac1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a441c39-08c3-4177-a23b-021f91114d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d50730-e854-4693-8f9d-ab6f7aaa1398",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e678a27a-0c9f-4358-935f-344be307415e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a057d21-5c1d-430f-8837-0a7ca2da9463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b23221-9fda-4f11-a9d3-e0373ace7f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abee24f4-78d4-406b-95b9-7327701fdd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e69b2f-17e0-4039-a1f6-126cd634cc41",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756556c6-8b62-4210-9fdf-9d27f205db75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03cd62ee-bbca-4219-a578-e915619a3c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185a6ab3-f3dc-4d53-b357-298ca9d867b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b19208-7cfe-4706-b20c-5061fa9de565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6718dfd-2456-4dd7-bf61-2c03af9b7cd5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df29acb-45ae-444f-a0ce-ac8cffbc0a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0c6d5b-a238-4673-8452-cc76026c0e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd0e403-d498-42c7-ab28-4309fe8f33d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ea1d9e-2bf1-4cc2-a0fb-96276e05547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9f9c81-4db2-4d3e-822d-56f99015300b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1687b771-e71f-47b8-9150-035d1e799f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf3f155b-b9ed-46d6-9497-68eff32e66c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca5d0a5-957a-46e0-b2fd-822456aa8625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ef48a7-7d0f-4870-b601-c48622347340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760ad132-be7a-456e-a7f0-c3f003063c1d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdb6741-7d6c-4a55-be0c-6a9da9563e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982f84c7-5171-49df-a700-53a8f895888a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e265557-4f75-4277-98e5-496de03c7a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c9261c-257a-493c-a3ab-e5bac55cf855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ef093-ae0b-41f3-b698-06c14c8ceb0e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559867b-b603-4063-b2c2-27e0118b4cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e67702-439a-4b6d-969e-fc3696af2c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645af81b-a066-4350-aaad-45d37d672e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2c1216-d3cd-4955-b125-1f60020707e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4437c06b-69fa-4b61-989a-8b9bd9823948",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3789e2b-8cd9-46d6-94ec-0da382c53882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f102eb-671b-4ffa-8be0-d6c31432e4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e857299b-92a6-4f9d-b761-9ebf59d8f52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdee5c1-e1d6-49c8-98d8-e311a3dc29bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae71a43-81b4-4363-8039-29bc15cd8fd7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc7a51b-0230-44df-9987-e545a2d0b927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deda437a-b29a-42cc-a7a2-b888b74b4e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207f0e01-cf27-427a-a79a-db10af0792cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6851d5be-3a6a-43a4-9a50-8d253a30e91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9dc260-4698-4eaa-ad44-95a4c33ad06b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3266daf-9241-4089-ae99-65ce0306646d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c0c8de-666f-4d7a-bf4c-e93657f64220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a23f7bb-55b1-4994-8a62-89a78b10be0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a7f0a3-7e3a-4c60-841b-4efc9ad29f89"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9aab2138-b70d-4ae9-a4aa-1ed2cc8d80a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30fe53c2-8159-471b-becf-f96d79640276"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c2d2121-fa1c-44be-aa90-506dceb06a40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9eb9b8b5-5ede-4fbb-baf9-0749592ce39f"
                    }
                  }
                ]
              },
              {
                "id": "18f1a4e8-4462-4666-a656-9210901aaa71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e267c87-2628-4496-bfc3-c0134ad18688",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2ed48c-0aa5-4cbd-b24a-56684c85cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "685b7735-5c95-4ad0-a472-899749bff3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c68d3e-0b66-422c-a237-92081405455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e2275d3-31ed-4ef2-b7d8-6d0203150990"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca7401bd-5de6-44f4-9a19-f362d75e153c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "794a2951-4d0a-4ad1-8a57-a0def562d157"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef73c839-462b-4605-8ef9-0b1126076c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b066db-4eba-4732-aa55-e2d58b027509"
                    }
                  }
                ]
              },
              {
                "id": "9a45ee2c-1d75-4e74-aefb-08d0b7be4916",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e1d2caba-a0d7-447d-baf9-c80cbff6a343",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd071095-0b15-465f-b493-36fe3cdfd179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c352019d-a424-468b-81de-3722f7f46103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc03f62-56d2-4566-9d98-b30e8fa2c7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372d3bed-2ba0-4bb2-bf3a-3e405dfab1a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc5e1375-9d86-4671-bcbb-2a076a69c115",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e31a06b4-7c20-4a12-b08b-4a8afce6cea6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8071d064-a9f7-4682-8229-eec19545b7c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0660b45-1247-4634-acd8-f1ba9d6d63fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d37ff29-9353-443b-b9de-47fd6c780416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00ff5f36-acd9-4e0b-b243-a8baebfece34"
                    }
                  }
                ]
              },
              {
                "id": "62319afd-5bb1-4da9-addb-6c863ade6d97",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eca4a2b-d9f9-4a06-b6d2-9701c7a0a40b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ecd417d-a504-4cc1-acf8-162d22e71c34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe411ee7-7457-4f10-8200-ba766894098f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ecdc11-f967-457f-9327-a630505f4277"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ab2f5d-81e2-4065-aac4-79fd66a4b443",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e24cfba3-27e1-47dc-831b-63838e35dfb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a899bc6-e0ee-4862-bced-f10f35744f81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cbb374f-2ba9-4eb4-97af-f564df97ba2e"
            }
          }
        ]
      },
      {
        "id": "40a86fc7-6250-4c86-b8a5-fdaf85df54cc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4f33b144-4e6c-4e05-8b6e-32dc6b1bcdaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2787ae7a-73a1-403a-bed1-7e6a667e426d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b76063a9-fb58-477f-be49-b5b4b691ef1c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bf7de9-308c-4694-ad82-7d404d0c1297",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "036bea96-f4fb-4344-862a-719bc0464524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb036852-65b6-44a8-bcb8-96923430631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d653abba-eee8-4579-9b0f-dd409b2697af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "118afbac-98c6-41b4-aad3-f2ab3e1f70f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa34baf7-010f-4a05-9871-0725b6cc2452"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7654c797-b00c-4ddb-934d-ee4b8fd8a5eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa75db96-7ecb-46f7-b52b-2af1a040d237"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ebf6784-62da-4797-a886-9989cfe392d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "db80a6b5-6d45-4bc3-92c0-5d1be867809b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4707adbf-d10e-42a1-84c8-cf4b3a684b35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7329e999-1209-453a-8b7b-5b95d783227d"
            }
          }
        ]
      },
      {
        "id": "462a6b4b-de01-468b-9ebe-06ca73fc8661",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "982d5d5b-0901-43d8-89d6-4eab9c92199b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9b2cd34-550d-49f7-89fc-fde42f12aa52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7389ec14-9772-4eb2-933e-dbb491f58b76",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ff7623-a321-40ec-a6c1-c7b05e776404",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86e3ecbe-baa5-41e0-a7a4-791a356eeb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d1115c-f014-4a8c-a19a-a84a78b37660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3beb0173-5fcc-4a89-a07e-e85df933b8d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61f37c2b-177b-4f53-96c7-23d9a6c547a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be3d97d-22c3-4c70-8a62-bd5bc4d970cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02579f71-27b4-430e-a1e7-09a0dfbf4082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "770b233a-0ab7-4d8a-9a30-283a39cbc956"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "526a1f27-36e2-4080-bd66-33196a1b13e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f639a5c8-b684-452f-bdfb-dac1a1304b08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d5a085a-aebd-453f-bcba-8cdc5c2cd311",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebd4ef9f-46c4-4070-b46c-1f0f0adf359f"
            }
          }
        ]
      },
      {
        "id": "76e347b2-c573-4962-9c23-76e16219c5a3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "65fbe825-17c7-4137-8a66-92df74af7450",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3b34d1f-c2e3-44c8-9df4-f52cd510baf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bd0a883-9ce5-46fb-a388-935297a77ae0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16dfd6b-9926-42fe-a5d0-113095d3dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59733e12-64b8-4a94-b685-1ae268fff680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35334db6-5fbb-4fe3-9dfd-bdfefc1e467b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef1857ec-89fa-4451-9806-a819d0e4c9f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ddcb8ef-94d4-4445-8c17-7686ea144632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eacc90ef-4e40-4c24-8a71-177012b11f67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de103a72-439c-42b9-9d66-7ed0a827f1e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8d08a35-73b3-4ee6-9599-a129d8078489"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8a971b6-e59d-45db-920a-a6aad499237e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1fcdfe7-faba-4b67-9be1-0ececac9ba34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48ddce71-4137-4162-b2d0-8c84e28e5032",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c67a71d-4446-4232-b78f-4fb671e8751e"
            }
          }
        ]
      },
      {
        "id": "5ab03bc6-ed4e-4e89-ab7a-85fd13266cf1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0242f459-83b8-4e36-802c-cbdce8d2bb08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000fb010-999f-4dd1-8a5e-8f5558d43511",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7387939d-de9a-410b-b55c-0509b9b0744e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "807043e9-081c-4d89-a80c-443bb1e64a86",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42412f5b-5d2d-4775-956a-3c090f79a533",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.630952380952387,
      "responseMin": 7,
      "responseMax": 313,
      "responseSd": 27.431927188072333,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718757517015,
      "completed": 1718757532777
    },
    "executions": [
      {
        "id": "f20062e5-f9e4-461e-abd8-7f5194fd18b9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f7f4dfce-bbfe-4be5-bd2c-09b1599e23ea",
          "httpRequestId": "64515452-cc69-445f-8a76-38775e6d6464"
        },
        "item": {
          "id": "f20062e5-f9e4-461e-abd8-7f5194fd18b9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "adab9d78-2260-4e87-a52c-af2de679c225",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "38460bf3-d6aa-4f97-aae6-fc88f4e0a8d7",
        "cursor": {
          "ref": "4d71e709-a43d-4b68-86b2-d9053dcb8d56",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ec3155a3-9d72-4801-9cbd-c6eccd40d493"
        },
        "item": {
          "id": "38460bf3-d6aa-4f97-aae6-fc88f4e0a8d7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "525513f3-5daf-4024-9e50-92fdf8922779",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "12d7585f-7ae6-46ec-8b76-37e0dd76d9cf",
        "cursor": {
          "ref": "99391be2-f6fc-46dc-8088-d95606cc0ab8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a46dbc95-dda8-4236-9aec-1f4e8a6b1d0a"
        },
        "item": {
          "id": "12d7585f-7ae6-46ec-8b76-37e0dd76d9cf",
          "name": "did_json"
        },
        "response": {
          "id": "fbf0a555-0c4f-4398-becc-5ba82380f734",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e14d912-0e67-4dbf-89f3-42e9ceb76552",
        "cursor": {
          "ref": "b30e29fd-3879-413b-9307-e2631205d352",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd7be961-fc94-402c-a563-dc6556946555"
        },
        "item": {
          "id": "3e14d912-0e67-4dbf-89f3-42e9ceb76552",
          "name": "did:invalid"
        },
        "response": {
          "id": "cdfe06ba-d1d6-453c-b11d-ca1669528357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e14d912-0e67-4dbf-89f3-42e9ceb76552",
        "cursor": {
          "ref": "b30e29fd-3879-413b-9307-e2631205d352",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd7be961-fc94-402c-a563-dc6556946555"
        },
        "item": {
          "id": "3e14d912-0e67-4dbf-89f3-42e9ceb76552",
          "name": "did:invalid"
        },
        "response": {
          "id": "cdfe06ba-d1d6-453c-b11d-ca1669528357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa1dc65-a96f-4487-92e6-c911db82de85",
        "cursor": {
          "ref": "46265eff-5390-4187-a0cc-45c59cdb55e4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a8f97c85-91c3-4eb9-9682-2cf1c9e4d9b4"
        },
        "item": {
          "id": "3fa1dc65-a96f-4487-92e6-c911db82de85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "53794c22-f3e1-47e9-be72-1cac5ce3439c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 133,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8038a46a-d5c7-4d69-bf2d-7818a2525d5d",
        "cursor": {
          "ref": "6e738575-ef2a-4ca2-9422-6158a85091dd",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9c47b163-5275-48f9-8fb8-f0a9b9dbaf0d"
        },
        "item": {
          "id": "8038a46a-d5c7-4d69-bf2d-7818a2525d5d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f43d5cf7-691f-46af-9d80-da6bc411ce9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15a7c7c-0945-4c67-8143-05d1f9a4afda",
        "cursor": {
          "ref": "f0ec875e-bc30-49e0-a46d-44046529a693",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5ad920b6-915e-44a5-8e76-c5a992fdc7ad"
        },
        "item": {
          "id": "f15a7c7c-0945-4c67-8143-05d1f9a4afda",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fca7f41c-359b-4f5e-81c2-4af09efc803d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd168ca6-80f6-4e16-b88c-b9bdaa7a48c0",
        "cursor": {
          "ref": "77e9b797-92a1-416c-b8c8-f3556cc09b36",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "92b2185f-51e2-4c7e-b649-e3630a1163ef"
        },
        "item": {
          "id": "dd168ca6-80f6-4e16-b88c-b9bdaa7a48c0",
          "name": "identifiers"
        },
        "response": {
          "id": "4cb5335e-7e19-46af-abf6-545a54d40c62",
          "status": "OK",
          "code": 200,
          "responseTime": 188,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55d9999-70af-476b-89e0-9e71b8fc5130",
        "cursor": {
          "ref": "ce6b53eb-ba40-4832-9c56-c209516b57c5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3bb6c231-542e-461d-8fb4-dce5fb7941d3"
        },
        "item": {
          "id": "a55d9999-70af-476b-89e0-9e71b8fc5130",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "02bf11af-e6c6-4395-add6-b9c7676c2dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476893cf-42a8-496d-93d0-1573f179b289",
        "cursor": {
          "ref": "ca17a1a6-0438-4be8-ac6c-def124d76002",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e8a6e6c-a03a-42ba-9808-00f867a604ae"
        },
        "item": {
          "id": "476893cf-42a8-496d-93d0-1573f179b289",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "30656303-60a4-49cf-bd6d-b5c9cb3476f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3074944a-1667-4c98-bc80-0c2bbb3dc3e0",
        "cursor": {
          "ref": "fb769f50-cba8-412c-85f5-23b8690aa39c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ceaf6ec2-d660-46ff-9ecc-96cfed0c1f50"
        },
        "item": {
          "id": "3074944a-1667-4c98-bc80-0c2bbb3dc3e0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "edd8be6a-8578-4b2f-90f3-275e2e4b36b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20713adf-2410-4901-b8f7-ddbc2fbc5f9e",
        "cursor": {
          "ref": "9ca199b1-f384-4a44-8d4a-6b71d796a0e3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b1770d0c-ba95-496d-8b3f-35ebed26a39a"
        },
        "item": {
          "id": "20713adf-2410-4901-b8f7-ddbc2fbc5f9e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "096748f8-05e9-4b5b-b13b-3c38b2178dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d178cb-b9c6-4f19-a462-d51e4e858f21",
        "cursor": {
          "ref": "58d1949d-6cdd-4e09-9239-7f2273d93527",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "388f2597-97c5-404a-a9c6-de4ed6793cd5"
        },
        "item": {
          "id": "11d178cb-b9c6-4f19-a462-d51e4e858f21",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "63d3c6b1-792d-484d-bc24-7b62fd9075f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3550321-08a3-4a1b-bfa2-c57d92d8e1e5",
        "cursor": {
          "ref": "ce241691-61ef-48e5-96cb-26fb0b901dc5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "675916c2-5077-4e15-b058-b5481fdebe6d"
        },
        "item": {
          "id": "a3550321-08a3-4a1b-bfa2-c57d92d8e1e5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bfd83ac9-e98d-4a43-bb09-61803a728e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d63e687-2819-4a3e-bf12-1134e06b0f71",
        "cursor": {
          "ref": "92e40949-0f8b-4707-9608-475ba2880a61",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cc442496-7c7f-4d6c-a217-2976175a2c79"
        },
        "item": {
          "id": "1d63e687-2819-4a3e-bf12-1134e06b0f71",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a584bb9f-404a-4583-94b3-d7e9668bbd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d100301-7127-452c-92d8-f65af35986ae",
        "cursor": {
          "ref": "82fdc7ca-5de6-4435-a26d-fee2eb18c2c4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d262040c-dd7b-461b-9609-df205bb3f8c8"
        },
        "item": {
          "id": "0d100301-7127-452c-92d8-f65af35986ae",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "072dc707-69f4-4ffc-a406-7ee6e502c7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab366b9-1427-4dcb-a095-749f9f71d415",
        "cursor": {
          "ref": "e8e48239-9b27-4106-9257-108f242728bd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b3c119c0-08e6-4546-ba11-3acc58609de9"
        },
        "item": {
          "id": "8ab366b9-1427-4dcb-a095-749f9f71d415",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ead481e6-944b-421b-b6b8-c42b1f928c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996056ae-02d2-432a-a2a0-2ff55d8c75a3",
        "cursor": {
          "ref": "3a05cfd8-988b-4bc8-8c1c-7fbcf92a61f0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "beb91ec5-e7f9-495e-b345-4d526cefda20"
        },
        "item": {
          "id": "996056ae-02d2-432a-a2a0-2ff55d8c75a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7c47f8b2-650c-4001-a98a-c5794b3ee20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb53f87-93c4-4c04-a6c5-6871e05850f2",
        "cursor": {
          "ref": "1c332e79-ed64-4db8-9843-da4053b2c72d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "82bc2b48-c7a1-4775-ac7f-213665faae1e"
        },
        "item": {
          "id": "1cb53f87-93c4-4c04-a6c5-6871e05850f2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "49695260-7456-449e-b260-055f135cfe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b530ec-5912-4e1f-9e17-84ccb0af4f0f",
        "cursor": {
          "ref": "182c94c2-8e5c-4b6e-8d44-4323e4c3d2d5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b011aea8-b121-4dab-a47a-1e564fc43140"
        },
        "item": {
          "id": "59b530ec-5912-4e1f-9e17-84ccb0af4f0f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9acc419a-db0e-48ed-b0da-69f509885788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d675926-038d-4320-b2d3-d6a7a077d154",
        "cursor": {
          "ref": "f1779287-612a-4b8c-a43b-6d6ed6e314e3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ac460f06-3457-46b6-8be2-b72fd3ed543e"
        },
        "item": {
          "id": "3d675926-038d-4320-b2d3-d6a7a077d154",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b0624ccc-c9d5-49b6-b259-42f2e7da2349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7753641-d9eb-4fb8-b5e3-22688b4bfe8d",
        "cursor": {
          "ref": "e58a6017-841d-4cb8-a77a-fd36e5282d38",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8130118b-b938-43f1-bd8e-928f8eaf9868"
        },
        "item": {
          "id": "d7753641-d9eb-4fb8-b5e3-22688b4bfe8d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "65e626cc-e156-4b75-8c27-88a64742aefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40553031-36c2-44cc-b10d-5f265f3b8833",
        "cursor": {
          "ref": "97582ce6-26f3-4917-90db-ac5e17b7cfc6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "08833647-cd9c-4876-8005-eb8e38568daa"
        },
        "item": {
          "id": "40553031-36c2-44cc-b10d-5f265f3b8833",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d6c7aa34-73d1-40fc-b94f-60832743a844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ae669e-c615-411a-9dd5-402c7d99175d",
        "cursor": {
          "ref": "e112bda4-209c-4aba-9833-a3cb8cfd6634",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2427376a-33c5-4d29-8cbc-260bad6f1686"
        },
        "item": {
          "id": "64ae669e-c615-411a-9dd5-402c7d99175d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "890a8c9d-9053-4893-9612-717ffe90f20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb3a0d1-c8a7-422a-a5db-ecfd87d002c2",
        "cursor": {
          "ref": "ccfdcdfe-a421-4332-ad43-08bc44004421",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22c85bde-7570-4197-8673-864c05f37203"
        },
        "item": {
          "id": "abb3a0d1-c8a7-422a-a5db-ecfd87d002c2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "88c0c8b5-5120-4d20-8ac0-ff1ecb8b7837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b4a4d7-43f5-436a-808b-3c533468d2b7",
        "cursor": {
          "ref": "144f3a11-daf8-4834-a9c6-362edcd3b252",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c2618519-3fc8-42eb-8cbf-f38beeecbd66"
        },
        "item": {
          "id": "d9b4a4d7-43f5-436a-808b-3c533468d2b7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "51017e8b-8048-4c92-97e2-c591f8d45a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0610e38-627d-46c3-be35-e0d5de76aa17",
        "cursor": {
          "ref": "43ef8807-823a-4d2d-bfee-76538a1d5191",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1baf5e96-4a9b-4707-80c5-930493e89474"
        },
        "item": {
          "id": "a0610e38-627d-46c3-be35-e0d5de76aa17",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8e4daafd-96e9-406f-93fb-2bb7562d9fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ce41f-f28d-4b30-8f9c-3716a08ff774",
        "cursor": {
          "ref": "75bbdf0e-33a2-48e5-bb29-a5e7b26578a7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9b238886-0ee8-4b1c-8efc-b969d690ebcf"
        },
        "item": {
          "id": "553ce41f-f28d-4b30-8f9c-3716a08ff774",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8e513380-2188-458d-8509-a67d6afb1545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543cb781-a74b-44f4-9664-7aee5c51c4ae",
        "cursor": {
          "ref": "1036cea0-9250-4144-b983-68de2256efbe",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2c26e662-b9bd-4467-9ebc-7f789ab5d3a1"
        },
        "item": {
          "id": "543cb781-a74b-44f4-9664-7aee5c51c4ae",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "86c9d3ce-1836-429f-b872-f7e57def124d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147db1ad-bc9b-42c0-8fe5-71b8ada33e22",
        "cursor": {
          "ref": "3af31cfe-aa70-4032-9ab4-45e7b4a5274d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dad6c537-178e-473d-b3d5-87d770fcd04a"
        },
        "item": {
          "id": "147db1ad-bc9b-42c0-8fe5-71b8ada33e22",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f8469d46-e14a-4f2a-abc5-f47d9ad97669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf900cf-dd70-4114-8b6a-9c2cb9bea84d",
        "cursor": {
          "ref": "c718dd8c-b8a6-4c3a-a579-23b8275c809f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6711fd01-bc73-4bfa-b0e5-327d365a4067"
        },
        "item": {
          "id": "3cf900cf-dd70-4114-8b6a-9c2cb9bea84d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "293e2129-3004-44c6-9998-b21b7df36a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b86c98-9197-4df3-9108-7f7cf00ca504",
        "cursor": {
          "ref": "d7d607e8-56b0-46a3-aaec-67325ced0cad",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "64c2d3b3-b0f2-46cc-b4d1-513bb7b9fe63"
        },
        "item": {
          "id": "d4b86c98-9197-4df3-9108-7f7cf00ca504",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "04b06170-1091-485f-85a5-ee3ae266c9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf49a6e5-405a-43ea-916f-7134b92cabab",
        "cursor": {
          "ref": "f57e3135-d417-4b50-b8e0-cdfed8c84d5c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9ecfb07c-cf2c-4988-916f-15c56e6940e0"
        },
        "item": {
          "id": "cf49a6e5-405a-43ea-916f-7134b92cabab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d870f05f-f2d5-4add-9bc0-5a8c92092009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a08b9d-e904-43c3-894f-9613f7057edb",
        "cursor": {
          "ref": "c36aede6-b5f2-4464-9169-964a99f96fd0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8056f59c-abe2-4def-9c48-d42100197c53"
        },
        "item": {
          "id": "e1a08b9d-e904-43c3-894f-9613f7057edb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8b9caada-51a1-4161-99a2-7f6c78bc183f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ac580e-d6b4-4240-86ac-215a7887241f",
        "cursor": {
          "ref": "d4bdb7b7-c68f-494b-a751-aa7e29822cc5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7d49564e-05b3-4b6c-9297-3656044ebf91"
        },
        "item": {
          "id": "69ac580e-d6b4-4240-86ac-215a7887241f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0ebcf9a9-43c9-4523-9e55-8b5dba017ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d7d2c9-a5e1-4c3e-9985-285ae035b454",
        "cursor": {
          "ref": "08f1db35-12bd-4d72-bf70-216052d23ce8",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1b3908c5-5288-458a-8193-0c6a4544e2ca"
        },
        "item": {
          "id": "26d7d2c9-a5e1-4c3e-9985-285ae035b454",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fa4aaecf-9bc8-468b-a69a-2b284047f949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cef946-1573-40dd-8cc8-366e7616f4b2",
        "cursor": {
          "ref": "867b3648-c274-482d-a648-ee11a59384bc",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f11660ef-81a9-4c0d-a49a-bcb253cd9a3d"
        },
        "item": {
          "id": "10cef946-1573-40dd-8cc8-366e7616f4b2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7cfa9191-9708-40c4-8d8a-7d0174a5b68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2563948-43c9-465f-8a4e-a34df3406a04",
        "cursor": {
          "ref": "4cb0e7d1-b64a-4a35-8570-20a923fb54f5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4bca5df0-b363-41d9-93cd-dea6163eeeb3"
        },
        "item": {
          "id": "b2563948-43c9-465f-8a4e-a34df3406a04",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e288fa51-a3af-4a39-811f-29bd8ad7b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795aa863-59e5-46f6-b7c1-a4eac1403326",
        "cursor": {
          "ref": "5bf08e55-3d76-4bab-9f54-6b1916c5bcec",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "941d47c3-2f3e-439f-bff0-7d7a1f132319"
        },
        "item": {
          "id": "795aa863-59e5-46f6-b7c1-a4eac1403326",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "74c3c6bf-2728-458a-8b41-fcc5fd3ffb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a957186-ca97-4e5a-bf37-9cdefb67dd77",
        "cursor": {
          "ref": "26770357-9e46-4ef6-a1b9-3e00b83610c4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "04364f5e-13e3-4e37-ab47-21f22cd386bb"
        },
        "item": {
          "id": "3a957186-ca97-4e5a-bf37-9cdefb67dd77",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e0a59c9f-9c8f-44c6-a8d8-f5879afdbe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c5c312-3769-4502-ad50-4fa22db6c5e7",
        "cursor": {
          "ref": "ecca8105-0f4d-4509-9137-de840aecad2e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9295634e-77d9-4ff6-98c7-4a7236b89ec7"
        },
        "item": {
          "id": "e0c5c312-3769-4502-ad50-4fa22db6c5e7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2865ec95-644b-4fcd-9e4f-496fcbfe7b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24541741-9dce-4347-ae5b-c1480302a173",
        "cursor": {
          "ref": "51476201-5aba-4f2f-914e-2988d2b22614",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a147e603-4d9e-4294-87bd-d811f90b8d6a"
        },
        "item": {
          "id": "24541741-9dce-4347-ae5b-c1480302a173",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3ca3edee-bec2-42b2-a123-ae6ab0ea232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb49926b-5c9a-45cd-9006-a38e0182a9c4",
        "cursor": {
          "ref": "3508a63a-ecfc-449d-9895-8f0e86753baa",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "705e237a-00f2-489c-94b9-178113f2f370"
        },
        "item": {
          "id": "fb49926b-5c9a-45cd-9006-a38e0182a9c4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1cfc9464-49e0-4a96-b027-6d9a715767c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6971c3d4-4b44-4b55-a553-c0bda9239cfa",
        "cursor": {
          "ref": "8bb7916a-f06f-45f5-8485-a3e080a8d1cf",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "862c47ff-d9c7-4ffd-ba8e-1124b8094032"
        },
        "item": {
          "id": "6971c3d4-4b44-4b55-a553-c0bda9239cfa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0169bb1d-e1c4-4313-8192-f63e885de159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42b7fc2-142b-4576-a17d-91be0a44c753",
        "cursor": {
          "ref": "6fd5a4df-19e8-42ab-86f2-46252e561027",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "355150ea-3e31-4bd6-9cb2-b4f20c437351"
        },
        "item": {
          "id": "e42b7fc2-142b-4576-a17d-91be0a44c753",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b7e9c82d-81c8-4d26-ab69-edb6dd03d72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de59953b-0bb6-4547-8b81-2aa0f7b8d8f9",
        "cursor": {
          "ref": "07304fb2-c8b1-4f92-acd6-30fd8bca6040",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a2e71fa3-7858-4a7c-942e-9df52be8077d"
        },
        "item": {
          "id": "de59953b-0bb6-4547-8b81-2aa0f7b8d8f9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8e696b0a-820f-415e-acf9-f20ee31dc4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cb87bd-2fe7-4dc3-98f6-d30060a2dfb2",
        "cursor": {
          "ref": "74002408-694d-4a44-9621-9c2d9c41c73c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bab315f9-88b5-482a-a198-13fdd8f56769"
        },
        "item": {
          "id": "39cb87bd-2fe7-4dc3-98f6-d30060a2dfb2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "421c45ff-0b60-4859-b6f0-ede259d8f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b191eebf-357c-44b4-a794-387ea85adf4a",
        "cursor": {
          "ref": "592197f7-d40c-41d6-9e80-5b3f8c529372",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "081bb28e-78da-4219-8c0d-2d6fdc5d5c72"
        },
        "item": {
          "id": "b191eebf-357c-44b4-a794-387ea85adf4a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2a3bdbbc-c0d6-4264-b0fa-1951c3a3a9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd4f5b0-2b35-4ba3-bf5f-78ad1e5e7a41",
        "cursor": {
          "ref": "c71c838d-3d9e-45e6-ad91-7c02f3129f60",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f692c8b6-dc57-423f-9113-6113b9f6a43b"
        },
        "item": {
          "id": "0dd4f5b0-2b35-4ba3-bf5f-78ad1e5e7a41",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7db20ac9-f1e8-4a9e-a983-5494fc58c8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695acbce-6599-4b07-b299-92b8b2794095",
        "cursor": {
          "ref": "4b4d2e3d-9d9e-4b61-a08c-1a7aa425c82a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f16ebee-5696-4356-aa71-d5a50b239b80"
        },
        "item": {
          "id": "695acbce-6599-4b07-b299-92b8b2794095",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a6cb509c-130e-424d-8d59-485616169626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260bd282-7a3e-44ad-a304-8677246b31fc",
        "cursor": {
          "ref": "b7c0dd86-45de-4eb3-a4d3-84033c1b4f2e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fc1cc88d-c2e9-4c3a-8864-b1245b6bd372"
        },
        "item": {
          "id": "260bd282-7a3e-44ad-a304-8677246b31fc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b679fd0d-1a52-4cdc-80f8-4be574426f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b72cb0e-1aee-4ed1-8849-10c9b2ecd2a9",
        "cursor": {
          "ref": "b0b2b720-2452-45e7-9dc4-840e985e05ab",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "242ae680-48ae-4021-9f74-7ea758e76ba3"
        },
        "item": {
          "id": "5b72cb0e-1aee-4ed1-8849-10c9b2ecd2a9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5bbc48b2-23ec-495b-9a33-bbe72b056487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae12072-67a8-47a6-a860-56fd11b991be",
        "cursor": {
          "ref": "99589c0f-dcb7-45b4-82a1-54e3ebec7a6d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fa91f283-e885-4081-9f3b-d6e3cacf506b"
        },
        "item": {
          "id": "9ae12072-67a8-47a6-a860-56fd11b991be",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7bf44d73-2cbb-485e-b4be-17c4b3419aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bf865c-926e-40d8-87cc-1a627de6df3f",
        "cursor": {
          "ref": "7b66d6ea-2b2a-417a-9d54-bdb15f00dad2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "431bd184-47f4-4d42-9805-3b4b3cedb9d4"
        },
        "item": {
          "id": "78bf865c-926e-40d8-87cc-1a627de6df3f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0887b1f8-7651-4078-8ad2-7db75c828d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e849b9cb-cb08-458c-8824-69864e85f070",
        "cursor": {
          "ref": "94041153-3705-4a93-9db8-9b7b8e54c422",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c363ac2a-91a7-4640-bad9-d42f373c0314"
        },
        "item": {
          "id": "e849b9cb-cb08-458c-8824-69864e85f070",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "669fac93-e922-415c-9e6c-e9016ed65d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef2cbcd-a51d-4204-80ce-cdb85bb3a8f4",
        "cursor": {
          "ref": "badfe973-f396-4c0b-8407-66adc2eebaea",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab4e364f-4b4a-41a4-b55d-b4f7b1da7972"
        },
        "item": {
          "id": "8ef2cbcd-a51d-4204-80ce-cdb85bb3a8f4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8cea07ea-6c1f-4a89-8bea-53b9c84a6c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a238d75d-ac3c-4c1a-bdfe-1b34eb255c6a",
        "cursor": {
          "ref": "d28bf7a1-380e-4700-916e-49f3321114ae",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "28e4eebc-7811-4d25-a8f6-2e602374d243"
        },
        "item": {
          "id": "a238d75d-ac3c-4c1a-bdfe-1b34eb255c6a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7cb3df7c-dfeb-4540-b725-dd0e383d8a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8c5239-7c45-4285-ab7d-37cfc4c0eaf3",
        "cursor": {
          "ref": "3e7ecd63-f1bb-497e-b1f1-e48493273a78",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "87ccc313-73f5-4c5b-8d4c-25630302820f"
        },
        "item": {
          "id": "1c8c5239-7c45-4285-ab7d-37cfc4c0eaf3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e5409162-0a89-432c-9c78-2d929d05283a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee951318-f379-4bde-b77d-94ddc231dbee",
        "cursor": {
          "ref": "ab04bd94-5309-4868-8b5e-a28f30e966c3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ba0a56e3-cf73-4344-868a-5162bc3537f8"
        },
        "item": {
          "id": "ee951318-f379-4bde-b77d-94ddc231dbee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "447a790f-e2a4-4d7d-a653-bccf9940dda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723aa944-a4fb-434e-ab68-d955915f1533",
        "cursor": {
          "ref": "538f67f7-3a41-4524-897a-2a3a8056d5aa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "54511c55-4bba-4adb-a131-e1f8b7cb8e27"
        },
        "item": {
          "id": "723aa944-a4fb-434e-ab68-d955915f1533",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "93e4dda2-2b7f-4457-92ac-fbfd61ff5ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ec6288-fb55-4d7d-a1fd-0a000c18d6ff",
        "cursor": {
          "ref": "c0e16d44-5e1b-4c9f-bad3-435ced5f11ee",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6ffa9ce6-7f15-40cf-ac0f-757e164c9a1d"
        },
        "item": {
          "id": "51ec6288-fb55-4d7d-a1fd-0a000c18d6ff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "000e322d-9603-4da9-959d-8073ca88490c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482aac29-23b4-481f-950c-7824bad72678",
        "cursor": {
          "ref": "c513f58f-2acc-4241-81a9-36b5a6569c1b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c4f09b92-cde5-486f-968e-ae2f8795e518"
        },
        "item": {
          "id": "482aac29-23b4-481f-950c-7824bad72678",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "852ad908-db88-4f3c-97db-7cc55d36c62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c60b6a5-3f4f-4dfa-bb6a-8beb49097088",
        "cursor": {
          "ref": "677ec085-aa76-4964-ac5f-f78512eb245f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "78ee3cfe-7df4-4ce9-bc39-3484e7ae0b11"
        },
        "item": {
          "id": "8c60b6a5-3f4f-4dfa-bb6a-8beb49097088",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "69fb0677-d663-46cc-856e-7e6e4a0c0513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849330e-427f-47d0-a82b-02849146160e",
        "cursor": {
          "ref": "1025bb78-1aca-460f-999e-60d0435d654a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6d0b84b2-4ae0-4774-b8d2-c3a5d5000c9f"
        },
        "item": {
          "id": "3849330e-427f-47d0-a82b-02849146160e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e01ccbd-de83-4901-adcc-9f828f444771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eec9d6b-bf35-45a0-8e2d-f0fbc6ab70c2",
        "cursor": {
          "ref": "6701e7c2-dc3a-42c7-8f74-83db543960f3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "33c6494e-0c26-4124-a85a-ca3f6dc5e36f"
        },
        "item": {
          "id": "7eec9d6b-bf35-45a0-8e2d-f0fbc6ab70c2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b9a85bb9-b37f-4435-b256-81fd044a3ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9b5a6e-c053-4887-a03c-59fd7d065ebd",
        "cursor": {
          "ref": "adef65ac-978e-4816-b47b-b69596e1c679",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "18de9e77-6c78-4125-9332-fd113c9c485f"
        },
        "item": {
          "id": "1e9b5a6e-c053-4887-a03c-59fd7d065ebd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d5166167-e3a4-4f88-a351-cf0f56a6cb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae10ac-15e8-44f9-ad05-ea723a3be26c",
        "cursor": {
          "ref": "291d95f5-47af-4ad0-8408-4e79c5195488",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "501dc0d7-67d7-43a7-8b2d-80ebf84566fc"
        },
        "item": {
          "id": "7bae10ac-15e8-44f9-ad05-ea723a3be26c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "62fe0676-a8cc-44c0-ba0f-52a3ec7afd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6364f7d7-5e34-470d-93d0-5afa08e71a12",
        "cursor": {
          "ref": "c3e09152-ad1e-4975-a800-78777fe9451e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2203572f-3427-45ba-91a0-a59ae4368fa3"
        },
        "item": {
          "id": "6364f7d7-5e34-470d-93d0-5afa08e71a12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f75122c3-85b8-46c4-b344-250983043e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02283b97-9a54-4e23-bbce-1ae3d6935dc4",
        "cursor": {
          "ref": "b110af5a-5a01-41c1-b3dd-49d4c71e12a7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a061ba3b-52dc-4630-8cd0-ceaae412f265"
        },
        "item": {
          "id": "02283b97-9a54-4e23-bbce-1ae3d6935dc4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ae247c8f-3171-4b96-8823-8287be5b0448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795a112-c90d-4f5f-bbdf-a4f0ed9b6a10",
        "cursor": {
          "ref": "bc921ff1-a020-47de-88e3-b945a607c834",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "abfc612c-a040-4262-ab7e-09497320a61a"
        },
        "item": {
          "id": "3795a112-c90d-4f5f-bbdf-a4f0ed9b6a10",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "99e367f6-fe5d-442c-91ec-485e1aaa021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9dbe66-46ca-4da0-aa39-92f92224b448",
        "cursor": {
          "ref": "4a11182b-32af-4755-bb7d-0d896d7e94ac",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f52314ae-06a9-47c8-b1eb-80610655fcc2"
        },
        "item": {
          "id": "bc9dbe66-46ca-4da0-aa39-92f92224b448",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "79d61397-6190-4179-a590-0b62bc7d51fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70443e9-cc21-4ebe-a405-2ff7ac7b1b1e",
        "cursor": {
          "ref": "4c0919c6-a875-45ab-a104-b315d924902f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a7914347-20a6-47cd-b369-dc27c83186c1"
        },
        "item": {
          "id": "b70443e9-cc21-4ebe-a405-2ff7ac7b1b1e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "279612fd-46cb-45fc-9167-203757ddc5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f899383c-be8b-45ab-865e-1987b712b0a2",
        "cursor": {
          "ref": "c5538a22-2edb-4ef6-b130-dff109bdf69b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "81886f60-1745-4df2-8ade-d8c4cd61a377"
        },
        "item": {
          "id": "f899383c-be8b-45ab-865e-1987b712b0a2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cde1eb7f-75a3-4b04-9cff-141d256ea0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc75825-a49a-4aa2-8703-8a2039679c2a",
        "cursor": {
          "ref": "5bb34e1f-bbb0-4fda-8921-f6d4d61521d3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "42e52c99-565e-40b9-8db1-87957c70d70a"
        },
        "item": {
          "id": "acc75825-a49a-4aa2-8703-8a2039679c2a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d99b40ca-26c3-4728-8a00-c1051c4cac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07b1c7-a0b4-4af3-ad1b-15bc12c9ecd0",
        "cursor": {
          "ref": "def74b6f-886a-4de0-93de-23848af04068",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bb7201b8-d667-45bf-98cb-8ab799c46ff9"
        },
        "item": {
          "id": "dc07b1c7-a0b4-4af3-ad1b-15bc12c9ecd0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eaeadcb4-64dd-4910-97b9-3eaa561dbad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e464ca-2a40-4c9f-880b-293aed279f5d",
        "cursor": {
          "ref": "cecf3fe0-8af3-4d38-b3a4-b4a3a9049a58",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c1ac4442-e0d1-422e-bfd0-b8c96d154a92"
        },
        "item": {
          "id": "c2e464ca-2a40-4c9f-880b-293aed279f5d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0157578a-fbd9-4089-a25e-88f14d5d553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd29771f-acf6-49e3-b22d-dbddabb348a1",
        "cursor": {
          "ref": "af71aea6-a7da-4a79-a958-65163147687d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "71570a3a-a134-4b26-a919-084497079184"
        },
        "item": {
          "id": "bd29771f-acf6-49e3-b22d-dbddabb348a1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b5c29317-fea7-408a-af31-a0c776e39b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2d4a14-9cc3-47a3-a7fc-7eb4761b3b9e",
        "cursor": {
          "ref": "915fb035-b544-4601-92f6-1044783248e8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bea5263f-e66e-4875-ad7d-9c283bb4f8b0"
        },
        "item": {
          "id": "6b2d4a14-9cc3-47a3-a7fc-7eb4761b3b9e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c3771f38-6cf7-497d-a785-f2ed5393fceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee0d0ee-1dad-4df2-8bd6-68516aa20525",
        "cursor": {
          "ref": "fa9993c0-3e3e-44db-b7a1-fab1e34d1478",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "75fc9f10-bbc4-45d2-9c4a-fe31ecf4abea"
        },
        "item": {
          "id": "bee0d0ee-1dad-4df2-8bd6-68516aa20525",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "325a6e50-7a63-4034-96f3-e93b65aba96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d01059-63ad-4a50-b5da-7034411abfe7",
        "cursor": {
          "ref": "5b36cb64-c4fc-407e-9649-6e94c34437b1",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88433f20-4879-4006-b199-f86d7ffa5fd2"
        },
        "item": {
          "id": "37d01059-63ad-4a50-b5da-7034411abfe7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "40f2f373-f385-4aa4-9f09-ece970729f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd1022f-af31-4d00-b767-46f61bf43cd7",
        "cursor": {
          "ref": "3a3005b4-dc53-4502-95bc-1ca15689f998",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e14aaff6-7f4e-42c9-b5ea-4bd90c028b5d"
        },
        "item": {
          "id": "4fd1022f-af31-4d00-b767-46f61bf43cd7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cee98537-0061-445b-81a5-78624b750021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2667e692-3220-4d46-b6a2-513dca5668a7",
        "cursor": {
          "ref": "5eef52f3-c672-4fa1-8afa-d1400a22b4bb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "18b807d9-f53e-4098-ae69-6d57443a7ec7"
        },
        "item": {
          "id": "2667e692-3220-4d46-b6a2-513dca5668a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "49c3fc5d-10ff-45eb-9a06-cff17acb64ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f12c8-6c00-4b8c-89be-411fa11408a7",
        "cursor": {
          "ref": "c54c48ac-6ded-432e-a751-862bf281195e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "12a3fae6-9227-4484-a04f-0938c9eaaac4"
        },
        "item": {
          "id": "423f12c8-6c00-4b8c-89be-411fa11408a7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c72e9a84-cae8-4a4e-86ff-cb360f5d788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ccf83e-586d-4145-b2fe-4e52abb6b2c9",
        "cursor": {
          "ref": "8195697c-f572-43dc-8a15-2acbe88107d5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "89ad255b-c1da-4a9d-9630-453cb0009cb9"
        },
        "item": {
          "id": "35ccf83e-586d-4145-b2fe-4e52abb6b2c9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5cb44617-9fdc-4e18-8440-479de08d4115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c25cc82-dd6c-454f-8b38-6da9a7b0ab2c",
        "cursor": {
          "ref": "c93bfbfc-cc24-434d-906c-62bb5d6b023c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "68f9ea06-d466-4b75-8e56-01f8b07f5f8b"
        },
        "item": {
          "id": "1c25cc82-dd6c-454f-8b38-6da9a7b0ab2c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cb57259e-bac2-4f83-a3ac-0991d1bbd8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f7f191-d420-4903-a7a3-e5f1c98acb5b",
        "cursor": {
          "ref": "7572a767-dab1-43db-aba0-4cc471ff120f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9d29efbb-e6c0-4d29-9e10-631fb6b68df7"
        },
        "item": {
          "id": "36f7f191-d420-4903-a7a3-e5f1c98acb5b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "065bbcc1-a9e5-486a-9b0c-a13691b3574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9911885-17a3-446e-82e8-ad7141dac6f8",
        "cursor": {
          "ref": "8980e184-26cd-441f-a7d8-364757594e2a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "27864faa-223c-46bb-848b-e69bf9c9bb8b"
        },
        "item": {
          "id": "b9911885-17a3-446e-82e8-ad7141dac6f8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c1a90f90-95bf-4d26-b61b-92553e71552d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e2a607-b3f5-43ed-bfa3-4ae6b9f04968",
        "cursor": {
          "ref": "fa73050f-4705-40f7-a087-c774b817933e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb30bd15-1a19-49b6-9e3a-48b0ece0ba94"
        },
        "item": {
          "id": "a1e2a607-b3f5-43ed-bfa3-4ae6b9f04968",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6442a273-a533-4df5-a476-08065a7c8baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262f5af9-0043-47bc-a287-f4aaa0c7c2eb",
        "cursor": {
          "ref": "90dedf47-41d1-40b7-b559-2fa74ef560e2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2ba0c982-4479-48b6-932f-a6a43a07e1cd"
        },
        "item": {
          "id": "262f5af9-0043-47bc-a287-f4aaa0c7c2eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3b3e5ff6-7f09-444c-a71b-d848d64e2247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577ba9bf-4810-458d-9a9a-0804cb515a9f",
        "cursor": {
          "ref": "14f96d70-df0e-455b-b919-ebcfce591d96",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c87fb9e-8ee3-4f4c-beff-a235cec23938"
        },
        "item": {
          "id": "577ba9bf-4810-458d-9a9a-0804cb515a9f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9d47596b-9e29-43d6-907d-60cd7aac2926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28c4981-74b7-4cdf-9996-c64cfed3ac44",
        "cursor": {
          "ref": "4c172263-1d50-45a5-9b37-098593eedd6e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "562b3f44-e0e3-489d-bfbe-dbe1c5bd237f"
        },
        "item": {
          "id": "b28c4981-74b7-4cdf-9996-c64cfed3ac44",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cec6aeae-fdc9-4dcf-aeaa-bafd790b2741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8887892-0756-40be-a459-6c9c5630f4f6",
        "cursor": {
          "ref": "bc5c97d2-e23a-4346-abe8-eaac69d10125",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c07f2bec-5d6c-4bad-ba25-0d37ee395832"
        },
        "item": {
          "id": "b8887892-0756-40be-a459-6c9c5630f4f6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3a538dc1-ecd2-4e79-a3fc-6cbb8b937954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0675c-4353-4c26-87bc-7de2e19a5ec8",
        "cursor": {
          "ref": "41cab631-8754-4c8e-b0d6-769e4b208404",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "760d3c20-de29-486f-bb2c-8aeb3b611768"
        },
        "item": {
          "id": "8dc0675c-4353-4c26-87bc-7de2e19a5ec8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d96bead5-c32e-46d4-82e4-abd7283ab122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f1c768-163a-427e-b9e0-94b6439b8795",
        "cursor": {
          "ref": "57eeccc7-7c27-47f9-88d6-4d5ee890e00b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aa0e10ea-7dd8-4560-944f-1b4ec902bf5a"
        },
        "item": {
          "id": "c3f1c768-163a-427e-b9e0-94b6439b8795",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8258c22e-e283-45c9-b310-ae755bd22d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc838f9-dc8c-41af-8372-e5e73e2a2888",
        "cursor": {
          "ref": "35783c13-872a-4bd7-a2a0-e916babb2934",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bb17bca6-843a-4501-b0a5-8e35b5eba299"
        },
        "item": {
          "id": "ccc838f9-dc8c-41af-8372-e5e73e2a2888",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e9cae431-d1fe-4047-ae20-990bc54ec61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eaecd2-0a67-4024-ac14-666807c3a12b",
        "cursor": {
          "ref": "1b6b5755-1013-46bf-bcf1-177827e08898",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d8713535-8931-49fb-819f-ed191ce140f9"
        },
        "item": {
          "id": "e0eaecd2-0a67-4024-ac14-666807c3a12b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c7f0fdb9-7d56-4185-af7f-04ff2df09337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc92bef-d0d4-49dc-a550-fb46fd8396b3",
        "cursor": {
          "ref": "cd2e3d8d-a802-4487-bb7d-9040da2c2714",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bf02d3d3-33f4-49c6-91c2-a17e4c24cdf2"
        },
        "item": {
          "id": "0fc92bef-d0d4-49dc-a550-fb46fd8396b3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5d1382ac-1c87-48d3-83cb-a5c2d515cded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7442dab-3b5c-461b-9c66-313ff45b148a",
        "cursor": {
          "ref": "2bd68c74-565d-4c21-aa1d-0a123afc70b7",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e7b13534-2a97-45b3-adbe-66c562323aa8"
        },
        "item": {
          "id": "f7442dab-3b5c-461b-9c66-313ff45b148a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "336b0a14-3d9a-4cae-bcbf-80f01036ff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e52a21b-c6fa-4640-bd09-077d9bc4aa4c",
        "cursor": {
          "ref": "4e966c6f-7fb6-4f85-b77a-8140d5fac689",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d5038b13-5f2b-4a84-b6be-a5ee216116ff"
        },
        "item": {
          "id": "1e52a21b-c6fa-4640-bd09-077d9bc4aa4c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5ea1cfcc-7887-4f1c-8b24-4b7046409c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91b8a44-5fda-4a70-bf2c-4adda6505610",
        "cursor": {
          "ref": "cfa6dd77-a7db-445c-bdd4-d1ae439816e9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2a801427-7a9e-457a-9be2-015cac9caef4"
        },
        "item": {
          "id": "d91b8a44-5fda-4a70-bf2c-4adda6505610",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b8a8c59-e925-40e3-88ab-46372bd544f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a047f8-632a-4b97-afc0-7bc75456867e",
        "cursor": {
          "ref": "b25c1269-0e19-4b0e-8d01-0467e055d917",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d6264f5c-b0e4-43b3-9d8b-2b729cde0a99"
        },
        "item": {
          "id": "b3a047f8-632a-4b97-afc0-7bc75456867e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e57849fe-b628-4492-8b1f-c81113db8425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a305228-0cbf-437f-9d91-bc4d5b770606",
        "cursor": {
          "ref": "69269194-fe24-450d-a222-04b91ff1d820",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1f72d8bf-f6df-4378-a266-1ad87b482281"
        },
        "item": {
          "id": "3a305228-0cbf-437f-9d91-bc4d5b770606",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f1b3e40f-edc7-45ad-bd20-37040ea2a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c0749940-9bd2-45a7-9af2-cb7d49528286",
        "cursor": {
          "ref": "de716f0b-cdba-45e3-bc97-263678b6655e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f9aca366-bf3e-441e-b486-ee97474617e2"
        },
        "item": {
          "id": "c0749940-9bd2-45a7-9af2-cb7d49528286",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1c27f0a5-1cb3-4410-abc5-220583ab5d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8252021f-7c57-400b-9c72-e01188870a45",
        "cursor": {
          "ref": "bb078715-d3c2-4b7a-871d-58187b1a6db1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9444d585-2afd-4fe4-87eb-30b7f047923d"
        },
        "item": {
          "id": "8252021f-7c57-400b-9c72-e01188870a45",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2f8118d0-74ec-4123-9359-96c9541d0c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6d52dc7f-9284-40a0-84f1-18ebedd2c024",
        "cursor": {
          "ref": "521a87b8-268d-4e37-98c3-fa0af2643af7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cef12a90-3a9a-4330-b80b-8febf703e775"
        },
        "item": {
          "id": "6d52dc7f-9284-40a0-84f1-18ebedd2c024",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6a294061-3d25-47f5-8dcc-48b71d81f9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "738e604d-a0c7-414f-b987-eaba56fb36c3",
        "cursor": {
          "ref": "89677811-2022-4713-b0d4-7b0cf28cf1c7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1d250a7f-d8f0-423f-be12-56419933e37c"
        },
        "item": {
          "id": "738e604d-a0c7-414f-b987-eaba56fb36c3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6774da5c-d322-477b-a3d1-412ca055aa99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "89419ff8-467b-4f76-bf3e-2d8d1a37881a",
        "cursor": {
          "ref": "8b8114dd-cc5c-482c-8982-03df30a9454d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "864115e4-6bf5-42dc-a581-3a747ba32907"
        },
        "item": {
          "id": "89419ff8-467b-4f76-bf3e-2d8d1a37881a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dbb19245-f000-47b9-b701-54f401198916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "690d6a1d-f701-4539-8087-fccfe9f218cc",
        "cursor": {
          "ref": "320d9bea-aba8-4946-8d2c-0d160c19691d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d0dffe5e-83e0-4b26-9120-35465da144cb"
        },
        "item": {
          "id": "690d6a1d-f701-4539-8087-fccfe9f218cc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "59ef412f-4e0e-4021-9a45-431944ecb7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "aa465702-51b8-480e-a248-39f1373056cd",
        "cursor": {
          "ref": "313bd260-f22a-438c-8a9f-8ce880d19ec2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "89935d85-5964-4d70-a5e0-d4bc81416d3c"
        },
        "item": {
          "id": "aa465702-51b8-480e-a248-39f1373056cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd07adbe-8187-429f-bb5f-1ffa109bc341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74195577-2b28-4c82-9a65-c7ac8640fe8d",
        "cursor": {
          "ref": "a3bbdc65-e152-417f-91bb-fc6f8c8cbea1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d3be647a-b42b-4fb8-b73b-f2040d9ce238"
        },
        "item": {
          "id": "74195577-2b28-4c82-9a65-c7ac8640fe8d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "de5fd175-ee23-43bb-9370-7bebba7779c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8230865d-c978-4c21-a507-3313fdbc258f",
        "cursor": {
          "ref": "c7345d93-85a5-4644-b5e3-70296f610f31",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a7e1b811-f4f0-48ac-b003-02ab8acc1859"
        },
        "item": {
          "id": "8230865d-c978-4c21-a507-3313fdbc258f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8cf285e-f242-4687-9943-f6dc12f3bb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c85f7b-705d-43d7-b7c0-a3ca9414e116",
        "cursor": {
          "ref": "af9ec1e2-3bfc-4528-b0aa-780db131adbf",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "49fac6cd-5403-4620-a9dc-12ce0c2b669f"
        },
        "item": {
          "id": "c1c85f7b-705d-43d7-b7c0-a3ca9414e116",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "98000555-e470-4b6f-8b5d-4cf6e047d898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2704645b-cede-474c-b5ff-5b312cad0af9",
        "cursor": {
          "ref": "c0bd8613-3c66-4b2b-afa3-667a67e3d672",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb99b2ca-ccf5-402f-ba2a-e575256c4473"
        },
        "item": {
          "id": "2704645b-cede-474c-b5ff-5b312cad0af9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "617f9df6-c06e-4956-b17e-55311af8157e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79360f3c-386d-401a-ab3b-c39cefc842c9",
        "cursor": {
          "ref": "b24299f0-1490-41f3-9250-b5b434c50918",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f4ea35af-15cd-420a-a3d4-18eebcb4d3fd"
        },
        "item": {
          "id": "79360f3c-386d-401a-ab3b-c39cefc842c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c1f689f8-a010-4388-9d65-d77eb473a366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fa4f70-0597-40ec-83f7-1ddbe765c4c5",
        "cursor": {
          "ref": "a355e7f8-edd0-4b96-b450-81bc1aca98fa",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c55991b-fea8-46d3-a739-1b8a4f2ec2e9"
        },
        "item": {
          "id": "f6fa4f70-0597-40ec-83f7-1ddbe765c4c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c40eff4-9c02-4842-90b3-c64f6fb4fdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a8b0a8-907c-4961-8df2-e6c62f9ddfa1",
        "cursor": {
          "ref": "7f9ddfed-a799-42f9-a3f3-40a88fdf8da4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4461bfd8-48b0-412a-be92-dd3a59573a9c"
        },
        "item": {
          "id": "45a8b0a8-907c-4961-8df2-e6c62f9ddfa1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "457788a5-8feb-42c5-b504-612b11407e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ff86a8-85a2-4388-a5ae-8ea1cd368b8d",
        "cursor": {
          "ref": "0f1a7bc5-28eb-4212-a84f-103543c07550",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cac35e0a-085b-4f80-9154-0c75c100dec3"
        },
        "item": {
          "id": "43ff86a8-85a2-4388-a5ae-8ea1cd368b8d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f091ceff-11b6-48b5-aaf5-4cf13d64658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ba0e67-a1db-47b1-a133-6a3486cf3dc8",
        "cursor": {
          "ref": "916b18bd-bd29-440c-a3be-0cec9efd7d75",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "881360c9-8ab3-4424-8ee1-0ea8e1352c10"
        },
        "item": {
          "id": "99ba0e67-a1db-47b1-a133-6a3486cf3dc8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2f71429-7615-44e1-8fda-3c6b97c4564e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78db7af-3b8e-4b75-b6e3-226ce7de5073",
        "cursor": {
          "ref": "8b2993aa-1f01-49cb-b0c3-be008f07711d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "19788fe9-8988-456a-b009-7fe7820fe6fe"
        },
        "item": {
          "id": "b78db7af-3b8e-4b75-b6e3-226ce7de5073",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed203177-dc3a-44a8-a910-9643b06d800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3d620b-0873-4a75-912a-473676485a76",
        "cursor": {
          "ref": "618327b5-3542-4849-9a31-9a5e55aaf9a5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eaec0ae5-9102-4b95-a0a8-a5d4c5cb1d96"
        },
        "item": {
          "id": "bd3d620b-0873-4a75-912a-473676485a76",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bba031f8-57c9-4e14-8d2d-545f591c016c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65ee91c-ee72-4fb3-95ee-d77c198e0cae",
        "cursor": {
          "ref": "c8503c08-ac34-43cb-95a4-af10b432329a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d03f8846-4b35-4f4f-8d16-7c7b87c28f8e"
        },
        "item": {
          "id": "c65ee91c-ee72-4fb3-95ee-d77c198e0cae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "56be9f93-be55-48bd-a73d-da147228b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fb4b92-2017-4173-a556-d2d5cb5dafd5",
        "cursor": {
          "ref": "5c9ef78e-7c11-4734-8562-36a6e4334aa5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c31c78d3-6529-4b1a-9199-81fa2f104ddc"
        },
        "item": {
          "id": "a1fb4b92-2017-4173-a556-d2d5cb5dafd5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e06d9606-c02a-4845-a82b-0534dc47519a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d7a15a-7435-458c-bac3-0ab95945e8bc",
        "cursor": {
          "ref": "e031e1cc-dbc6-4d0c-87d1-57121651d382",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "978198f2-dc91-4bae-b072-5e930aef343d"
        },
        "item": {
          "id": "16d7a15a-7435-458c-bac3-0ab95945e8bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a045673f-b851-4be0-80b2-f65b8e5cfbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a10790-60d2-461e-b720-a55584fa3266",
        "cursor": {
          "ref": "5a7125d9-978f-47bd-810b-49278eb00804",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4a0e334f-34b3-4294-bf8d-37d612165a12"
        },
        "item": {
          "id": "09a10790-60d2-461e-b720-a55584fa3266",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3b7d52b7-3280-4804-b6e7-8875f70785b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf679172-bbb8-4a92-9705-85d8004c925c",
        "cursor": {
          "ref": "1c20f4ca-0117-471a-a258-1383e7b0ce77",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2da59512-7374-444b-b429-080ee23d0edb"
        },
        "item": {
          "id": "cf679172-bbb8-4a92-9705-85d8004c925c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "48a8d9fc-6afd-473e-8a99-7fc159358fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b364446-8c53-4bba-8d5e-c1ab6525e093",
        "cursor": {
          "ref": "fc71695c-27f5-42f3-8e92-d14b90de6bf7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3e4e16ed-af0a-4bb9-9760-502d8c2bddec"
        },
        "item": {
          "id": "2b364446-8c53-4bba-8d5e-c1ab6525e093",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d1381c6-62f5-4b4b-b6de-84966c56c38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a4dc07-368c-412c-a5aa-c257ae61a854",
        "cursor": {
          "ref": "210a5d82-cdf0-4181-9801-29c808dfa162",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "821449d8-6339-48c4-ab5b-a079afc1ed14"
        },
        "item": {
          "id": "01a4dc07-368c-412c-a5aa-c257ae61a854",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "381f74b1-319a-45cb-a944-50450fa2b6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91168ea0-f5e5-439b-8299-5c4fe75cfc74",
        "cursor": {
          "ref": "148ebb89-7511-4515-bb68-8c5bb4307f7e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5e5dfa03-6027-4239-af73-4e3ae7ce4cd9"
        },
        "item": {
          "id": "91168ea0-f5e5-439b-8299-5c4fe75cfc74",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "944b5e7c-a9c0-47c0-b55f-6acc32a297e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edd4307-9dba-4629-be50-aa6b0ca142c6",
        "cursor": {
          "ref": "53a206d1-dbde-4f83-8267-16fc0af7f477",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0ef1e7f0-2096-464c-93a8-59ef75f215be"
        },
        "item": {
          "id": "3edd4307-9dba-4629-be50-aa6b0ca142c6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99654911-14ba-45ea-9c05-585f1bba9a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15818ea9-573e-410b-b663-0b4252b1adf2",
        "cursor": {
          "ref": "d45abfd7-5e8d-445b-b424-9f6b6e9bf353",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4850d325-f874-4fb5-a58e-16a8b4ef3830"
        },
        "item": {
          "id": "15818ea9-573e-410b-b663-0b4252b1adf2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "711c9d3c-3fa0-45fb-bc90-4535af3a9235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2339cb2-d852-40ef-8db0-54f5c4bac37b",
        "cursor": {
          "ref": "81aa8f5a-178a-437a-90db-d422cd73f0c0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "59f30c49-9a2c-49fe-bc65-6fe54433cc0f"
        },
        "item": {
          "id": "e2339cb2-d852-40ef-8db0-54f5c4bac37b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbe4e308-9a28-4e09-bebe-ce24e381a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9151298a-3844-4542-80c9-68c0e58e5f0c",
        "cursor": {
          "ref": "77ed975c-9c7b-482f-8a24-63e29e1d3b53",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3da866aa-eb74-454c-8e02-bdc27cfbae56"
        },
        "item": {
          "id": "9151298a-3844-4542-80c9-68c0e58e5f0c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8deeefe3-be1b-4d49-b28a-5daf017b532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9024c10-d4fc-4243-b012-41c53b232790",
        "cursor": {
          "ref": "d9b3d69c-5123-4d42-8059-8f31756b0361",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7cb701c-c0ed-4885-ad94-8b15c4b05d76"
        },
        "item": {
          "id": "f9024c10-d4fc-4243-b012-41c53b232790",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2bfcd6a2-ad68-491f-aee0-5faebd79ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6aa110-0d7f-4307-845f-0e447d9a7a81",
        "cursor": {
          "ref": "78fc3e6c-5b6c-4cd4-ac3e-c6e529d48196",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91f3146f-6eec-4695-b51b-495af225be39"
        },
        "item": {
          "id": "3f6aa110-0d7f-4307-845f-0e447d9a7a81",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d26611b7-3610-4001-bd06-bbcc86b0d9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0e5812-1b4c-4257-8edb-c1c13d2e1886",
        "cursor": {
          "ref": "d9740fe2-48fe-4799-bfe3-521af6349d8c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "49a7ca28-f14e-4c6d-849e-e3894058e79b"
        },
        "item": {
          "id": "6d0e5812-1b4c-4257-8edb-c1c13d2e1886",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fc6bbce1-6b06-4794-b63c-2b987e2e9eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cecfb84-2ce6-4b5c-ab20-80afb0f393d6",
        "cursor": {
          "ref": "9926627d-69b5-4f35-8b7f-48bf64e27558",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7af4633-309b-49bf-9b94-1f133b5140a1"
        },
        "item": {
          "id": "9cecfb84-2ce6-4b5c-ab20-80afb0f393d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9bef2a2a-1c56-4355-8522-1bfda6752d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5a4e60-aae2-48b5-a4e2-4f985125523d",
        "cursor": {
          "ref": "d74ac931-6462-45d8-81e1-a216d2edd748",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "94b86f54-d533-44e6-a786-8f45c68c44d4"
        },
        "item": {
          "id": "cb5a4e60-aae2-48b5-a4e2-4f985125523d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "00337dcf-f14f-4728-a218-a7be74da6094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa84481-0e18-44fb-8e12-ec5aa7dbd52b",
        "cursor": {
          "ref": "bfceafd7-b16a-4ce0-a3a3-899eef973b10",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "28286c4f-3ca6-4847-b232-35a42995d48b"
        },
        "item": {
          "id": "0aa84481-0e18-44fb-8e12-ec5aa7dbd52b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bbd972d9-25ed-4890-b81d-4aa3bb0e73f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682c1a8f-2c31-445a-ae28-7264f80832ff",
        "cursor": {
          "ref": "35e5a809-d9df-4803-96a6-f5ee28a3936e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "78d17c6e-daf0-4fe0-befb-872424f5e202"
        },
        "item": {
          "id": "682c1a8f-2c31-445a-ae28-7264f80832ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c4ee0db-234a-47e1-b8ab-4cd742c62228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dae977-cf3d-43da-aa33-ddd35f514434",
        "cursor": {
          "ref": "5c24931b-cf23-4dd4-99b9-1e92e1c0ce41",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "57148548-d04b-43af-b5d1-78da2d3886f8"
        },
        "item": {
          "id": "96dae977-cf3d-43da-aa33-ddd35f514434",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "89e7f69a-632c-4ed2-8f9e-e3e46cc6feed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25503037-cc69-4f41-8123-7e19ae2e41e5",
        "cursor": {
          "ref": "423d3665-6225-4687-b21e-8e0eaa473fa7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "872f138e-2cc0-4fd9-affd-28fda7d9cd52"
        },
        "item": {
          "id": "25503037-cc69-4f41-8123-7e19ae2e41e5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1f88abc4-e4e8-4c59-b42b-a0e779efe80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69934a23-b9ca-48f6-87ad-66825b8bc6ef",
        "cursor": {
          "ref": "474808f1-b0b0-4c5e-a5fe-8d55da2cf613",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "79bbea78-50f6-4aff-904a-d8f87c1a6c72"
        },
        "item": {
          "id": "69934a23-b9ca-48f6-87ad-66825b8bc6ef",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ee6ffebd-ba90-4474-afe0-90f77132e071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9632534d-9bef-4776-a3a1-57293ced02bd",
        "cursor": {
          "ref": "682797cf-7ef3-407e-aec9-ce257812c410",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b3c163b4-d850-4e52-a49e-b52f1db4baad"
        },
        "item": {
          "id": "9632534d-9bef-4776-a3a1-57293ced02bd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d8a64183-c37c-4fa2-980e-c0e5d70afcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbd319b-f057-4098-af1b-4eccaf33f658",
        "cursor": {
          "ref": "5e41eb76-b732-467b-ade8-9c00ad7c4363",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "edb0d200-caa8-4353-b721-dcfb6f17ed6f"
        },
        "item": {
          "id": "ecbd319b-f057-4098-af1b-4eccaf33f658",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "62449139-253d-4ccd-a5c8-a32477feed65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ba259c-a4c5-4d34-ba6b-3bd0c4233738",
        "cursor": {
          "ref": "03dae742-319b-43db-9880-eff3213de966",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6ed8e240-f804-4868-b6ea-e94fbe995f1d"
        },
        "item": {
          "id": "04ba259c-a4c5-4d34-ba6b-3bd0c4233738",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db00d13a-8915-40b8-840e-529f59bdf07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52621285-64a3-4eab-a0a9-1275dc05a3bc",
        "cursor": {
          "ref": "cb39c63b-a72f-4081-afdb-98bbb5ee1fb2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3e1e571b-8778-463e-afd4-6593e5c1106a"
        },
        "item": {
          "id": "52621285-64a3-4eab-a0a9-1275dc05a3bc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ca8179bb-3a27-42a4-bc4b-8512c05ce9ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ed73f-b40d-4b44-88de-96f0958447cf",
        "cursor": {
          "ref": "51172e94-17e9-4bd4-ba8c-b8c72803befa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ba428ac4-02bc-4bf3-a593-72d95c666d89"
        },
        "item": {
          "id": "934ed73f-b40d-4b44-88de-96f0958447cf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ece60563-81d8-47a9-ad75-b4f6c77dedf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26538106-acef-452a-8d6a-6085df1099f0",
        "cursor": {
          "ref": "3dcc68e8-7a69-48e6-a469-1792a143fe8a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f479ad1a-ae45-4f9d-ae67-57640a932571"
        },
        "item": {
          "id": "26538106-acef-452a-8d6a-6085df1099f0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "61e5214d-9d46-4d6e-bab9-f9064ca7558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba3de2-fd98-4477-8274-0b332c06925e",
        "cursor": {
          "ref": "01f807a3-901b-4e7b-9c8b-3472ca31f37d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dda74375-d754-444d-bd55-597c4d68de7a"
        },
        "item": {
          "id": "e7ba3de2-fd98-4477-8274-0b332c06925e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "29de5c99-b0d0-40d0-a450-fd494efc45a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6c8349-63e1-4a2f-adb0-eedbdf8a7e23",
        "cursor": {
          "ref": "624699e3-cc2b-4e66-ad8c-30f785fb876f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f46a7027-8ab3-4095-a1d4-7071d7275386"
        },
        "item": {
          "id": "9e6c8349-63e1-4a2f-adb0-eedbdf8a7e23",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "be79a6c4-cafc-4f53-bfd8-2fb31c4dafb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e188a2-f2f5-4bf7-bd58-ecb10aa31de1",
        "cursor": {
          "ref": "6beafa9b-f678-49a8-ade3-80b21641f048",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cf56e34d-c69c-4e3f-99da-25657620824c"
        },
        "item": {
          "id": "f7e188a2-f2f5-4bf7-bd58-ecb10aa31de1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5d4906c1-6db3-4422-90e1-8890e4aecee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67c22b8-d659-45c2-a674-172decaaf37f",
        "cursor": {
          "ref": "4a1b1a38-6673-4bca-9742-f59c477bf962",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "450b114c-7169-40b1-a17b-3a0a746e9e13"
        },
        "item": {
          "id": "a67c22b8-d659-45c2-a674-172decaaf37f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5ce81ec6-c590-4565-9000-bc55230e0eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0d4990-978c-4a3f-a52b-49811c9d45fa",
        "cursor": {
          "ref": "68ae300c-0569-4728-a547-03f469a233d5",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a6d170d4-5177-4d35-8ad8-dccd55df05d1"
        },
        "item": {
          "id": "cd0d4990-978c-4a3f-a52b-49811c9d45fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "11c208ac-27dc-4e5d-9921-933db1903339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9111c7c0-8a37-45d2-8d75-a9c6e3730b2c",
        "cursor": {
          "ref": "a14eb06f-1873-4f1e-a5fd-9e52e0fc1dab",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "53c6bce8-11df-4b14-87df-5826f096eb97"
        },
        "item": {
          "id": "9111c7c0-8a37-45d2-8d75-a9c6e3730b2c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5a135df9-90da-4629-aabb-3a8f4327406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1589724-55db-47b7-8c09-a39fdf8db179",
        "cursor": {
          "ref": "475b21b9-0466-42da-8461-48a8c6b7655b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93ff344b-8718-4bb8-aea0-e2a7a24f34cb"
        },
        "item": {
          "id": "d1589724-55db-47b7-8c09-a39fdf8db179",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3a7646b5-3693-4261-839c-8295a229df69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d43aed3-e40e-4f2c-a28c-f9a44cc724f0",
        "cursor": {
          "ref": "5e042052-1fea-4474-ad38-c4c544b5b751",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "55c6a27d-0751-4e28-a89f-c73c7e958a3d"
        },
        "item": {
          "id": "7d43aed3-e40e-4f2c-a28c-f9a44cc724f0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1dcdcd3c-31ba-4f4e-84f4-b480546f2583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff79916b-41cc-4c70-88cd-b5194f3c842c",
        "cursor": {
          "ref": "0a2ea76c-f25a-476a-b2ac-0505a5d97c9b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c38b54fd-bdf0-4d10-843d-0c2b5fb85683"
        },
        "item": {
          "id": "ff79916b-41cc-4c70-88cd-b5194f3c842c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "af8a82b2-59ff-4ef0-b02d-20d651d3067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c0e84d-66be-400a-b094-0d35a2716200",
        "cursor": {
          "ref": "349a7102-c0cd-4b6e-b436-05f03f4894e8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7fc1dc9e-fad2-4d37-8b14-36943c92e520"
        },
        "item": {
          "id": "92c0e84d-66be-400a-b094-0d35a2716200",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5eb6124b-c0de-48ec-a0f3-aa9a7167b393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12e6b13-ef4c-438d-a74b-ccb203d695c0",
        "cursor": {
          "ref": "512053e6-9617-4434-a3f4-bcf896144778",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1090eb87-53eb-41ac-b47c-065eacba996a"
        },
        "item": {
          "id": "b12e6b13-ef4c-438d-a74b-ccb203d695c0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "846e366e-1de1-4017-bbe2-fe14e72a67c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c32e010-5166-463c-b7f7-4fd9776b60e7",
        "cursor": {
          "ref": "3303a5b6-1076-49c5-8675-def696e96ff8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6141de02-0c3e-448e-8b42-f28f02c3cb0b"
        },
        "item": {
          "id": "6c32e010-5166-463c-b7f7-4fd9776b60e7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "52199f05-8c87-4a32-b592-75dbdd6bfbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c3e61e-26a4-4c0f-95a1-4ee272cfafe4",
        "cursor": {
          "ref": "897a34f2-295e-4b39-86a9-9a639580b0dc",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "480c0b3b-20db-409d-bbcf-81f6ae08438a"
        },
        "item": {
          "id": "b9c3e61e-26a4-4c0f-95a1-4ee272cfafe4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "96888c76-f077-4a4e-8a3a-c4539f64c880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315595a5-4da1-4b12-bee2-87d686ebfb03",
        "cursor": {
          "ref": "9c19fb67-de76-47f1-8861-297d87f1faf9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "72341dfd-ad97-40cc-9b85-5f53105005ce"
        },
        "item": {
          "id": "315595a5-4da1-4b12-bee2-87d686ebfb03",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c8958f92-058f-4044-a11a-65a21ff71827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18371977-6844-4a71-a662-821a880dd92e",
        "cursor": {
          "ref": "1cf5be62-f409-4cea-9f66-1a3b39bd60b0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9b0dc29e-2e21-48ef-862f-90d7152e3bc6"
        },
        "item": {
          "id": "18371977-6844-4a71-a662-821a880dd92e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b18be072-5378-4672-a305-5ca249566ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34bb9b3-88d6-4f55-9000-fad13a86b268",
        "cursor": {
          "ref": "9a6a8073-3405-4cc5-8f38-c42011302e67",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "895a62d3-1aee-4f46-964c-78f41c2d403d"
        },
        "item": {
          "id": "e34bb9b3-88d6-4f55-9000-fad13a86b268",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "18da267a-3b27-4349-a9dc-ec3d9581d104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0509a43a-715a-42de-af37-be801132e98b",
        "cursor": {
          "ref": "c549fe64-0580-463c-ac24-a0c0ca7eeafe",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f61725ed-36d9-458c-a76f-197bf6454363"
        },
        "item": {
          "id": "0509a43a-715a-42de-af37-be801132e98b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2582c349-5979-42e7-93de-5345b9167053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dc47f5-7b71-4e66-9509-7b3101c21992",
        "cursor": {
          "ref": "f1662742-2be3-4ea7-874c-d04dd91edee5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8a7bcf67-d1bb-471c-9c8d-236410f7a1ff"
        },
        "item": {
          "id": "48dc47f5-7b71-4e66-9509-7b3101c21992",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dcc13f9c-24b6-4d2b-b063-6746aeb18f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c985a096-469d-4b66-a42c-d84775022aa6",
        "cursor": {
          "ref": "4068001b-fdc5-4987-99f2-ad2e769d5715",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e97710a1-e4aa-4025-9714-dd0487c10c04"
        },
        "item": {
          "id": "c985a096-469d-4b66-a42c-d84775022aa6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4dcb1886-4635-444d-ba16-5752507dedde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf67eb-7c37-4bfd-8fea-d9a7acc87e83",
        "cursor": {
          "ref": "4ac3eec9-7041-4e60-bf15-7e0464f07825",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "60fa20fa-045a-43db-9328-187ebe213228"
        },
        "item": {
          "id": "62cf67eb-7c37-4bfd-8fea-d9a7acc87e83",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7d1f0edf-2fd0-4f0c-8a1e-04030fefa394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3443f010-cf02-47c2-8947-7cacca5523a5",
        "cursor": {
          "ref": "aa452fb0-8810-44d9-a337-8504fa906aee",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "94281919-ea3b-4942-9458-36f164837ead"
        },
        "item": {
          "id": "3443f010-cf02-47c2-8947-7cacca5523a5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2c004da7-e646-4832-8360-12ea0c9b7a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94bb13-cd40-4d8b-8d41-de71f9a16749",
        "cursor": {
          "ref": "4d2ac852-c3c3-4406-8651-5e557df9e1a7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc7a94ac-3267-4a91-b3d9-86bd0ca6c810"
        },
        "item": {
          "id": "7f94bb13-cd40-4d8b-8d41-de71f9a16749",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6b9cfcfd-8c0d-41a6-a99f-147928bb1c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae216cfd-57b7-4245-8d05-e6c815890613",
        "cursor": {
          "ref": "b45ec224-c8f4-4f31-9bd7-8d32338dc2d0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a712fdf-c203-4508-be19-16b7addc37bb"
        },
        "item": {
          "id": "ae216cfd-57b7-4245-8d05-e6c815890613",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ad7bfd11-6bbf-4be7-822e-76c5126293dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3204a65-b850-43a8-a4a6-ba6aae0a1d22",
        "cursor": {
          "ref": "010ee349-fcb1-4db4-9d4d-e570bd5abde2",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2f3f4092-4382-4901-8d43-fcee7a97418a"
        },
        "item": {
          "id": "a3204a65-b850-43a8-a4a6-ba6aae0a1d22",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "70131c5e-3792-475a-9051-79d7dd1ecdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead7860b-4c3b-41c3-85fd-1a5add42b776",
        "cursor": {
          "ref": "7bf85523-5b88-42e5-9f3f-f969e0415f74",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bc7d4c5c-9939-4333-9383-84e4e0885988"
        },
        "item": {
          "id": "ead7860b-4c3b-41c3-85fd-1a5add42b776",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "32679a0c-4cf3-41fc-8f76-3a0e8f5d2efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de1dc77-6408-46cf-bc98-f9d5b4938c01",
        "cursor": {
          "ref": "f6fc3375-b284-4310-ad90-369228a72de6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "41883fa3-93e4-418c-bed7-bd58058014c1"
        },
        "item": {
          "id": "2de1dc77-6408-46cf-bc98-f9d5b4938c01",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "21ba2c48-bacb-4f4f-9dfe-920b64eefe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bbcfcf-5f66-4e28-832e-c63c5a90b592",
        "cursor": {
          "ref": "a985a5e2-b535-4c03-9ec7-5ff2f57b8eec",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "04311cfd-f7ce-4c34-bcf0-dad3cadf0225"
        },
        "item": {
          "id": "65bbcfcf-5f66-4e28-832e-c63c5a90b592",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "548f3e78-9b9d-4959-90cd-55d9ec8d56c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b849ac33-8131-45c5-886f-c7478d597e2c",
        "cursor": {
          "ref": "4053e5dc-a7eb-479f-9905-9a24cbe40175",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d9d698bc-579f-4cb9-a059-8dbf20377010"
        },
        "item": {
          "id": "b849ac33-8131-45c5-886f-c7478d597e2c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "88bf1e28-4cf9-41d2-8b5a-437ace9afb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7098cc21-94bd-4fc9-bad2-2accb68554a8",
        "cursor": {
          "ref": "dd9566ab-1d0b-46d9-9b28-00260e82e1a5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6fbbd294-9252-489a-b26f-b400ce6adbdc"
        },
        "item": {
          "id": "7098cc21-94bd-4fc9-bad2-2accb68554a8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46662969-c176-4f23-964e-9be8a03a5fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bea2de-59f1-43d4-9168-29ed4d2eb68b",
        "cursor": {
          "ref": "d2011db8-46ed-422d-b227-2c16784d5dfc",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2b3fe0bc-b3d8-4f2d-a576-065f0ba5c44f"
        },
        "item": {
          "id": "97bea2de-59f1-43d4-9168-29ed4d2eb68b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "847c52d9-ba14-4122-9abd-88e8c3958ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67410a7f-ab45-4500-856e-c36ccf426550",
        "cursor": {
          "ref": "f394fe9b-2732-4df4-bf4a-efac64555843",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5c237ccd-0365-4a20-b028-c2d197bcd83b"
        },
        "item": {
          "id": "67410a7f-ab45-4500-856e-c36ccf426550",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d850c7fc-c267-4736-80c4-3d45e0b00838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edccccf2-317a-4fba-943a-4f313ca17b29",
        "cursor": {
          "ref": "9d6099c4-4c61-4f31-9034-1e182b08ebd2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "476ca448-a7e8-400c-b9e8-cfc5a602adf8"
        },
        "item": {
          "id": "edccccf2-317a-4fba-943a-4f313ca17b29",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "28ffe41a-7328-4834-9ec7-b9d6faea5bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f9aff-29b4-441c-b162-f13b13d0563d",
        "cursor": {
          "ref": "42be6758-8548-4790-94bd-55f4cf891952",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "29cb2d59-6fb8-43d6-adae-6275f4604113"
        },
        "item": {
          "id": "b34f9aff-29b4-441c-b162-f13b13d0563d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a9c9f91b-f9b3-493b-9444-b7b61c34e159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648daa23-5223-47e1-92b5-77b11f20d543",
        "cursor": {
          "ref": "f873a03b-49bf-4182-b37e-ebd1f0384659",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5c762309-3177-471f-91b5-d07e0e8d825e"
        },
        "item": {
          "id": "648daa23-5223-47e1-92b5-77b11f20d543",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8fa7be84-3dea-4fbe-a0eb-da2c23481a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200da57d-87c5-423e-8322-dcd861dcde8c",
        "cursor": {
          "ref": "210421c7-7cc6-4be1-b1ef-4dc6bd629e9d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2e290d0e-96bb-4362-9ff9-6fed490c75c5"
        },
        "item": {
          "id": "200da57d-87c5-423e-8322-dcd861dcde8c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d5c0d507-d731-48a9-8244-1e7c1129eaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb3d997-ee58-433f-8c30-70078c8256ed",
        "cursor": {
          "ref": "ab2b4503-eaf9-410f-8dab-f2e246114d7c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "78c5617e-9d47-4054-8814-b6bf3add21e7"
        },
        "item": {
          "id": "4bb3d997-ee58-433f-8c30-70078c8256ed",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f2334f57-f270-4af7-93c5-4af4620b1e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece13cb0-63c5-47ed-b719-11a63380f101",
        "cursor": {
          "ref": "354c4d9f-ea06-4c05-92c1-1f90c1dec259",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "aeb7dc3f-3470-4fa6-9835-4ae426aa3f05"
        },
        "item": {
          "id": "ece13cb0-63c5-47ed-b719-11a63380f101",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3d031b3a-1f51-4622-a32a-54e78e0af7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd18cf55-a2c8-4b0f-bba7-4703a4387e3a",
        "cursor": {
          "ref": "61198ea0-f9ca-4511-bf15-0af5a35475b5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3613de6f-6b13-4277-aa5d-050bee326307"
        },
        "item": {
          "id": "cd18cf55-a2c8-4b0f-bba7-4703a4387e3a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6115b6c8-139a-40c2-b577-7388158e3112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994d580a-ebbb-4bb2-88bb-94e05452ba5f",
        "cursor": {
          "ref": "5b5d7b63-c055-4b3a-9fbc-d4bd36a12360",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a298aad9-c5d4-4d09-acc2-d78820abfeb6"
        },
        "item": {
          "id": "994d580a-ebbb-4bb2-88bb-94e05452ba5f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "755ee0a6-c36f-45a0-9d2c-5e1b261c405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a734970c-89c7-45b0-aff5-7e7367585b4a",
        "cursor": {
          "ref": "f88b1e68-8e18-43aa-910c-695b98d04225",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ca3fc01c-c76b-4cbe-9563-4ed670e5f70a"
        },
        "item": {
          "id": "a734970c-89c7-45b0-aff5-7e7367585b4a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c48aebeb-2a7a-42a1-bdee-dfd1e3525f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2070ec-a606-417f-9d05-a79357f7b015",
        "cursor": {
          "ref": "5dcc54bc-7dcd-447a-8a21-10e33c7421ab",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "41c9cecd-4569-4b01-92e2-cd74a5707914"
        },
        "item": {
          "id": "db2070ec-a606-417f-9d05-a79357f7b015",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "301a1179-af36-4eeb-b7e8-02ba0e179a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c01af0f-bf88-4aee-bf2c-c50a9d8b982b",
        "cursor": {
          "ref": "e78dbf05-1373-47cc-9635-7ce1cfe8c580",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "834a04ce-36f1-4683-96b7-ba88193f82b5"
        },
        "item": {
          "id": "0c01af0f-bf88-4aee-bf2c-c50a9d8b982b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64232ad1-8776-4858-a3ec-fa7177b403ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62bcc06-72dd-4f96-9c9e-1c4f69338a60",
        "cursor": {
          "ref": "ec3a2c52-dc54-4a11-84f8-9eb659a2cce3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "44dc297e-a7e3-478b-aff0-2da131a49ea2"
        },
        "item": {
          "id": "e62bcc06-72dd-4f96-9c9e-1c4f69338a60",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "68a7548a-3fc5-4800-a4d5-629e9538db93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba9bde8-bd44-4c9a-911c-019984c409e6",
        "cursor": {
          "ref": "a43892e6-69ac-442d-a4d9-b785977fdcc4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "33e1ce0b-07d5-4839-81a1-fc79cdb96dd6"
        },
        "item": {
          "id": "9ba9bde8-bd44-4c9a-911c-019984c409e6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b12aa5ee-4331-4c92-94fb-e70f613ab212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f458e28-5664-40ef-920c-249600045a05",
        "cursor": {
          "ref": "059c2acd-a8be-4e86-a204-8fbd66ab8e5d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb635164-cc07-466b-85e2-4d7aff2e1d61"
        },
        "item": {
          "id": "7f458e28-5664-40ef-920c-249600045a05",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "90376c04-bd0c-4847-b6a1-a35ecf904ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c09b1c-3aef-45e8-a789-494bced42e09",
        "cursor": {
          "ref": "afc46553-e2a6-4c25-b657-8ad851221ab6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "61aa8e35-e265-49d7-92e5-4b9a6777a029"
        },
        "item": {
          "id": "13c09b1c-3aef-45e8-a789-494bced42e09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dfa361aa-913b-4ef9-8d5e-f82cfe2e5e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c92c78c-7868-48be-b698-d7e4ad363b60",
        "cursor": {
          "ref": "09689ae3-6251-4dd7-8107-b065167c9b86",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8c0d948d-0390-4103-8d4f-ba54c7fa6ab0"
        },
        "item": {
          "id": "4c92c78c-7868-48be-b698-d7e4ad363b60",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f9d4144e-a7c0-4956-b97b-fa6418065e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3241b8-ca58-4f96-837b-922be7ebc6f5",
        "cursor": {
          "ref": "dbd1bb57-90c6-4080-8438-6ddf04b882a0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ae182fa7-b501-4e6b-8a58-2a5637466045"
        },
        "item": {
          "id": "5c3241b8-ca58-4f96-837b-922be7ebc6f5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a7a9fcb8-0994-4c10-bb0c-805557f4145f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5611ee57-bc31-4b76-a39a-b3003f6194ff",
        "cursor": {
          "ref": "f5bfe9e7-c5aa-473a-b8d9-b081170062c5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9f4610c2-c3f4-4517-bd5b-1562a94b192b"
        },
        "item": {
          "id": "5611ee57-bc31-4b76-a39a-b3003f6194ff",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d0a3ff94-73ef-46af-bf16-498893a72015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391a83eb-c0ba-484f-8a1f-37750c5e9f7f",
        "cursor": {
          "ref": "2783f56b-51de-404a-bd25-9c7edad5540f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9d8fead6-0248-4330-93f1-5d6d4b510e9e"
        },
        "item": {
          "id": "391a83eb-c0ba-484f-8a1f-37750c5e9f7f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7b52194-3dc3-4ee6-b8c0-18a22c1cc87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819b4d33-3a95-4960-a126-e30845df02b3",
        "cursor": {
          "ref": "f3faa498-b256-4fd3-90c3-422c21a024ef",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b635f0b3-32f2-49dd-bf4a-31036d75db93"
        },
        "item": {
          "id": "819b4d33-3a95-4960-a126-e30845df02b3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "197f1225-dc78-48bf-b361-2acf8e541f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a374f3-7537-42ea-a988-76316fcef0f2",
        "cursor": {
          "ref": "6362366f-9a24-43ea-aaf1-fb57b54b0d98",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "130bc957-abd1-448a-be3f-8b5bda9b5072"
        },
        "item": {
          "id": "10a374f3-7537-42ea-a988-76316fcef0f2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7b72cd4e-6c1c-4a92-bd7e-be0a49e574bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b72506-4ad4-49dc-a17d-617adcdf2a89",
        "cursor": {
          "ref": "d7ebd605-f396-4aa0-aab6-e3888b258fba",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f85cca7d-110b-407d-ba64-e2ededd5ce95"
        },
        "item": {
          "id": "d8b72506-4ad4-49dc-a17d-617adcdf2a89",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "454a75e0-ab6c-47b9-af7a-3db4c93d9b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1e8bb7-502b-45dc-8171-dc205e21eb3b",
        "cursor": {
          "ref": "ece9d455-d4cb-4d90-b779-b5eabb194579",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fe7d13f5-51a5-491d-942a-70320cce0067"
        },
        "item": {
          "id": "4a1e8bb7-502b-45dc-8171-dc205e21eb3b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8850c633-a1d4-4bcb-b468-e51e5a49cc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2712379-52a0-4c66-b07a-175d7f882426",
        "cursor": {
          "ref": "07ff8213-3cd4-4f5b-83bc-9b5b212e2cdf",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "31934a49-bc21-4d50-b62f-9a0a6750f01a"
        },
        "item": {
          "id": "e2712379-52a0-4c66-b07a-175d7f882426",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8d37438b-f2cc-4edc-b119-8892b7c7139a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8888db2e-dcbf-46ed-81a7-88c7c1dcba5e",
        "cursor": {
          "ref": "df3c2d81-74cd-4274-b2a1-c9fae6991fe8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e9380807-249c-45e8-b57b-54ade9e7089c"
        },
        "item": {
          "id": "8888db2e-dcbf-46ed-81a7-88c7c1dcba5e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e782aba5-e9af-42cd-b4c3-5a7f82d21179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2541a2d-256d-4507-892d-2dbb4f7faaec",
        "cursor": {
          "ref": "17faae7b-68a5-49bc-910b-3654f94c02a2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7451e478-7c35-4778-86db-0a97ca23e54f"
        },
        "item": {
          "id": "a2541a2d-256d-4507-892d-2dbb4f7faaec",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1122bf26-a123-4230-aef9-f351408dab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a586750-b77a-402b-930c-f4c60de4109b",
        "cursor": {
          "ref": "aa432f75-0069-4d7c-b96d-15180d0bec49",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aa45ffbf-6f57-4fe5-90d8-08541b258801"
        },
        "item": {
          "id": "4a586750-b77a-402b-930c-f4c60de4109b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ea07ae8e-fae2-4806-aade-4cddf5d52aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb9673a-b352-4c90-a2f2-013df0c84918",
        "cursor": {
          "ref": "bda1f497-dc46-4eef-a55d-e493f39c5fd5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a7271dcf-2dca-4d71-8225-d12fceb15ca1"
        },
        "item": {
          "id": "ddb9673a-b352-4c90-a2f2-013df0c84918",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b8c91e72-7756-4f44-a5a8-f91fc24bbfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a5f366-6696-4a0f-92dd-0eda198e5c01",
        "cursor": {
          "ref": "013c8a8e-4d86-4a84-8469-d1dcd69bd602",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "27d03d7c-b9ee-4f3b-8d5f-fcb4b7d83fbb"
        },
        "item": {
          "id": "30a5f366-6696-4a0f-92dd-0eda198e5c01",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c2ce1734-f4e4-4650-a28a-ec3f392fe998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e8d70a-eab4-4041-ad8c-f17d52b5e946",
        "cursor": {
          "ref": "b52c09a6-ba37-47f5-9f4f-ef0c4dc40d2f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eafc0f08-228e-4599-982a-8ad1b7176a62"
        },
        "item": {
          "id": "c1e8d70a-eab4-4041-ad8c-f17d52b5e946",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fb10ebdb-b7a7-4890-8424-a86f35069d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12d8d05-4a99-4b0b-8b2f-9a9dd6b0cca1",
        "cursor": {
          "ref": "f1d73226-f428-462c-979e-869c90090c47",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "19462d47-4f3a-400a-b87c-7dd8d8b29a12"
        },
        "item": {
          "id": "e12d8d05-4a99-4b0b-8b2f-9a9dd6b0cca1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e901b609-5228-4184-b86c-98cd6028d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9431d31e-26c5-4805-af28-01a31b0978f4",
        "cursor": {
          "ref": "5cd2b171-1c68-4c93-96d6-9de6391d9da0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c59a16c-3dd8-4b86-89ef-e951da86adaf"
        },
        "item": {
          "id": "9431d31e-26c5-4805-af28-01a31b0978f4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8c320450-58d7-4d9f-89e1-81e473f2bd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a460b-a192-47cc-ae1d-38992b367fab",
        "cursor": {
          "ref": "8b263e5d-dda1-4ae5-bea7-7744f0ba1c01",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7a042ce1-e077-472e-910e-e6db7a47ed73"
        },
        "item": {
          "id": "396a460b-a192-47cc-ae1d-38992b367fab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "082acec5-858f-46d7-90fc-0d2c7e8593f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a3fdb-15d2-4116-960f-82f019620005",
        "cursor": {
          "ref": "1f27296a-020a-4b98-bdbf-dd9c29526d1e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "50b22ec9-c0ac-4ccf-897d-7015a7dfb84d"
        },
        "item": {
          "id": "5e5a3fdb-15d2-4116-960f-82f019620005",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "83675140-dd0b-4525-ad88-5f956c064818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578a5525-97b8-42c2-a095-3e7cdfb0d29b",
        "cursor": {
          "ref": "ad49a732-a3fb-466c-a6ce-2eaefd0af2fd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fd468ad9-d766-47bc-86fe-2dd209966c4b"
        },
        "item": {
          "id": "578a5525-97b8-42c2-a095-3e7cdfb0d29b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7690e8fb-0565-44e1-87dd-8d0d84474d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e777b496-913b-4e41-adca-68dbbe4a7097",
        "cursor": {
          "ref": "e25a2c74-a3b3-4653-96c3-d1de635879a6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c3440650-8743-47df-a31a-058859753913"
        },
        "item": {
          "id": "e777b496-913b-4e41-adca-68dbbe4a7097",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60c0846c-f02c-4cf2-913a-8b99aa4dd2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe020633-293a-4e27-882c-1321b9ac0100",
        "cursor": {
          "ref": "2fc3402a-947c-471e-a712-ded3015de35f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f7be7607-db44-4c18-8da7-c68bd69b1190"
        },
        "item": {
          "id": "fe020633-293a-4e27-882c-1321b9ac0100",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "99e0a628-6790-4adf-9acd-6092a0be71a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598ef674-61f8-4064-9c58-cadad7b5e7d2",
        "cursor": {
          "ref": "26aa3f8d-322c-4117-8982-7c1cbd4e4d66",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d8792c50-35c4-4a63-a886-2ff1bf48213d"
        },
        "item": {
          "id": "598ef674-61f8-4064-9c58-cadad7b5e7d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3df169bf-1212-410c-bbd8-8ce54282a3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53b6bd5-badb-4a8c-b4eb-f0fecf9a1fb0",
        "cursor": {
          "ref": "055c1997-2c2f-4188-bebd-68d7d6dd301f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b6e41ecb-3545-476c-9648-67c69c2f0310"
        },
        "item": {
          "id": "e53b6bd5-badb-4a8c-b4eb-f0fecf9a1fb0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "be18fb4c-299b-4283-99e0-4debbe261a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3edbdce-78d7-4c79-bbb3-c4b78692d986",
        "cursor": {
          "ref": "a82d0247-7c8e-4532-ba9b-31081f187a9d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7aa027f5-1abf-4347-8c7b-f6b723367016"
        },
        "item": {
          "id": "d3edbdce-78d7-4c79-bbb3-c4b78692d986",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a8a42299-99a1-417b-8c84-3d0fd990e7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6300a16b-08ed-4325-9dc3-342101745057",
        "cursor": {
          "ref": "3d2b5adb-6afa-4e63-9f02-30ed8fa334b8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f5db1a2-8033-4759-bebe-8892749e4b05"
        },
        "item": {
          "id": "6300a16b-08ed-4325-9dc3-342101745057",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9533fd74-55ed-4397-a461-c6429f782f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c47c028-0363-441a-95e4-63ba729eb6ef",
        "cursor": {
          "ref": "0432e294-ba2d-4047-9c5b-5266b4db797e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "be0c230c-2c09-485d-b70d-58ab2e86d164"
        },
        "item": {
          "id": "2c47c028-0363-441a-95e4-63ba729eb6ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1451832f-5d80-4965-b7e8-7298f9267a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fe1d27-0fed-49f4-a801-6479437967a7",
        "cursor": {
          "ref": "7998237e-c441-4a7e-9000-5b3cdf08a7a0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "216d1697-19fe-49f7-93ce-20692e3732f6"
        },
        "item": {
          "id": "89fe1d27-0fed-49f4-a801-6479437967a7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "200c2283-2bdf-4b52-97c6-a65b4454334e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b57d3b4-f819-4142-9874-859071014c48",
        "cursor": {
          "ref": "3e3b06f0-7ec8-475e-9472-c4877f2c72c8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20e0c166-e847-49bb-9631-557d4a072053"
        },
        "item": {
          "id": "7b57d3b4-f819-4142-9874-859071014c48",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "faa86252-e684-4f3d-9f1c-0885713d5ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4398316f-1344-46d6-959d-d03c2cfc29c1",
        "cursor": {
          "ref": "2d24f927-2b01-4110-9952-1d663a93d24d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "929ed14e-0e94-4b8f-9132-01d65a367a37"
        },
        "item": {
          "id": "4398316f-1344-46d6-959d-d03c2cfc29c1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1a54a52c-ea76-47b5-88fd-938a7369de66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ffa917-dfba-44a6-a807-9890d733e757",
        "cursor": {
          "ref": "2f357d96-a011-4ee0-8443-c4b881ba2cce",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "988df94a-ffdf-4e6b-a08c-3c12a0627c57"
        },
        "item": {
          "id": "a1ffa917-dfba-44a6-a807-9890d733e757",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6710ca68-4d8c-4a60-9c82-92db335ecef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668edc11-7f38-4044-baf4-862bd3732570",
        "cursor": {
          "ref": "25ef4c2c-b9c4-4a49-9177-f827035cf113",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9bf4b710-cd6f-4588-ac07-7e4c0f118d1f"
        },
        "item": {
          "id": "668edc11-7f38-4044-baf4-862bd3732570",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "79534da5-6f94-42af-8896-72847e956bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cc7d95-9738-43ac-a98e-2d24ea613a4a",
        "cursor": {
          "ref": "a88ac7ec-5527-4ecd-b114-98cb73e84229",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bad37bda-273b-4dd9-95a2-4d8828cff236"
        },
        "item": {
          "id": "46cc7d95-9738-43ac-a98e-2d24ea613a4a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c5ec283-d7b0-4a8b-9ab1-0fd22e2839be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97611aff-cf8d-4416-9ab1-42be0ee1d552",
        "cursor": {
          "ref": "1f72bdbf-3c5c-481c-a93b-2c87868a330e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8af88c59-a6e3-46dd-8286-e9f44f72bd00"
        },
        "item": {
          "id": "97611aff-cf8d-4416-9ab1-42be0ee1d552",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c3e41807-0b61-46f2-9af7-83436001619d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ed590f-71a0-4653-afb6-3eeaebe6b3c1",
        "cursor": {
          "ref": "4678f915-3b83-46bd-b1dd-03bfaa7e9244",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2eb91299-5e7a-4449-bd54-39c9bc4a0350"
        },
        "item": {
          "id": "02ed590f-71a0-4653-afb6-3eeaebe6b3c1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "22d8b004-d71d-4e6c-87be-8e3f57aff571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fac7c75-ef09-465c-a217-4cf9a5a0a09f",
        "cursor": {
          "ref": "910f303a-87c5-4e36-af91-e6387bba387c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ff25a093-5a50-40d1-9e94-b56fdbad7c79"
        },
        "item": {
          "id": "2fac7c75-ef09-465c-a217-4cf9a5a0a09f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bbe481bf-6a31-4cdd-9edb-9754dbe20387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa781e5-a9b6-4f8c-9577-e556be50d263",
        "cursor": {
          "ref": "28e9fb7e-601c-4df2-bfb2-ed3d2252e2af",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a25b0a5d-7124-4938-9189-2e7d45d3bd3a"
        },
        "item": {
          "id": "1fa781e5-a9b6-4f8c-9577-e556be50d263",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "93853398-f19f-4677-b8e2-7a70d6e8cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd1f718-099c-421b-b74a-a4e97200bb2f",
        "cursor": {
          "ref": "45ada6fc-8d75-43cf-ab50-600406e4860c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a7256831-7cab-4727-9236-9bbb9ac86748"
        },
        "item": {
          "id": "0cd1f718-099c-421b-b74a-a4e97200bb2f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ab2c1a49-797c-47a8-91c7-3dccc66a746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba21905-49b4-41b7-a595-b94b025d4b55",
        "cursor": {
          "ref": "0d10612d-5e0d-496c-b5ac-7590421c3794",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "353a1a97-0c40-4056-a906-124351046e89"
        },
        "item": {
          "id": "3ba21905-49b4-41b7-a595-b94b025d4b55",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0c9222b3-c48d-4682-a57a-4aaa59b4da32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b052ba21-dba9-4735-bb7d-2efa6e235465",
        "cursor": {
          "ref": "4892faec-b77f-4dc4-aa5e-bf9b504f7c13",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fcc6c73c-aa98-42ca-a750-ae30fde8c20b"
        },
        "item": {
          "id": "b052ba21-dba9-4735-bb7d-2efa6e235465",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92884e23-0587-438a-9cb6-38a997455a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d50730-e854-4693-8f9d-ab6f7aaa1398",
        "cursor": {
          "ref": "8cc2b47c-a530-4e6b-9f61-620ccc54ddc1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7ebcc270-6986-4cc6-864f-f79b77a08932"
        },
        "item": {
          "id": "b0d50730-e854-4693-8f9d-ab6f7aaa1398",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "65c9504f-bd4f-4a6d-b536-9d5b4b9cab92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e69b2f-17e0-4039-a1f6-126cd634cc41",
        "cursor": {
          "ref": "b138f9a4-c3ca-4e38-b827-f921f3d15514",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3117e926-400c-4c47-8cf3-54191c4238f5"
        },
        "item": {
          "id": "11e69b2f-17e0-4039-a1f6-126cd634cc41",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "573682a3-b184-4845-b6f2-c2d9fd3d4ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6718dfd-2456-4dd7-bf61-2c03af9b7cd5",
        "cursor": {
          "ref": "739f8b7d-95f5-4b55-9184-5dc9fd3e94b7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "33478439-1151-4085-98ad-70a493dc60fb"
        },
        "item": {
          "id": "e6718dfd-2456-4dd7-bf61-2c03af9b7cd5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5c3dda20-e80e-4aac-b010-12389779de66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9f9c81-4db2-4d3e-822d-56f99015300b",
        "cursor": {
          "ref": "97a057bf-19bc-42d2-bc9a-8773e4724ef3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "91a3eb6b-37f7-46a0-a09f-c2dd0bf5b6f9"
        },
        "item": {
          "id": "6b9f9c81-4db2-4d3e-822d-56f99015300b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8007447a-497b-4e42-8fbf-921fe0414924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760ad132-be7a-456e-a7f0-c3f003063c1d",
        "cursor": {
          "ref": "8a19b44b-8d7f-46af-9479-d7907e32fd24",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "51e84de5-3e1c-4402-8bf7-b2604e13fb5f"
        },
        "item": {
          "id": "760ad132-be7a-456e-a7f0-c3f003063c1d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d570d845-8f24-41ba-8eb0-11809f31236b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ef093-ae0b-41f3-b698-06c14c8ceb0e",
        "cursor": {
          "ref": "96ad44ec-4991-45d3-b50d-18ddb67bc257",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "061d64e5-d55e-405e-9de4-bbe933dffdcb"
        },
        "item": {
          "id": "8d7ef093-ae0b-41f3-b698-06c14c8ceb0e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3e32547-69d9-46ab-8006-5a23b84d13c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4437c06b-69fa-4b61-989a-8b9bd9823948",
        "cursor": {
          "ref": "132786d2-5502-4a92-86c4-5e62765c881e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7af3d1b6-4158-4e8a-a5a4-6b46bfce0694"
        },
        "item": {
          "id": "4437c06b-69fa-4b61-989a-8b9bd9823948",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c0a0087f-c6bd-47a0-91b0-48beecaee5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae71a43-81b4-4363-8039-29bc15cd8fd7",
        "cursor": {
          "ref": "ff2f2416-909a-4804-8652-a37eba96591e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "29540f64-959c-439c-808e-997ae5e50b7e"
        },
        "item": {
          "id": "dae71a43-81b4-4363-8039-29bc15cd8fd7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6c76de7e-95c9-4813-baad-2f19754245c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9dc260-4698-4eaa-ad44-95a4c33ad06b",
        "cursor": {
          "ref": "e70fcb13-640e-4837-889d-417c1e0521ec",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b3da7093-1c26-48a4-b6e9-1fdd3a5721e4"
        },
        "item": {
          "id": "9c9dc260-4698-4eaa-ad44-95a4c33ad06b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "19094eb4-9c7c-47cc-83eb-fb7bb88bce16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e267c87-2628-4496-bfc3-c0134ad18688",
        "cursor": {
          "ref": "886a52a2-c017-4ed8-a376-ed7398b5a914",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f82529c8-4e98-45c1-bd48-a4dc0b947161"
        },
        "item": {
          "id": "8e267c87-2628-4496-bfc3-c0134ad18688",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f3ed8f1-075d-47df-b68a-e14945b02ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d2caba-a0d7-447d-baf9-c80cbff6a343",
        "cursor": {
          "ref": "fb036114-d628-4a56-ad0b-19a2e2b48510",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "879d6087-1bd1-4f56-9da1-1933a9109fb5"
        },
        "item": {
          "id": "e1d2caba-a0d7-447d-baf9-c80cbff6a343",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a1f4656f-3d52-47e3-951f-f8bbac798535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "e31a06b4-7c20-4a12-b08b-4a8afce6cea6",
        "cursor": {
          "ref": "b14fe4a7-eba6-49e5-ad4f-d8039aec9f56",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8fc8cd11-248f-4409-a8cb-f8a96c613727"
        },
        "item": {
          "id": "e31a06b4-7c20-4a12-b08b-4a8afce6cea6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "49f310d2-e0e1-4f81-b50d-fa581fac96f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "62319afd-5bb1-4da9-addb-6c863ade6d97",
        "cursor": {
          "ref": "c905b9bf-2525-4584-817e-92cd5605fa4b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e262878a-395b-418d-9953-62a309d87432"
        },
        "item": {
          "id": "62319afd-5bb1-4da9-addb-6c863ade6d97",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d35d33ea-108d-4938-9a62-17a00717e811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "b76063a9-fb58-477f-be49-b5b4b691ef1c",
        "cursor": {
          "ref": "ca84aabc-c645-42ee-87ff-9fd7b614245a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33a272e6-cb76-46ce-8d09-765e3b41c228"
        },
        "item": {
          "id": "b76063a9-fb58-477f-be49-b5b4b691ef1c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e38a5e5f-357e-4ebb-ab02-19b7b561450a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76063a9-fb58-477f-be49-b5b4b691ef1c",
        "cursor": {
          "ref": "ca84aabc-c645-42ee-87ff-9fd7b614245a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "33a272e6-cb76-46ce-8d09-765e3b41c228"
        },
        "item": {
          "id": "b76063a9-fb58-477f-be49-b5b4b691ef1c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e38a5e5f-357e-4ebb-ab02-19b7b561450a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7389ec14-9772-4eb2-933e-dbb491f58b76",
        "cursor": {
          "ref": "74cbb369-f746-45e4-acac-790a585487ea",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "87a2d763-a4b6-4034-b85d-8bc681f605a3"
        },
        "item": {
          "id": "7389ec14-9772-4eb2-933e-dbb491f58b76",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9008ef75-5b40-4579-bcd9-1660e6d505fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd0a883-9ce5-46fb-a388-935297a77ae0",
        "cursor": {
          "ref": "c1aa9deb-0278-487b-8d1f-ba0755742a44",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7170a009-6b4c-4f94-8eb0-6173ee356453"
        },
        "item": {
          "id": "2bd0a883-9ce5-46fb-a388-935297a77ae0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dc6b3efd-2dcc-433d-b318-e9e2b27e818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}