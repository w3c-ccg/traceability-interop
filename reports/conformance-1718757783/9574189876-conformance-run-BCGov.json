{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f4b20580-f443-47c3-9d71-3632db7525e5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "97ef268d-04b3-4336-b1ce-b8699be7f946",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c7d2b52-0aaf-4c52-a715-cce2b8cb92db",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "26c28385-80fd-4dbe-9f0e-aabf4a746257"
                }
              }
            ]
          },
          {
            "id": "4e625ccb-97fc-4274-bcd2-1e4de9cc793f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cf6d1e2-201e-41df-85d7-a97e6e076417",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "45e677ab-1d91-40be-b5f4-6bc3ff38dcd1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1b900ec-faba-4019-bf1a-1a3320d52ffa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fc9f42e1-0ecc-4d8d-b775-277d8c3e326c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67b97fe7-6f13-4f98-bbe2-9f158f9841bc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7394ef80-a39d-4ada-8c9a-82885bfaf80f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e2b90f0-3cb7-46f2-b61a-226a0a762fb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2ba92ba-30d8-40c2-95f8-e320c4de6a80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e957b7ab-89cc-4d57-afd4-b0cef4acfc6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "629d945b-962a-4f7d-a96d-ac323379d664",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60458eee-d514-4d74-89fd-23e7009d3b63"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f88ca8b-690c-41d5-ae51-1a3cc564fcd6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ef5388a6-865f-4ab3-b2f6-c246536c0a03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1254bbd1-b454-482b-83b8-75e49588c037",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34947296-04ee-4499-a8ab-37ed6660d905"
            }
          }
        ]
      },
      {
        "id": "04951253-3430-4c98-8399-a04bf143c0ed",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8d2c6006-5763-48ed-bd56-7f6e25d8e2ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b36459c9-894f-413e-af48-d4ed60a136e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ce34ee0-4053-41d8-941e-739a50f5dbd8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022ea5d-d0c8-40f4-8882-3907db9ee2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b77ee0e0-753e-490c-80c3-38e8b89edb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccd3375-00ab-4809-889e-e3fcf0f73405",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8eaa5a-2d6e-4ae7-a212-6cd1648d9b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a5a8f77-322b-4c3c-9fb0-a34972556113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e58942-01a9-4df4-9ea7-801362f378c6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be729c18-96c5-4b78-9ac7-0091d1582bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "095d94ea-40e1-4e2c-83e2-9f34ee3d9fea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac81ed32-b55b-4a81-8e1a-b43a72851528",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a20eb1e-db59-477c-8fdb-922b0edb3a6a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbe4fa3-a60b-444a-98a6-c9149322c577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95afab0b-a1c3-45a5-8b5a-3c41f862a097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5a60af-4769-4602-a30f-1595c8b57d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf53f84-dd02-4235-9fcd-809c5feb1056"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "559722be-a6b2-4f0c-b17e-fe502175ad6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f209e67-15d1-4ce6-a931-2f80895529d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "368c3d8b-a508-4a44-af33-d4a74b52de33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "79a6b511-0210-43e4-9967-798fd12b6b33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04cfae1c-ffaa-48fc-abe7-df49dbfdebb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bfdf13a1-703c-431a-8fa7-4302d10999c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0890c79a-6312-4b05-84b1-0b64d013a404",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d2b784d-f59d-4854-a186-ca5da53caa74"
            }
          }
        ]
      },
      {
        "id": "361a4da9-70c3-4013-8a7d-3e16a846d336",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d0285567-9770-47ee-bb11-c8946e1140e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d384da79-434b-46e6-9f61-bc8a109e0479",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4f449f35-c427-42a6-89ea-1882b9b9fd74",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31776142-852d-4cf8-a4d5-7ad8535a7ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae68c90-3fb1-44bb-8cc0-e3148a9ebd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55bb1c7-0fd0-47ac-9fbb-b15480bf4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74de0b86-3d42-461e-88ad-469ca2b6a9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d517bc4d-bdbe-4a5d-9c63-fc298af706ac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90129ae-25d2-4efd-b5c2-eb68b8d358cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d14ada4-2e11-4d8a-95a7-ba1463978430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddb783d-cc0d-4401-bdec-076148e4309b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdbf2de6-775c-46da-8b4f-09db564cccc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b451a61b-6dd7-4a5e-b1ff-e1fc239142bc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabd214b-0189-46b7-96ac-5290da8d1666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebdbe54-a009-433a-a7fb-fbe4d3608d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74411522-b375-4ff4-b898-537774e1bae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcdde827-690f-4bb9-a883-4dabd2baa8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224793ee-c844-433f-8b66-e4c7165acdef",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7b3e8-f56f-43a2-a3eb-0eb96f346cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e1fe4f-81e9-4c93-8451-8efd5883fc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a866ec8-70b4-4cd4-941a-76b24e789c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a3e98ac-4614-4ad7-b984-b2ef4078133e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab78241-c97d-4d5a-ba55-e9b28eb7112f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc75f63-beeb-4b4c-a004-9764952f8a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff65111-5418-4544-90e7-2b9eb04608f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a92d9ae-7f07-49ef-b6c2-b7db52da5775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3bfed54-2553-48de-9ada-2cfdd2ffebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf2767-37ef-45ff-b1af-3ddb3c2f124c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0e67df-e629-4324-8eda-777eebe88679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1fc7bd-f75a-4bcf-96c2-ab9897578043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc65d57f-22c8-4e2e-9283-7aefe8efd592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab2a6be1-2d0b-40ba-b059-db806ae69659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b9edad-fafe-4261-b959-5e56abe8b5d0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086a95c-041b-4313-bf7e-777879774251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07a15f8-2d7f-4374-9aba-bba4997bfab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c30953-33c8-4ddc-9290-34c983f4cef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79391ade-83ff-4023-83d6-ebf5bb61061a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09434435-db7c-4fc7-9042-b34faa56f5b9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fb791f-5dcc-41dd-96df-acd6d6004d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2a9355-0539-4e1d-8970-ce915fe9b942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9dc900-71cc-4a97-a229-7bd7374069a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2c807a6-f02e-4819-8262-fa65339e3010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cb1a4d-ef1c-4640-9972-bbea8c1b0082",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd9b64-c035-404d-89d2-0645cb9ab723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b405fbf4-a1ce-41e4-b499-6f631ecbc447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4733d3-3689-48c3-acec-87c735e4fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bf9b42c-43c3-4680-acb3-4d97d40e9b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adee189-a6ec-4335-90ca-c068fb4f47b1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d47245-8511-44de-a210-06b8db8cb95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1237660a-5bbd-4e29-8b87-27e30ee79194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a082152-da93-4bc3-9758-fff438f44954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91c56a31-45f0-4c6c-bf4a-a69097e23e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176cbee5-865e-498d-be84-fc3ff8857d54",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688b7845-ba60-4599-82d0-b17243ea80b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183bf98b-dd95-4831-a95e-44d01c0daf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3b8017-b672-4ce0-a279-1bc1a6bcd059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb52ed9-0515-4fa5-9e75-736075c34083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1f1823-c5f1-45e0-8193-05a717ce1a20",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba44c293-384f-4246-ba04-756d18693a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce89019d-eb46-45c3-9e73-0e14c7e81aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6827f684-bb44-4f6c-9ca3-f4094397197d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96d5659e-4739-47f0-83e3-eb4f240eed7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6c0d11-7994-4330-a748-2c89b49a89ba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7870b8-2b0c-4f81-81fc-fc8aa58f54ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5faad03-bed9-495b-80c3-08b9dbcb8579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d568718f-efbf-4ba8-a635-9f2f5e18dc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bbf5665-0577-48c6-bce7-151ba3a5c033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b85a026-3820-4c38-afae-d75b7d70e5a9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9498f2f8-3c24-4bd8-b9bb-44fb73adfd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232fc658-b7c3-48f4-bf2b-b7b90b290053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57de213-5ebb-4205-b933-d6e1be9bc1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3cdb30c-fa8b-448d-b02f-11b0a66a85ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca74dea-d355-4555-a8d3-53ae6a89a825",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369910f-f053-4b31-8ea1-7e4005a722de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da74243b-1d6d-4eee-9216-c5f59994153b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e842b42e-e5fe-42f5-8864-38ac94f2af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "137b5db8-c0e1-4c8a-85d2-c88a14014838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de609df4-2702-486a-891f-bc6f43af04cf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd654f5-34b6-4722-8905-a80af71f2235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eed6d67-ba34-4b38-a23e-a39cf6ee9632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81131ea-c8fd-4606-a6e7-05b829799885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "022c71af-3d65-400c-a423-c2a6c830a3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2be767-58ab-40ee-8926-b2764cfed71e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fc4cdc-e906-487b-b4ee-4b9e6a1f841f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643d1640-2b59-4b56-83f5-69aa1a7d0772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5178c4f-6f9d-49c8-8d79-41ff27f2603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ec66199-7a85-49e2-b31d-d7f487ac2562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79642fd4-d10f-4d10-b753-9979b1f82ef6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0dfabc-1a2e-4190-ac59-0aa57087baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f442c3d1-b3f1-443d-b94a-2f91b538f396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e40b2e6-717a-4bc3-b544-80f8fab843d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "361e10d4-3ea8-420e-a8f7-1f9a1c47a22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4dc10b-25e7-4a3c-bff4-9b6c4717d88d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605a6a74-2b97-40fc-b5df-06f85919e9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b675670-9143-44fe-9e7f-b8c8614addde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf568f8-defa-464b-be75-9270d0380876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d47509-afac-45d6-acb6-7e2c25ed4838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5986277d-2b0e-457e-8370-5e118ca402d1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd98485-8e55-453d-ad4c-41c997eb9e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad8074b-de4f-4e49-902b-b27ca14db7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d712b4f-072a-4f2a-83b0-fd92aa1d49c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d62f07b-bc32-43ca-9575-d626903fd8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b065ce29-3f16-4625-bf77-6d78cd01e461",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b852983-582a-4b3a-8de8-705c26023eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582a52a2-823a-424b-b9d3-76c31977fbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f371187-9ddd-479e-8a51-ebac040323b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29aa1f79-bbc6-4727-8c0e-1e487e976811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a29f497-0f0d-4801-ac95-8dd0e9c178ad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3178fa-0688-40ff-a868-2e4c58782675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798e6ad4-e1c8-4502-ae7c-95e15db2e49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6755944-5e81-4bbf-8b0d-6c234c977b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5dd7324-6bad-4711-88fc-f2c9b87706b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444fd92b-b5b9-4d56-a390-775c5c8070fc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6011d96-1d68-4de0-b4c8-cdeb41a5d023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6096c7a1-e15d-4b24-a49f-ee9b3649b447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6797a5-73fd-46ee-b679-acb8b0866ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4317b5-32e5-4a22-a904-4106369b4f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79da2640-4ebe-4034-b281-fa1e3f776e83",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fade526-15ad-4d4c-9098-174d3548722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f930e54-1341-4b67-915b-d0a457fd5972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aefe0c-3a96-4c95-bb42-6d24da492c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a8da18-24c3-4b26-98c8-7ad392ecdd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf25c969-391b-4861-b5b2-9faa68f14c8a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31978b53-916a-4ee3-b0f6-3e8ef8ddc5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1833a341-c820-4ff6-98de-4ac9daa1478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145b2a18-5756-4eab-b775-581d8bd13bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "161830a9-e71f-47c6-9de2-5dacbf685d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea9bde-9979-4f8e-9b69-9daeb44c5807",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9ebb57-0546-4150-a1f1-10ba3c1ad1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69251f56-977a-4d0b-ac69-5f2949476e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16436c79-e867-4386-ac04-8ac333c178ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5797e3-efc7-481b-9d4b-ee89cdb1e45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6f8395-1811-48de-b62a-a3e72ae053e7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9308eca-36ad-4129-9f30-0fd8a967d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74066560-1869-4825-b9b6-b0feed936eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e714c5-80e0-4e0d-a1e5-b7862cfb361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0e70bf-ee67-4fbc-aca0-debd3ab8a31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712ef556-a57a-4bd4-b9c6-d561861206c4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d620a6-a776-49c6-9569-f2e7772d36d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b159bff-54f9-4bb4-9cfb-ae6ddf0124e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5675b652-ae0c-4060-8e43-49b4cfeab3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf70c770-c90b-40c7-9b26-c269e27e6f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dfeed1-404f-4efa-be07-100cc72e9334",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e3e506-309f-4c41-a847-6b4731f2fe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897f314c-17f6-431c-903d-7d6d98dd8478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94c45f5-d0bf-40a0-bc1e-4ded908b7891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79d0673-242d-4474-a67d-5b53e4ff8cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11169a97-d61b-4e5d-bfc1-728cb9a645c0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7db8ec-37c8-4ff7-9a08-9b9f873d92c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6990dc6-37f0-48f7-ac94-2f16fe4e99f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298be80f-a490-4d9b-9c91-3a3f76297610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2fef27-0047-407e-9b8f-db5f26576e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5731bcd-e185-4878-b126-b8f4679ec988",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13479745-c78c-4bc9-907c-ad4dea81754d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fa0be5-5925-40ab-b9c8-cb3c83b7cfdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2343ea-d902-4fc0-869b-4be8b08ae9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d7fdbe-574d-45d3-ac6f-8f71bc69c152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112617a8-ff1b-452e-a93c-f7da4cb1051f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cc21d2-0b01-4e77-a968-9ff8dff82eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a1b5b7-1f67-455f-b03f-ba7d962f4d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe440b88-5da2-4edb-b831-b97010fe6582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ad2e4a-7784-487e-8d64-9541f6267a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d68629-1d99-4d78-a314-5afbea1499dc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e3ac26-9939-4534-acbf-006850243ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4164aa-c5fa-4435-8811-dcc416eeea63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72452f-c0d8-47c0-86ca-4256018d0cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a043d2-cdea-4d5f-95c9-a01f693c02ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d06133-425c-40a6-a784-7a14237cb985",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495262e4-edcc-4fa6-a40f-9193f393637d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c4b454-8d32-45df-a324-a23e928bac7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc3c720-d228-4420-8df7-fa9f3a6f769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb7071d-e0ee-4b03-b78f-12c741eca23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58113a68-adc4-4215-9023-5c56ee19e880",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f5a5dd-87c4-4f04-a115-ccdc50433f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb974c4-c2a7-47c6-a467-847f73d389f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53873231-6ddf-4484-9cb8-5a42b9bacadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8a45efee-8f74-4fd5-9d1f-ebdaa6894589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b00a592-1deb-486c-952f-6064d4146c6d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaa692e-3ae2-413d-82f0-6d1038925c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bf47414-0fac-4b90-989d-85e48e189e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a0027c-9928-4427-a01c-97049cb0ffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9e2957-a15b-4ad0-a795-a7ca631395b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f095bae7-cce3-43f0-8673-cb04c0f5e052",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09520bd-eddf-4005-99e1-79ee0df25e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f5d9ac-14ac-427c-ac91-cd853a6baebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ffc90a-cc4a-4bff-a818-362ae1a8a753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a023250-267b-4eca-a132-0c5ed68d941e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef87dbdc-13b4-4aaf-beee-dd1fb0cf4abc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eab9bdb-3500-45f0-ab01-d87d7efe423e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee77f708-34ef-4dd2-bbd4-eae3a55d3c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6335ad-5293-49aa-a85e-9b1fc7a75f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6463a7-bbe6-4146-a629-46e5b4cad194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6a2599-eb0a-4a9f-ae9b-10837d43b9e7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ce92ab-fec1-426a-900b-eccc207bd349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b9786b-d929-4845-8d7a-207392d477ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609b5715-f15e-441b-9595-156cfec7d260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5659afa3-9e4a-49ef-9d78-44db44ebc7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421a89a9-d081-41d8-a080-78ce71d707c3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1552f4-f715-4ba9-a5ee-6afcdcf8bf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b710e697-1b1f-4d35-b39c-e7165e0ca91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9170a1ec-a502-44da-871b-86e56529b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e3ce0e-325b-426e-a871-9078df126823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d1aeb-da7c-4835-99cb-7edde4904300",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562d074f-760e-47f5-a5b5-060c64bf8a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a91917-a68f-459f-b6f7-0cdc6586575f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0276b61f-79a2-42cf-a8f9-5d00f9fa5712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ad0d6a-e762-49a6-8c8c-6960b236b377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b41e00f-7db0-4203-8066-4b8a887cc75a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490abb11-1649-4ab8-976b-9f3593550f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e103a3-7b5d-46ad-8c89-3c8a75a8c65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac80f77b-9c62-48ff-bf98-d04dd6d82554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "67252393-d7ad-465f-ab29-4921daa9e942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deebcf4-19eb-4693-91de-341d7ed50232",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5313e00-7d64-440d-ae4e-5ce915212689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d1e84b-e949-4d00-b124-4a0642530cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93e1cfe-579b-4c38-a587-51a8bd2751b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b894a44-381c-4142-a845-18d3b3eabc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2375f69c-ecbb-40ed-9e4a-fbaf482c4ffc",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8541eca-5000-4a1d-bcbe-74daa15d4f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098f9387-cb99-42c5-999c-cd5f680b3734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200d1fd5-6c09-4c24-aef8-3e05770e8057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8dc1b7-aebc-49f3-a245-c56c75d0057d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546bd882-384f-48ba-8dc3-2270c3cbb5f1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98bc19c-17c0-44f6-b669-659b4e8d4cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b166f43e-c3ed-4c8a-87c0-274ac66928ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71367172-70a0-47ea-8c6a-1675a381eafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7fa0d5-6a1b-4117-85d4-bbfd73250763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683b9993-acaa-4d80-85d0-377738ebdc05",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56de14ee-d3a3-4624-b967-fc4f3dfc6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1626399a-becf-494f-9c13-b214b2ea418f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609dc9d-65f0-4065-ac74-7e2152437a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd21356-f2b6-4044-b765-4fd53108ddc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e44fc8-d631-4326-b192-b6b7d3e827c8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61072949-e2a7-4f76-8fab-78cde0d4c4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d28e776-c9c8-4a2d-9a49-ae823f4a5424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767f41e0-d1e2-4f6a-a692-5ac90d4fe507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d81c4f-7689-4f5a-a7df-49c49175699b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1249fb31-1f2c-4157-8a0f-07b7ce32b7ba",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123d86d5-6324-4ef1-b19d-972c8b5e1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81671a47-5733-4317-936b-901d070792d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b16521-3abe-4297-8f16-7341ea210609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ada2cc5f-26d1-416f-9ca4-10540f71ada8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40884dea-7e24-4185-99ce-39f40d2ba190",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af34a148-77cf-4918-a279-1fcf8aa9cc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a1de1c-6f6e-4d70-af2b-46ccacf969b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f6f34-6558-43fb-9c30-796996532a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e21d8b0-1a4f-4b5d-9a30-c623be642874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae47cf8-0f67-45c7-bc9f-359e51a5de02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe0deb2-0797-4749-a821-11942b5cb03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225819ce-9b94-40f2-a6f5-f238a49af190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51199c42-0e04-450d-8650-86922bc765ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "639319d4-49b7-4e28-9e78-82f99b6d3e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e8f70a-eb54-4465-a1f8-7e43f95f3487",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e320a952-ad08-47c7-81c8-94519e91818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b04d2d-823d-43e9-8620-50bf871ad580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e577e01-c192-4810-a404-7c049c3f5c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "747985c1-0392-4ce8-a970-d808c0d4bb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd07076c-9697-4704-8319-b704550ca830",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864d7ab6-f3dd-4e62-9f3d-7df1297d5d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c8e139-41f1-47ba-b549-99515f2f87d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f58b2b9-1c00-4ed7-8bd5-1b8d9c2a8361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb2fd32-c961-4d84-b5d0-9c2ec2690bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e3505c-0eee-4084-8a5f-53f33a81c07a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a5c733-3c8a-49ba-8074-af5a9300e0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9354029-f500-4720-a506-9bcae42b3a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd0b3b-429d-4058-b648-e9bc45ccc28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cc2631-b0c2-46c0-a5c2-6bf0b8ccdf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2f4a39-c7ca-42ed-a0df-929ffa7ac81d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae83b1d-d134-4a50-90e7-48fd674668fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0755df-8b5d-48bb-aa93-1497f1b67751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0da328-7e90-4906-8053-b6ed814bb11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e681431d-79b6-4bf2-ae99-faa18c3f9ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009f0e67-3962-48f9-9ea0-58c141e31a53",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b122e2-b177-42f7-8552-35b3f9217cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f04f656-25b5-4d32-85db-b5377e8c938d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c77188-9f74-4926-8a9c-cde7d0a102ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0e9840-03e3-48da-bc59-81ced0b2f237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d358503-3649-4061-aa8f-9fd3aad6b883",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e67ab87-5b6a-4cd3-b345-08e5819294dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd9b748-0265-405f-a37e-134b9a404f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcb952b-b6cb-4e54-b76d-f0279c5ef3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3c196afc-663e-4bf8-a334-dcc47d486025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0e48c1-32cd-4e9d-8970-b19c165f9cff",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b85acf-1bc9-435e-aba2-17095dcea717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e434df-d4dd-4638-9608-2fb130a01805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d22827-42fd-40a5-817a-28e492b1db4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45fa6c7a-b1a4-4e40-870c-93a6c8e5cc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca11f4f-3a2c-4fea-8124-beac0d8547bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fafc7f2-5f59-4684-a47e-d59f1abf05c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d20fd6b-2255-4c2d-a4f2-8a68a8322203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30f9c3a-3c6d-4875-a45f-91df3c187485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e004ab-128a-44fd-a922-7e4e46141604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d3c876-af0a-463f-8f0a-0d1c94f671ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24210f3e-e74d-4620-a1df-51a949999e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641feaa1-02e6-42e9-a3df-c9959da64e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325d9918-c8c3-4e8b-990a-67dbd6565e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "84641f2e-a264-42ae-9aec-c0f06b2cf6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cb310c-4a23-4f66-9a61-b52634456e62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03be897-7018-43ac-965a-7d7ab3832cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52433d0c-3004-4eb6-9d1d-f489d05dc9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ee172a-e662-4466-bd4b-27d4b45ecb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "596600a2-e41b-4740-ac6a-0e1ada5f807b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f64111-b291-4b32-bdec-3314eaec7985",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc41fa6-5128-4428-8571-de68a491ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd156f4-411e-4ca6-8eb8-86400bdca277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f14985-7fbb-44aa-985e-b68b94bbfe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "48d5ebae-d3a4-4c5b-a45b-55a228694367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1913c95d-ea12-4f02-a79f-a6a59afdb802",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a666be5-87e6-4a38-84ee-e85a9e780538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17af96cd-b68d-4ee8-8d30-5a287f7e8f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df1eb03-bf6b-45a6-ae68-5dac29c01c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3118ed5-6dfb-40b7-b621-9ffddf5d40d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2411ef2-fa5f-4c2a-9b61-f4509a502d49",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5635db-5283-42a5-8d2e-5f5c66f4817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a41ef6-3652-4e7d-9bae-92c459ad29f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53a2ece-0740-4bf8-a496-dfa0d8fdf48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f65085e-ef59-44ab-a962-4caa9a352f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977ee6d6-8e88-4871-8b9b-f4c1199002df",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebbdae2-e28b-40b5-bf25-d0d86395e305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f11046-2124-4450-b6b7-fa867d72ebf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34c309-28e7-4864-a9ff-3196f4910e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c50749e-be4f-406a-9216-9d1f6d4c12b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e5712f-b6e8-4862-aad0-32c890168542",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa23f2c4-19a7-43ab-81e5-03c8a7cc7e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffca5b7-cfbb-44e5-b83d-0b63778f3e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb7ea10-f76f-4eaa-a177-f65a47c9fb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ea9160-44bb-49cf-a1f3-d8ed84f1dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c7f482-70b3-456e-a09e-f9a55f2cfe03",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8143b6e3-ac6c-443c-853f-544c18d9de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2efde54-ce79-44ca-a1a3-1f4cc2b31acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513fb406-0b2f-4b75-8d22-f654dc6aa158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e456a92-5bf6-4bac-8c45-10a50a5470f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d023f91-34de-4e03-8255-b96e243a1e7f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca51ea7-b2af-4308-9a76-6ae74cb28c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff0d037-1513-48e7-9780-1e7e89f6dcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8278fe-3a10-4afc-9838-f3acc8a45734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10ccd81e-30c4-464b-882a-b96a0820ed46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976d39e0-909d-4755-b2ad-9c4dce4bc544",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f00abd-c096-4690-9f78-066941a451d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265bfec1-e25e-40ca-bda6-13bdd6ecd706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54de6be-233f-46f7-b9c9-c3abf4effb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88271636-42b7-4c3d-af99-e5f1dbfe86b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23b18e0-89db-480d-b5d1-eda5f7e9db9f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5500c56b-eeac-423a-86a4-d4e22c42e0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1553dbb2-2c93-4b54-8665-d6b6d051e367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec534043-4190-471b-b8c4-c0d7ba52c140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "413103ca-5be9-496b-b144-a3e2c963a645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5a8839-0bc3-4c90-b81a-8c4edf2fe10d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37d9e98-6895-4ab1-966c-6453257c66b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de75db9d-55a3-4430-b500-6d0fc91e1e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4e6e23-01a6-4dc3-bd98-31aaf264f072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dbcb21-3ce5-452d-8cfa-1d002c37baa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd27cd4e-888b-4f18-9285-b91de9af197d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8a515e-b2ea-4293-88da-4f1f605c4723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacf6f27-c9aa-4dc0-8f60-6f330eeb722b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce49938-7c78-4c7a-9f1a-4eb313e6f02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b94ec8-be46-4bfc-950c-94c0cedffcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff071a6-b01f-4121-b7bd-8e68ae49dd20",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74df01ff-acf3-4e76-b90c-d259ed3194a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8117b958-710e-4691-a9b0-4a75adafbb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7426bd6e-2059-48b2-8c7f-a45be8bfe111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "222e70ee-ae01-42fd-be48-62b79966fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb8b87e-4dd4-43a0-847f-29b6910e70ca",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4bfbcd-b729-424a-a297-961965fe0173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271db35c-eba8-44d5-b592-64ef09339bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b8e9d8-f4e8-4233-bf1b-51e4b0ae6bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dce74c0-d5cc-4286-93c2-a1bf27d2713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7d2f27-c97b-4bb3-8991-28a4b55377cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae70d60-54cb-40d7-989c-6e5f7dfd8f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a8be41-5361-415b-96c8-3505c9b01f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ab4126-aa17-4de6-afb1-1baeca6b5f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2a9fef-4f4b-4b23-9d26-7794963f32a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f00b2b3-0abf-4815-8fe3-d46390c1fde2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22074c9-c733-4546-aa38-1f6cb036a723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c03dda-36f0-428d-96f1-a8e63845fe4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a1a66e-2181-4cd6-bd02-d981aae1f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1705b125-a8af-43c8-9f28-6a24f067479d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253a4121-68ed-4b78-b0ea-95b179b6d4a2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd2bc45-a554-4de3-81d1-3b780fd72086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed02ae0f-672d-4a44-bde7-9bfb34ec40ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4eb5d8-d9cd-4a37-8810-4de88c034b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a9e982-32a2-4740-894e-ecd5a32ea604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf54b9f-8dfa-4863-8a7b-9edfeb4d0137",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fec42d-8c6b-4749-afb8-c48f9c03ace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db9160e-d09b-463b-ab57-c9dce3fef00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861ec2c6-95ac-45ce-9d2f-e597b88ed90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2fe623-37da-4cd6-84fc-378e5bb1ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cdc9d6-8287-4548-aa00-8c0ebe5c8188",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d60d65-d936-4112-af50-d2dd1ef13ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1838e18b-87cd-439b-9a45-9ace758896d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769c9c9e-1dcb-4cc2-abee-cb7eb0da3ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7df6df3-b074-4536-b77d-973a9cedd1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b678f37-a423-44d4-8ff0-9a38b5e754c8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa9b58-0e1d-4abe-98d2-8af89a463c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db0abba-7a73-4cd9-bb36-80012554b7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e336f5e1-1a06-43b1-8bab-bcc661619c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85604585-7589-4bd7-9c97-0bd910176dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8a39a1-2d5d-44d9-9287-32fbf5f0f3ff",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fcd189-9ac6-44f4-ac13-4ca7baa7b972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306bbc9c-36aa-4ab5-9622-0bd24c1c66a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22d1c57-527f-4f0a-a392-f793fc728b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb0f02e-34ff-477e-bafb-b327dbaf04a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5732073c-d33a-452a-9200-b4422dcc0494",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fa569f-6a9d-4760-b6e3-2d1df242c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a5f563-d9a5-4155-b13c-a83d9ce1c935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834d1898-3f44-4212-959f-20a3c218f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "260d501e-190f-45f1-aa41-20bea0b387a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f76d0f-3303-40bc-9261-c726aaf30d6e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aedcb9-6d27-4287-9237-a84fba50cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c18473-ccb1-49c9-9fb0-2f6d3bfbc679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d59f0d-bfa6-40ef-8f16-0089dd79df36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a71f83-45ee-4c1c-bebf-1b791a1d778f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579ce182-20bb-468e-a054-92b189c0598b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597c1761-4034-43e8-a80b-23cbc6209bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291d9d5d-4832-4302-b80e-627ffd5c5b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c97d0ce-6c69-4486-935d-36498eaa39b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34e9a9e-1f8d-43b6-91a1-9094e1dbb7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02787031-c002-4371-8d86-965830e2ed66",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4227b7-42d0-4a97-82f7-782618b6092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d55fc2-774f-40c9-b783-8e387ca4c582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b78fb-1f89-4320-897b-e9b93d0b5d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09324026-2a17-4628-919b-d1984edd158e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec8417-90df-4564-ac16-174275a788e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09b4bcf-30d3-445c-8b3a-0911a7c9b016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998816c8-9838-4b0b-9f23-c9a539af0aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdcdac6-9cd8-48d0-a3bd-ccae40e7c0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15a2d920-901b-44c0-acc6-52d1f77e0a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e0b134-e6dc-43ae-8c0f-ccbfe000931c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d1a1ec-24bf-4b33-9fc7-23319ced92b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ade5834-8eb9-473d-8029-1c4cc1964ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46687c65-1d41-4611-ba46-300671130f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f419799-a972-4d15-b381-f4ce5b33d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b33c080-ccd4-41f0-a1e3-8ac46f0f25e6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8e5707-c43a-457c-87e6-dab8ae74803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4898c80a-182d-431a-a441-4ac121fb0b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f9eafb-72cd-4a5a-b642-09164351c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1413f9cc-b42e-406b-825c-1f5809f043e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53593ae2-8103-438f-9df1-0f5424a61a43",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d776ff49-b91b-4fdf-9ccc-dbfa6bf88890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42986925-a81b-446a-8317-c7be10bba3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b59ad0-1021-4441-bb99-28341bf30941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a06a722e-b06b-4b01-a04d-45b5c22a62f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb405bb-17f6-48aa-85d1-d6fc7a7a6a74",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dfd05a-0f7d-44be-9353-65c7a03692cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4838fe31-1822-4327-aefa-bf1588a93654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18805852-dcf4-458b-9d31-ec9dd3418da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd7944e-cee8-42db-b0eb-c2ae29923861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db101cff-5774-468b-8ca2-b4e939dba010",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3887f4-2ebe-45eb-a7b4-a0b583757dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba56d6b-bc83-4359-a8f5-7676423137e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3711b20-7782-45ac-aea1-2325f22a2981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3bac66-19c0-4502-bf9c-bfcbbad519e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5e598b-c41e-495a-a9f7-6a217da75728",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1923028-d9d6-4e67-83a4-d3438b26eddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09d97ac-5b05-4e38-b8dc-41731649f1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c93f901-299a-47f8-81b9-03b8abec5d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e61070f-926e-4d7a-aa6f-66922b486ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb2cdd-6c53-47e6-b96e-767242570e38",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb1bcfb-5354-4b36-bf81-7cee2e8310aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "db00505e-5d22-482d-a173-53afec9ba888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddde21c-6c33-4abc-9602-39198fad9425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc8956d-cd0f-4529-aeda-1c228fe87664"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "94401357-e606-4203-835e-cad75fa988b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c4cb176-8344-41eb-8189-26ecb255d351",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5720c6ad-7e3f-4237-9ed7-013fe871cb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce7605c0-6240-4744-bc7e-402113709e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb72a33b-00c5-4a19-b09a-11af1d3d7430",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a5179ad-9937-4393-a488-fbf5c0206403"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3c03335-afa1-43fa-9a2b-6a541c01b9b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7a76463-005f-419e-80a3-93a41805debb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70753312-bac5-4168-b54f-bd72b65d2746",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b60cf0a4-ea1b-4b7d-8110-2137d96ee2b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b171f44-f3ca-4865-8caf-9923550f9968",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4096199-c519-4b14-a79d-42fc00408638"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00e4e30b-61c4-472b-9b49-09ca637c747e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ded89eb-7f36-4c47-89a6-dba09b8fb027"
                }
              }
            ]
          },
          {
            "id": "0217f6e1-e239-4b4d-998c-908d5b658966",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2b02b5b-4663-4fb3-9863-847694a8eab9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "313d4cb4-0d13-488f-8227-8f9ae6808985",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62298bf-eb8a-42b8-906a-d0dd577d2058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3aaa149b-ce6f-49e0-941e-5724c57baa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd20e69a-6799-4e06-853f-f5c6b26e85eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed17990-6a80-41cb-af31-565a2d285f9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59663fd2-8f5a-4f87-93c5-cf4d029564c9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0dfe986-db90-4e3a-8fe9-3ad7d7c79617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fa12983-b51d-46bd-86e7-35be1082ede0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a6d184e-ae0a-4194-aa46-862912d3dfcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "165be418-cde1-4594-b07a-95cb2da39d4e"
                    }
                  }
                ]
              },
              {
                "id": "d1aca2d0-1485-416f-81d8-5403cbc5e15a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62e56008-0bf2-4636-847e-f98643f83cfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8643c98c-a25b-4df2-9b01-d8d0e70402a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b1ceb3-d498-4bff-b20c-7dc3363cd4fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46687c29-3482-491e-9474-d21bad92e0cd"
                    }
                  }
                ]
              },
              {
                "id": "da209514-48e0-400b-9e54-ab9f9c603615",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c111a515-613f-4a66-819c-ff4bdea714d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a2d3ba9-bec0-4d10-80bb-a8a49c46869c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91eacde1-02de-4d4a-9f16-703837b62498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2714ad07-7433-4d9e-b3cf-a4e9eaaa6062"
                    }
                  }
                ]
              },
              {
                "id": "23ac974f-c442-4857-9ad7-2d1d35fc1dc4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47fb3eb1-465a-4190-b47e-54ccf385e496",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b900e573-1e34-44cb-8ee8-a2a0088f1c3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e63de57-473b-47de-aeed-dd0c18e840c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "89849e94-b8a5-46a4-bcec-a9c9ebeaba78"
                    }
                  }
                ]
              },
              {
                "id": "13ab3302-2b47-4458-9cb2-4396fd72ee46",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d2aedbe-76eb-40bf-8cd0-1ecba3d15b00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f015ec10-6bff-47f4-b4b5-29217a804e99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e52ebb2f-2ba9-47fa-8319-c9bb0f0cbeb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "83489c78-15ec-4458-8949-bb4b470203be"
                    }
                  }
                ]
              },
              {
                "id": "64531ddc-b018-41ba-b304-68afaa93b45b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95cd9430-c565-430f-8d5b-a71b73d0ab5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "510fd2af-63d1-4699-a8bb-dcabfd512ed1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6957c5bd-98eb-402f-b08b-9e48e67b9eca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9870c7ec-43f0-4294-a762-6a4a4e52c8cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0311e86-ce19-4907-811b-03ec4a7cdb3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03d9a423-4e17-470f-90b9-1249f0520fa1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1629ef25-0a84-40e9-b0dc-0137e0960c8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "931ece07-82b4-4ac1-ae2f-3d9e8c0dd7d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "554cd15c-a43b-4d2a-a98e-c3d4790f7c8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "97c49ba8-d1d1-4a18-9d19-e5924427c34c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5dd42971-5076-49bf-b60e-3d5419bcfb70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "086fc4e4-0548-44d7-9f60-1ec6d71eb20a"
            }
          }
        ]
      },
      {
        "id": "3e218f46-d320-4ceb-bdec-42e83bb61612",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "93a47f20-a305-4b37-b339-e87863d9e4dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111c828b-62e9-4a84-af2a-e0ef0fd164ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67ecad69-3294-40b4-8658-0e1d0cb34312",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179a081-8686-4ca7-838a-a2704b537617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c7afe9-4016-49e7-b084-7c64f375e1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29e5f5b-de40-4252-a9f1-015a5a04ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53aa9549-e1e1-4dd5-8c86-c7145b60d54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573bb1d4-8e4f-4972-a0a1-f523bbbc1725",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c984bf3b-3269-4951-a4e2-35cf795f2d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6c6395-ebdb-4547-8f50-a1efc76af367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960c232f-bb40-4880-9f2a-caf8267d3630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85ebd80-cab7-4108-9740-4ac98f22ab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee4eba1-c258-4b9b-907d-779ed462f1ab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7729d2-5bbc-44b3-aeb2-d8c93711a202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c429761a-b1d6-478f-8190-fc835503e601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c6d06f-5bf5-451c-b061-bcb834c8273f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6526f10-7137-4ed2-b525-d4b86eaa6ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf32e8e-2438-4071-a13e-3918963ff901",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd97ff43-850b-43f1-b1a3-8738c6efad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4388a16b-1249-47c4-8d9e-7807ed101211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fc10a9-366f-44c6-8f0d-1dbb93f4f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a69502-4197-4b1c-a056-20b7ab82d936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dced95-c8b2-4345-b99d-104b50bbd913",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5861185-642d-49bc-b260-8f87a5aa09c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12d33ff-865f-4bba-a6eb-85efb5b5afa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68823ce-8b44-496d-a68d-56d7add8145f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "244edb3e-b8d7-42ec-b4ed-ae47972bce97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b44c4b8-106e-4aeb-abb9-13e602f1b8eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4235ffa2-b2cf-4009-986c-c8272abb3428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f757c7-6f05-490b-b7d2-e5145edaa09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81c7a28-8cc9-44d7-8087-b400e5c59b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40e46c70-ac55-4e46-9251-5edd3271be3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d93c54c-d8de-4703-9dd9-a3d0de398a31",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6177b78b-4bae-40ad-8a1f-9877eff63656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19536269-b081-4e94-b008-c6a7048b25a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7649b5b-1e6a-41a1-abf7-36e5506565f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d7f589-4756-477d-98bf-54085f535f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52aed2a-0f8f-483c-9ad1-fa231e4624d6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1294be0-3ba9-47d3-a7f7-f24fa3101cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae1a0a0-6a8b-4fe3-ba45-95185ef347d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a24409e-05b7-4ff8-b046-fc85efe61713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c3e61b-c216-4ea3-b0c5-626b089dc2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5c8297-aebc-4b27-baa6-4865ee080e43",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3894d056-0ca4-42f3-8377-da60fa4f96b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d1f624-bc4a-4eac-a97e-a221ec25d99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5dfa6d-097a-4f3d-a026-22db12b4ef46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1d8389-5959-4021-8e20-ee33caee84bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae7ae6c-3437-498a-8da4-a050105bc5b8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c162f60-fd99-4bed-a29b-d5709ec9da72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b027009-03ca-431f-ad8b-92179e30c2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855f4373-8765-4c7f-93d8-08b51334d55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0849e724-9a96-4cf2-aff2-af15a7358da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2ed4ca-5043-491b-b547-6a97849ff7f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe775f4-f756-41e5-8e9e-65f4e9840823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ecddc3-a519-4987-9fb1-b6ca9d74f8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e470e65-ec26-49c2-84d5-5d247047939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91233a31-113c-4b68-a118-7901d3e2acb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1e5a18-01cd-48be-a970-94913fba4f05",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c517ed5-8e9d-4cfa-9aad-b00ca83704fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b17086f-2c53-45a5-b9f8-9a47cf358dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b0103e-0fc6-4f40-b102-30276fa8aaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7908473-4f06-479d-9799-ca3d876c93b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd49ce1-5096-43cf-887f-1390000b9255",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204cef53-519d-4e59-9cd4-b67a5ecfce0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b818ce58-3f65-482a-a567-e924969f07d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c298bf5-40ba-420a-9f0e-b1b8f8ec526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b4fa52-8812-4380-b6da-2c1053c58a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62295d4-eaff-4da6-acab-95c97f81af39",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6cfed2-a138-4031-8fdb-0b54480cb720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7f22ec-5641-447e-aaed-b1000aae1dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a917905e-0b19-481c-b361-1a86cfd7882c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ceaf27-c804-4844-ab8b-619a0baf86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddd4412-a501-4420-a5f4-4bfb0be05a6f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e1ca75-a408-4fcb-b4fa-3190d808b210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c85641-c380-4533-abb4-1d85ed7db354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affef1e5-6839-44e6-b553-3cf2ccf77624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e897af03-d565-4828-bf1b-1beafc604f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8537ef14-e027-41da-9894-0e8c177f0ad8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4c62f2-9980-4f66-9f88-74992747528c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f8a78-2a20-4ffe-9660-87d805a94069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121eb0a1-02c8-4460-a0da-67d9b3340207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1759f1-5da1-47f2-856f-b84e2226ca5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca6051a-92fa-484e-beef-87a426486089",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90632a0a-77a7-4bee-af1e-d1fab7beac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f70c44-bf7e-476a-8bcf-8fd2c2a4c7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c8896f-902b-4946-ab03-554d08ef222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cacf46cf-ba4d-413a-ba5b-e46e60d1d20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3487a6e-15b2-4bb9-95df-ada349b3b08c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920496ba-4d83-4381-b434-fd0b07a32cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca3b659-cd23-4752-b24d-0082fcc4e5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f5eab8-38f8-42e7-83ed-8bf51b232927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb8ae7e-eea3-4c42-91b2-18f631dcb48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be6b75b-6e8b-4f65-bbe7-140fa51480e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3de3c8-167e-4ed5-bca3-63685f98de28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6f307e-645d-4ccf-b9e0-266217f6c071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5091e5c-8829-4c8e-af06-590858f9778e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7492536e-620e-4dd2-9362-01833013ac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60d4117-2039-429c-abbc-de1b55dbe82c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b387a07-7744-4081-86d7-5ce0257f40aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804fe791-15b5-4059-bcda-f19099b9b8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77e8b27-0f50-4c19-a604-fbe72be4f516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "095dd7b9-48c0-4784-86ee-e31130ed1aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49451284-aef9-4c9f-958b-3a06dffbf023",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f8cd3-02f1-4bd5-b342-d64f5f49863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1426d5-cbec-4a3e-adc3-38656f4acf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf3e0ab-1b3e-408c-a05c-3bb5e39dae96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b4c92a-c525-47ea-b84b-2a47af2bbccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0117df0-1356-4d48-95b3-75005199a1a7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df53c4c-9964-459a-8388-51c6de3e83f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a72ef3a-103f-4e8e-9622-45528b900e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27950db1-198b-4f2e-8d03-17e177d35bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "476aa43d-330d-4c46-aa3d-70123ff10f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7db146-ed46-472f-9754-f3d89144e73f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446f8e10-d8e9-46bb-85aa-28c2340458a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82cb04f-a832-43ed-8cc7-a75068d03992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e2a979-91d1-472b-be1e-ea7cb030729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63fe0902-9373-450d-b1a2-f35171fdfcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2b0bc-f0cc-41ec-a026-16f3c82c2d8d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d2b826-09b2-44bf-8f7c-e84ff1125849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4bdfc5-8273-4bec-a26d-c8f0ba76abc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f6b2c4-66dc-4037-b6f7-8bf90c74e36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "374e4390-ad7b-413b-acf1-4bc417cdbbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc484c9-e7a3-4539-82e7-15df58591ccb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdcbda9-9c45-4186-928b-3d4593df98cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f55b8b-c952-4701-89a9-39350cfe7e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe95d0e-f69c-4d93-8fb9-c174141a3543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae07d997-3e26-49c7-8f66-db3b50b9c5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d8e1a3-0ee9-45b9-b0b1-ae0c7df0f5e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc09ea5-c23f-48a6-9f70-490700f11977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382a580f-cc12-42b1-95d2-5e2fe9860363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013dc813-5ae9-4e0a-8a5f-71dd5dc0cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b333511-1805-47c5-9185-b8ced5ad3126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909e3f35-67c4-47f9-ad38-311286821c21",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a9a6b-c5e0-4991-ae07-74e4424c275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a624ab-a1e0-4cca-8f1d-8af4cadb5968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0917d09c-6314-436f-a04d-229da660f66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6658328d-ea36-4800-80fa-005f7fd18e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba88125-a6e8-480a-bf38-7cbae3d13362",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486db828-9822-4962-a6e4-4127cfd3bf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c5bbb7-2065-4189-86b1-faaf87d62c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ba0e7b-5816-4928-80c8-49352b02f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0085673f-821d-4480-8b53-25e2e60795b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38355fd-f7b3-4460-b37e-ab610973c527",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc9f9ea-e86e-4923-8c07-c3f9edea7e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d136d488-0187-4a28-a49e-cdd6446ccbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ada6c3-555f-41f4-937d-8a07de486b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac1e199-b747-4f86-80d7-e4c441c590aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068b5c7c-e8aa-4264-9b9f-59417c1ab87a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b53634b-2d5e-4d47-b8ec-2296bc89b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e971491-515d-4c98-a76f-415fa9d3cc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e71066-367c-404b-b950-24a036a17ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fd0c1b-8564-48c3-8c46-213989e41f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dcfa1d-f47c-431f-a102-8cf99a2f2e40",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a105bbd0-0324-4186-8018-a8a9b0bfdbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2416d031-f28f-4f9e-bf6f-9b8bce21bf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f555ba3-ef8f-4682-8816-b7fcb9dad745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9748814-0b53-4530-9180-40536446151f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4075b9-27b2-4ecf-b5dc-2461e7266914",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743acf6-3429-4716-99f1-51dcbcef0dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c23adb-fc3e-43c5-954a-675efcc477b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d310aa7-8bf5-41ea-bd59-49b97919ff17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdb22ce-90f8-4ff4-b999-7af6a44885d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a9abc1-fff6-45fe-be8b-140ffebe525f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac682c5-50b8-41b5-85a9-601879092753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b60592-2ab1-432d-956e-accbe983539b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0292884e-4ad9-4a42-88f6-b20bb7e6d195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff9c728-cd60-40b6-9aa8-8c344828e696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33789f7b-ee70-462a-b6fb-abf454ed6eaf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef7cb4-73b5-46c5-aedc-b985846e06b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7128077f-fac8-46f0-9ad5-55b68bd34bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d39f74a-e88a-48e2-b02f-f9b1649baf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc47487-399d-4ebb-8719-1f1145f67866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e826efb2-20f0-49cb-8a9a-b319c2053f55",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e61e726-d920-4c05-abb4-3d5acd9a20cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41b59c7-9cf8-47b2-b12f-a3e0ccfca73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26287cf5-6621-4de1-8b4c-a08441b50451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbac7bd-7dc6-487a-b904-16515551b161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd87f06f-ed5c-4b91-ab89-750faa8e2f11",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c872f6e6-ca64-41e5-b7fb-16163d7ada76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f6863d-b5d9-4422-8291-0155da325c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91056bc9-ab33-4de5-afd4-44f2b7bb2eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69267ca6-b897-4061-989a-7a90e91cf293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef35381-8822-4dce-95d7-4ab2f1e5e9af",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a210f38-5bfd-4150-a8d6-ea5be8c43001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2720b94a-438c-4275-93d8-4b3293dcd28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9194491-308f-4ad8-8e95-9698d89cc00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f184a13-fa88-432c-9ae7-601de9ff231b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfcde37d-5eb1-4cef-9b64-4384c605a397",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfb48726-23f7-4805-b50b-018d2d6b871a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03330ee6-aed9-4c9a-9213-c267d1a187d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03a97eef-80d3-401e-9279-41acd0ee0dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f5cb1-5e86-45db-aa7c-dd4841c39aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b714f958-5797-45a7-9fba-c996d06e94a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c04ec5d-098e-4c8e-aa13-be4afa7881e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbaf8bcd-2ecf-4fb7-88b6-208b2de11c3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c34bca7c-77f4-4e1a-8b90-b307fdd6024c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea985c14-493f-4c27-921f-b03dfc4026a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0333459a-54b6-437e-b386-b223571661fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6bf7ae0e-0373-4829-84ea-24925efadbae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d130cb4e-fe06-4d9b-88aa-309d778b3d17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6857dab4-ccce-4902-a758-f56edf9aee2b"
            }
          }
        ]
      },
      {
        "id": "c26423a7-2307-4f63-b4d4-4a845e5b57d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a7cb880f-fea4-4492-ab0a-8ae7c1518b11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b8bc5ae-df9d-40bb-8c13-7df34072e420",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c37fcd5-c37e-46f3-b807-2f04bf3885a0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146a8aa7-51ea-48cc-8ce0-24cf83ba0dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47136651-2f40-450a-9348-f3e12696bf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1140ef-6e8f-4148-b40f-7a95c72fdef2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514f95fb-8699-4a5a-b2b9-12d90bd4b5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41390231-0bce-4628-8683-5c715c0a1460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922c8219-d29e-4e13-bdca-35b0bfce2104",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac43d96-7659-4a4f-80d7-7e9af6bb7ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531164d9-4948-49b0-9c6e-47501897677b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d4920e-cc3a-4e2c-b84a-9d72d638976e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990c59da-bd91-47e7-b79e-eabe60b972ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bea1349-d585-4d4c-a68d-ff6e3addaf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab701211-c1f4-497a-8369-c41471cfd42e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a82019d-7ea0-4410-8460-3943c717abb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124aaf7a-8c5b-4f41-b339-f29fb4de04f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b76e2d-fe3f-41f2-b4fd-1a8385a95e94",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507761a5-f6c4-4a11-aa8d-effab8ee76e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ccd46e-3c6a-49b4-b316-e37500d7deb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30d6d0e-bd9d-4bdc-b43f-f3f51e370a3a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2c9ee2-07db-48d7-b893-5d3eb3f4b3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3602b526-786b-489e-a9e4-f7372e121c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd3cef3-59a8-41b9-b069-20c4354e12e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15cd0bf-8d83-417b-9638-2cdf288f2795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412adac3-1a43-4f2a-bec2-a130230c8672",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c44f0de-bad9-457f-a9ba-fdfe5594a861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e490c6-8c4e-4a56-becb-07df803614db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3cee8a-536a-4fb6-8027-44a778d8d8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caeb1311-377e-437c-8550-b92559974b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa13667-95a4-48f3-a17d-7f21bce4d6bf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5762f910-8d08-45d1-8d51-f26e52669823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c61789e-96a9-49e8-949b-431a76791758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1802d7b-c0ca-44d3-ae53-9d8155ede625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fe02d6-8a31-43b4-9ed1-1b79390c92dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b3b81e-ceba-4a40-97d8-a048c14164b8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6be22c-573b-4b0c-b300-5d77c80f7833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a075eb6-672b-4d2c-b3f8-86c7194f2bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec828250-7c9b-4d23-b104-4e840642accf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c574a4fa-f363-4dd7-b223-34ebdb964b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bfd42e-7126-4c1f-9eb7-10fc7072d205",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7136c1-4f42-4826-9054-20a1527f1eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83d3c96-fb24-4927-929e-51875c3b8bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5516af-639e-4de8-a631-8b6a0d5ba162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c1607f-dab2-44ee-a6f8-41466607d377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c81a04-e279-4bd7-a733-6f393dc5d9b0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013c9abe-95dd-4762-86ec-9db373dbd1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c455be26-32a9-4b49-bfe4-d40f32b988ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15a36e8-84bb-4637-a15c-e7e6a79d5909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074c4008-0a5b-4030-94f5-c5f4acd06415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8968951-e902-4643-b4f6-12956b9a46a1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d80eed-00d3-4142-b139-2687f8f964d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273cae75-e1f3-4e9e-8626-83e97c355915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431de630-058b-4210-9868-9e6849193a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a4928b-5e26-4476-84f2-4f4040a4164f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8285120-334a-48b2-9d32-044acd341310",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ce8428-0f52-4bbc-9374-22c4a587820b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae471415-7a5b-426d-9009-0486e047bc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fda829f-be58-404a-a039-2202cb3578e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4eb239-c23f-4fb8-a42a-4f2233a3a09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0780f8d9-0766-492a-8754-0862cd18cb8d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3303ca6-c8aa-44e3-bff6-b00bad828df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4948356-f533-4a8a-b73a-05038f5d1768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3e2a3a-0a7c-4eab-a592-969e12d4e74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3917ae1-9c50-47e8-96c0-7d8abf88b715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cda6ef-ef20-447e-a2ed-aed23bcbbd3b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a12221-aee7-463f-978d-305877e196da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a25df6-3a9f-4a29-9e04-4a0d3d2b8f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e6332b-603d-425e-a79a-49ee7de37f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5d5c3f-1f47-45d6-9552-1b4a2fc2cb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2390801-e24f-41f0-9211-bb08b59066b8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816d866b-075b-4134-8516-e400975cc0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2252f81e-9d86-4316-9b8b-e06c33518b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e805263-c747-480d-83bf-954df23005e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d23ecc-1d33-408a-84dc-3dd2601483d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a06020-d59c-47f3-bb04-0366177bdb80",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474dce0d-b89b-45bf-897c-7a837777c71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f108843-1e0d-4fb2-b920-a7f880e07234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5866c5-d85a-49b9-bb0a-959ab1613a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb28931-5573-4228-a051-d7c23276c3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e25a8a2-6d0e-4e77-ace1-1ec9b260c59a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c309f2-2284-4893-8b51-76e7cbc48f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06073451-d542-445d-9adc-ab5c147c4a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14190ee6-9edf-4d85-ad5e-d5172524d5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c1aab1-b581-400f-9e84-d7f5f283bece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88e206c-5487-4fe0-a698-49eb13eab82a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39936dd8-84dc-4d4e-bef1-a521b520873f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30505043-762f-4686-8c70-ae6a574fca25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb518f4-1cc7-42e0-a684-eefa2a2468b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e4fefa-4539-487d-b136-c4131e8b99d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7023543f-e23e-412b-81c7-03a22e1aa2b1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07bcca1-960d-4b53-a4e4-f386627cf892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba6dbe8-b0c3-4ca0-a1bc-d4e9477ed018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc86f66e-edb8-4924-af97-170616a522c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c4ed4c-27a3-4695-bf1c-910e099dc9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e942944f-bfe3-4f92-8f26-25cf71faa23f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34b9a9e-ab48-4b3a-87aa-f10b9d1f07b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a258f28-18cc-43e8-9558-d2377d20e506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e28acdf-9120-410a-8cbd-89b029422f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb55ad6a-34c6-4c5f-b26d-6a0b4b8b4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b18fa4-8047-4229-a96e-6da8657591a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2efc4a-ff86-42a0-ad97-2c3915dbaf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3fdc1e-fc88-4e68-b422-b0b41b3301e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0b2659-473b-484f-b4a8-d6b1207a2bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e51738-063a-497b-9ab7-21353a7fbd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18beffe0-d1fe-4b05-84f6-e1610b9ea302",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe24ee3-ca9c-4134-9df9-b40d375ded23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d942bca-e798-4efa-ab65-bacef90ff37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc99ec5-73de-4550-a5e7-178103bdb4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a9f79c-8c0d-4403-8688-2048bec1813f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d59fab2-6e1f-4ead-87fd-dec492234ff1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0c6722-5304-4e11-bd03-39b2322ca037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef5c8fe-de78-4575-89b1-b8d83d0ee858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70067124-b46e-460b-8b64-495212fd05e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70e49ae-4e83-480c-8abf-f61b193019fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e954738b-286b-449c-a692-3e2bf065468c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c797eeba-a811-4860-9ae4-6f7d679fc4ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0cc496-fa12-4ab6-bdec-0a0da56ae79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf14789-e999-4fb3-976b-dad719a329bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe1428a-251a-4be1-a1e7-127092c4873f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f22cf05-0f58-4df4-9f2d-0c0cd036f5b7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b142e1d6-dfe4-4dc8-afe1-07aa7581dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05cbf52-3471-47b3-b808-bd9438d4005a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316f2b4c-e61c-4711-a3bb-728d96c8196a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcc5396-1e7f-4ffc-ab81-a87c8440b833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade64012-b399-4fe9-836d-adb6cc8e1066",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66c019a-a4bc-43fa-9563-4da6d5175a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3304fe-8c44-4239-95e3-2e691d353b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74058e-a287-4951-98ce-46e3a549a98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d21ccb-a959-4d95-8adf-089f128fcdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec520af-41db-4b4c-a7df-5e075c4e80a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cba8df-1766-4be9-a6ec-09922465555d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b6841a-fc27-44cc-874c-4b62599d2661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa31afa1-1f50-4234-874a-4109253cb211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecba8eb-2226-4af6-92f5-7ba03073f034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3890c9cf-2e3c-48e2-8621-ba751b51b07a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456dabc8-84ce-4db6-8b36-8f0f19eb39a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "680504b6-be51-4602-8aa1-20f4d7f49b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465e7b8b-a3fe-463e-a9ee-27ab606f1976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d466e6-16b8-4ecd-8cef-520cfa0450bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62001de9-fc6d-4310-a6dd-180853f0d9fd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa456614-6005-4d8c-8bed-d4a2b2e44281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4075d40-e8a9-41e0-ad3b-59f023330bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcd76df-f18f-4def-8df4-32e22ccd77fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f67658-ac93-47bc-8938-2d229d34d2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12582ed0-8250-4ce2-a9f7-51a828972e28",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e016426-b443-46ae-9ead-3e8237af2ac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a1f6b33-7df1-4ad4-a667-b0f7db252ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db6305e-083f-4815-bb1e-07bacf9434f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ccc1d8-04b5-4ff2-aa91-ee862bc9842f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eda7aa-4d4d-495f-8d63-9c602246f565",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39de1f5f-c524-44b5-bf0f-10eae9946d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45a975d8-db77-44d1-b772-196ddcc0c911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbb07ac-451a-49ce-85b1-771cbf53699e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0c2443-9466-43c4-a035-5ec653a186f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147358f5-9cc8-43bf-a6ff-58ad1a8f8159",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810562dc-961d-464d-94ef-f1ee7128718d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a1df24-b105-47d9-a595-be435b044eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9d2a57-5314-4e89-a524-c426b9744f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582d3783-bf3f-4fd5-9725-86266027badc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68911648-93ca-48e0-9b22-821a80569663",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f82761-f4ae-4ca0-828d-3d85f557679a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c970ec5-0544-4e91-a729-1bee44dbbf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb564910-9487-4dcf-9728-fba41a08d79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e22af90-0a99-433b-920c-0b03f50e2d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2426e138-f23d-4539-ba6f-bfc25274ba95",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5563c3a7-fabe-4c33-ace7-15625833bc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ebdbb2-0575-4a53-baff-047e93c46c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0b908f-5789-4343-a9d5-c7865660f71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e477b39-0d43-4a31-b135-00b890c83220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547dacd9-6ebe-4608-b23e-f7fb49bb6653",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53544a9-64af-47ec-89a8-b90c909c97cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5d3a9e-3851-4be5-8cfa-0d617359448e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df9ae00-01fe-4f0e-b245-b5542bc740ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7105975d-49b5-4863-ada1-c18fe13ffcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768fb571-0626-4273-a763-fcadde36c922",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a01cf-bb24-4bd6-b7a2-5dedf4fbe084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7045c2-7c69-4312-b07b-a82ef4d02ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f250032-3403-4a72-871d-c6a127187059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4249b2-96ac-4f3c-b2f4-8dabbf99a0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1395b-b5d6-436e-b24a-3d4f078c7d69",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9f9e7d-bef2-4e4b-8692-d2046e81c32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec7eca2-dddf-431f-9127-ed2568b8f380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d0556-9c38-4473-928d-5241ce364fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3830c676-990b-4a8d-8bbb-e020b7c5e043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23ab588-bf38-447a-984c-ed4da36c5b07",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e41ab-976f-4fa0-aa68-5bf676fd9e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767149c8-ed46-4e31-959f-29229a5d3810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce69584a-cb5c-409e-9840-9814567b816a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a4dd48-4dfa-4692-a3d0-3caf3760b6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e332e50b-0eb0-4c14-b393-843f491c887d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08c88fa-7e4d-402a-af9d-8ba784b60417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a353c91-14ff-4d0a-8fe7-f9fea295674a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27c5e47-88e0-44bf-a4fb-a1dfb5d1c40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddde0b6a-963c-477c-b7f7-3498e8f3410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d2dd8e-fd20-4621-9b65-86981efa4f0c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400af40-d213-43a6-9bba-ba386cf3c32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd97e6f-a603-4f48-86e6-793d8d77d28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879859af-f004-46f9-9e86-02b7746b3d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d9d4ed-9715-4e0a-bbbe-b68014f7540a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca82e2a-a02b-46e9-a592-1faedeb310d7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4e0d58-d412-4b0f-8df4-1c13b9fddaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7262288e-8f63-48b2-b0bf-c94da8def052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bb5347-2ead-46ef-8920-33706a7ff101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2542f40e-7126-4222-934c-b16be2b673eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f09ce22-301e-4757-9077-2d162e961454",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b8d2a2-e3d0-4448-8e47-30bc0f2ed3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a758ad-0935-4a88-b3c4-28c519b70a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0a677-0b63-4a8b-bb9d-7976ec6a4858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3251ba8-db36-43ff-b3fd-3ee25208dcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a7092c-c3d4-48b9-8036-ba0b31a8b444",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd550a-5122-43bc-af4e-633b154060b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc16b2b7-f180-4b92-b922-c9f97e9ead7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc09365-5318-4a2a-b5c2-ee41cd6e2f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6180ad-a3cf-4b70-92e9-0858a4e696b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9332e5-9ec8-4a55-8d1b-aeda8ba3816c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c49748-22c0-41dc-bd9d-3e5b4c5e8537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b60d80-bafc-4be6-9978-ee940665dd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b1451f-2b15-4b5e-a948-b197df0d6d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3389bff9-3326-4459-bfbc-034782a4c7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db488858-595e-4f31-a838-93e95cc4bbdf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa65558-67e1-4c72-8f9d-72cd326e27e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423928a0-60ef-412a-bc22-1734808e101b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c2b1f5-830b-410a-9821-57bdd9ad4305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538c9fd0-f54f-4b72-bfd1-c7b16d373f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5cb014-6c93-430d-8bf3-afe6c3eab73a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce96df3-1cc3-47a2-aa5f-f93bccb59610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5a048d-69f7-4c13-b414-e2b693c70cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdadadc-66f6-4353-b941-2eb7f8541f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b90c19-f7a5-485c-9372-cfb7cbe725d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e47cd73-671a-475b-98cd-f155aa9a5176",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fbe6ff-40e4-449a-97b4-ae3cf5a01c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7551c5f6-c80c-412f-a85c-b1bfde82d8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9188e7b-179e-46f3-b403-1398f1a03131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0858a345-3ee1-420c-8659-e8fb5436c9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54b3344-0eb2-4858-aaa1-bc468a51c277",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302c7046-7ed5-4eb8-a2eb-7d57507ff44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57345ce9-22f8-4ad5-a064-87809e5a4bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8910ecb-b271-4bd0-96c0-da33859dcd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb812c0-0b55-47e3-a3b9-22d3faf52f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0dd5be-a864-4c67-868f-c5454a5acfce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d31d083-278d-40ab-bf4f-f7615b5332e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7931455f-ca4a-4715-8e9d-3e7a560389a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390b9e4d-e158-4310-a331-64b2640c7e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03deaa98-de33-48c9-9123-15d8a3a20adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f5949-cb9e-4fff-a855-1b12c6037030",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920eb5b3-c972-4224-a7da-abde79fba9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb2408f-4adb-46f1-a1b5-c61da4fe6304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3755482e-4b91-4141-b2c0-07cc6e383784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658a5fa5-7a08-4ac4-8fe3-25e3581fbbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17815560-9cdc-498f-8061-a071c7d97b11",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bb4c8e-6cc6-4f11-bb1d-ff4d2dbdf5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1688c6-6887-4bcc-9dd2-c868240d4ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af07ecd8-9791-450a-b140-782ef2a3d673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515751af-0c16-4db8-b389-f148adf787d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c60eda-7d5c-4cff-87ac-79a5a6bcbe9a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf06780-487e-49da-bf2c-49fce5cf9f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b95ede3-6d52-47f5-a4c7-af74b1d61b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969a9710-3a19-42cb-8ac0-9fd0ddd30eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd836a5-4fa9-4f30-950b-e17a982c53cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed061943-1cb0-40a9-98b3-0235622abda0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b19a47-32d3-4dc0-97ea-8cf0187655eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee025209-2247-4e11-a1a4-ecb06fb59d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a9ffe-c1a9-4785-936d-4f2ae13532e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98ac64e-8f0c-4b37-8399-5b42429cad77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad18f2a5-0fc0-4b8c-aade-87b2a36e609a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37af52dd-8f84-40c1-8383-b53e92eaaf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5635880-20b7-4ac7-897a-08a44d1adadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fa46ed-b5be-4bd4-8c84-15a2966c8d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe829d0f-d6c6-4225-8538-d23d2c48e8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ddf9dc-d2da-415a-a631-c21e9099d690",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8524c0-2904-44b5-85cd-7a219ccf6978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aee2f9d-bd4e-451f-b8af-0c51219784c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583f5c8b-0239-4dc9-8cea-7c04d14c0423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc9c486-9c35-4575-930e-96201a12ddab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a6dfda-b226-4c64-888a-9233edcb4851",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbe78b2-5b26-45cb-b6da-046df42e5c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda2ed1e-e5de-48da-9ea8-df727750e298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a1b6e-7f72-43a1-9985-a3e1e5400a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95405d7-c5ab-4316-8548-61340e3f4cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97a8d98-cacf-4ff9-99f2-04b81729dfce",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821aa515-5ae7-421c-90de-ea6b3fec477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ea82db-7cb0-42fd-bce5-8f5e89289c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389e07ef-b7dd-4f15-aed0-5f24f61c707f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7103b982-eae4-45d3-b2dd-e07d7cfca2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bc2d73-f5aa-4938-af6f-70853df45a2f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc0c2d6-dd48-4ea6-93c8-f87156e834b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1397a204-dd7a-47da-ad91-5f58408ca4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d0b8cb-5165-4c92-a569-c7b71780da45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b299f4-60b6-46e7-812b-31f06de11adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc7bad5-32e5-4119-aa77-96c5c3a4a2c3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2b4e05-5a86-450a-9d51-0660cc827671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc37dac-9521-4124-bb15-1148b289c8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4613d84d-8583-478f-bdf2-7fa1c2088fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e275daec-87f2-43a8-807b-abfe000cbb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbc42e3-8986-4432-a89b-bad2a33158bb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aab15e-0a8c-4a6a-961e-d8aeb1443dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aab8c7b-0904-463f-962e-8d3c4d3ea140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7680d054-d5db-4991-a6ff-85ce048180ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd6f89f-a3ee-4e05-b5ec-d0a1ae1f5ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788fdab7-3a3b-41be-b5a9-8d1b04bf8596",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebc19b9-ac8e-467b-b33e-bd1b7ed9fc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884ef50c-362f-43ee-b1b5-98fb96b1cf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de47b02-4028-4585-b995-2356e1b4496f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3f43df-bcdd-48b1-a4c6-ff8a9fdcfb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5135c896-d308-4b9f-999c-0b182390932a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6951442b-91e2-4c30-945a-fce6dba4a780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb13c98d-6e7a-4e1a-8333-df99f8676807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a9e832-333b-492b-9be2-7bebe63fe04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de401192-1aea-4396-a362-61abad885cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8875664-8362-43b4-bcd0-a6122b1c6107",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e88a39-2ac9-42ce-ae72-e6098e6f3727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155d3fcc-9284-4440-bcb8-93c55292cd02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3192afe-4416-4adb-9d27-31d1ff206f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae3f748-25b5-45d8-ae06-e17dee854fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6908cb8-2b28-4ad7-88e9-4ea20325b2d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02911a20-0ffa-4cd8-aff2-8407b858f09f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45cc69c9-2823-4959-862c-12e0d5bdb192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d535af6b-04fd-482a-ba42-b8c408d1233c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf5e08b-db3b-42bb-9fec-4d4220ce505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9ef509-05bb-4841-97cf-1b911f920434",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6555937b-c300-4b5d-b4eb-211111d102ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "947a1123-9f40-4348-b8cc-0503fbb09757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce916e7f-b0db-44e5-9657-38447802e772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfac960d-4f36-4e63-b97d-727fb1f5b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09dc674-174f-438d-a855-19607761fcff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf4d74a-7aff-4331-9984-f70642f733c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775e9bd7-ae74-41b7-990b-ce806ef6c109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e52abb-d253-43a8-80f2-f1c145da70b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7678fcd-0f41-4aa0-a128-212de8d405cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149d1791-9078-4455-ac97-5efaf5f9bd6f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8f5105-eaa2-4b19-8413-29ef3caba434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83759461-fa8d-4124-a375-8d924acf1b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74ba35f-6bde-4862-bf2e-5f17d8a9ed6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1225eae-2e79-4c30-a9b5-c65282036aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b24d8dc-85a8-4abe-88e7-5b8887d68311",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d493be-922c-4c0b-abcd-b189da289ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51404958-1b7f-475d-9d0c-331f41de5012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f73d76e-99c0-48a6-8a10-b01b396644f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48e0659-26ee-4307-87f3-a01f5f49a775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e4480a-d62f-4704-99bb-d0ead4c43bd3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af720b80-f8f9-4c49-8e80-587902417f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69599272-c6f2-4a07-92c4-3554f2f09955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612577fb-009d-4f51-b3cf-413c052de03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bfddad-83af-4f69-9499-c937cfdb0d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6e60ea-b8ac-4516-b7c4-fe19714dc24a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ea92c6-41ce-4b47-b370-ddcb503edd5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ff613e-de74-4583-a0f0-8ea49dbbac69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc5ac23-50ce-42eb-ba6c-b99a27561f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612730ec-6546-40cb-b61d-2f4ba66b27cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5947c-8744-48f0-89c4-bcac56a707ec",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba1eb2a-14b3-42c5-91c0-dd405df3684e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0295a5-c693-42c5-a201-cea230e788ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f4cd18-c102-4d48-91e7-1d488f5c277a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b7470e-e734-46d9-8954-f5996c8648a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e0570-b27f-4c31-bf8f-719ce78a30f6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf802432-6acd-4c9b-b407-ed41555a58e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993cc2ae-821f-47ca-82cd-e0e72c8ba514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1183c82-b8c0-4374-ac97-6e657c877b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4d6a0b-7222-4a3d-b4b6-c02f7c45f948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab2fa7a-ee86-4ca4-8970-297e8f7e80ac",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d491e12-e6b2-4e86-ad67-633dd8bc5621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421cc8a9-ea4c-4c92-8a1e-17a6c58e981a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfeaec9-e5b9-4cfd-b15d-037c99a09d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe24542-3158-4cd2-a002-e011447a6219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34efc802-9418-485d-9fbb-e80e4cb11406",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7716a8-aedb-49e7-9d26-0f0e3566fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b6eb257-9840-4475-b0cd-693ac5221b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45de40f1-0eec-4937-acff-70153482314c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837235b5-c2eb-4708-bf90-db209d11a913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bc19ba-176b-4117-b972-f8e95b3fa692",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0e8709-4228-4b09-8883-7072f1242005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "491eab7a-9c6e-4804-9782-843c4c0583e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5e4e75-de16-4cce-a0f3-cdcf5357b146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fe4470-3b99-40b5-9444-dbadd10338b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b3b016-1108-4c1c-82f4-83cb6f9a4179",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70bb185-a8dd-4ac2-8881-07994a0ef30c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f42fd63-b965-4cfe-969a-0a7114ff96b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36195fc-02cb-404e-b624-e892e18c7226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2637389d-b662-4174-a173-6eea0ba9dfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc2b158-9ba5-42c3-9854-d9901b729f83",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2e1a23-6b3e-4558-8578-e11cb2e1ed77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92212cf-9515-4821-9b95-210236eea588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b822d9b0-49a9-499d-8600-a23e4872c529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe53451b-5f3d-4c9e-b57e-ecb24299dcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c8ec2-19fc-41c2-996e-6fa534d52bb2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb90af8-18c8-47f9-9c77-d448ef3bc0fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f119f2-9a5a-4a86-874a-e8d4574f6b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0539996-c153-4b48-b1b8-12d5ffb4553f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ada3ac-34a5-4c60-99f8-1094e2eaa55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f62f3e3-6447-424b-9298-242e7b756f42",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ecc566-ee03-49d0-b8d4-0a7a300721b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72df007e-5d7d-41e0-ae48-3679f4c3e43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296769d9-9608-4756-bb41-b81377954077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3f0003-2996-46f8-a1ea-db381a8136b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2f6eb1-9e3d-4496-a7f1-add4aee17ed7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe4f0c8-4e02-4f8e-a7a6-cfbb20537319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3a423d-016a-45a1-9b97-f8a812400ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daeb5736-76d2-4f05-80f6-9870493e96a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a52f28a-be63-489d-8677-e5bd4f545644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29782de2-c1d5-4c10-8a3a-3c2dce7f94ea",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e9c8ac-4319-4d4a-bb18-2cbc7349a538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f6cd20-0d69-480a-842b-93e4147b0aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40167b5-e3d8-4609-afa7-9493213645d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e43595-6934-4058-91e0-3584d35e1b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6f4a32-dfec-4ab3-9e3c-6454e95e9eae",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719f3a0b-2901-48a8-af2d-7a4dc94cfe91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eeb3a21-8b89-4b37-8e0e-7657621c50f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605745cc-7396-4884-88d9-c5b7a4d551a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d074299-1c7a-4afe-9aaf-6deaaf400dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611c638-e454-4075-942f-2af22bf3f47e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9352a0-7511-4372-987f-760734c91232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2628b525-3968-4732-b1bf-ac075d03f71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebd29eb-9567-4c51-8a1c-d429ecddb129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644ce07d-72b0-4736-ae56-e48488e688c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50949ff9-0f47-4dc2-a92e-a38ab111cd2a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd21457-12b2-4fd4-a328-7c428307b46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c929024-e4e5-4eed-82bd-38bf0f6e0d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8affcd-6dc9-4f46-96f3-a611ab639b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffb3bf8-29ba-4fb4-98c8-395a78c2df25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c69d9-ec3c-448c-85ac-07b6bed16ca7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af2844c-2508-4774-855d-21a4b921830f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60bb575e-e947-49af-a577-aedee95658eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17060272-2635-4772-892a-e7558a75ad2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56435793-fb67-49f1-84a2-7594caf4a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a3a754-b982-4d84-85b7-522d3b85a66a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5043d74-d286-4a20-a552-023dd26934a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8e3ba5-9f13-4d53-953e-fd7d71ed6435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d807aa-1989-4241-9754-c30e16c54149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df41a6e-e98d-4a62-9099-204c58d2a49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100b53fc-57b5-49df-a3a7-e53fc1980d1f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7f3aee-ba93-474a-bea2-604883675df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d2ba97-d516-489c-8a66-e30e0084c437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b339b24-918e-4aac-b623-294f09c8ae8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6fb215-c737-447f-ab55-58a4ccb3057d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d011a059-eacf-4434-848c-392dbc2a0a95",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef6a15f-4d56-4e05-888c-29d930ee68dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a524b7-9d65-411a-b463-f6e1842eff61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4104c1-79ea-4bc3-8c33-bd982dff31aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da90a89e-94f2-423e-a49d-e8f90534aa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd3022f-b972-4dbb-aeff-eeea20eeb3e9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28279a56-e78d-4931-9c35-777ff66cbacd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4bb47f-70c1-429a-bfd0-c7e5f40a1fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3196a82-11c3-471e-b79c-c5a36fcd26ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e4e7f7-2c5e-475e-ad9e-550993689359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164b7031-18cf-4280-98e7-1c964afdc082",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbc6472-f450-4106-8592-d4d79272e1b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c78bde-8e5c-4a46-9b0f-76c38ee61a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde78e4e-e13b-4de4-85a5-ac683a237e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3856a4f-c256-49bb-b63a-6574eca7216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70448c1f-c0c1-475a-8625-259d5244c656",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77d9045-3615-418f-955a-fe464941a9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162b110f-a788-42ec-9624-4448c055b58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96eeed7-36a8-4947-aa3d-5b12853c8353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533f40f1-c5e2-40c8-825d-bae4efb183a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f61a79-cda4-472a-94f8-325afba990b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbcd807-c3ed-489d-be2a-6016c335bea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa4b633-b9ec-4867-918f-07cb2dcbed03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bd35b5-1264-46a3-b47d-957182cda796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e3cfbd-741c-4b73-8eb4-47e72f70f205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef49fb8-8ece-4c55-99f3-be5f2224ab6a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58df603f-781d-466c-bdfd-b025663aa5fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f61376b-fc3f-41f8-b633-05a3e1631239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f724b2c6-a64d-4b03-b083-48577fa6e2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be32395d-2b8c-4ca5-aea2-f10e4df63da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f2a71c-6ad6-4ed9-9fed-93953a16fec7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ed6272-1524-493e-9ff2-d96444eae11f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52891260-889b-46fa-9edf-ffbb84d49619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a90fa5-85f8-49dc-8de1-0d9e146036fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68db7d2-e7f7-47f5-b2f0-59476972a2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc77ca-5d5a-464c-a982-ebe4bec07634",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbe992b-20ee-4bfe-8313-76ca4d4bfc8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7574388-c071-44ef-9254-f6cac3f90085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd42c016-0787-4aa1-97e7-763dde6dc536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24f1f1f-b151-4567-87b3-788cd78ba921"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00104516-5cc3-48b0-ba69-f265e8f7e855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d86581cf-4fae-4a4a-ba2d-7925c09cb728"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0dd84e2-c1d5-470e-9113-371969643468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a832aa2c-4417-40ef-a9db-6cc5e5a299f2"
                    }
                  }
                ]
              },
              {
                "id": "eb1799d0-1e11-486d-96bb-dfbdca4bf05d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a965b5de-0709-4134-82e3-b4bd96e71e37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe1d66d-aa15-4c36-aa06-0f2de17e66d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fbc576dd-0430-44a0-b1a9-a87cb522bb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6314bd-0233-42c5-9a6b-751284b139d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd49243c-ace9-4415-bf03-3e895591c87e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da734851-e55d-4065-8c46-1bd9c446281c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "633ec1d4-025c-469b-abf3-30ecfc6bdb70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8af22898-0328-44cb-b171-3c4406265754",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85f6f771-4fc9-457b-aee4-720b460c906b"
                    }
                  }
                ]
              },
              {
                "id": "1edf21bf-96c8-4b24-a2e9-51286c7d53e6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8992acf0-188a-4df8-9391-1f18a254397f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a13e4-1996-4820-833b-bb859b617aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5c1e3171-9aa1-4c71-8764-a0ea3da3dbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d507bc-69cb-451a-96c7-b4e8c4f6ed80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76be45a6-f846-424a-8ef9-1ab5426a042e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6c4c73bd-b7c3-4bad-a96f-013518492f23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4253a098-0543-4ec3-9004-402090508ed5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5a4b7d8-85b2-4433-9716-3feea59a3c3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ce6023ef-56c4-4a3c-ad19-2351641a1e3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "116d676f-12de-4b96-80a7-d806aecea4d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41f76221-086c-4ebb-8ef5-f5c02d28c7b2"
                    }
                  }
                ]
              },
              {
                "id": "67723063-d90a-43ca-b9bd-1e0eccdbaf6f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81e3fc9-bf11-4ddd-98e2-14ac2b30aeed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f8a2c3e-565e-4bbd-aac2-82655655d397"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b9d2af9-0cf2-430c-98c6-40f04f71d7bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18698a58-0efd-4253-8a70-252dbd5f18fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "794d152a-357b-4e6c-94ff-bd7d68ff14f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0139027e-ea4b-46f2-b5cb-1c5c88dc013b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c05db1dc-e6a0-4250-abc1-c983ed4702bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dde35d4-163c-4949-8f2c-bed6c6dfe518"
            }
          }
        ]
      },
      {
        "id": "e2c409ac-437d-479a-b749-ba06e31aa965",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7b149eaf-7488-4a72-8d83-502a1de4d0c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "804d8b6a-7799-4405-b4aa-ec33f3ef94a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5817375a-74e0-4fd7-86e8-4d2d93cdbb3d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4439587f-6bbb-449e-be6b-3bdb83065239",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8e85a47f-d4e8-4764-b712-cebf478bf1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf78c2e-fd70-4f1d-a0e5-1ac546970677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b7d1ea2-0a99-4255-9ec6-b19fde4a4612"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b484441-7357-4450-87e7-940cbdc36b2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65f9ab92-b74d-4b7e-aab8-ad1e08423b01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82e83518-e62b-4454-af9e-c5792b71e804",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15d74b4a-ba35-4679-8bd9-d5a834f0e5c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8db2946f-fb91-4fe1-92a5-6348936d364c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2840d172-1f4c-45af-915b-782bcf2dfcab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "393547c5-9049-481e-9db7-68e179f964bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98cb7a16-4a11-48c1-a13f-9ad0ca7ba850"
            }
          }
        ]
      },
      {
        "id": "194ed031-c907-4f2c-99d9-33aa9e7df97c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "21df044e-e20a-4451-ad48-19b24854c61c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39a88e3a-6f53-4993-8b91-040aa53e5ff0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2042875b-088d-4241-98ed-296c340c6f3d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dce15f-72ea-4ebf-8b09-46cd73c199dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7134375-7b1a-4594-ad09-e15fd129de19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ac1e61-9042-4604-a220-01214ba8b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04a5fc1a-48f6-4de4-b3d6-0e9839501caf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e60f131c-ee19-44d1-a4ac-a388bb6b737e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7828823f-809f-47fc-852f-48dd5f282a4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30d34b41-8381-45e7-a19d-8eb15aa91bd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d4ee40d-8d06-4bfe-989b-846a1935513c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "083f6d63-83d5-4944-bb18-5047dce6bf86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c087dacd-87dd-474a-becf-caaafa46e8e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cc2bccd-e0d7-498f-b806-c3b844991890",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13f40d6d-c208-4b5e-bbc9-82c794ace090"
            }
          }
        ]
      },
      {
        "id": "721a2149-574d-4108-a988-c63250556136",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cec28eeb-9731-4a5b-aac9-f045bdda8dfb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ecac031-3dc0-4629-bcd6-5405f598fb40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8d5c2a8-0d0a-4a3c-af16-8e18cbe51faf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffba501c-36d6-4c2e-b641-e517224dd355",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68068fc6-bf64-4f1e-b7ec-661ef8502d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209c19e3-feb0-4201-ab11-a36c18ce1de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "579c894f-1c41-4504-aa59-efffc6b03b69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84fc9c57-61db-4bde-b940-ba11061303fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ba1d67a-adfe-48ff-bb15-b1b56b242def"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a7fd26f-fa4a-484e-9e13-6ec145028bc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283c2885-18da-4edf-8339-b035e2228d53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32768ddf-265a-47ef-9c81-19a79b991ba7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6a629d9-f5c2-41b1-a94c-ae58e2c4318e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "305aeec8-3106-4359-9381-43958eaabc3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e36f0ebf-e6bc-4743-9602-267e89c5c299"
            }
          }
        ]
      },
      {
        "id": "681299a7-43da-409a-bb44-7b66ee4a0c5f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "402351ba-71c0-405d-9ba0-69a86da2b34c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "685cba83-6a9e-47c9-b25b-5a874b39390b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a7a5c0f6-36c7-4277-a11c-a5cc86742952",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73bf9e2f-1640-4a53-b92e-a2647eda8b42",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c10f918d-ebec-4947-b4ab-9bfa51776cca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 278.6388888888889,
      "responseMin": 6,
      "responseMax": 8220,
      "responseSd": 1208.2177845226665,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718757518968,
      "completed": 1718757597873
    },
    "executions": [
      {
        "id": "97ef268d-04b3-4336-b1ce-b8699be7f946",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b9507c0f-dee0-444a-a3ef-a0b785925afe",
          "httpRequestId": "17f43b63-83f5-46bb-b51a-7983407892c3"
        },
        "item": {
          "id": "97ef268d-04b3-4336-b1ce-b8699be7f946",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9a9f4bd7-48ed-4a99-be44-1e9f7963edd7",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 0
        }
      },
      {
        "id": "4e625ccb-97fc-4274-bcd2-1e4de9cc793f",
        "cursor": {
          "ref": "2319caf9-4ca4-4801-8148-97dcb19ad585",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "89b3ca70-6d08-442a-a8ca-f195037bb7ed"
        },
        "item": {
          "id": "4e625ccb-97fc-4274-bcd2-1e4de9cc793f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d31f5436-16ae-4f98-86af-0e1b93280c12",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "67b97fe7-6f13-4f98-bbe2-9f158f9841bc",
        "cursor": {
          "ref": "d1428868-da42-42ca-913a-4efe0e0908a3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2a6592d1-5d1d-4e12-aae1-e81b83851164"
        },
        "item": {
          "id": "67b97fe7-6f13-4f98-bbe2-9f158f9841bc",
          "name": "did_json"
        },
        "response": {
          "id": "730811a6-949c-4bf8-8261-1b5eab73135a",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce34ee0-4053-41d8-941e-739a50f5dbd8",
        "cursor": {
          "ref": "51779a8a-befa-453c-b75c-e1ac4d4366b6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79e47999-9d69-42a9-8d30-ffcc6aa83fa5"
        },
        "item": {
          "id": "5ce34ee0-4053-41d8-941e-739a50f5dbd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb01d203-23ef-4fb7-ac11-fd2002541ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2041,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce34ee0-4053-41d8-941e-739a50f5dbd8",
        "cursor": {
          "ref": "51779a8a-befa-453c-b75c-e1ac4d4366b6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79e47999-9d69-42a9-8d30-ffcc6aa83fa5"
        },
        "item": {
          "id": "5ce34ee0-4053-41d8-941e-739a50f5dbd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb01d203-23ef-4fb7-ac11-fd2002541ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2041,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccd3375-00ab-4809-889e-e3fcf0f73405",
        "cursor": {
          "ref": "94904cc7-3bd8-46f8-aa16-f0739101b364",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "902cc43d-dd3c-4d17-bbd3-22bdf09f3b3a"
        },
        "item": {
          "id": "5ccd3375-00ab-4809-889e-e3fcf0f73405",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d86a6319-b416-4457-ae0b-0abd329c2e7e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2430,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e58942-01a9-4df4-9ea7-801362f378c6",
        "cursor": {
          "ref": "8ec46920-c7d4-45ae-b5cc-2fcb8e5b5f68",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d362e65d-ba16-496e-b399-b71cde2afddf"
        },
        "item": {
          "id": "03e58942-01a9-4df4-9ea7-801362f378c6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0c0e1e2c-b9b0-4efd-919f-e2cf6d18b077",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2359,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a20eb1e-db59-477c-8fdb-922b0edb3a6a",
        "cursor": {
          "ref": "2a719f14-35a7-4e2e-b28f-db7f2f6c6622",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c58f360-305d-4aba-9419-227b555d0e4f"
        },
        "item": {
          "id": "7a20eb1e-db59-477c-8fdb-922b0edb3a6a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1dccc4b1-03de-4cd1-8e99-3942a5586ae1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f209e67-15d1-4ce6-a931-2f80895529d2",
        "cursor": {
          "ref": "97e999cf-a64e-4bd7-b4e2-18260cc4efa6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5c53ca5-f7f8-41de-b16c-9ed1522d1294"
        },
        "item": {
          "id": "2f209e67-15d1-4ce6-a931-2f80895529d2",
          "name": "identifiers"
        },
        "response": {
          "id": "478d6462-9e23-4c02-8941-6baf30ec5453",
          "status": "OK",
          "code": 200,
          "responseTime": 2089,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f449f35-c427-42a6-89ea-1882b9b9fd74",
        "cursor": {
          "ref": "f0b3d250-aaa6-4037-af36-5e164a5c2804",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "72fe1220-8470-4079-be3a-1fd34086bf0d"
        },
        "item": {
          "id": "4f449f35-c427-42a6-89ea-1882b9b9fd74",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c0b4f8dd-bece-4e98-8e8e-c0bccf835fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d517bc4d-bdbe-4a5d-9c63-fc298af706ac",
        "cursor": {
          "ref": "764d1cc2-205e-43bd-ab97-a654cc2521ff",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3571ea3a-208e-4be2-bee4-0b2178acff35"
        },
        "item": {
          "id": "d517bc4d-bdbe-4a5d-9c63-fc298af706ac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b7f3d1a5-da88-4b11-b9f8-289c7c808980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b451a61b-6dd7-4a5e-b1ff-e1fc239142bc",
        "cursor": {
          "ref": "e1e2a9a3-4b77-4476-bbc6-5834431210f1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c70179a6-3fc6-460a-8ed7-52ea5247ea53"
        },
        "item": {
          "id": "b451a61b-6dd7-4a5e-b1ff-e1fc239142bc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "28ffc436-ef99-47cd-918b-002c965bd9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224793ee-c844-433f-8b66-e4c7165acdef",
        "cursor": {
          "ref": "f76b830e-d9b7-481a-aa6d-9c4da5dbd430",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ef3158f3-9205-4a3e-bbc1-c18a15d34516"
        },
        "item": {
          "id": "224793ee-c844-433f-8b66-e4c7165acdef",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1cb7f627-89f5-44ba-bb12-3435caa51b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab78241-c97d-4d5a-ba55-e9b28eb7112f",
        "cursor": {
          "ref": "0b0c7cc1-6995-43af-af7a-3e5f9fec582a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "aad17cd5-5dd4-4c22-90c0-4b6cfec81a93"
        },
        "item": {
          "id": "4ab78241-c97d-4d5a-ba55-e9b28eb7112f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "279c5ddb-bcf5-43ef-a3b0-c4e943d95b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf2767-37ef-45ff-b1af-3ddb3c2f124c",
        "cursor": {
          "ref": "a989a974-1f30-4fb0-84d3-c92d4039190a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "32619535-ba61-452c-87c6-7d1126c97927"
        },
        "item": {
          "id": "0dcf2767-37ef-45ff-b1af-3ddb3c2f124c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1733a66a-2379-4516-a9f1-598a2d66584e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b9edad-fafe-4261-b959-5e56abe8b5d0",
        "cursor": {
          "ref": "d7c6da92-5c10-4984-a4f9-a3e22c900f11",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bbbed255-c570-4d32-b6c1-90a4ea2740a2"
        },
        "item": {
          "id": "e3b9edad-fafe-4261-b959-5e56abe8b5d0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "308d8837-1cc4-4f09-80dc-61715e82bdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09434435-db7c-4fc7-9042-b34faa56f5b9",
        "cursor": {
          "ref": "e2f937e6-f9bd-439f-8767-a991355ddbcb",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a2b09954-5c2c-406c-9bae-d0872ff56371"
        },
        "item": {
          "id": "09434435-db7c-4fc7-9042-b34faa56f5b9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7b735e99-a365-415c-9a06-94f3e21c39e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cb1a4d-ef1c-4640-9972-bbea8c1b0082",
        "cursor": {
          "ref": "53d342d6-ad35-4cc5-ba73-defe44751328",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "469d4c8d-565f-44e0-b18b-e96a0f42ef4d"
        },
        "item": {
          "id": "50cb1a4d-ef1c-4640-9972-bbea8c1b0082",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "da472dce-b8da-4fab-a3dd-19f491ce4e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adee189-a6ec-4335-90ca-c068fb4f47b1",
        "cursor": {
          "ref": "00fdf610-f296-4296-9066-cb8ae40412cf",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d7735283-7515-4394-b8be-b23422abe899"
        },
        "item": {
          "id": "1adee189-a6ec-4335-90ca-c068fb4f47b1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e6043bac-4ceb-4eaf-9768-d97ec9977055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176cbee5-865e-498d-be84-fc3ff8857d54",
        "cursor": {
          "ref": "76b05c47-2e29-4503-a432-94c296c1758b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "72e4d10c-8dc8-4223-8dfe-1576afa9d386"
        },
        "item": {
          "id": "176cbee5-865e-498d-be84-fc3ff8857d54",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ea89868c-0dd4-45dd-833f-ec5dee67370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1f1823-c5f1-45e0-8193-05a717ce1a20",
        "cursor": {
          "ref": "a38a0b3b-7ac6-4560-a116-cf1955439bbc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "813065de-c28e-47ca-ada9-934a7ca5603b"
        },
        "item": {
          "id": "ed1f1823-c5f1-45e0-8193-05a717ce1a20",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9015f9cb-2991-4bb4-bb2e-9827cfaf8e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6c0d11-7994-4330-a748-2c89b49a89ba",
        "cursor": {
          "ref": "422c1c39-4bb4-4950-b6dd-42733dd34af5",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4891c2d0-9d39-4062-971e-a41b4a854a05"
        },
        "item": {
          "id": "0c6c0d11-7994-4330-a748-2c89b49a89ba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "401ddb61-d20f-4717-b1d4-1d164ee19ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b85a026-3820-4c38-afae-d75b7d70e5a9",
        "cursor": {
          "ref": "4f3b4c90-7fb6-42cd-bb29-b4189d08a1a9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5f52a1a2-5389-4cdb-8f3c-634ac3ec20f5"
        },
        "item": {
          "id": "4b85a026-3820-4c38-afae-d75b7d70e5a9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fcdc6e49-dafc-443b-aef0-d5e5b582c4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca74dea-d355-4555-a8d3-53ae6a89a825",
        "cursor": {
          "ref": "b318ac98-1c0a-44b2-9449-62fe4a49b057",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f480f5b-598f-4b6f-8755-2794aa93e23f"
        },
        "item": {
          "id": "9ca74dea-d355-4555-a8d3-53ae6a89a825",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c97caf02-4f52-48f2-9389-e49bf8a71aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de609df4-2702-486a-891f-bc6f43af04cf",
        "cursor": {
          "ref": "1f9b2aca-87a0-4623-8112-ff6eee7d74c7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "128dfbb9-23c2-4f74-a660-8d39448f4a37"
        },
        "item": {
          "id": "de609df4-2702-486a-891f-bc6f43af04cf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ffb7fae9-1caf-41d4-b140-0caff4901b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2be767-58ab-40ee-8926-b2764cfed71e",
        "cursor": {
          "ref": "dc8dd934-0104-4296-9ea4-3e8af28517d0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "81905864-f783-400f-87e4-9b19b062f9f7"
        },
        "item": {
          "id": "ae2be767-58ab-40ee-8926-b2764cfed71e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6368dc6c-ed75-4ff9-ac1f-23820ba62f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79642fd4-d10f-4d10-b753-9979b1f82ef6",
        "cursor": {
          "ref": "e0facf0f-1877-4282-a8e0-19a68d3b9afd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "93d99fc7-0e7b-43f2-997b-674889e91e76"
        },
        "item": {
          "id": "79642fd4-d10f-4d10-b753-9979b1f82ef6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "905e7353-e1a9-4e29-9c79-28aa7c5fc444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4dc10b-25e7-4a3c-bff4-9b6c4717d88d",
        "cursor": {
          "ref": "2e45459d-36d7-49b0-a47c-76d3d1763da9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b0f932d7-d72a-42c3-ad5a-2b157204cc9a"
        },
        "item": {
          "id": "8b4dc10b-25e7-4a3c-bff4-9b6c4717d88d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6eef147d-22d6-4c6d-bbfb-c1ef0ee97eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5986277d-2b0e-457e-8370-5e118ca402d1",
        "cursor": {
          "ref": "8df2035f-7d4c-4356-a4fb-3a9016c2f778",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "29a6b0f8-9255-4a05-b211-0bd18b311f9b"
        },
        "item": {
          "id": "5986277d-2b0e-457e-8370-5e118ca402d1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "df51e9ef-f651-4e2d-81ee-b1db65b0f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065ce29-3f16-4625-bf77-6d78cd01e461",
        "cursor": {
          "ref": "b711148d-eda1-4033-8632-bc7d7c3bc486",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "19d6c0a8-8ebf-4099-9d92-c5a6b798cee4"
        },
        "item": {
          "id": "b065ce29-3f16-4625-bf77-6d78cd01e461",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "36ea1454-92dc-43b2-8abd-12f896e38dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a29f497-0f0d-4801-ac95-8dd0e9c178ad",
        "cursor": {
          "ref": "2ece0e59-b012-4210-bbb2-7b79833e84b9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b115241a-d8f2-47d5-b109-f49135623091"
        },
        "item": {
          "id": "5a29f497-0f0d-4801-ac95-8dd0e9c178ad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f7122ccf-22d5-4f14-8d35-96aa53033497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444fd92b-b5b9-4d56-a390-775c5c8070fc",
        "cursor": {
          "ref": "9e4d2ba4-555c-43f0-b5fb-6783200d34e9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cb0105b4-6b97-4f39-8661-206a94fc69c9"
        },
        "item": {
          "id": "444fd92b-b5b9-4d56-a390-775c5c8070fc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c79e3151-c908-4fc6-a842-a58a274571ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79da2640-4ebe-4034-b281-fa1e3f776e83",
        "cursor": {
          "ref": "0356202e-8af1-4b73-98be-1ca63eb0334a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "572eae86-beda-40f4-b7fa-b492b87f4044"
        },
        "item": {
          "id": "79da2640-4ebe-4034-b281-fa1e3f776e83",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8bf37615-7c22-48c1-b6ef-f3b45e9c2812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf25c969-391b-4861-b5b2-9faa68f14c8a",
        "cursor": {
          "ref": "9550a7ad-86ad-492f-99d4-dab72d7bec9e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "44e757de-ea8e-4d87-82a6-0a215fa7117d"
        },
        "item": {
          "id": "cf25c969-391b-4861-b5b2-9faa68f14c8a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6485cb42-8134-48ab-8ee3-424594f4456e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea9bde-9979-4f8e-9b69-9daeb44c5807",
        "cursor": {
          "ref": "bac1b866-fa68-4e42-8ece-12afd99a169c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bbb526b6-79a0-4c7f-a0d0-e6396fc1d320"
        },
        "item": {
          "id": "67ea9bde-9979-4f8e-9b69-9daeb44c5807",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e43e2e5f-281f-455c-89a7-b6fdf0faf6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f8395-1811-48de-b62a-a3e72ae053e7",
        "cursor": {
          "ref": "824de3b3-fda3-49a3-ad35-8737c41a7d54",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2a55f25a-06f0-4aec-8d35-4c0983a06037"
        },
        "item": {
          "id": "ec6f8395-1811-48de-b62a-a3e72ae053e7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "63cf8e04-d188-432b-a3b2-ca9d35997da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712ef556-a57a-4bd4-b9c6-d561861206c4",
        "cursor": {
          "ref": "e5f7084a-f6fd-4931-b8c3-af3897aeed65",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2bd5479c-1a92-47ca-adea-7c8402a9d5fb"
        },
        "item": {
          "id": "712ef556-a57a-4bd4-b9c6-d561861206c4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0bab3904-add5-4647-aba7-7c52a39ade83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dfeed1-404f-4efa-be07-100cc72e9334",
        "cursor": {
          "ref": "8c105cfd-b28e-4956-a382-6a5ed9ba27c5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98b83f45-fa8d-4634-a3bb-9ad18e4a559a"
        },
        "item": {
          "id": "09dfeed1-404f-4efa-be07-100cc72e9334",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fe23bcb3-320d-4691-b70e-d5cefa68f926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11169a97-d61b-4e5d-bfc1-728cb9a645c0",
        "cursor": {
          "ref": "48396aa7-d14b-4439-9643-f0651d90d58b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a87e22d4-016c-4ce5-b5ab-c9acd8e8833b"
        },
        "item": {
          "id": "11169a97-d61b-4e5d-bfc1-728cb9a645c0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "964b98d1-8209-47f4-95f6-c25437fa3633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5731bcd-e185-4878-b126-b8f4679ec988",
        "cursor": {
          "ref": "dc959bea-984b-4ef6-ad55-1d7b03526895",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e3e28b6a-108c-428a-9696-3f37d93574fd"
        },
        "item": {
          "id": "d5731bcd-e185-4878-b126-b8f4679ec988",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aea2c66e-c8fa-4f0c-8430-2c3e8110bbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112617a8-ff1b-452e-a93c-f7da4cb1051f",
        "cursor": {
          "ref": "310ec320-cf7b-471f-934d-67de48eddfa5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "80c3198e-c34d-4205-9768-e04bef7f6cb7"
        },
        "item": {
          "id": "112617a8-ff1b-452e-a93c-f7da4cb1051f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "db771555-2c9e-4003-87de-0ce1668f293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d68629-1d99-4d78-a314-5afbea1499dc",
        "cursor": {
          "ref": "d3831423-fbd2-429d-bc26-5a682f1bcb0d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ce4dc616-4a91-429f-ae66-06f8b86d8193"
        },
        "item": {
          "id": "c1d68629-1d99-4d78-a314-5afbea1499dc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "35912198-c52b-40a3-a15c-d0fb1b15c173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d06133-425c-40a6-a784-7a14237cb985",
        "cursor": {
          "ref": "c35b8889-c300-49f1-a3c7-d33355ae7401",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d68da2d0-4940-4ae9-98f1-d65656575cee"
        },
        "item": {
          "id": "36d06133-425c-40a6-a784-7a14237cb985",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f138fab-4729-4a1b-9355-1f37b9e2c152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58113a68-adc4-4215-9023-5c56ee19e880",
        "cursor": {
          "ref": "5791dd70-f512-44b0-b005-182b714a01bb",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5b63c037-fe65-44cb-8df9-3ae3af8e1507"
        },
        "item": {
          "id": "58113a68-adc4-4215-9023-5c56ee19e880",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3f88a772-d3d7-4a66-87bc-0b3f84e0beaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b00a592-1deb-486c-952f-6064d4146c6d",
        "cursor": {
          "ref": "b0421c64-ad87-4c2b-88b4-830ebe3bb410",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "83ab7c2d-b65e-4749-a282-15f3b15e1a5b"
        },
        "item": {
          "id": "1b00a592-1deb-486c-952f-6064d4146c6d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bae77218-ff37-4332-a848-33213f9d299d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f095bae7-cce3-43f0-8673-cb04c0f5e052",
        "cursor": {
          "ref": "206b1bee-8b1a-4dc1-91dc-68a3418ae404",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a8edf8ce-5439-4af5-b291-694a33549215"
        },
        "item": {
          "id": "f095bae7-cce3-43f0-8673-cb04c0f5e052",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "42ed6a42-0e2d-4d04-9215-a981fe4ef87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef87dbdc-13b4-4aaf-beee-dd1fb0cf4abc",
        "cursor": {
          "ref": "a10962b0-44f3-4120-9256-681cab47b089",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a5ccf76b-81e2-4541-a147-0a2ca7359bcb"
        },
        "item": {
          "id": "ef87dbdc-13b4-4aaf-beee-dd1fb0cf4abc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4d2824f4-fdb2-4067-8f25-368e3fc241fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6a2599-eb0a-4a9f-ae9b-10837d43b9e7",
        "cursor": {
          "ref": "3d1a7e8a-6b06-4959-8612-c030944653ad",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "34c84f31-e260-4e43-a86b-268a8b5a1469"
        },
        "item": {
          "id": "fb6a2599-eb0a-4a9f-ae9b-10837d43b9e7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e695d034-a083-4e4c-ba5b-6fdb4213257c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421a89a9-d081-41d8-a080-78ce71d707c3",
        "cursor": {
          "ref": "cc8932ab-0886-4d22-9f20-a8a5c9f12244",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9585681e-2b07-482e-b534-c1ad2f65731d"
        },
        "item": {
          "id": "421a89a9-d081-41d8-a080-78ce71d707c3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4ea835bb-2c5f-4409-894c-1fb287a12d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d1aeb-da7c-4835-99cb-7edde4904300",
        "cursor": {
          "ref": "197bb4ab-9a03-4ee1-bb10-60730cde04cd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4381b188-a2f8-4210-abc2-d43531592cc0"
        },
        "item": {
          "id": "225d1aeb-da7c-4835-99cb-7edde4904300",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88909218-0d8c-4859-be1b-1e7607ae5156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b41e00f-7db0-4203-8066-4b8a887cc75a",
        "cursor": {
          "ref": "f0f5c989-6088-40b7-b92a-6b16733da0cb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fa262eef-3f76-4124-8955-8da65bd9fce7"
        },
        "item": {
          "id": "4b41e00f-7db0-4203-8066-4b8a887cc75a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5e4d2ae-b6fc-4ebe-a70b-6007631d0a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deebcf4-19eb-4693-91de-341d7ed50232",
        "cursor": {
          "ref": "14cb7a3e-e3b7-4d68-8cdf-031e26a61df0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "362a69a4-03af-4c6b-87b6-a6945948fb52"
        },
        "item": {
          "id": "5deebcf4-19eb-4693-91de-341d7ed50232",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f5380c13-7408-4e43-b057-4b4aec93b38b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2375f69c-ecbb-40ed-9e4a-fbaf482c4ffc",
        "cursor": {
          "ref": "108b404b-b23d-4ec7-aad1-bacd3cccbf7b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4a361399-6c69-44e4-bda1-098f0cdddc62"
        },
        "item": {
          "id": "2375f69c-ecbb-40ed-9e4a-fbaf482c4ffc",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c7b463f9-d93a-4d2f-a751-e6eb97640e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546bd882-384f-48ba-8dc3-2270c3cbb5f1",
        "cursor": {
          "ref": "99a6f209-7289-404d-bb87-348ca9091744",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8749cb32-5721-4a6e-a29d-a3cff1a40f65"
        },
        "item": {
          "id": "546bd882-384f-48ba-8dc3-2270c3cbb5f1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6b9b0001-f760-4406-8d4b-da8251175b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683b9993-acaa-4d80-85d0-377738ebdc05",
        "cursor": {
          "ref": "426f430f-ebd5-4e67-84b9-303f29640d7f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5bc28479-a732-4501-b207-7eaf3ba40a89"
        },
        "item": {
          "id": "683b9993-acaa-4d80-85d0-377738ebdc05",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "37ce3b3e-ff1e-4e7e-8238-a1e2adaa11ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e44fc8-d631-4326-b192-b6b7d3e827c8",
        "cursor": {
          "ref": "4f637be1-666d-4c78-80fa-04491c282f5e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "02a035b1-8943-4430-841a-5c0d96d07089"
        },
        "item": {
          "id": "74e44fc8-d631-4326-b192-b6b7d3e827c8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5ef11297-0eb5-4d79-bde2-e09df36bf836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1249fb31-1f2c-4157-8a0f-07b7ce32b7ba",
        "cursor": {
          "ref": "fe773933-e98b-445b-a6af-f5d23af072ec",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "87a87993-ad73-4da1-b056-19449352e362"
        },
        "item": {
          "id": "1249fb31-1f2c-4157-8a0f-07b7ce32b7ba",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "222cb3f8-57ea-4c82-a2d9-b4da21dd7b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40884dea-7e24-4185-99ce-39f40d2ba190",
        "cursor": {
          "ref": "200a1b71-735e-40ec-b93c-07df4237ba91",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c49233dc-a023-4d0a-8261-aac9a922bcd1"
        },
        "item": {
          "id": "40884dea-7e24-4185-99ce-39f40d2ba190",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0929e3ac-ad63-4ae6-bc7d-6548340bc135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae47cf8-0f67-45c7-bc9f-359e51a5de02",
        "cursor": {
          "ref": "2b793691-9d41-40df-a759-4d22a53d6288",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec65d28c-e937-43eb-afa6-561aebbd274d"
        },
        "item": {
          "id": "6ae47cf8-0f67-45c7-bc9f-359e51a5de02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3a9d70bd-8f9b-4b8d-97af-3152c3553df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e8f70a-eb54-4465-a1f8-7e43f95f3487",
        "cursor": {
          "ref": "c4dfa82b-bc75-4850-9101-aea130557cca",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "af8c6e01-e611-4084-a7c5-a076fac0abd1"
        },
        "item": {
          "id": "a4e8f70a-eb54-4465-a1f8-7e43f95f3487",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "632275bc-c332-453c-9e3e-ed495011efd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd07076c-9697-4704-8319-b704550ca830",
        "cursor": {
          "ref": "43381c85-315d-4a45-8f3a-c28329cb6977",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "31999637-2397-49c9-8199-ba8667042ef1"
        },
        "item": {
          "id": "cd07076c-9697-4704-8319-b704550ca830",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ec1f0119-52d7-4868-9373-17fe2beea579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e3505c-0eee-4084-8a5f-53f33a81c07a",
        "cursor": {
          "ref": "5c0a76ff-ce0b-43bd-b015-c98a34a2d54a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "60d44a1d-aa17-4ffc-bb23-91be37eb7e86"
        },
        "item": {
          "id": "68e3505c-0eee-4084-8a5f-53f33a81c07a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2c872b9e-8b81-4ab9-9fe6-701d5a322db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2f4a39-c7ca-42ed-a0df-929ffa7ac81d",
        "cursor": {
          "ref": "a8ebfdeb-d449-4caf-b4e4-6643c32b8ba8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5dc22a63-eae7-486b-a9ab-3217b89af42d"
        },
        "item": {
          "id": "db2f4a39-c7ca-42ed-a0df-929ffa7ac81d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1cb5d756-be07-42c3-86af-ef4883c4deb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009f0e67-3962-48f9-9ea0-58c141e31a53",
        "cursor": {
          "ref": "da88afd0-1185-4d8e-bbf8-bf6a6f0c3472",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "91bdfdfc-364c-4158-8f1a-27336dcc7e77"
        },
        "item": {
          "id": "009f0e67-3962-48f9-9ea0-58c141e31a53",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8307ccb3-48df-4a16-88a5-83c929b712fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d358503-3649-4061-aa8f-9fd3aad6b883",
        "cursor": {
          "ref": "ec4a8b12-397d-40ca-964c-dc6000ec82af",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e76538ce-e4ce-4634-86c6-bea4d71974f8"
        },
        "item": {
          "id": "0d358503-3649-4061-aa8f-9fd3aad6b883",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6fd78f63-6b38-4be8-a82b-3658e45aa241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0e48c1-32cd-4e9d-8970-b19c165f9cff",
        "cursor": {
          "ref": "97afd858-2807-4afb-9455-6e5227773f21",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7532ebc1-b3e3-4f6b-84dc-f73bdf334a7f"
        },
        "item": {
          "id": "9a0e48c1-32cd-4e9d-8970-b19c165f9cff",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6b9e4bdb-d25c-4917-b7f2-23c8f5f8e6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca11f4f-3a2c-4fea-8124-beac0d8547bd",
        "cursor": {
          "ref": "6c11d929-0f29-40f7-b827-da81d2f7820a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81d47a8b-8051-4a67-a2f7-f5b5e77deef1"
        },
        "item": {
          "id": "1ca11f4f-3a2c-4fea-8124-beac0d8547bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9e10dbee-57fa-4d9d-a12c-2fd413171298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d3c876-af0a-463f-8f0a-0d1c94f671ed",
        "cursor": {
          "ref": "903e4e3e-7c10-4ccb-a59b-cf2d43b995f2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "366bd779-749a-4576-be4d-562dd5276607"
        },
        "item": {
          "id": "f7d3c876-af0a-463f-8f0a-0d1c94f671ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3e7ff5a5-a0c8-4e2b-994d-075d1f4a3513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cb310c-4a23-4f66-9a61-b52634456e62",
        "cursor": {
          "ref": "177bb2b8-fc7a-4e2b-94fb-f69e70f2cd5e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "74cd8155-29e1-4de2-91db-4280a59f3a6a"
        },
        "item": {
          "id": "91cb310c-4a23-4f66-9a61-b52634456e62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "436e2718-2a90-4596-8b87-ba813b950d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f64111-b291-4b32-bdec-3314eaec7985",
        "cursor": {
          "ref": "1a8ab19e-6939-4eac-914c-5cede2416e9f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "60669ee1-bdde-49df-863b-53a9ebbf768e"
        },
        "item": {
          "id": "96f64111-b291-4b32-bdec-3314eaec7985",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "22004422-8534-425b-8c0e-0d01e3309660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1913c95d-ea12-4f02-a79f-a6a59afdb802",
        "cursor": {
          "ref": "16400ea4-6246-4ec3-be29-ef9eb9927f32",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "14296b7d-4b89-406f-b4f8-d274472e7abe"
        },
        "item": {
          "id": "1913c95d-ea12-4f02-a79f-a6a59afdb802",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0dac6ca1-a653-48e2-b0d4-4e179dcb046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2411ef2-fa5f-4c2a-9b61-f4509a502d49",
        "cursor": {
          "ref": "12c2ad45-51b4-4d47-a791-a6792329dd35",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "25642e4a-573e-44ca-999c-5cf693864a1a"
        },
        "item": {
          "id": "d2411ef2-fa5f-4c2a-9b61-f4509a502d49",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "09ca4304-8426-4e2f-a22b-bcf898068dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977ee6d6-8e88-4871-8b9b-f4c1199002df",
        "cursor": {
          "ref": "dc9089ee-14bc-4f30-ad72-e6ca0f4b504e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "07556c65-feb8-4c2e-b8d4-d32e7efc394d"
        },
        "item": {
          "id": "977ee6d6-8e88-4871-8b9b-f4c1199002df",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "077c430e-c765-448c-90b9-c8d5e24a01f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e5712f-b6e8-4862-aad0-32c890168542",
        "cursor": {
          "ref": "0657c8d3-fc5c-49e5-baae-708b750d1141",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b8cf8033-b747-46ae-94ec-d79548bd2be5"
        },
        "item": {
          "id": "c7e5712f-b6e8-4862-aad0-32c890168542",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ad861664-cec9-4da4-9d80-98cb6c6c99d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c7f482-70b3-456e-a09e-f9a55f2cfe03",
        "cursor": {
          "ref": "2aa97dbf-fa87-4fc8-947c-45a031fa0c7b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8150b6cd-7730-4b71-8a98-4d1a9bf33117"
        },
        "item": {
          "id": "80c7f482-70b3-456e-a09e-f9a55f2cfe03",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "65b9cf07-4dd9-4fb4-9b5c-1c38f22e2a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d023f91-34de-4e03-8255-b96e243a1e7f",
        "cursor": {
          "ref": "3a996c24-481d-4d86-9b28-c2bf8636fe84",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dfe13f1c-533b-40d8-9910-ad6886a23644"
        },
        "item": {
          "id": "8d023f91-34de-4e03-8255-b96e243a1e7f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6193a0cc-492b-450f-a99e-085f63cd55c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976d39e0-909d-4755-b2ad-9c4dce4bc544",
        "cursor": {
          "ref": "ec9820ed-1146-4f43-aac2-5bf879ce9441",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "51c62dbf-ce8e-43c3-9cc3-cca4dff71778"
        },
        "item": {
          "id": "976d39e0-909d-4755-b2ad-9c4dce4bc544",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "98d3352f-aec9-44dd-8663-097f42456d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23b18e0-89db-480d-b5d1-eda5f7e9db9f",
        "cursor": {
          "ref": "c716bd6f-a2fd-450a-aa2e-35c6a3a19c50",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "28deed0f-428c-4239-ad3e-afbf391caad8"
        },
        "item": {
          "id": "e23b18e0-89db-480d-b5d1-eda5f7e9db9f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3ea9b178-11bc-44bf-b7ed-859a881f24a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5a8839-0bc3-4c90-b81a-8c4edf2fe10d",
        "cursor": {
          "ref": "7a05fcc1-19e6-42c8-8212-a8ac2287b123",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "55150621-0310-442c-971d-55a59d4b27bb"
        },
        "item": {
          "id": "bb5a8839-0bc3-4c90-b81a-8c4edf2fe10d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "26352741-5e1a-49a1-af3b-72fb5e0ef5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd27cd4e-888b-4f18-9285-b91de9af197d",
        "cursor": {
          "ref": "83c44323-e4d1-4a2d-94f2-1950b514e740",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5ed75ef2-d551-41c6-ab5a-68d8144f8053"
        },
        "item": {
          "id": "bd27cd4e-888b-4f18-9285-b91de9af197d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "55e08ca0-174a-4e31-8a49-70610a9a4e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff071a6-b01f-4121-b7bd-8e68ae49dd20",
        "cursor": {
          "ref": "9dc561f3-5724-4a65-bd60-9b7871699e14",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9ca386c-f106-4db4-a986-cc32650d78c8"
        },
        "item": {
          "id": "6ff071a6-b01f-4121-b7bd-8e68ae49dd20",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "46933204-da8c-4ac3-a89a-69ac4fc45d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb8b87e-4dd4-43a0-847f-29b6910e70ca",
        "cursor": {
          "ref": "d1c4c835-cbac-429e-b33c-b57513fb5bc3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7e2f54b3-d77a-43b5-b0c1-253dd7c0b6aa"
        },
        "item": {
          "id": "3bb8b87e-4dd4-43a0-847f-29b6910e70ca",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f3148447-8bab-4bf5-9af2-1efeca0d161b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7d2f27-c97b-4bb3-8991-28a4b55377cf",
        "cursor": {
          "ref": "a8d6271a-8652-4c81-9da0-f47b89f4ec7e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d936d60f-c0d7-48be-99d0-bf32fbe61e79"
        },
        "item": {
          "id": "0c7d2f27-c97b-4bb3-8991-28a4b55377cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9a622b0b-bb0f-4dba-b50d-b95cf344d98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f00b2b3-0abf-4815-8fe3-d46390c1fde2",
        "cursor": {
          "ref": "67bdda6f-b394-4983-8977-0f0b4923edf0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b10f541-d5a2-4dec-93f6-f41dc0877b8d"
        },
        "item": {
          "id": "2f00b2b3-0abf-4815-8fe3-d46390c1fde2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c8b4fe3f-3e81-4ee9-8351-a615948a0f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253a4121-68ed-4b78-b0ea-95b179b6d4a2",
        "cursor": {
          "ref": "52f0d2a7-6aa7-42bb-a618-a9818f91d60d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "44200e46-bc52-4db6-9e2b-6a53df6648d9"
        },
        "item": {
          "id": "253a4121-68ed-4b78-b0ea-95b179b6d4a2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a3c043b1-f4bc-454f-8289-6bc4f93689a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf54b9f-8dfa-4863-8a7b-9edfeb4d0137",
        "cursor": {
          "ref": "8cf50786-34aa-46b7-8535-25f42bf0bc14",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc7a7387-a4ca-4a26-af38-cb0498b50494"
        },
        "item": {
          "id": "0bf54b9f-8dfa-4863-8a7b-9edfeb4d0137",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c2274941-63d9-4fde-bbb9-67eb89fb0797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cdc9d6-8287-4548-aa00-8c0ebe5c8188",
        "cursor": {
          "ref": "74da90fa-e400-4b18-bffb-9728d7c34d0c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b82cca43-1b6a-4c7c-9a0d-fc3c0d8dab59"
        },
        "item": {
          "id": "42cdc9d6-8287-4548-aa00-8c0ebe5c8188",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3850467f-f907-4745-8754-395c55907470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b678f37-a423-44d4-8ff0-9a38b5e754c8",
        "cursor": {
          "ref": "2d8d794f-85c4-4e6f-b5b2-a50094fc3df7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2d77370e-7f42-4aa1-b93b-999dfb56a98a"
        },
        "item": {
          "id": "5b678f37-a423-44d4-8ff0-9a38b5e754c8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "77c7f013-ae06-4f87-800f-10642c6c5e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8a39a1-2d5d-44d9-9287-32fbf5f0f3ff",
        "cursor": {
          "ref": "be014564-77ae-425d-9d88-92176d4e34fe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "babf03f4-e839-40f7-be5e-64a54497329c"
        },
        "item": {
          "id": "9e8a39a1-2d5d-44d9-9287-32fbf5f0f3ff",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "51c2b252-e283-4420-8c5c-1c09f5bbbf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5732073c-d33a-452a-9200-b4422dcc0494",
        "cursor": {
          "ref": "338c9a07-74e1-4e33-b9ce-32a41fcf7f75",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "52693a20-19b4-4653-b54e-42205e3a5438"
        },
        "item": {
          "id": "5732073c-d33a-452a-9200-b4422dcc0494",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "51a381e1-67d0-425d-ad5e-d5677ab27fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f76d0f-3303-40bc-9261-c726aaf30d6e",
        "cursor": {
          "ref": "ff46e68b-42a0-4090-9381-c5ed1c002cce",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "04c25104-da15-46fa-9b65-eb66cfe056a6"
        },
        "item": {
          "id": "23f76d0f-3303-40bc-9261-c726aaf30d6e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1d8dfdc5-8da6-4237-8098-2a67b7517e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579ce182-20bb-468e-a054-92b189c0598b",
        "cursor": {
          "ref": "67c81a60-eb87-4682-89db-d0a4ed4c059b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b2dae9f1-dc22-4872-98b2-cf3062649d5c"
        },
        "item": {
          "id": "579ce182-20bb-468e-a054-92b189c0598b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "80532723-4d6a-4409-bcae-d79d37f3b423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02787031-c002-4371-8d86-965830e2ed66",
        "cursor": {
          "ref": "2220e672-1cca-425c-9537-daede34dd186",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dc3837d7-1cbf-46a9-810c-59fea1c829ff"
        },
        "item": {
          "id": "02787031-c002-4371-8d86-965830e2ed66",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b6e5d392-7843-417b-bd18-6640b474c1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec8417-90df-4564-ac16-174275a788e7",
        "cursor": {
          "ref": "76a5dca5-b1d7-4e7c-83d3-c2924e3620e8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cc1db777-7c2b-4888-8842-bbdbf4918be1"
        },
        "item": {
          "id": "62ec8417-90df-4564-ac16-174275a788e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f88ec291-3dff-48aa-b791-9a1b8fc9568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e0b134-e6dc-43ae-8c0f-ccbfe000931c",
        "cursor": {
          "ref": "ec67ea1f-3acf-4d6d-a595-714f410c18cb",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "754a1930-6696-40b0-8011-7e5bf7d2cd24"
        },
        "item": {
          "id": "36e0b134-e6dc-43ae-8c0f-ccbfe000931c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b3f4b390-d606-415d-a5e2-13ac7682b604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b33c080-ccd4-41f0-a1e3-8ac46f0f25e6",
        "cursor": {
          "ref": "3a811a4c-4b91-4018-ab60-9e7a3b5a16fa",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "869d6415-5dac-43be-9ffe-878fb4eb74b3"
        },
        "item": {
          "id": "6b33c080-ccd4-41f0-a1e3-8ac46f0f25e6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2160ad48-661c-4eed-a0e2-6839e7d8636c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53593ae2-8103-438f-9df1-0f5424a61a43",
        "cursor": {
          "ref": "04aa6603-c657-4ae2-bd04-1296cfeb5bb3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f5c88d1a-43c6-4b65-a803-ee7557fed3b2"
        },
        "item": {
          "id": "53593ae2-8103-438f-9df1-0f5424a61a43",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fd67be66-21aa-4a7e-8002-b63476e0a77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb405bb-17f6-48aa-85d1-d6fc7a7a6a74",
        "cursor": {
          "ref": "1fb0c3c9-753c-477a-a7d6-4686fba31aa3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1b21c983-413c-407e-a386-374f61df6e7c"
        },
        "item": {
          "id": "edb405bb-17f6-48aa-85d1-d6fc7a7a6a74",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd659218-8c66-44c5-ac32-9f96808724d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db101cff-5774-468b-8ca2-b4e939dba010",
        "cursor": {
          "ref": "baf90f37-452e-4f45-ba50-aa4a98c8c550",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "24a08416-6433-48e5-a1ae-0d4e39039a2f"
        },
        "item": {
          "id": "db101cff-5774-468b-8ca2-b4e939dba010",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b21592aa-6e38-45a1-82a5-5702fe14903e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5e598b-c41e-495a-a9f7-6a217da75728",
        "cursor": {
          "ref": "6258a4cd-94c1-4750-b1bc-a95f9a90f3a8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "256a8a1b-dbb3-4723-b57d-f7389228301b"
        },
        "item": {
          "id": "1e5e598b-c41e-495a-a9f7-6a217da75728",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ddaf41b5-ef50-4258-8a77-40bac07d9a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb2cdd-6c53-47e6-b96e-767242570e38",
        "cursor": {
          "ref": "a4b307d4-5d74-49ba-a9f9-b7231b2adcf8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "475b9480-648d-44b5-95ea-aa6aaba8abec"
        },
        "item": {
          "id": "3ffb2cdd-6c53-47e6-b96e-767242570e38",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b8e077ac-393e-4c8c-b7fa-cfbff92398ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4cb176-8344-41eb-8189-26ecb255d351",
        "cursor": {
          "ref": "e8ac3d1b-c634-4213-a967-39ac9542571f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "befbcbb5-e0ac-4f34-933e-021d9ac38a98"
        },
        "item": {
          "id": "2c4cb176-8344-41eb-8189-26ecb255d351",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ef59aa54-a30b-4b8b-85ee-1860a542f1a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313d4cb4-0d13-488f-8227-8f9ae6808985",
        "cursor": {
          "ref": "cca17c2b-d291-40e0-b243-d9e80ec80377",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f36e4a91-8d47-442d-8cf2-5c5de9572af1"
        },
        "item": {
          "id": "313d4cb4-0d13-488f-8227-8f9ae6808985",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9e2875f0-9982-4c7b-a43c-15b449224c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "59663fd2-8f5a-4f87-93c5-cf4d029564c9",
        "cursor": {
          "ref": "ba417d10-b653-4eb4-b044-fc32131f5793",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "59f9fadf-f1d2-4187-943d-32d0b19de187"
        },
        "item": {
          "id": "59663fd2-8f5a-4f87-93c5-cf4d029564c9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "acfae9a1-2bab-476d-a5f7-dfdc8be8511a",
          "status": "Created",
          "code": 201,
          "responseTime": 8220,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aca2d0-1485-416f-81d8-5403cbc5e15a",
        "cursor": {
          "ref": "d93d63f7-5b1e-4754-826a-9a40c8562040",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "acd87433-5f6f-447f-aaf5-da0bbedf097b"
        },
        "item": {
          "id": "d1aca2d0-1485-416f-81d8-5403cbc5e15a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1124f32f-039c-4b5d-863c-dc7ca2ce6a4d",
          "status": "Created",
          "code": 201,
          "responseTime": 7573,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "da209514-48e0-400b-9e54-ab9f9c603615",
        "cursor": {
          "ref": "5b93bad0-ce6e-487f-a14b-078ee3ea4010",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "61c909ac-3215-45fb-9470-b4f0dc4c1bb1"
        },
        "item": {
          "id": "da209514-48e0-400b-9e54-ab9f9c603615",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "77bbfcbb-2379-41a6-a95f-c1d857d4f55c",
          "status": "Created",
          "code": 201,
          "responseTime": 7131,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ac974f-c442-4857-9ad7-2d1d35fc1dc4",
        "cursor": {
          "ref": "b2aad6d0-5bda-4dc5-9ed3-39d636d5e25f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "afcd8a9a-c50a-486a-b143-dcb800c7d232"
        },
        "item": {
          "id": "23ac974f-c442-4857-9ad7-2d1d35fc1dc4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e38d4af5-8764-4518-81e3-04377ec59235",
          "status": "Created",
          "code": 201,
          "responseTime": 7618,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab3302-2b47-4458-9cb2-4396fd72ee46",
        "cursor": {
          "ref": "91efc3fb-0cce-4650-a71d-eb4cf8aeaaea",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "50eafecb-ff7c-4fc2-bcd5-620c2aa34edc"
        },
        "item": {
          "id": "13ab3302-2b47-4458-9cb2-4396fd72ee46",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e1009c7f-dc9a-4b0a-be1f-0412e4a99dd4",
          "status": "Created",
          "code": 201,
          "responseTime": 7751,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-19T00:39:33Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-19T00:39:33Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "64531ddc-b018-41ba-b304-68afaa93b45b",
        "cursor": {
          "ref": "d0e97d36-3473-48ff-9532-963bd4037c41",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0394cf7a-900e-4698-b4b2-fa48d322b8c7"
        },
        "item": {
          "id": "64531ddc-b018-41ba-b304-68afaa93b45b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6d44bb8b-53ea-45e1-8ca6-b5ba98ad9edf",
          "status": "Created",
          "code": 201,
          "responseTime": 7452,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ecad69-3294-40b4-8658-0e1d0cb34312",
        "cursor": {
          "ref": "5bafd371-9e16-45f6-b0cc-4061ffd6fb1d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "12a93aac-d816-44d8-b3a3-b6233794716a"
        },
        "item": {
          "id": "67ecad69-3294-40b4-8658-0e1d0cb34312",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ddae785f-2b91-466c-84b5-fcde4430b671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573bb1d4-8e4f-4972-a0a1-f523bbbc1725",
        "cursor": {
          "ref": "ec67dd84-9da8-4c2f-ba3f-a44b343db9b3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "10e29403-5a46-4090-9fbb-3feb05e713db"
        },
        "item": {
          "id": "573bb1d4-8e4f-4972-a0a1-f523bbbc1725",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7237fd4d-35e3-49bf-b56a-45bc7105f0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee4eba1-c258-4b9b-907d-779ed462f1ab",
        "cursor": {
          "ref": "cba318cb-2500-4576-9f0c-397c17a63831",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "744e1264-0424-4fbe-afbc-81f8bd15b153"
        },
        "item": {
          "id": "fee4eba1-c258-4b9b-907d-779ed462f1ab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ee3c37b-0ecd-44e1-9231-f8dcf29032e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf32e8e-2438-4071-a13e-3918963ff901",
        "cursor": {
          "ref": "8af85778-5dc2-441f-b89e-48ba6e7da68a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8ee2131a-27c2-4e28-af69-fc2e3e2b0369"
        },
        "item": {
          "id": "9cf32e8e-2438-4071-a13e-3918963ff901",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "57f5dce7-6ce0-4ea7-bc97-dc0bbca8c27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dced95-c8b2-4345-b99d-104b50bbd913",
        "cursor": {
          "ref": "bc46fb80-c078-4215-9374-cf34f3908aff",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "01b8ad45-e166-4cb2-b903-85914531e9a4"
        },
        "item": {
          "id": "91dced95-c8b2-4345-b99d-104b50bbd913",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "504131ba-fe01-46c1-82db-37328671e6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b44c4b8-106e-4aeb-abb9-13e602f1b8eb",
        "cursor": {
          "ref": "0268f6eb-ac47-4cd3-aa1c-adb9329b2476",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0d0a0dcb-33d0-47ad-a8d1-72909d499951"
        },
        "item": {
          "id": "4b44c4b8-106e-4aeb-abb9-13e602f1b8eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5cd60b4-3604-4de3-a813-22b5aa9582cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d93c54c-d8de-4703-9dd9-a3d0de398a31",
        "cursor": {
          "ref": "22c406e7-3788-4518-b9e6-d1eb1497625a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a64cd2a4-bde3-43fb-8ffd-475a511a939f"
        },
        "item": {
          "id": "9d93c54c-d8de-4703-9dd9-a3d0de398a31",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "798cb12d-eaea-4760-b07b-9e83599d1b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52aed2a-0f8f-483c-9ad1-fa231e4624d6",
        "cursor": {
          "ref": "338d37d5-2a4a-4ba8-b0e4-49f0620ec5be",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "31f3030b-74fb-4495-a564-0f516926d9f6"
        },
        "item": {
          "id": "b52aed2a-0f8f-483c-9ad1-fa231e4624d6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c78f3f19-13d4-4174-9079-159a8727eac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5c8297-aebc-4b27-baa6-4865ee080e43",
        "cursor": {
          "ref": "3a9988ae-d74e-45d7-83e1-9c1a6b5b5ad9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5215db82-886d-495e-82e1-30ca41612bbc"
        },
        "item": {
          "id": "3a5c8297-aebc-4b27-baa6-4865ee080e43",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cf792bf1-a717-47bf-b4d6-5b20f5b45be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae7ae6c-3437-498a-8da4-a050105bc5b8",
        "cursor": {
          "ref": "73f20d8d-5194-439f-8ad1-b6ecca561413",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e862625b-e60f-48b7-b3a7-b51841ec579e"
        },
        "item": {
          "id": "cae7ae6c-3437-498a-8da4-a050105bc5b8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a1aaa2cf-7e8a-4017-bd24-0e1b15ab529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2ed4ca-5043-491b-b547-6a97849ff7f1",
        "cursor": {
          "ref": "d56a3e40-91d3-4f8a-b58a-0059a65048d0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8326f997-4ee4-4167-95f4-9d132de265c1"
        },
        "item": {
          "id": "fc2ed4ca-5043-491b-b547-6a97849ff7f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1166f6de-7e65-490d-ba00-db3db6734970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1e5a18-01cd-48be-a970-94913fba4f05",
        "cursor": {
          "ref": "c316902a-866c-42a0-adc6-bc8c9bccc731",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "85e8bad1-4316-4b77-91f4-a7114ef418b8"
        },
        "item": {
          "id": "7c1e5a18-01cd-48be-a970-94913fba4f05",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "858296e3-4b92-4a51-8dc3-6ff98ceb50e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd49ce1-5096-43cf-887f-1390000b9255",
        "cursor": {
          "ref": "70f5df09-e3fe-4db3-8a0a-24eedc3dc8b6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b2b3d178-d808-427f-aeb4-ea309333d33a"
        },
        "item": {
          "id": "5cd49ce1-5096-43cf-887f-1390000b9255",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c794cd25-1ad1-4581-bed2-09ea7db94ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62295d4-eaff-4da6-acab-95c97f81af39",
        "cursor": {
          "ref": "04e7158e-23c3-44b7-9ffd-53e987e62abb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38291cec-7586-4da5-bf95-73ac328cf48c"
        },
        "item": {
          "id": "b62295d4-eaff-4da6-acab-95c97f81af39",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6f824011-19ee-4bf9-a176-7c3a0274d2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddd4412-a501-4420-a5f4-4bfb0be05a6f",
        "cursor": {
          "ref": "e038fbb3-ea4a-4902-94c2-2af57166fbd5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "47a4c598-63cb-4000-84f6-fd8e176fc098"
        },
        "item": {
          "id": "8ddd4412-a501-4420-a5f4-4bfb0be05a6f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "383c88a3-e6ad-42ce-8cee-5780b9c83967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8537ef14-e027-41da-9894-0e8c177f0ad8",
        "cursor": {
          "ref": "788e5d88-1fcf-4c66-8953-4aa9d96bd69b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "effa04a4-63e9-4707-a978-204a24d229ca"
        },
        "item": {
          "id": "8537ef14-e027-41da-9894-0e8c177f0ad8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6842b5d3-f69d-4d15-8a3d-7f0ce2318014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca6051a-92fa-484e-beef-87a426486089",
        "cursor": {
          "ref": "8d8965ca-04ab-44e3-945f-6d21f007a44d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c85041b0-edcf-4497-85b8-c219d0c60105"
        },
        "item": {
          "id": "8ca6051a-92fa-484e-beef-87a426486089",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a16bb588-cb29-4b46-8d81-6f2e9fce6ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3487a6e-15b2-4bb9-95df-ada349b3b08c",
        "cursor": {
          "ref": "33b87a6e-6645-4fb9-bf76-8f661ac4422e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e6038102-5bcd-4314-9152-007934bcfc6c"
        },
        "item": {
          "id": "b3487a6e-15b2-4bb9-95df-ada349b3b08c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6f0c936-2007-415f-9a49-fd04818cdad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be6b75b-6e8b-4f65-bbe7-140fa51480e1",
        "cursor": {
          "ref": "98650167-d311-49ea-8fb7-13cc761cc075",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "14ff5266-afbc-4fc9-8c9a-ccaabf5f5a17"
        },
        "item": {
          "id": "7be6b75b-6e8b-4f65-bbe7-140fa51480e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "18a33f7c-32d0-42ec-a32f-854a845cab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60d4117-2039-429c-abbc-de1b55dbe82c",
        "cursor": {
          "ref": "0354c2a6-f02c-4116-9a71-b015121f0a0e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e6d2d7ae-b51b-48ec-be63-47ac8e4b55af"
        },
        "item": {
          "id": "b60d4117-2039-429c-abbc-de1b55dbe82c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c1ccf05e-9028-4ec9-ac7a-43b03a5993b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49451284-aef9-4c9f-958b-3a06dffbf023",
        "cursor": {
          "ref": "d3add29a-f9a4-4440-9d1e-a05bd65041fe",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7a95835c-b417-4076-a709-c7cd2a103394"
        },
        "item": {
          "id": "49451284-aef9-4c9f-958b-3a06dffbf023",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "970de9d4-9996-48d0-9db6-7723780170e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0117df0-1356-4d48-95b3-75005199a1a7",
        "cursor": {
          "ref": "8d99479a-a0c0-4d94-8571-201e522b82a0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b788d2f8-3166-4502-b8c3-c048bf2d90e6"
        },
        "item": {
          "id": "c0117df0-1356-4d48-95b3-75005199a1a7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5739d69e-e3b9-4bdf-a4f5-340a1f8fe0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7db146-ed46-472f-9754-f3d89144e73f",
        "cursor": {
          "ref": "00a7851f-3c67-4442-84ea-ea5dfc78747f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "331dff5d-2025-4991-8cb4-ddfbe40ff2f0"
        },
        "item": {
          "id": "de7db146-ed46-472f-9754-f3d89144e73f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab5c1e25-3dab-4f9b-b59d-824da280b2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2b0bc-f0cc-41ec-a026-16f3c82c2d8d",
        "cursor": {
          "ref": "1717c6f6-f046-4ab5-bee4-84ed95b9388d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "db1763a8-520a-43a5-a51c-337d6097c676"
        },
        "item": {
          "id": "adb2b0bc-f0cc-41ec-a026-16f3c82c2d8d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "11698660-1aa3-436d-81ea-971439f2d2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc484c9-e7a3-4539-82e7-15df58591ccb",
        "cursor": {
          "ref": "852725bc-deed-4fcb-9254-37cc99df14ed",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c599a72a-8e67-4467-9229-f831cb731204"
        },
        "item": {
          "id": "7cc484c9-e7a3-4539-82e7-15df58591ccb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9dc878d5-f4c3-4c2e-974d-8721d21a9e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d8e1a3-0ee9-45b9-b0b1-ae0c7df0f5e6",
        "cursor": {
          "ref": "a8645282-6757-45f0-a343-d7ff7b454be3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "66014e9e-50fd-491c-a309-90fc21809b3f"
        },
        "item": {
          "id": "38d8e1a3-0ee9-45b9-b0b1-ae0c7df0f5e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "33d2bf7e-f7bf-4134-ba0b-dd0810e47e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909e3f35-67c4-47f9-ad38-311286821c21",
        "cursor": {
          "ref": "6068b6e9-276e-45fe-9ebf-1a0cd5641ada",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "038694a3-a15b-47d4-b784-2585fdef6418"
        },
        "item": {
          "id": "909e3f35-67c4-47f9-ad38-311286821c21",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac3068ee-40a8-440f-ba6f-949df8f015cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba88125-a6e8-480a-bf38-7cbae3d13362",
        "cursor": {
          "ref": "146b7ec5-44a5-405a-bfa8-029e31904750",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "941169f7-c3c5-4fee-bcb5-a7786f17981f"
        },
        "item": {
          "id": "6ba88125-a6e8-480a-bf38-7cbae3d13362",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8e5113ad-a40d-4ebb-b3fa-773ba572a987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38355fd-f7b3-4460-b37e-ab610973c527",
        "cursor": {
          "ref": "df413fbe-a1cd-49c2-b355-7facfe371c12",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d09e675d-b993-479e-baae-96ad3cd28b9f"
        },
        "item": {
          "id": "d38355fd-f7b3-4460-b37e-ab610973c527",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6792e971-cad3-4a19-8cbb-6e6b8ca1d9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068b5c7c-e8aa-4264-9b9f-59417c1ab87a",
        "cursor": {
          "ref": "8f1fba82-4531-4089-96e2-9bd6e143a8fd",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "edda21fa-1e63-4233-93b9-4d336923b72a"
        },
        "item": {
          "id": "068b5c7c-e8aa-4264-9b9f-59417c1ab87a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c9f169c3-7f73-4d21-93c6-78666dc9e005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dcfa1d-f47c-431f-a102-8cf99a2f2e40",
        "cursor": {
          "ref": "07cc84c9-376e-47f4-a29e-7a527d48f722",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e91faca8-60f7-42ae-8dd3-b541c26fb4ff"
        },
        "item": {
          "id": "70dcfa1d-f47c-431f-a102-8cf99a2f2e40",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0dca5a58-f5a7-46bb-8c25-ced550f12bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4075b9-27b2-4ecf-b5dc-2461e7266914",
        "cursor": {
          "ref": "6bb222f7-04b1-447a-aa53-90c125fbde04",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0b891205-8cc4-453c-91d9-6e632c1b420b"
        },
        "item": {
          "id": "5d4075b9-27b2-4ecf-b5dc-2461e7266914",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b9714689-a944-4427-8152-abc04f7824ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a9abc1-fff6-45fe-be8b-140ffebe525f",
        "cursor": {
          "ref": "75b3bcc0-9272-4183-9f8e-2f6adf04dd82",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "23ba6e22-03f6-4658-80bf-55956d5b2751"
        },
        "item": {
          "id": "49a9abc1-fff6-45fe-be8b-140ffebe525f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f908152e-597d-4721-99ce-a558df03ccff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33789f7b-ee70-462a-b6fb-abf454ed6eaf",
        "cursor": {
          "ref": "63802918-3c66-4d23-9702-63fa42d8e375",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "42d4252f-e9ad-457d-ad91-bad050d34db4"
        },
        "item": {
          "id": "33789f7b-ee70-462a-b6fb-abf454ed6eaf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5354f57b-74c1-496e-b125-2900177874c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e826efb2-20f0-49cb-8a9a-b319c2053f55",
        "cursor": {
          "ref": "638643c0-8368-48e5-a2ac-f4df689a8d7e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "838c0128-6021-4941-a700-71fb1ef35c7e"
        },
        "item": {
          "id": "e826efb2-20f0-49cb-8a9a-b319c2053f55",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9d0afb62-6095-4da1-97eb-a48adda7399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd87f06f-ed5c-4b91-ab89-750faa8e2f11",
        "cursor": {
          "ref": "f5777fd2-ca74-43cc-b785-1f2e993e6eb9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2bdb528c-4b26-4e4a-b12f-c9997b88a899"
        },
        "item": {
          "id": "bd87f06f-ed5c-4b91-ab89-750faa8e2f11",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1472eb7c-89ec-4aa6-bc36-243b63f57047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef35381-8822-4dce-95d7-4ab2f1e5e9af",
        "cursor": {
          "ref": "5d4501e6-0c26-4508-b7a8-2a122cb328f6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "be774ff1-69ce-481c-a06b-1cc704eb3fa4"
        },
        "item": {
          "id": "9ef35381-8822-4dce-95d7-4ab2f1e5e9af",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7ef58576-e767-4e3b-bb9d-a0c698833292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb48726-23f7-4805-b50b-018d2d6b871a",
        "cursor": {
          "ref": "c1931941-a285-445b-a0e7-02c8df34931e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b52a8e73-a54e-4ed2-a3f4-a1b7c2c94338"
        },
        "item": {
          "id": "bfb48726-23f7-4805-b50b-018d2d6b871a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b2c3068-38a2-4655-a120-8721fbf6ea1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c37fcd5-c37e-46f3-b807-2f04bf3885a0",
        "cursor": {
          "ref": "cb05cc26-7e06-4bbd-9549-8ded8eb49556",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2ba68f12-7c80-491a-bfd5-3c186957844d"
        },
        "item": {
          "id": "0c37fcd5-c37e-46f3-b807-2f04bf3885a0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6e5ab67c-0fb6-4f99-9082-727c793c2a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1140ef-6e8f-4148-b40f-7a95c72fdef2",
        "cursor": {
          "ref": "28b5bca2-1227-40d4-afa0-a51291a8a9e3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "84179383-12d3-405f-8d4d-4c93b3291ff2"
        },
        "item": {
          "id": "3e1140ef-6e8f-4148-b40f-7a95c72fdef2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a1e83b4b-bf7c-4902-b685-5e99536cf31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922c8219-d29e-4e13-bdca-35b0bfce2104",
        "cursor": {
          "ref": "6d8c86b9-db4e-4a8f-96f8-92de713c1222",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "64f2a35a-2a30-42a7-9116-014656e3f063"
        },
        "item": {
          "id": "922c8219-d29e-4e13-bdca-35b0bfce2104",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b4121340-1b03-4040-8cff-6d3db99af5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d4920e-cc3a-4e2c-b84a-9d72d638976e",
        "cursor": {
          "ref": "eb3ebc40-7a72-4e4d-b659-9c4c4dad55fc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "46a681c7-cf36-48e6-b854-a48a0f298c7a"
        },
        "item": {
          "id": "f0d4920e-cc3a-4e2c-b84a-9d72d638976e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c8ee6553-3c45-466b-ab85-63c25f559f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab701211-c1f4-497a-8369-c41471cfd42e",
        "cursor": {
          "ref": "80b60117-c17a-4915-bab3-f64367744c81",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9dd1094f-ef1a-455e-8e89-aa4ef9fa9d46"
        },
        "item": {
          "id": "ab701211-c1f4-497a-8369-c41471cfd42e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "636b1a45-a7fe-4fc6-9c5f-336903a199b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b76e2d-fe3f-41f2-b4fd-1a8385a95e94",
        "cursor": {
          "ref": "15bcc684-a722-40a3-b65a-65c2a5e9d60b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5329df8e-8789-418b-9791-2c88109ef702"
        },
        "item": {
          "id": "23b76e2d-fe3f-41f2-b4fd-1a8385a95e94",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "91f0c6a1-e167-4624-9b2e-1811299a46df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30d6d0e-bd9d-4bdc-b43f-f3f51e370a3a",
        "cursor": {
          "ref": "3e783442-d8a2-4a69-a0e5-9bd221f95985",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f0aa5f83-5f0a-4b22-bde9-868e797e7772"
        },
        "item": {
          "id": "c30d6d0e-bd9d-4bdc-b43f-f3f51e370a3a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6093b3a8-8ba6-4236-816d-ab56c0d523fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412adac3-1a43-4f2a-bec2-a130230c8672",
        "cursor": {
          "ref": "99d40363-ccbc-48dd-8e68-af0c2f21ac37",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ba37f20b-3ac6-4e45-be84-c153920c7c0a"
        },
        "item": {
          "id": "412adac3-1a43-4f2a-bec2-a130230c8672",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4609cadd-1bfc-4a54-9361-d6b95e0790fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa13667-95a4-48f3-a17d-7f21bce4d6bf",
        "cursor": {
          "ref": "41f8f085-0772-485d-b3b4-6e835fb40431",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "56ed3b70-a4bb-4b86-907a-66a79185be03"
        },
        "item": {
          "id": "1fa13667-95a4-48f3-a17d-7f21bce4d6bf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7b120f07-5777-4c19-81c9-4633d7ae0efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b3b81e-ceba-4a40-97d8-a048c14164b8",
        "cursor": {
          "ref": "59921d11-9829-4a8d-a7fb-e01d4bf93301",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "979bafc4-cfc7-4e89-befd-e3137ee3032f"
        },
        "item": {
          "id": "87b3b81e-ceba-4a40-97d8-a048c14164b8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bff3684c-0d74-4ef1-bb53-bdc7d2ee00aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bfd42e-7126-4c1f-9eb7-10fc7072d205",
        "cursor": {
          "ref": "66b2e33a-ce48-46d8-b1f4-311fef9913d4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ca7d22d4-5ccc-49b6-935c-2a265839cb55"
        },
        "item": {
          "id": "c9bfd42e-7126-4c1f-9eb7-10fc7072d205",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8652584c-8262-422c-86b8-5096c1a32a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c81a04-e279-4bd7-a733-6f393dc5d9b0",
        "cursor": {
          "ref": "0399dacd-24b6-41e3-bce6-adc7e7303f3d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2d9848ee-9143-469e-9cd1-66b2d2f8ec38"
        },
        "item": {
          "id": "67c81a04-e279-4bd7-a733-6f393dc5d9b0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e9db8543-d51d-488a-8607-379c67ce3869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8968951-e902-4643-b4f6-12956b9a46a1",
        "cursor": {
          "ref": "6fe44ac4-6e40-45b0-9e90-3f8a8cf1d97b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e6d832b2-0664-4fe5-9d64-43308486acd1"
        },
        "item": {
          "id": "a8968951-e902-4643-b4f6-12956b9a46a1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1d10a7a7-4687-48e5-941a-bd40b9d87bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8285120-334a-48b2-9d32-044acd341310",
        "cursor": {
          "ref": "636574ee-8c09-4686-b2c1-97930bb6f007",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3d254edd-14d0-44f2-a37c-35160c06f740"
        },
        "item": {
          "id": "e8285120-334a-48b2-9d32-044acd341310",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c55d3859-f21c-4f11-b7cc-c152332856d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0780f8d9-0766-492a-8754-0862cd18cb8d",
        "cursor": {
          "ref": "e3684b20-7b58-4da8-9abd-ae61a58bb980",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "066f5982-95c4-49a6-b191-d1b18c61a543"
        },
        "item": {
          "id": "0780f8d9-0766-492a-8754-0862cd18cb8d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e5b75151-11ed-49ec-accf-0b28ac59fdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cda6ef-ef20-447e-a2ed-aed23bcbbd3b",
        "cursor": {
          "ref": "f66fcee8-c287-4772-a0e3-9666cf17adec",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "866c4021-4754-45f1-8811-ad2f2b2a8350"
        },
        "item": {
          "id": "c6cda6ef-ef20-447e-a2ed-aed23bcbbd3b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7c641ad4-d49e-4b7a-a0c0-6cb2dfcfeadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2390801-e24f-41f0-9211-bb08b59066b8",
        "cursor": {
          "ref": "d01e1e37-3d9c-4b60-a70e-6649e42a604c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "471c21d7-6c24-4f19-a5aa-5cfd55569417"
        },
        "item": {
          "id": "d2390801-e24f-41f0-9211-bb08b59066b8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "70c7143b-0ae6-4069-b041-74abcbf08216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a06020-d59c-47f3-bb04-0366177bdb80",
        "cursor": {
          "ref": "80efa404-c839-49aa-8edf-60e728d80b69",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8576673c-cf95-455a-a452-f8fae828d2b7"
        },
        "item": {
          "id": "a7a06020-d59c-47f3-bb04-0366177bdb80",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f2a41985-0311-4618-a35d-aa3d659874ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e25a8a2-6d0e-4e77-ace1-1ec9b260c59a",
        "cursor": {
          "ref": "212be7d7-492e-400a-b324-92eafb75c1b3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "afcfb5f1-af21-41b4-9f53-c111a71083b4"
        },
        "item": {
          "id": "9e25a8a2-6d0e-4e77-ace1-1ec9b260c59a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4364aaab-c9f6-4fc9-a1e8-5fdb2db3ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88e206c-5487-4fe0-a698-49eb13eab82a",
        "cursor": {
          "ref": "1671be51-c0ba-49c4-b384-072eec4e641a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ef5df42-6369-4fea-9d28-cf8668fa4817"
        },
        "item": {
          "id": "b88e206c-5487-4fe0-a698-49eb13eab82a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d03dcba2-2bac-4937-aa45-30c979576048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7023543f-e23e-412b-81c7-03a22e1aa2b1",
        "cursor": {
          "ref": "ceeba22a-61ab-4f54-927e-4fe1f6b4959b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "17b78aba-22ff-4edb-b084-454b839558ae"
        },
        "item": {
          "id": "7023543f-e23e-412b-81c7-03a22e1aa2b1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ff607775-9bf9-40fc-92ac-5f97ff6654c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e942944f-bfe3-4f92-8f26-25cf71faa23f",
        "cursor": {
          "ref": "d065253c-45b2-48c0-9457-4f795340bb98",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "48422bab-87cd-48fb-824a-31cb896660cc"
        },
        "item": {
          "id": "e942944f-bfe3-4f92-8f26-25cf71faa23f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "290a3ef7-89d7-4850-91a7-b18649276e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b18fa4-8047-4229-a96e-6da8657591a4",
        "cursor": {
          "ref": "3d852e68-aa92-486c-9a36-742c7432012e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "635c84fe-fe21-4ad0-845c-8e9fa7156ae2"
        },
        "item": {
          "id": "57b18fa4-8047-4229-a96e-6da8657591a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c379ca17-447f-4aae-92d9-4960b0f61345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18beffe0-d1fe-4b05-84f6-e1610b9ea302",
        "cursor": {
          "ref": "c8b00f9f-11df-4f73-9f6a-99319f61a2dc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "55e0e142-dda2-4570-8c43-3a2943ebc495"
        },
        "item": {
          "id": "18beffe0-d1fe-4b05-84f6-e1610b9ea302",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "23a0bb9d-7050-4320-8ccb-d2ccaafd0b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d59fab2-6e1f-4ead-87fd-dec492234ff1",
        "cursor": {
          "ref": "16a6b493-f7b4-413e-9a19-def33c237260",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eb107b70-00fb-4c78-9a62-e97905e19a25"
        },
        "item": {
          "id": "6d59fab2-6e1f-4ead-87fd-dec492234ff1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "95a4a87c-10f1-432d-ae91-585b9fb74e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e954738b-286b-449c-a692-3e2bf065468c",
        "cursor": {
          "ref": "1508bd30-3862-4105-bd34-d6dc5341ecbb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2bcc2d4e-05fe-4f57-846e-d8bb18bfacaf"
        },
        "item": {
          "id": "e954738b-286b-449c-a692-3e2bf065468c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bf679e2b-538e-48ef-85de-53ac19440a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f22cf05-0f58-4df4-9f2d-0c0cd036f5b7",
        "cursor": {
          "ref": "4d56db93-a881-4be6-b7af-27acbe824ea9",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e069f014-7d9f-40f2-887d-424bd20d8480"
        },
        "item": {
          "id": "0f22cf05-0f58-4df4-9f2d-0c0cd036f5b7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ae45d3c-19c8-486b-97e6-145918113ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade64012-b399-4fe9-836d-adb6cc8e1066",
        "cursor": {
          "ref": "4140a8d8-596b-4a85-9c9c-6e54960c0e42",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b80c5cb-5ef2-42dd-97c1-ca0e226ba2c6"
        },
        "item": {
          "id": "ade64012-b399-4fe9-836d-adb6cc8e1066",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b8b04fa8-597a-4fd8-8444-7f563039fb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec520af-41db-4b4c-a7df-5e075c4e80a4",
        "cursor": {
          "ref": "3e125446-a7ef-4963-bfce-32c013ad0f64",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "966d7f14-3c22-4419-8ef9-73cb06f07190"
        },
        "item": {
          "id": "bec520af-41db-4b4c-a7df-5e075c4e80a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e53cfa8b-a493-40a0-ad48-81c2a4692986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3890c9cf-2e3c-48e2-8621-ba751b51b07a",
        "cursor": {
          "ref": "74cc4330-8bc9-4dca-81bc-31f686f3af26",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9fcde946-65ec-4e8b-b710-646c22c00bc7"
        },
        "item": {
          "id": "3890c9cf-2e3c-48e2-8621-ba751b51b07a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "513d7148-770b-4727-b8a3-40aef505d987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62001de9-fc6d-4310-a6dd-180853f0d9fd",
        "cursor": {
          "ref": "c3424caf-9d37-4d4b-aec5-2d48d4d83076",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ee7a469d-8774-4dd4-b660-2991cffff923"
        },
        "item": {
          "id": "62001de9-fc6d-4310-a6dd-180853f0d9fd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8aecb182-ddc1-4cc2-81fc-3d0ab7ae5916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12582ed0-8250-4ce2-a9f7-51a828972e28",
        "cursor": {
          "ref": "bda93d1a-9d03-4825-a4fc-9d51fa6fd25c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "60e5f79e-25ff-40d4-a0ab-5e1960df0a5c"
        },
        "item": {
          "id": "12582ed0-8250-4ce2-a9f7-51a828972e28",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "750d9ff9-1579-4cca-a8cb-464b65cf304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eda7aa-4d4d-495f-8d63-9c602246f565",
        "cursor": {
          "ref": "48b67ed9-4f27-4072-9d1b-535604ccf6ea",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "80732623-182d-4530-8eeb-05611e06c493"
        },
        "item": {
          "id": "14eda7aa-4d4d-495f-8d63-9c602246f565",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c193e551-21c4-4061-b0da-3b921b97855e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147358f5-9cc8-43bf-a6ff-58ad1a8f8159",
        "cursor": {
          "ref": "5e67160f-5e40-485d-b817-9523c8c6045d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a30da1f3-744f-4559-af76-031d519f62d8"
        },
        "item": {
          "id": "147358f5-9cc8-43bf-a6ff-58ad1a8f8159",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8420dea4-72a5-4adb-b86c-720c3e508792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68911648-93ca-48e0-9b22-821a80569663",
        "cursor": {
          "ref": "b4d2de27-956c-46c5-b91c-778ea58511dc",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f9a3e587-8227-4d07-b4a2-a8f2d91bf73d"
        },
        "item": {
          "id": "68911648-93ca-48e0-9b22-821a80569663",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c9ed3c1a-e7f7-4642-a3fd-ea9182968b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2426e138-f23d-4539-ba6f-bfc25274ba95",
        "cursor": {
          "ref": "ed56e260-e123-4b11-896c-b9e990a7ecdd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9f138ca2-6ddd-4552-9339-a565586914a6"
        },
        "item": {
          "id": "2426e138-f23d-4539-ba6f-bfc25274ba95",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "da0276b0-2160-4171-b7d7-9babf14e547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547dacd9-6ebe-4608-b23e-f7fb49bb6653",
        "cursor": {
          "ref": "c428cf8d-ad74-4242-894d-32ec394e9348",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0e7df752-b527-4261-a84c-0733fa702ed2"
        },
        "item": {
          "id": "547dacd9-6ebe-4608-b23e-f7fb49bb6653",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "de02cd0e-370c-4370-95fb-5929da0d1103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768fb571-0626-4273-a763-fcadde36c922",
        "cursor": {
          "ref": "b16a428b-2b66-495b-971b-5eb57424e948",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2cc246c2-6bf5-40fc-b740-2d2e34c48755"
        },
        "item": {
          "id": "768fb571-0626-4273-a763-fcadde36c922",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a182640b-d629-4ad0-8e6c-77025adc2589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1395b-b5d6-436e-b24a-3d4f078c7d69",
        "cursor": {
          "ref": "8b9a3837-80f1-4ae5-a0b9-72c815a1a8a4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "291c4226-a232-470a-bde6-1e5baf47b66d"
        },
        "item": {
          "id": "73e1395b-b5d6-436e-b24a-3d4f078c7d69",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3c8e0eac-6903-4275-a8db-74b9eda9b7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23ab588-bf38-447a-984c-ed4da36c5b07",
        "cursor": {
          "ref": "745aec2a-140c-4e03-a2ab-8b02dbfd2edc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "543c0c6c-7d57-43c9-800f-17ef122270d4"
        },
        "item": {
          "id": "a23ab588-bf38-447a-984c-ed4da36c5b07",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3b6cf1ce-a81c-4a91-badf-0448236b2336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e332e50b-0eb0-4c14-b393-843f491c887d",
        "cursor": {
          "ref": "48dda786-c5e5-4acf-8853-deabcbdd557e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7713707a-2725-41f5-a0b8-7f663ec9a283"
        },
        "item": {
          "id": "e332e50b-0eb0-4c14-b393-843f491c887d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d9a74c8a-390a-4142-847b-ac09c476f67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d2dd8e-fd20-4621-9b65-86981efa4f0c",
        "cursor": {
          "ref": "4a44a034-0c07-4304-a54c-8d86d1f77991",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "287d662e-73f0-4809-9818-849f7c11b44c"
        },
        "item": {
          "id": "07d2dd8e-fd20-4621-9b65-86981efa4f0c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7480dd9b-a8a4-4028-a1ab-c14fc9916759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca82e2a-a02b-46e9-a592-1faedeb310d7",
        "cursor": {
          "ref": "4f78daf7-a585-447f-85d8-3e321d6293bf",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4064a7f0-9b8b-4d9d-860d-a7b8184d8438"
        },
        "item": {
          "id": "cca82e2a-a02b-46e9-a592-1faedeb310d7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "13cb5edb-37ca-4761-930d-54bcddb96218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f09ce22-301e-4757-9077-2d162e961454",
        "cursor": {
          "ref": "5308d110-1520-4966-827e-172548952df5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1e000e9c-6f23-4c73-9e47-7c1c35e64e00"
        },
        "item": {
          "id": "2f09ce22-301e-4757-9077-2d162e961454",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c987d4be-f77f-4a1b-bbf5-4929efabb090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a7092c-c3d4-48b9-8036-ba0b31a8b444",
        "cursor": {
          "ref": "90265e07-0061-4e21-9c16-8724abec1191",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "39d732f0-c1dd-4d01-94b8-bd414ea8363a"
        },
        "item": {
          "id": "10a7092c-c3d4-48b9-8036-ba0b31a8b444",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0505faca-d97f-41f9-8272-36f8127cf0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9332e5-9ec8-4a55-8d1b-aeda8ba3816c",
        "cursor": {
          "ref": "a3ca41ef-636c-41bf-88a1-3fee7d305fc2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "80680365-216c-4b18-a7c9-e1dbc0191ced"
        },
        "item": {
          "id": "ca9332e5-9ec8-4a55-8d1b-aeda8ba3816c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8ae91f7f-fd96-42cb-bb6f-b71bac2ca42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db488858-595e-4f31-a838-93e95cc4bbdf",
        "cursor": {
          "ref": "f5f755bf-ae5f-4837-b0a1-108443976004",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "585f06f7-bb1f-4371-b751-5df21af737c5"
        },
        "item": {
          "id": "db488858-595e-4f31-a838-93e95cc4bbdf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2c610c7a-9df8-4e5d-812f-025c6a127365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5cb014-6c93-430d-8bf3-afe6c3eab73a",
        "cursor": {
          "ref": "7254a862-b8ff-4d6e-86ef-e936b4bf303b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c51f7484-c951-4a1b-a00f-f8d5194c7166"
        },
        "item": {
          "id": "cf5cb014-6c93-430d-8bf3-afe6c3eab73a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1ae85dec-d7c5-4014-aec9-1bac16f45f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e47cd73-671a-475b-98cd-f155aa9a5176",
        "cursor": {
          "ref": "0232c05d-72bf-42e0-8dcf-57b646d4ce53",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "32508da9-154c-4469-8aa6-5dfc7e44a08f"
        },
        "item": {
          "id": "1e47cd73-671a-475b-98cd-f155aa9a5176",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "06cf66e1-1c29-438a-846a-3fb1e0db3e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54b3344-0eb2-4858-aaa1-bc468a51c277",
        "cursor": {
          "ref": "acdad487-3773-448f-aadb-d769dfa39737",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e6b3f146-34c3-4d9b-aed4-8e0bedb3c70e"
        },
        "item": {
          "id": "f54b3344-0eb2-4858-aaa1-bc468a51c277",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "46bf0b3e-7e07-49c1-9b94-10ddcbce186a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0dd5be-a864-4c67-868f-c5454a5acfce",
        "cursor": {
          "ref": "0d7966c0-60ef-4fa8-9031-10cb5449d902",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d7d20a11-28ca-4306-8ceb-6bfacf0061ea"
        },
        "item": {
          "id": "7c0dd5be-a864-4c67-868f-c5454a5acfce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b9e6de89-50c3-465c-aa18-814b4509dbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f5949-cb9e-4fff-a855-1b12c6037030",
        "cursor": {
          "ref": "23adc84b-ef52-4abe-8a54-678e0826d871",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "13c62a7b-8466-4ee9-9d81-651e762441fb"
        },
        "item": {
          "id": "a17f5949-cb9e-4fff-a855-1b12c6037030",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "98d5883b-9d05-4ce7-a275-7d7054d408d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17815560-9cdc-498f-8061-a071c7d97b11",
        "cursor": {
          "ref": "4be5638c-17a8-4a98-b704-c8de34731ba5",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1a3f7516-21e1-4e46-ac00-65e1a24dbe74"
        },
        "item": {
          "id": "17815560-9cdc-498f-8061-a071c7d97b11",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "197261b9-8147-4498-b25d-31019cedf7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c60eda-7d5c-4cff-87ac-79a5a6bcbe9a",
        "cursor": {
          "ref": "2f6578e6-f9c4-49a2-8e92-ae58cdc96ba1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e3f4082b-a4f1-4053-a3c4-82953abd7939"
        },
        "item": {
          "id": "05c60eda-7d5c-4cff-87ac-79a5a6bcbe9a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1c733288-3109-4b83-8e02-19e3c609a4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed061943-1cb0-40a9-98b3-0235622abda0",
        "cursor": {
          "ref": "5fc1d297-0c6a-46e2-af2f-8ecd2cd161c3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "503e9138-0ba7-420d-b20a-c85f22b9aa28"
        },
        "item": {
          "id": "ed061943-1cb0-40a9-98b3-0235622abda0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b7b6afa-043c-447a-a77d-a033ac358d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad18f2a5-0fc0-4b8c-aade-87b2a36e609a",
        "cursor": {
          "ref": "f531b50e-7ce5-4328-99b9-7a9373ee317d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c6566d2f-ba1b-40cf-856b-8a280c56ffca"
        },
        "item": {
          "id": "ad18f2a5-0fc0-4b8c-aade-87b2a36e609a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8f2c14a2-6c5b-4248-b658-b7bab50c5f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ddf9dc-d2da-415a-a631-c21e9099d690",
        "cursor": {
          "ref": "5e831dca-172f-4891-beba-35ca903066c3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "db9ad6bf-600b-4dae-a175-d5f12dbb78b3"
        },
        "item": {
          "id": "a9ddf9dc-d2da-415a-a631-c21e9099d690",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "799349f6-0e5c-4442-8ac1-3be74e72c4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a6dfda-b226-4c64-888a-9233edcb4851",
        "cursor": {
          "ref": "862a9efb-67ef-4b55-9b14-a84b6fee9551",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bfcd9ac8-2569-47e9-9260-b462e2cc7f16"
        },
        "item": {
          "id": "06a6dfda-b226-4c64-888a-9233edcb4851",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d8deb381-3fae-40a4-b955-edf2dddebcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97a8d98-cacf-4ff9-99f2-04b81729dfce",
        "cursor": {
          "ref": "cbbca258-fbe2-437b-8658-0b44ebf84a92",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f5246580-0cc0-4118-816f-2b586d4b366c"
        },
        "item": {
          "id": "c97a8d98-cacf-4ff9-99f2-04b81729dfce",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "81260f11-a0fa-4ce9-87d9-778a374c1daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bc2d73-f5aa-4938-af6f-70853df45a2f",
        "cursor": {
          "ref": "ece2381e-6de3-4133-89f2-ce695821bac1",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "198d3afc-3045-455b-9f1c-140deace0e9e"
        },
        "item": {
          "id": "34bc2d73-f5aa-4938-af6f-70853df45a2f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4e9bc7b9-c2bd-4cab-9e3b-af459f859ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc7bad5-32e5-4119-aa77-96c5c3a4a2c3",
        "cursor": {
          "ref": "7adabb5b-2e89-4767-bbd1-6117e94d7af6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cc3fda73-114c-4db8-9e7f-4d477616a66e"
        },
        "item": {
          "id": "7fc7bad5-32e5-4119-aa77-96c5c3a4a2c3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2a05e839-c880-4b2a-9722-683247ac6b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbc42e3-8986-4432-a89b-bad2a33158bb",
        "cursor": {
          "ref": "158a71d2-3775-4f82-b4c9-f35a8d7f0e65",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b97e8080-9031-48d4-b7b1-8a520a7282ee"
        },
        "item": {
          "id": "6cbc42e3-8986-4432-a89b-bad2a33158bb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a8ac5b98-5b90-4a92-b79e-86c02ec9cd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788fdab7-3a3b-41be-b5a9-8d1b04bf8596",
        "cursor": {
          "ref": "49e4857e-141e-4e4f-836e-7f98591d87ad",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "854bf0a7-699a-4c01-a25a-f3281da90337"
        },
        "item": {
          "id": "788fdab7-3a3b-41be-b5a9-8d1b04bf8596",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "710ad61c-959e-4895-aad4-362cbba575a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5135c896-d308-4b9f-999c-0b182390932a",
        "cursor": {
          "ref": "aad3e05b-5ae3-4563-8114-2c2335c094f9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3a947ef1-eff3-4ce9-9ced-12fe9f467b30"
        },
        "item": {
          "id": "5135c896-d308-4b9f-999c-0b182390932a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c8c80ce-d50e-4ef2-acfa-69c3e20dcd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8875664-8362-43b4-bcd0-a6122b1c6107",
        "cursor": {
          "ref": "e65c0c25-fea9-4305-801e-e412866890a6",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a8784bff-f5d0-45f8-9af9-67fff165abaa"
        },
        "item": {
          "id": "c8875664-8362-43b4-bcd0-a6122b1c6107",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e4917bac-50ba-45ba-baf4-7e49d8597fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6908cb8-2b28-4ad7-88e9-4ea20325b2d4",
        "cursor": {
          "ref": "0ea3bb4c-693a-468f-b17a-4190026a928b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "26ef5549-5069-487e-8085-ed9128da1327"
        },
        "item": {
          "id": "b6908cb8-2b28-4ad7-88e9-4ea20325b2d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d5995e61-864d-4753-b19d-00fe68e23251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9ef509-05bb-4841-97cf-1b911f920434",
        "cursor": {
          "ref": "34a7dc03-eb19-4b7b-b54f-36189f754ea4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c7a037bf-cb34-4778-8f71-fb51321864fa"
        },
        "item": {
          "id": "2c9ef509-05bb-4841-97cf-1b911f920434",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "377ccf8f-2489-4931-a831-9b169e7d75d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09dc674-174f-438d-a855-19607761fcff",
        "cursor": {
          "ref": "72d04984-2f93-44ee-907c-9179f690f828",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fbc7e9bc-c9e7-4f7a-b33f-a87bb1380315"
        },
        "item": {
          "id": "a09dc674-174f-438d-a855-19607761fcff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8ce492ef-76ad-4c7e-b212-e2c8969fbf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149d1791-9078-4455-ac97-5efaf5f9bd6f",
        "cursor": {
          "ref": "569a5e0c-db7c-4258-9b1b-0075affc16de",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0fc19e8a-feb2-475b-93f7-9cc1a5b38790"
        },
        "item": {
          "id": "149d1791-9078-4455-ac97-5efaf5f9bd6f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "15329ed3-39e0-49a9-a99f-6d8fbe039d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b24d8dc-85a8-4abe-88e7-5b8887d68311",
        "cursor": {
          "ref": "cd2d6146-bbca-453c-b21c-e3c1c86b3706",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "62839e15-cdff-41e2-8761-11c3b8fc6558"
        },
        "item": {
          "id": "1b24d8dc-85a8-4abe-88e7-5b8887d68311",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7e6a200c-840d-4b9b-b3ec-d41fedd9caea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e4480a-d62f-4704-99bb-d0ead4c43bd3",
        "cursor": {
          "ref": "cff1c384-bf16-4224-94aa-dea9ffaec3ab",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9c746e50-6c72-476c-8819-93af150e10b4"
        },
        "item": {
          "id": "f9e4480a-d62f-4704-99bb-d0ead4c43bd3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c74dee38-44ca-43b0-82bf-bce3f8d381ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6e60ea-b8ac-4516-b7c4-fe19714dc24a",
        "cursor": {
          "ref": "f0346f4a-672f-4ea6-8665-19756475052c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "16d82039-5ab6-4c49-9296-0b53c919beb0"
        },
        "item": {
          "id": "6f6e60ea-b8ac-4516-b7c4-fe19714dc24a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9bea1ae2-1b58-4e6e-9552-a65332954593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5947c-8744-48f0-89c4-bcac56a707ec",
        "cursor": {
          "ref": "a9955a34-4fe0-42d8-80a2-98026e31c32c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5e06862b-716a-4af5-968c-9216e7526bcc"
        },
        "item": {
          "id": "0bc5947c-8744-48f0-89c4-bcac56a707ec",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c00fe95b-be29-4b5a-8e5b-09a027784e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e0570-b27f-4c31-bf8f-719ce78a30f6",
        "cursor": {
          "ref": "c578ca4b-0c3a-40e4-9dbf-4adc4c97f1a3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "33ade378-4538-42bc-a0c5-94d41bc1694f"
        },
        "item": {
          "id": "590e0570-b27f-4c31-bf8f-719ce78a30f6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dcda4a42-91db-4cb5-85c8-ee2fabf6ae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab2fa7a-ee86-4ca4-8970-297e8f7e80ac",
        "cursor": {
          "ref": "79d22766-ff65-4b62-a600-e468551d0293",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a8e72473-0c8c-4e93-bf2f-acd601491e11"
        },
        "item": {
          "id": "4ab2fa7a-ee86-4ca4-8970-297e8f7e80ac",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "27f4af4e-ecfe-4db9-b85f-d37735f1bb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34efc802-9418-485d-9fbb-e80e4cb11406",
        "cursor": {
          "ref": "0ea51d9c-2604-4bf5-be26-e500719d5f8b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a7bf0441-ba3e-4cd0-9b7b-e88874e47965"
        },
        "item": {
          "id": "34efc802-9418-485d-9fbb-e80e4cb11406",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b031c47b-3dca-428e-b299-8696fb088c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bc19ba-176b-4117-b972-f8e95b3fa692",
        "cursor": {
          "ref": "86e594a1-19b8-4010-98c8-f2e005faf32b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "08ba8ca5-57b0-4475-8f61-076a107a3ad0"
        },
        "item": {
          "id": "63bc19ba-176b-4117-b972-f8e95b3fa692",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "119f7d3f-f23a-47af-8654-376741033b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b3b016-1108-4c1c-82f4-83cb6f9a4179",
        "cursor": {
          "ref": "00f538a3-167a-417f-8d56-202e2e4e32b2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e0c56d4a-910a-49f7-95ba-8d48d25d131f"
        },
        "item": {
          "id": "53b3b016-1108-4c1c-82f4-83cb6f9a4179",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "97a2a84b-e44c-45b0-bd03-8f9bb494e3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc2b158-9ba5-42c3-9854-d9901b729f83",
        "cursor": {
          "ref": "442354c4-73f2-4077-a218-58c415ba5f2e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "541542f0-86c4-40ca-800d-ba44836522a4"
        },
        "item": {
          "id": "7cc2b158-9ba5-42c3-9854-d9901b729f83",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9f43876e-07ea-4288-86e4-6bf67961ec8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c8ec2-19fc-41c2-996e-6fa534d52bb2",
        "cursor": {
          "ref": "d1779284-74d3-4b2a-aee0-0daf5c037cb2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bcdc6806-93f6-4dcf-b7ce-bd210fe1e291"
        },
        "item": {
          "id": "550c8ec2-19fc-41c2-996e-6fa534d52bb2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ddbcc68b-0c81-4ca6-983a-500dc07195d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f62f3e3-6447-424b-9298-242e7b756f42",
        "cursor": {
          "ref": "ea332efb-3ff4-4156-815a-535eed24b38f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae9ea148-6a49-40cb-be6f-6fa79b2c8ac9"
        },
        "item": {
          "id": "1f62f3e3-6447-424b-9298-242e7b756f42",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2924e8e2-0b98-4941-9aeb-e56b129607f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2f6eb1-9e3d-4496-a7f1-add4aee17ed7",
        "cursor": {
          "ref": "cbd128aa-4653-4c98-8c5a-60ae518012a1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d525cc6a-8bc2-4769-9ae6-76035dc05dd4"
        },
        "item": {
          "id": "0a2f6eb1-9e3d-4496-a7f1-add4aee17ed7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d3d09b7c-2b45-42f5-80e7-1b1465d42d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29782de2-c1d5-4c10-8a3a-3c2dce7f94ea",
        "cursor": {
          "ref": "a7830633-60d3-4061-a870-c7018c6465f2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8c64b7b2-1ba0-4975-92de-5bd3d99cc3bb"
        },
        "item": {
          "id": "29782de2-c1d5-4c10-8a3a-3c2dce7f94ea",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e04b827e-54ef-4a01-8a80-72b91d722798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6f4a32-dfec-4ab3-9e3c-6454e95e9eae",
        "cursor": {
          "ref": "7f809caf-505b-48c1-9df4-c715cab0923f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2d6601d0-a38d-4b16-8d3f-721d697e0095"
        },
        "item": {
          "id": "3f6f4a32-dfec-4ab3-9e3c-6454e95e9eae",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6cd88cbc-be9a-4ef6-977f-64eb620a5581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611c638-e454-4075-942f-2af22bf3f47e",
        "cursor": {
          "ref": "5f95b84d-fe60-47eb-830c-b72877f0664d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2eb2b533-20c0-48a8-a9fe-7ead532ee75f"
        },
        "item": {
          "id": "7611c638-e454-4075-942f-2af22bf3f47e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7b72a3dc-4ea0-45fd-a7a7-f921643b00d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50949ff9-0f47-4dc2-a92e-a38ab111cd2a",
        "cursor": {
          "ref": "cc8973e7-520b-45c0-b53e-9b9b7c06123a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6943dc6b-de1e-4ff2-82cf-77b97808c991"
        },
        "item": {
          "id": "50949ff9-0f47-4dc2-a92e-a38ab111cd2a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4e055954-f14d-4ed3-96f2-768c32a55382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c69d9-ec3c-448c-85ac-07b6bed16ca7",
        "cursor": {
          "ref": "ac3f0339-1e5d-445f-a1e4-19468522bffd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e181420c-329f-44c6-8dd4-6d125846b320"
        },
        "item": {
          "id": "573c69d9-ec3c-448c-85ac-07b6bed16ca7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8bc0430d-6641-4dcb-91cb-ec700744e5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a3a754-b982-4d84-85b7-522d3b85a66a",
        "cursor": {
          "ref": "a6d6e44a-33c2-40d5-95f9-c823fc7a046d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "389a35ad-0d9b-4c3a-9b1c-3c1fe726070d"
        },
        "item": {
          "id": "a3a3a754-b982-4d84-85b7-522d3b85a66a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7d07fffa-95de-4cae-9ef0-3a441b075dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100b53fc-57b5-49df-a3a7-e53fc1980d1f",
        "cursor": {
          "ref": "1ada4085-7933-4bce-82ef-14bd2ae3f311",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "47ecacf6-50c3-408f-b213-b28c0c2db20b"
        },
        "item": {
          "id": "100b53fc-57b5-49df-a3a7-e53fc1980d1f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fef3fbe7-fd3c-4981-88c6-42286d2a2c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d011a059-eacf-4434-848c-392dbc2a0a95",
        "cursor": {
          "ref": "a1f84e66-4dcc-444e-b0c7-3c562a5c7af3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6a01a7ac-d77b-497f-a75f-700e72e96dc4"
        },
        "item": {
          "id": "d011a059-eacf-4434-848c-392dbc2a0a95",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0095fc09-58e4-4133-b6ad-4a2e375d9fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd3022f-b972-4dbb-aeff-eeea20eeb3e9",
        "cursor": {
          "ref": "fe5b5358-734c-4485-9b89-fb0afe35fd14",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e3f2a167-af07-4d14-8b24-ab800c247082"
        },
        "item": {
          "id": "cdd3022f-b972-4dbb-aeff-eeea20eeb3e9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0dc074ca-391f-4a0e-9288-277d1778c63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b7031-18cf-4280-98e7-1c964afdc082",
        "cursor": {
          "ref": "4c0d327f-0071-4756-9402-b1958d335020",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "37a12733-bf42-4f4b-bbf0-146e796b8497"
        },
        "item": {
          "id": "164b7031-18cf-4280-98e7-1c964afdc082",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b573ee9f-49c0-491c-902a-31fcb454371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70448c1f-c0c1-475a-8625-259d5244c656",
        "cursor": {
          "ref": "2495fe9d-93d4-4551-be89-857caa9a6320",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fe575c43-40c7-41b7-95a8-aa703161ecc0"
        },
        "item": {
          "id": "70448c1f-c0c1-475a-8625-259d5244c656",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "681731d6-8807-43f9-90af-660a61d14083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f61a79-cda4-472a-94f8-325afba990b8",
        "cursor": {
          "ref": "492b88f4-79e7-4d98-afd6-d2c57cf52d9a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "88b1928a-1488-41a5-ad24-24807e41ff82"
        },
        "item": {
          "id": "81f61a79-cda4-472a-94f8-325afba990b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2597cbee-4fee-4a51-a1fb-c6f7594376a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef49fb8-8ece-4c55-99f3-be5f2224ab6a",
        "cursor": {
          "ref": "582a0229-a538-4989-86fc-8aa183d8bd25",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "40c97dd9-963b-4c47-b475-9ceedf5b4def"
        },
        "item": {
          "id": "7ef49fb8-8ece-4c55-99f3-be5f2224ab6a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a270bc8-c206-4a2b-9cd7-62191020ac1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f2a71c-6ad6-4ed9-9fed-93953a16fec7",
        "cursor": {
          "ref": "da48d2a0-a219-4961-b881-68e42cdae4bc",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b60c9121-67a8-4e1c-ad43-3528d2b092f1"
        },
        "item": {
          "id": "c8f2a71c-6ad6-4ed9-9fed-93953a16fec7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ddb8a218-06db-4fa9-9e5c-e884418395b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc77ca-5d5a-464c-a982-ebe4bec07634",
        "cursor": {
          "ref": "2c551c9f-c40f-484a-8d6e-c1f4b7cbc339",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bc3de1fe-f325-47b6-bbe3-053473fd703a"
        },
        "item": {
          "id": "8fcc77ca-5d5a-464c-a982-ebe4bec07634",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e87bbd6d-1edb-4690-8012-093cbc8edd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a965b5de-0709-4134-82e3-b4bd96e71e37",
        "cursor": {
          "ref": "d14e6302-2293-4c04-9758-54e740e4b40c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3133f1a3-19bf-4f55-9509-5bd26b73b072"
        },
        "item": {
          "id": "a965b5de-0709-4134-82e3-b4bd96e71e37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5a5657e8-e5c7-4bd1-9fa3-93c188d3562d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8992acf0-188a-4df8-9391-1f18a254397f",
        "cursor": {
          "ref": "0c025082-2817-4727-a8e7-941f1661f668",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb921401-a78f-411b-afb1-5f9e79cea674"
        },
        "item": {
          "id": "8992acf0-188a-4df8-9391-1f18a254397f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3e0ea687-933d-47b2-ac69-f515c58bb2b8",
          "status": "OK",
          "code": 200,
          "responseTime": 2282,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4253a098-0543-4ec3-9004-402090508ed5",
        "cursor": {
          "ref": "32c2e122-ee94-4634-bc24-78d09e480083",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b5693ca6-4e8f-4dd3-8f19-aade999d0b93"
        },
        "item": {
          "id": "4253a098-0543-4ec3-9004-402090508ed5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "608d4b1a-9f2c-415c-a29d-b2608e05d31e",
          "status": "OK",
          "code": 200,
          "responseTime": 2519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67723063-d90a-43ca-b9bd-1e0eccdbaf6f",
        "cursor": {
          "ref": "8f7438e7-f14e-4d04-833f-de2c5224b6c1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b915d2a3-78df-44c6-b883-c86b42c65fec"
        },
        "item": {
          "id": "67723063-d90a-43ca-b9bd-1e0eccdbaf6f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ccaccce6-f1b0-40e1-9edb-1dad6e7379bf",
          "status": "OK",
          "code": 200,
          "responseTime": 2475,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817375a-74e0-4fd7-86e8-4d2d93cdbb3d",
        "cursor": {
          "ref": "1979271c-e995-4508-a838-df242c31dba8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6961678-159b-4477-a8b1-3f33010613d2"
        },
        "item": {
          "id": "5817375a-74e0-4fd7-86e8-4d2d93cdbb3d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b27c0379-0b4c-4d3a-81eb-f5ff1eb8d23b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817375a-74e0-4fd7-86e8-4d2d93cdbb3d",
        "cursor": {
          "ref": "1979271c-e995-4508-a838-df242c31dba8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6961678-159b-4477-a8b1-3f33010613d2"
        },
        "item": {
          "id": "5817375a-74e0-4fd7-86e8-4d2d93cdbb3d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b27c0379-0b4c-4d3a-81eb-f5ff1eb8d23b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2042875b-088d-4241-98ed-296c340c6f3d",
        "cursor": {
          "ref": "2f72f4e2-170d-4a84-aa26-fe873dd44c8b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2fe23a99-c1f2-4149-b385-198fd55934c9"
        },
        "item": {
          "id": "2042875b-088d-4241-98ed-296c340c6f3d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a9c5c7fa-d08a-41c7-acb2-0421717a023d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d5c2a8-0d0a-4a3c-af16-8e18cbe51faf",
        "cursor": {
          "ref": "3f6b0c59-e181-4d64-8f11-6146b436df06",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b06b0d03-bb72-42b9-9746-4bbe445c46ee"
        },
        "item": {
          "id": "a8d5c2a8-0d0a-4a3c-af16-8e18cbe51faf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "33af7e01-afe5-4e62-bca7-d7cb4dcf6693",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}