{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d84e2113-9741-4f4f-a7ae-22855346ff04",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a6265efe-2e37-427a-99a7-832b51e0d17b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0a4b725-430e-4240-a3a2-d0a9a732798f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bba6acda-09c0-4d11-80a6-2a3428ce8eb4"
                }
              }
            ]
          },
          {
            "id": "10cd0d64-2fc3-464d-ad21-e17e7f1414ce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7448101b-0bb8-4201-ba05-7bc089dc1de8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "800dba66-9ec5-4e00-a234-9a402d98603f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "07259c0a-cbc1-475f-8ba2-9eb46d0a0b1a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d36b8bda-9ef8-489b-bc71-bde40327bb82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c22a2d01-703f-47f1-929e-fa0bea3c08cb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4a40e56-ca81-42fc-9a8f-8bd66720c913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d81e217-6b0e-4dbc-af8d-828170d929a8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f74cf7c9-1950-46dd-bdad-955a7a354681",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0619d60c-6517-4c57-9385-a6f22e8978f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c3c9328-997f-4812-879b-c8ebd8e3a1d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff2f0d9e-3071-4921-be53-9c498bc08b43"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02478a12-d06c-497b-9e6d-d8faa7077599",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09a018ea-3505-468c-a0be-b0ca125acfad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0055d5fd-5441-4316-80ea-db70e661ff34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c1b6241-18b2-4d72-b128-9f40686151aa"
            }
          }
        ]
      },
      {
        "id": "3b5e49b4-c99e-4ad7-b192-bac40ac6dbe7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b9214fab-e8c5-4157-b7d1-fe63b53f853b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42e90595-d3d7-4327-bcce-20eae432cd42",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd43229b-fdf0-45e7-b41e-b8efb60bf0da",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d48e79-4938-4962-bded-f0b855436afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "425001f9-adcb-47b4-b48f-f9e3b2e2490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd79b38-ff30-4f0b-a047-05188eaa4682",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6fddb3-54b8-4fea-80d6-6bee5803b33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "016c179d-efb0-43fc-8dd4-f15c2ea5b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022aafe4-8062-46a6-8855-c0ec836e5313",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7864e181-d72a-4aea-940f-223f9c64b827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2288eda-6c36-48d3-92dc-68508284084e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f267ecd-7ed4-4db9-8e16-8cb1882f5ead",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "418059d8-53d5-469e-94b1-03260c758f2e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d13fea6-5521-44c3-8434-3b747f6b19a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49558dec-7083-430d-80d0-0c860800c277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714043a9-584f-493b-829e-0085b0de8cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8ca739-ea83-43e1-87bb-20668c6b72d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4474c03-1572-4664-a948-23ad90c060c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c395a9fe-f538-43a3-b72e-6d8eff6d9cd9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa4d2646-8ae1-46e4-bccb-bf4fa38ff96d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "04e5eb56-a0fb-4329-b440-ab55995c56a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16d0abd6-f064-4b9b-93c6-1bd745846fc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9fea890e-e419-4f89-ac51-0d4c5ab85aec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68b04ce7-32b7-4698-8c6a-20fcef131e9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55accb91-7918-4862-868c-e1c5a092288f"
            }
          }
        ]
      },
      {
        "id": "0acc1c4c-70b9-4dd8-b074-580dd1ab75fb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "399cfbcd-fd4e-449d-a2d7-ec19fe0ca23c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b857a2e-ec70-4e27-8089-25b2db852138",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "57b86099-d4e5-4f2e-b34d-a41c6581561c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eba1e56-b308-4473-960f-8e47d51a2d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680ec32b-448f-449f-9e42-074ca7931d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adc5d08-e73c-4d07-8d4f-6da5adc274e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "126cfe0a-0c7b-4b02-b5e2-84242b421e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d180b-e139-4a64-92d5-524b17ab2adb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c90818-88b0-4afb-8e7e-5f54aaeab41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6237d1-78e1-4a0a-a319-77da59f4e0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68de8adb-4629-4b46-b73b-9ec39a695af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30a223c2-8074-47c8-96fa-7acaf87092f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a241e52a-fe8b-4986-bba0-09a1b8b6149a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793ffa80-ff71-4872-bbe6-fa3e59bbc5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8173cfdd-ebf6-4894-bef9-3bfd7165362a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150ee769-f92d-4ef9-b143-891b0b586527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26a2178f-94f8-4bfe-a326-d65c7f5827b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98abd16-904c-40f4-92c5-cabab7bd4ecc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cc7b0e-955f-4ec0-99d7-e734fdd39562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5950a8d2-6189-4b80-92e5-0bbbbfd329ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce41977-541c-40f7-a130-665ae8a1ea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abecb83e-698b-44ed-ac16-93295c28c3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac2bafe-b21b-4548-963b-542525bd2b3e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c8598f-cfc9-4bbd-8c64-51e6f0d92ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d54480-1b3f-49b3-a0fc-79e53e222b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35af1b10-0bbf-4ef6-bc20-3c9c365216bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db5ba621-0930-4edf-b182-b6f0d35bc082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b1ed4a-df78-49ae-b9b7-53c4d47473b0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9c63bb-19a1-4bf0-91e9-a2150be6acd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f592ad2-eaf9-4382-8b7a-69c96a28e665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260fcf1f-122a-405c-9b69-c188610dc98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56a3bace-45de-4255-b014-a0789f7af7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b0f165-5e4b-4a6a-b9a7-ace9087b06a7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a39719-f833-48c1-b9f0-e045a5abc4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f65d7c3-963a-4dda-91ef-e269c44d24cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143dba2d-3f6e-4e85-ae7f-efab0aae8a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dec3de02-edf9-49c7-af1c-46ab9b4fe05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eea3f7-2b5c-429d-bf38-b78c298dd22b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c288aa-24a4-472b-8fd6-d192b136dc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addafdc3-f34d-4c27-91ce-89432da52b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2549054-4fda-4338-a54c-7531b65fb7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e3d8c7-448b-4ce1-8b28-3e088c8d8b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d9a705-b367-43d0-9764-be2a0ee04ac7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ead0f7-931a-4639-90c1-d0b56870217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09595f1-5d21-4afa-b1f4-9a4f291a827d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a23915-ef8a-44e6-8049-c2749f4dd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "424e1189-2d77-4e45-9c89-f9391153c40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd8e1ab-73ea-4a06-b827-82e43f81006f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6040da30-8981-400d-9b96-c0f2a0da7c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c9eeae-13c0-404b-9776-217607f39bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a0916b-7a09-4648-aca2-881233142957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36e3e743-4782-4fd0-98ef-d9a47c171425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6da365-3526-4578-8ed1-bc0055d13070",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f9bdc3-945a-407b-aa3c-f73159f9899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7586ad-798f-40ef-81c1-b1782d5e651d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f9153e-82d6-4aed-ae71-00b8316395d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bceb808-9f9f-44b7-b74f-51ad45f0ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7dfcbc-36bf-4824-b6f3-50a5c865f7aa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d07340b-e837-4873-b409-d1573409f60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf8fbb8-6f53-4603-87e9-15c1c538800b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c51907-c48b-416d-a674-995ccb127283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c418ed92-822c-487b-868c-4b3194da4c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99cef16-2f0d-4b9c-9685-88c37d644f78",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e758d84f-71a0-4221-8d77-d5fe7a417c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b0452c-eb42-4615-83e6-247403559985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc615fac-009e-40a6-abdc-18cf4f7a7a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6071b165-c42a-47e1-b21d-c812622a6d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8323f916-3120-46fb-ac02-bae4d66ca09e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65764c6-998f-4fa4-bea5-fb1069d72b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c816fdc8-a077-4efd-84d1-f5209fa66dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06711a4c-46cd-4429-a8e6-befa98b00974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a96869-6016-46e5-8148-0f44b3b15e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4152e52-95e0-4783-8dde-30e9929926e4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f4d915-702c-4007-aa65-13b859747916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b975cede-053c-466d-93d8-690e72980de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7dda42-4865-4650-b6c5-7532b75d0c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf36231-1036-44b8-8bd1-08a436f737b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d6d5de-c47f-492b-90a7-ee99b2bc3735",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34913b5-f805-457b-b31f-978f154731f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc59530e-d42b-479d-8fbf-9195309e093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f00f4-c928-4b8d-8513-ca45a5c69688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c42c371a-63f4-42da-be9b-5367c4a40a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa91b0e9-1998-4065-871c-24af19d369b9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708cb6da-0f23-4a50-b5e0-b29969335839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168de228-6671-4dfb-bcf2-081e15557494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92af8e9-b5e7-4b33-8aed-a34030dbd040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cd21d80-b7c1-4bf5-89af-a3bb015c1f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5522b9b6-84fa-468b-9aa6-5ccb2b6f956a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3e78a0-0604-4428-a662-7a598ed6db39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f057149-eb88-494a-8d0c-a5e3766c63cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1bf4dd-0ecf-4f11-911d-0bb74a7a2211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff35296-76b1-4e3f-b027-e9ccbeb7bb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe66b65-23ae-419a-b8aa-576279ea422d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b30c885-00a5-49d5-bc60-defd7a9945b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2ad52d-0c36-4603-b9d2-236c09ccb556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46e8d1a-53c6-4d77-b595-a58289b22165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bf7ab5-9a2c-45cc-af82-5cc6c6b2f8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d863c7-47ef-4259-a726-ef291806770a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4de79b-2e6a-488d-b418-6ab20e9126c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72c17c1-e78a-4a3c-b41e-7f3f5c0653e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1943ec-83c2-40ce-b1cd-bac73ce63ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c78d64-8e1c-4ec5-8998-451038df6834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450eb641-0bc7-4b60-a582-10ffedbc14c8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49ac64e-1a9a-4c53-a905-47e966df8f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c566d759-8436-45f4-9c34-4b849df209dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0fdcdb-c788-4c57-8b2a-b69c151e6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb88a96-a8f9-4037-8696-7644909f5553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3228175-fd66-4428-b28f-282c959dc1de",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17ef559-2d3e-4dcd-895e-3540a83cb3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cca59fe-9c4b-493b-ad8f-2d5e274b3f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d3092d-bfac-4578-8316-9634f09ba143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7d02a7-7166-4dd8-ae00-ea27a527b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f83dfc9-ba8e-4a36-b376-d4a87248bfbd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf739bf0-5d61-406b-bdfd-a0dffb699ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d8704c-adc4-4d96-851a-884a75b5f1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90722c73-e04f-4ccb-a8ff-9b9b4141d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8250d9f5-afcd-4123-be5e-1ef29826a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93439ef3-26e1-495b-a398-40beb6f1205e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc24ec-074c-4ec9-8fa0-194d9dd0ee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e06519f-5acf-4f96-aff0-d361b1dc8a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bbf798-b88f-4abd-9084-a3dad7659b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a990fb4-a995-426f-af4b-7ca83f75e584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b292eac2-f19f-44af-ac07-853a59f0bb8a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8e3595-7c82-47ba-aada-90950757017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9365df4a-6691-4eb5-a58d-a1551fbad7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166afb1b-768b-4add-b128-61103dd5fa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ce5922-ec35-415d-8b84-b340d9806502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10992c7a-38d2-49ea-895c-c4c932c1c9da",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b622c5ac-8840-457e-95a8-5cb244563269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043871ad-d119-4b39-bef5-863a5a732c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d1a646-d475-4f98-a06a-5c6321a68d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0bf2a9-d134-45dd-8236-0bc3749e8bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a556e617-e9d4-4fe2-87ef-17045bef65f3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a53cf01-59d3-464c-a3dd-8690d278468d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa24b6c1-ce7d-4ae4-9e07-19f73cf16560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a73f392-7d7f-4eed-961d-2ada07bceec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0569a9-65b4-40f0-89e4-b84226ea9545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f49f304-79be-46cf-ba2b-4c4b90dd3df9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf13148b-6fe4-48d3-b38c-493640699055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4052e521-ac55-4c39-afb3-9ee5505d957c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1570c54a-22a9-4a92-917d-59c66e6929bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "057b6877-b5cb-4a58-b92b-91a59b90fac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e5595c-41f7-4cfd-9e07-aaa484e2fd46",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212105b3-83fe-4b5f-9bc8-3e68da5b00c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bf05cf-37af-4f48-8302-7f151a8a8e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43f9031-9ac6-450d-98cd-8041c7db65c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6999abd0-340b-452e-ba27-59757ab338d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5063a1ce-6565-48ad-8748-a825b4f00a68",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d9c701-be0a-44c7-b354-d9e5183786b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7571920b-5386-4210-85ed-af37f8084276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d460294-8001-41cb-98ef-faa6eed4e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f492d8f-219c-4c16-bc3c-fc44c266e500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90468221-5f58-4016-9530-f94ceb40b0fd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c98eae-2701-4c1d-a5a1-f85bed9518e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa26d5b-afa2-42c9-922a-52a1327fe326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4965e763-0b2a-40e7-a476-9a47c392f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7678c590-ec68-4552-9037-7e61d50cb661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8398cb1-f769-4987-8fe0-07d7e9191c04",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca34e3bd-5ba4-4854-bc9b-d7d37e944688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2140d16-adfd-4382-86ba-84d3c5efff3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796b8f41-6ad2-4444-9d14-3e099796f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f1676f-b91f-4af0-a46e-74db2797233d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b750d9e-24e0-406e-9e00-bc17fc1e3eee",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e541ea-f0f1-46ad-b804-4f311b0d0fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f6d939-81e4-4115-aa03-312d268de564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1e7b6a-37b0-4952-96ac-4e940e121c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc23262-a1fd-421b-8428-496a2f52f435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec927d31-d5ff-40f5-99c2-8990a8391c0c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0ad5f8-d1db-4658-bdb4-e6b79d14376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b44ab5-7f5c-4b7e-a911-c3057376fa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a15cb44-499f-4b53-aa70-ad0e14ae40ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "effa1aaa-0ab3-4974-96ec-d1e75e74c3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e3bec-f8cf-4f54-8852-46b747d6dde0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903f4eda-d3b6-4516-9b22-2059795da05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b518cf0-a050-4c32-be4e-6c8c3f3ffa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669dd060-7676-4f46-b5fd-69a7e1959485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "71ddd041-f5a8-43ca-b7ea-0227e82edf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76747509-287b-43a2-b82f-9816c1493a6c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c70a14f-3955-4491-baf6-df93199cbaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "397126bf-6459-457d-a279-b199e99eab83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7612e05-78b4-4ad2-abae-baa3f051ab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f98d20f-99a2-4d3e-8ff2-f22957ab5e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c31297-5917-4bbe-badc-fd31ea004084",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed77dbd-f08f-4849-970d-6f579f23632f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fec225-1eaa-4db0-b13e-a256499fb8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593cad03-be02-40c0-9ee6-7d3a565eae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68ce7b60-f6c0-464d-a4e2-251b98fd31b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eb373b-c40b-4ace-b370-f7338ba1f1ce",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171c1101-b0a0-4af1-968b-e3019e3f56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56ac318-0051-4670-b8f8-b25606a624df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ed4d87-2e70-48bf-a107-63e0c5858f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10012bc8-6284-4fd3-85d7-72762714e1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e51a77-7eb8-4f31-8d7e-7de282bc753c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c44ea1-e2f1-4a5a-8d9b-315a392d83e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a610536-47ba-4dee-92f5-e74e49dd464a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf7454d-bf9e-4209-a42a-d0900ab7d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37cbe0b1-df05-44f4-9dde-5ee48f4cce54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b41a80-94a8-42bd-b1e2-44d421f31013",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149ef52-bf5e-44a7-a7c8-b0a91632a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43467147-38f1-4d02-8dd0-99c04f8454b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8632aa-70b4-4e1a-b038-edea98db1aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ade8c65d-1fc0-48e1-a53d-1546d2d2805a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4723f156-2d88-4d3f-8570-283c5f62ec0c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e91caba-a014-4a16-96b9-615068241290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d347246-e92a-4fe0-85e6-a43e36f41f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb835fa-a790-47cb-9420-7b19d4f1b806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42812c7b-51e6-4bd1-bded-afc7de6a836a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0171172c-24a3-42f9-83ab-9693d53a61b0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cec3bb-615f-44ff-8ef1-6c635870ace9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d821a979-5563-40a5-9f78-fd95fb126f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a59d47-69b4-428e-84cf-cf939cb3d712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b1887ff0-0293-4282-bebf-297e99f26c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e87417-f804-46b4-a48b-d4a688494888",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbfa73f-459c-4c0e-a76b-6932ba4cbff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35334b1-1376-418f-a5bf-c08dee403ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4153b7ff-1245-4908-ae60-59551f1fa6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae36395-2742-4141-a98b-61e8d47ecccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf540e6-dab8-4c97-a4af-0951918e2bcb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e1eed2-dedc-40d2-aa30-1f5f758dd417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be7d3d5-629d-43c2-9787-4d40c888e1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a21d85-3ced-4ef4-a24b-6faf5912ce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c46bfb-63e2-4cf1-a095-2fefa05845b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a9c4a2-3e20-407a-b543-123319caa13f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c541cc8b-4eb9-4e32-a8b0-83c0157b01f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5e894a-f91b-4d39-8574-292f8f73dc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c8dcc1-a011-4b48-9986-3a003a448349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc02ef39-3c18-46ef-a202-c39504ca5f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83d7155-53bb-4369-b21a-354b6a3e3ca6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5009f1e8-7c04-46c7-bb18-e349b6483dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a312a62-9db4-4c6a-9e00-8624a62bb3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed2ca52-d20d-4eb7-b9cd-0bb1548a25c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e32bc8e-5047-44fc-ab7b-71f30966871d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5f51ea-663b-4ba5-b7e9-19a0fb16b718",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e441c093-e55f-4a69-9fed-dcac51d68df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50aef9df-99a3-49c8-9518-1449fa60f897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dbb651-d76e-4312-a328-70c4618700e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e51ebd-3b91-41b3-a996-4c5084204d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a30bcce-6e1a-4c9b-9627-a0cd937656cd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a527ff50-e262-4e2a-b5f9-f78d80757a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7deb30e5-e34b-43ba-8397-c210c412561f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfccd37-7f53-4682-95c7-d5e060806e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ed6d46-0ab9-4d5d-99b4-20fd1ddc8ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7511e0f4-c888-455b-8a5b-102f9070ba6e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471861d6-708a-4e7a-b9d6-1bdc92794bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13b2d13-e601-43eb-b8d5-2eb2362e7145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0c2291-c492-4a1b-804b-ce2a64fef2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb4f3e8-e7b1-40e2-9de2-70f3a15f4055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb2264f-1f62-4dfd-9dd9-b60fb68c6482",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608fe8d2-2fd4-4f4f-9fbc-f796b80a4ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22131ef-95d6-4975-98e9-c560175d2f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a77df-682f-4c46-8a48-f481febdc1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4367c63-e8ea-4548-8ed2-6353df71beaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6d260a-f3d2-4065-a222-f941d610b677",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00867a96-a9d0-46a8-8606-c6b529a212ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a579d0e-72fd-4906-aae5-70b510a15577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f31c34a-27ea-4840-9aad-3503ee593195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "614ac86c-adf2-4e9e-8a0b-e0e9439be589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f006cc-cd78-4afb-af03-4b9b33672c1e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d63f348-e0a9-43c7-a43f-0a458fb978df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264d9807-b42d-4bd0-9ea5-06572ac46523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247d4215-9e0a-45e4-b78d-d9958e5e08ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75247c8-c0f7-4753-87a0-5bb449a60e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa252bc-4ede-4f2f-b663-03ddc6c2519b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fefe00-835e-47a9-b4c6-304f7ff49d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702000fd-431e-43e3-9a0d-c7624e1e87b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cf8ad3-4b1f-40b3-affa-66c39822a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56abeec2-7be5-49ba-88d5-b28a6e51cd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8eaf8e-a210-448e-a70c-1d76282238e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bf4451-2529-4945-b86f-20fbfee19ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568d66aa-38eb-403d-aef6-f0c9dc0072a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8cec53-da71-476f-a0c9-56dc7d57f5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb5cc7b-3771-49e4-b2cd-56669b3e9c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d26d0ef-73e5-4a3d-9195-f774309c9bda",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687b9ee1-ddea-485d-a4a6-5d7b6ecaf5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb59f5b3-6dd9-49eb-9808-c43179716151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca3ad40-d1a7-4ac0-984e-4d71ba9632a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e35cd4-d3d9-48ae-aa09-0f97145f7b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93397485-41b3-408f-84db-bed7c53e812a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d677e-3e7d-43d3-be8b-b43f02cc527d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dc7055-70f1-4517-8615-f67688a9fdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8249ba-1b99-40a6-96c6-d43d6a7fe4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e720d350-0004-4610-a08d-d25d5dfeef2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4011769-0149-4456-ae80-8e5156b88232",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9207da86-214b-4821-98d7-a4cf347095cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a50b5aa-ca37-4ee7-a437-e92ee3d7005c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d2d071-db59-40c8-9b6e-10ad45c34d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67b6b51-3010-4fb1-9cf6-0d7d30ee7810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f159781-4c8e-41f5-9bdc-fec7db6e893a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad6600-2914-4d56-84ea-b22cd06d47e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff0a3fd-646e-46e9-ad5f-f76d396d0e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24f8cfa-1bc1-4868-83a8-4c56fa9ddcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbea27c9-e512-485f-a9de-a3aac911c125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91438d98-afc0-4c5d-88ea-a2e1dd88415e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1ed7fc-4799-4e7d-8f00-22cc71314ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a9a950-38b3-40b9-8a1b-00b37cde1fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f16aa3-1aea-4808-a22e-28aade9bcfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3c2d0a-2be3-4ea7-95b6-06ffd37dd80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f456288-4887-431f-a2b5-854c2793836e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fbf974-e3f1-487a-8428-8ccf557b0e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb21103-307b-474d-9e72-a56e8e4b7b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa16d920-c301-4d23-81ca-cb6fb7b3de99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93de1e52-4497-4961-91da-fc1490cbbbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582fc630-7928-4677-91a0-405cb798a193",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d80d61-2474-4418-83f1-bc43555a86c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eac3e17-8ee1-4968-b0ad-6ebbb85fa331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d84a4bb-6668-4724-bbda-0bcc9ad2184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d352038-a71f-4c72-a3ba-ca7394d79110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df2d2c7-d231-4e74-aa66-cf9cde084ec3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d83be94-fabb-423c-8f7f-e4c91151d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb0e6a0-5410-4f80-86dc-a36ad3efb0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4a8bb6-f5fc-4b1c-91ba-867ae7779d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5499b60b-fd7f-42f5-8148-9a45015714aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177fad1-d75c-4d9a-8967-3c2519063586",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6974ec95-d955-4b86-b7c3-0cb5ace4e072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f915249-267c-4145-90ff-e5c90be41780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31564249-7e82-442f-b909-3360b86134b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91578c8c-2b1f-4095-b81b-eb9c28343f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5117ae01-86c5-49fb-a134-e0a4acc07605",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2811b10-fc05-4237-b45d-b6da6383040e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa58ad33-7cf0-405e-b113-75167e264dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e9bc33-406a-483a-989a-a31ea908c2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e3bb54-0952-4dca-b12b-5c725a530441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165a0055-9a5f-45b9-9a89-23040b6cedf9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d1920c-be84-471b-be7d-de60c7849595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c661f0-4469-4cd1-a7df-65f193370834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7038d2-62b5-46f8-943a-78609c5434ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "746ab8ef-4a3d-40b2-8443-2a351e11bf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a22e5a-a058-4756-94f1-3e18c96247fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a957481e-3023-4ee6-93b6-de69669704b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f8ec34-1afe-41c3-97b8-36be2a91a078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260a851e-df33-47ed-98cf-31d318890820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0806fb-190d-493a-8c8e-435ac90b6752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51f3f61-076c-4ea2-890e-88840a2b8571",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453acda7-5ef0-42d0-8836-2eece1414091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ee82be-3504-4540-bc2e-8a1b4cca8b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4bbf63-c810-4a3f-ac36-9fe9a3aebde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "250fb331-be77-446f-892f-e87b9145e1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d8dd01-d076-44e8-9d35-8b028eeeb83b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6925931-2d77-4159-9b7c-0204bb87c0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3df8fb-30f0-483b-ab06-1a3b7003cf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c1054-03e1-4d80-86ae-7214c40b12fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbe2a5d-afb6-40aa-b0c1-bbcc918a6063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0609081-73f5-4b0e-8f22-f14456f4f054",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461edc51-5575-4c32-aca5-9ba0382ba861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66b8e8e-e773-4f90-a87f-20faf913e6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383ba5e8-3ab6-46f0-a03c-a902b5fd7316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f82fc02-82ae-4cf7-815e-cf24dbb653b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde1870d-179c-4710-88c8-026d6e3129ba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135e3e28-a5db-476f-ad2f-38f735dd94d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0416ea-64b0-4d6c-bfca-72b2a8b2312a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9f028e-9df7-47ee-a32a-4f35dbbd5a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdd8925-adaa-454e-878d-20190faef61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3061c73-486b-4b05-8442-084454ee9576",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57cc892-95e1-4480-ac2c-b124412cebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b93aed-b766-4b3e-bc08-20482824194b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9639599c-a985-4610-aa7c-0035c1fe9226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e12ce8f-62e5-499f-b45b-73454bac8751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e7fc4f-8624-4cd0-bfc8-11e318d0e453",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d744d15e-5b6d-42f9-b1c8-5c364287f679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e8406f-9026-430b-a888-0b2c87f15bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c340a6a-3ca1-4ee1-8e32-495aa31ae13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a39890-7c5c-4a3e-a642-65564d87c094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d123163-4860-4fff-9a79-3c3eb43834a3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87326a6-92d1-4ff3-acd5-b8c24b8171c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cfca02-b7e4-4cd0-8f33-5d2806ac74bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76388f96-db2f-484a-abf3-af81a4fc7b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd344b2-9563-4568-9453-bfa6eebeb4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d8f25-1425-4b4f-914f-0512a5c9e724",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c290d2-9239-40a0-b86f-cb188ca3f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752ae656-2fd5-4024-aa2f-2adebd906a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3581ee4e-8c16-43e9-b09c-91862fb0ede8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2df806-9e4f-4ed8-bc68-a29b1856bb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6ca259-e18d-425b-9ad3-47dd6868b57b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd07d933-2cfd-4cd7-9818-3ed46aa0614b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a6a5e4-b383-4335-b8ce-c35a768b0881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e392d54d-a697-4287-9c8b-aa05519f9551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e9f024-eacc-495a-81ac-502ec3deb2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5abe46-02cd-43f2-8539-072f0fab14d6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca0750c-c652-4535-98cb-beb1b152506c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5005c783-aa5f-494b-9fc4-c0137dda0a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b569383-9636-40b9-b0a1-41b208e9e10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a19441fc-d207-41d1-a75f-0dcf6875dd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9148852-9cb1-4e66-b1f3-c0c59660c2c7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b23cfa-0f0d-48ad-8bd4-9c80c0a93e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a38580-58ad-4c2f-acfa-1f2f311cdd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63b4bf1-82b7-4e6e-a039-5ea9aec86862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "598ab76a-cedb-4f42-834d-62a522fcb121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3710fc41-c904-46a4-a0d0-a809a2a0fbbc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe5a0eb-0ebb-454e-b239-07116c56ba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcae8198-6eff-42b4-984b-91482f6c1ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b11d4f2-4134-4541-bbac-9f166635cf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a32045d-ca8d-45fb-b9c4-c52194dcf757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c2976c-b366-49b0-83ae-b99da238c356",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0b186e-f878-408f-8edc-f67f90babec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003dcb45-7a8e-48bf-bc18-6b16edb092df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae13e682-2475-4933-8862-80f8deead185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4c2ea9-71c7-4ec4-86c7-4a47e9a4458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8bccc6-f1c8-4d2a-ab73-8b298e2f6d73",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01995efd-b794-4c0b-a2f4-67ab476b2a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787da431-022c-48af-9653-48a6e959f782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04c8b09-8fad-48b6-8c05-edc4fee83b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bff0b124-276a-4256-95b9-fde3c7ff6732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db819c82-182a-49d9-98fd-0270658e5576",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8862a199-ca2e-42e0-9db1-950d26d816df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b301d1e-97cc-4b75-9a67-8099a31a6a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764050ba-d7c1-4ff7-8dfe-3cee0d75df50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17d5050-1f44-4fad-ad8e-087b4ec3e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672ac894-1127-43e6-874c-8f866581d23e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b0ee04-c967-4b0f-812b-6eb05fcb91cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bd9075-f671-40f0-bc96-e97ef4230728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7bb71f-a551-4952-987d-6e398b5eb938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d42d9c9-13dd-4f7c-a2d6-d097f2b9735a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb7e75f-c28c-451e-85a1-d53fe529f097",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33215f9-6555-4a5e-b3f4-e1e0f3932593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bf8e77-6307-4e76-ae57-8871c3a368af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bb2b43-8ce5-4e7e-b0d6-f19d2d7a53c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02bd51b1-0426-4d16-ade1-324513a8c2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e42b7e8-5b8d-4ca3-bf4a-bce1f20531fe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667d684a-ec38-4c51-8410-c4e9451fefa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94aa9e6-ca5d-4554-926f-f289fbd3526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df696a67-3861-44d4-8ced-e4b11bb42a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7871c07e-dcd2-4cb7-a390-df35ae9ed503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c4d0c4-7048-4c2c-9af0-8815b6618cde",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13671a8a-8b60-40bf-8f3d-3cefc444a622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1561b1a0-e2a8-47ca-b9b9-3340dcbcca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9411bfe8-3286-4584-bbc9-ca0ba47e97da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d1d0ef-1ada-4e0f-80e4-aacc8bc5cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23f673a-141f-4c7c-a9b3-0a39ee3bf13b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bcec98-dc63-4dd3-a757-65bf9c61dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6d20c9-91a6-4408-a124-50a0c57b2880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08152c18-90ed-4ca1-947c-a00b2a055c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea14d005-2c56-4bdc-979f-cb3523c6e7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77233f6-0f4d-4721-b6b4-018d650e5899",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f031cef4-9d46-4838-97b7-c3718ff15e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb99f6de-19f6-4cde-ad30-f217c6e3d60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531bba2e-5438-42a4-9f85-02724404e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb1ffaa-9af8-4e51-acdd-7755a94792f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae06593-7231-4f10-9eca-196a95cdca0d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9180df89-e8a5-47ba-ac34-63965eb270f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c873a1f-dafb-42ee-ab60-a40875f75e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eecce17-7a02-4a9a-8d32-439e38d7a7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4e34b2-49ee-4c8e-bf1e-3bd088767d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143b14f3-1c14-4acd-8c53-4cb9660688c3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61388c1-ebe6-41b7-9a30-b4eb01fce034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8779910-6029-4bc6-89b3-0241b11371cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8360cbcd-6b69-43a3-a0c5-65c70521647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34cdcba9-7087-405d-836a-a4e80952e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a66b5d-c90f-4548-9c80-a72caad61a04",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dd0a33-9742-41b4-9b47-6ad48a03a0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9474fb4-eb20-4d2f-aeeb-5a145f248b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1547d39-689b-4d08-80f5-179dcc3c676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59877c4d-31ee-4c7b-a9ad-de55ba8c5176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3499783-432c-4686-951c-64534f9c48dd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deee14e-4115-4b77-a8a1-d6b255312471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9d8431-bfc1-4fcd-b103-08af7d3aa8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cc4ff6-6a8d-41a5-b17e-af0ced73a5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ed5f39-d915-43e4-9311-b661b2bff59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24412ce-20ba-4ec6-903a-8928c23fc63e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51904b2d-b2b4-4a74-aad5-f6612fefad9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a724078b-9c5e-4bbb-9891-12dfacc18750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f12eae2-4a9e-4613-958e-b9239bce4a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb0cdd5-254e-4fec-b91b-d43878d063cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35b8ab29-6bd2-45c8-a5df-1234bc948d31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67d802cd-308f-4090-bc7f-72a1c044452d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e1bf0-daa7-479f-883a-cba833c305cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b3db3de-246a-4c0a-bd95-6c624fcaa09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc36576-64a1-4d49-a97d-1c4ea1f923e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b7b2bb1-e675-4676-b68d-ba1228a016c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96905b91-c5d5-4456-ba95-4ad0334b137e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c31d9c0-c6e5-48d4-a38c-e728ac24634d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed3de9a-309f-49ee-85bb-9dd9045e564c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aed66384-b4a8-4bc9-a778-a9bced41f725"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56900858-8ec9-4fb7-affe-16614eb80643",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86253557-e485-404d-8717-22cf1425af3c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc419129-f080-4216-952a-b1081fe83ef8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4d71356-9f70-4d57-84d2-77af187001a7"
                }
              }
            ]
          },
          {
            "id": "5d993f82-acc4-4a98-b89f-86dd7514bf94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b7f8576-dd64-4e42-b128-1cf15790a2ce",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "57642d5b-af3a-4596-9dae-6281510d3f2b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a5dfb-b2d0-462d-92cd-3fd3fc14667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1fb38fba-1c5a-4270-b3fc-5f3f5eb0533d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf80293b-b44d-4ad5-a51b-c6120adf2839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc593e3-00e9-433d-b1ec-d05b696176a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aebaaf68-33ae-48ba-8f2a-7a75b665f2b8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "569da9a9-406e-46d7-b829-0382d21135a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ece172ee-7f8e-4689-82fb-7fd198d2a953"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f743aa48-ba9f-4483-ab9a-2000108ff849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10796d36-d472-4912-a705-01bf8cdf7f11"
                    }
                  }
                ]
              },
              {
                "id": "e4f1f07e-c6bd-44d0-8c95-e6aff2461845",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f61618a-38d7-4ee0-9c90-aca1eee35421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b44d570f-21ee-4cb8-babd-299d82281bbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8fcd632-91d8-4c35-9023-8a776d62a613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d56469a7-c506-4ec3-b06d-9040e67213c6"
                    }
                  }
                ]
              },
              {
                "id": "de36b2c0-67bc-4ce9-ab5c-bbaf48594342",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "155ef98e-c6d9-4c78-9d56-40d5a1b56e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f77ec82-7f4c-4949-bbe8-5bba4fed6363"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c30f46-95cd-412a-a670-ea763728cb40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56e3d343-8eae-46fc-b474-c2d1e087ed12"
                    }
                  }
                ]
              },
              {
                "id": "9cd10f1b-a729-46d5-a487-8dffc2f38517",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c4fbfe5-85b0-4bfb-832b-49b83c7e7f99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca7c73b6-d4d6-47f2-8a60-fd8aae4ee172"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f828d7fc-6495-4516-a3a9-6af6f9d62718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94df5d9d-4ce1-413f-8b70-b4643545fb00"
                    }
                  }
                ]
              },
              {
                "id": "27abfedb-250f-47ee-8f19-963b73aaab07",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ffb8bfb-8e1c-4ce7-9364-f98da54fe3f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0f77931-cbcc-4a99-b2e2-0c815ed490cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1210bafb-124e-445c-b10c-aef7755b5585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7ee7bf86-3726-4ad7-bf13-6ceb4f5cfe61"
                    }
                  }
                ]
              },
              {
                "id": "ddd26a6d-0138-44e0-9f95-f5e204efe357",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b160f633-e60e-4a73-a09a-ca689f10d7f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1a3a46a-02fa-4ac2-bec1-105cea97f6bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "790db156-173a-4d4f-ac71-bb414539f3e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a291f49b-8c5d-40e5-ba14-413b364208f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41222113-4b23-44cf-a867-d509a147f70e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fbac92c-a089-401a-88c3-6d919a219504"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc17c83a-837f-41a4-965b-107dae8d93c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86c92bb4-38ba-49a0-bfee-155dfadd0704"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f53da4a-a541-463a-83b1-646c53abcc20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2cec86ac-e380-4fb1-9f12-4130a79012ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a17dc2d7-c16a-4bfc-8318-d14f2fc19900",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee3ae4d7-5053-4906-b9c0-8e4bc5106c28"
            }
          }
        ]
      },
      {
        "id": "6c679f9a-1c69-47eb-95cb-fa4daa197a4a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "62ac9e5a-6dff-4411-a3c2-6702c53fd7c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "373eeff9-0886-4383-b953-1805384989fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce9ab4c5-e62f-406b-8b02-755f3e36c66e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adca088-47a0-44c4-86c3-a9b77e6e5ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76361e08-1ac8-4caf-b840-8deae2a13b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a114d7-ce99-4aac-b87a-0a7489029cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a8c878-bd19-413c-8952-7dbe52fefa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813b4262-25f2-4963-9e85-713c5f1b1b0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a5aa6b-0dc1-4acd-a98c-0dcaa57bd754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e73e1f-27cf-4439-9651-811ae12ce5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a7829-87e7-43e1-be0b-60219e4aa171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9327ed7c-2cab-4c84-9686-8d8225f6e9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11c3635-482c-48e7-840f-b289fab650f4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf791a1-71ea-4672-bf8e-69801d1936ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655b21bd-ec45-4fd5-83c0-e0a0cfbb9b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f537a-51de-4d0d-96f3-63533e019877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b21e8675-7eeb-4d32-b2f7-85152272e94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1c8ee6-61ab-4dab-8df9-384d6cb53bb7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc2109d-7542-424c-a597-dbb5bed33876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401ab7a9-26b8-480d-ba76-ab4a1c929913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46002f4c-f1a0-411c-9a57-d331359f2bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c95ba9b-a540-40c8-ac6d-9bc4b3d6582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bca8bc-e505-4d04-92b4-9b2cc02f885c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced31ff1-ea8d-421d-a2c1-538bd22147a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47cbd60-695e-4267-a983-cb7baeb7fe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d26bcc7-1def-465b-a5e6-2a855134d565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4377cbe0-5420-44e5-8012-199352bc851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af33394b-eec6-47cf-8f9e-fb283d13bca1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7619a51b-5765-4acf-b949-c780a42cc384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a735629b-f053-4e43-b099-243fc4e72862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0ccf85-6c52-4f0b-9cfd-5dc9be03c690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "579b2f87-27fb-4245-b001-24c93c0c6042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aad92b-0d00-4b78-8f74-b0f4de35eff8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6729ce36-2df7-480c-8213-b73629b4e2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd7e00d-7261-46ce-811c-e83be1ba784d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8083733-368b-4c9f-9d33-d23d41b125c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a16fdd-d9a7-44e6-aad8-20a42bd82709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c93a846-4703-4359-a7c9-ab360e150787",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7902a272-8f0b-45ae-85ba-788825d42586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c359044b-3ae9-4e60-87d0-4c4e5c5928f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95c169-ef98-40b3-9abc-28a5fbc6c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d80073db-3b2a-46eb-8ee5-aac1c29b4e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29627c4c-8ce2-4c68-943b-298159801f2d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b20b81-5ff7-4b45-8d99-f3c1eadf56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5841b1f-ff0f-452a-99e1-69dbf90ae123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21badd8-46d6-4dba-b578-c6e2c0aedd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1c33e6-eef2-4b53-9422-be9695fa9b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2afbbd2-f16f-46cd-973d-caf9244d41e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eef732-0f86-4b23-ad20-2ffc9f2b14ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dff188-222a-47ac-a070-2c42dfde7e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c24837-5f0b-4b1a-8e08-7caa5e1c2049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7d2052-72ea-4fc0-96ba-3aa3b91c1619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ce2dc0-27d4-4c3b-a1b7-e430bfd92b46",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbadf27-cb49-4053-8bed-8a6155153372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48eab5a3-4bd7-4a69-829c-1194487e9993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315f3afd-0ed3-4713-8220-660efa4d72e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8df108d8-8376-4d77-9e17-4d53257e2878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582d71e2-be59-4513-8017-0a0f7ee29836",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99af98c3-19cb-4d26-94c0-dedb83ddbd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d4a822-1945-48ec-9115-611104a1ae8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa821280-37c0-4e21-b9d6-79f7d9cba696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d086e99f-28de-46c7-8158-202f373382c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa65dece-e16f-4883-b409-c19a3b184ccf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51aa55ed-d4ce-4796-af71-050aa7c53598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e49eb6-2cf9-43e1-86ed-189b1bedf6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a338d40e-32dc-4d57-ad7c-75e67a068d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bed634f-e8e1-40ed-8b4b-78af7dabb828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeeb5a2-6861-40e7-9600-62dbad2424dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ec8c2c-4dc7-4168-af14-be8a9a0ac46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86115aab-56a4-4233-bf70-a5daf28a9094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5683f7-44b3-43ef-a232-6ba0f46e8ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ff70e-60fe-4403-bc78-66fa3add0231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d421d3-4b2c-4399-b895-dd96e4fdec3f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd5aa49-cca4-4189-90cc-3f7a946a0f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7123bfe3-c297-43c7-9686-06bf6e480fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675600f1-a49a-4e85-a81a-e98a8789a80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df9c57d-6b80-479e-9ac9-31bb11ae5f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79336d37-df6c-42e2-978d-fdf4e35f116d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899ddb84-4e09-4b16-8337-da00f42dbb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e502da8-c246-4871-bbed-06fd24677c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef7f4da-92ae-467e-822d-b66e69f4e4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "605dee4f-6038-4296-bded-bd5031b80870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3df5dee-528b-4dfd-8e24-af2a3c926813",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e154e4-f15c-44bf-aa4d-a46428956768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e849fc7-eb43-4b1c-b4d3-b4d69e1f651a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf430f86-5507-42e6-b000-ee7158b31f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b01347-fcb9-4931-8a9f-52ccba901b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d60ea7-12bf-4643-9616-5c11625ff344",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa41973-5af5-4072-ad0f-1a47115af151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fb3a19-bc6d-49b4-9929-68d64c0a8157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f407743-397c-425d-881e-2f3b1e66c1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54043bc-f4c3-458d-b7b2-1e18efb067e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7548ccb2-8039-4008-a2a2-958503f0bafe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b3869b-26c9-44bf-9b07-41aadd54ddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24a8b42-6999-483b-a96e-34be99a24ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483c1229-57b7-4d06-ba10-f043c0385401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8487eea-dcce-4527-b8ed-e418c90f183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30484160-ad9b-44d0-931f-03aef2b01071",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49143045-e43b-40af-9c8b-b459de023467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0732a110-da8c-4ca8-b0fb-ecd221369ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe2a19e-4ba9-4c46-8720-b670780ce90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c69737-81b1-4e6d-afe5-08d60565222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c30b4be-db96-44a8-b6b0-67b13a069609",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eab5aec-675d-4f5d-841c-b552982ad0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c0e5b3-db6f-459d-9174-d20fe7974b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e342ec62-5355-49aa-93e4-2c8dcf320bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfdecbf-63b1-4237-a746-d885e34aef5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62c9c45-3a21-4689-9c02-14303707d3b3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b71ed27-7e3b-4e62-b0d5-19e5c10397ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb28f5b-818b-43e2-ac9d-6c7876afebf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbfd70a-afb3-49a6-b107-d317120fed17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfe54db-0ab0-401e-938a-90cdd4685ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fa2a9c-00bb-49e8-aa18-cb33143572e3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a28f28e-e81a-4e01-b238-adfd99abd400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2e1fcc-f0e2-41cb-aff2-5913a1fca873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa00e48a-07d5-4baf-863a-af95a457ec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f832f66c-1818-4fd8-9fcc-6446d26570c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64af0966-b83a-472c-a02c-be9c2f4ee809",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34786ec-6bef-4bd8-837c-2202a2e5bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c799aa1e-0743-4adf-8f61-190403c68a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55395dd6-977f-4736-8af9-612eede78f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078633d7-469b-4811-80ed-00b752792f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae750d93-2f6d-40c1-a7f9-4bd94a4c23a1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8af55a2-8d84-4ad5-baad-5d7ab380f3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8934c6-40b0-4a6e-b232-f5c532e0af21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c08957-b072-4762-9639-2c04267cb566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f89773e-886d-441e-81af-f6a29271adda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233db75f-72d2-40ae-8908-88a11cade1ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bb3c12-924d-4ab8-82ba-94bfb4920f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0490120-561c-46d3-81c5-c575e334d2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2213efae-9237-43f7-9f05-f19958206b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63bde188-ca17-4ed8-add5-058358df386f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38548d05-32c5-446b-b09c-78836a990f58",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bb6b0e-5640-4c41-a86f-f0f6ecef787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2aa968-64a9-433e-82b0-f79724836194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4765b17b-01b2-499d-ac78-93b656185724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b56f91d8-4812-4fcd-8633-b4f2c8e3a6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a82cf5-187e-4e7c-84b3-3b1da91fa36d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82233182-d7d0-44f0-bf8c-3956e7fc22b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9657a78-9711-427d-a67c-83fd81b06884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013938d3-2b60-4cd1-bc27-ae961859ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a0b506-97c0-46c8-8ec1-308d969c0479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179936d-aae3-47fb-b6d6-e6f6f89eff3a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0804e69e-03c7-41a0-a1c8-3d8731dfeb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b6abd3-9538-41a3-b615-70343a23a866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c927c5-6b05-49f4-8897-d9924b362660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132e8d79-9fd3-49ea-93cd-cc5cca908464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5e76a3-1a00-4512-a28a-cfac6fef296b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db5cd4f-3981-4a7b-9ca4-c71ff549f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6876ce-6516-415a-a352-f040365bc606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cd2034-a00d-4a99-9cf0-e5a9f90ad848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f8996c-f1d7-4e9c-942d-cef74ebdff59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333b790f-e275-4b4f-a801-8860e3ee5163",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf7ad86-e9c6-42d0-9090-7a19ecc49d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9094b2ce-ac63-48b2-9d42-c0f15827c90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c7e2db-f696-4270-bc89-7b9c626927a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dee79b-df12-45f4-860d-ccfcca94f92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27eecdb-c2fe-459b-b975-cd7d069b4031",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba3c76a-534e-4f14-b9ff-c6c4d3163fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32c671a-0d30-4845-8e0e-03cd40920430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6d38e3-77c1-426d-8f97-15ea305c6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c08da645-08ec-492d-89a6-b978a3a71746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069c5618-418e-48bd-b204-73ea02c5181f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75edae72-255e-4791-a31f-b9cc0cf7ba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2550fa88-7154-4845-983d-4ba7a48de21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f0e903-08ca-4989-843e-ecdd403fc4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90edf004-fa1c-4631-8599-a9a449b8dd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf973bd7-e426-4d46-b459-dc6b1899f352",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fb27b4-027f-4106-b9f4-ed2b34a2adae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c836d3d2-bd0b-4bb3-aa86-bcf366ec6057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa283e9-4c84-4cfa-805f-5da777d81782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb6e3f6-ec9c-4277-9f02-d3e0977cc7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa01d584-b94f-438f-bb37-6d20c4ef1632",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa628f42-4900-4b4e-8e66-640cdcb28ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84c5d8c-fee3-4b97-b337-b8d685015c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e646e435-0b74-473b-a5a6-4920d8d17d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c90cd5e-55e9-46be-a6e3-b94f7381b3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46808c5-e131-48fe-860f-748a1683071a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6410eee3-fb6f-40ec-b988-3b9ee367f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d973226-48cd-45ba-8700-0ddc8e0a5df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b415c270-bc59-41f0-b778-e1fb3c43e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "829cf8d4-f511-4b44-848e-9c1be498bd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816d299b-c676-45da-b89c-d529c2ec7c36",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fd4fb6-0fbc-4030-ab36-a7c376af50e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617a7679-16db-4c15-ac1f-f4b606386a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44133eb-afae-416f-b325-b1ff664fe896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf384641-5f8b-49cc-9c32-c563e4ca1191"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9a09fb8-925e-4af4-9ea3-17c772731602",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad1af86c-05f9-4895-8619-ba24979b3261",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35859274-d06d-4de3-bd50-e4bdfe173f2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d818aa93-2990-452b-85c3-574def09d803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50902bf4-53cf-427a-8cf5-2193253c5864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "980f295e-cc97-4c5a-9108-96b62a28456b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ddece32-dda9-4bc2-a4ed-ceef0e52ad34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff89595b-b0b4-42c7-a585-f7faa6321083"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2097edd6-3645-4903-ab38-c5017cd42af1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "773714f9-10e5-44eb-8615-bab8b503dcee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0112dd6b-0aaf-4ff4-8bb7-ea8126e8097c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28778507-8e3b-47fc-98ca-174cd2e2c099"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac882d93-ab64-4863-8a05-1d6b62eb3ed0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bc81380-59b2-4840-976e-3330e20e75be"
            }
          }
        ]
      },
      {
        "id": "d84e9583-2734-4139-8505-0f21c7b4fb60",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "176dfbda-e830-476a-bed2-a7e6c2524e7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35363d28-aefc-4921-b250-9623b3be50b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcd6d705-9fa8-4b66-b8df-4413ac4d273e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae594edc-8fe0-4786-8faa-08be34c5f32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b617ef77-ca06-4b7d-bdf8-b1ca8c6549ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b760e0-a23f-416e-9223-c01f55a4fa2a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36c97ca-a210-4fd9-a885-cfb200df654d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aef9ff4-b97f-4f2c-86b7-412e547fec6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36142e38-ebda-4c7c-87d3-8ac78ec502e5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4de56cb-a727-4345-b279-e2ddc2b00df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1936a3a1-0a98-427d-82ad-34ce0ad7c123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fa8fd6-15eb-4378-8185-1a5616f0130e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c68f00-37a6-43b0-bbcb-2c5fe61f5905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32bba40-620a-42e6-8239-d4edcc47d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2999a90e-5e47-46d3-93de-6dc6a7d12481",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383806fe-4577-403e-9389-8309f6f0191b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3ee39c-f9f7-48e6-92d6-956e4e9d21d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab533d4c-d796-4268-829b-76e0c9f8e24d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e610752-0320-4891-abbb-8e4d0ff420d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cebe8c9-f221-4561-b169-9e091eee19bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6ebd6e-f9c9-4e02-b182-14bd43b24510",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1284b0d-4de7-4529-938c-91083b17a073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfea21f1-75a8-407d-bd12-66ae756f1f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef1473d-cf6a-47c4-aec3-90e90fb1c8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d55d82-9dd8-47bd-9e6d-5bf3d77c3949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5877c-f4f5-46ae-8ec9-37a861027ce9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c7a9ee-8b5c-410e-98bb-e81c73246074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c77e5e8-2fae-4722-b916-9c47f18ee645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386cf24f-e862-4aff-a844-43e5ac5872b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3957a1-830d-48a1-a205-9b890444e869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc336cdd-8e96-4717-82b3-b3c05e47e47a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa764e8-c31d-4bbf-824c-13509d11c550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd65064f-76d5-44f8-8255-ab7120a0d1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe2eb68-e48a-491f-8f9d-bf3d51d8d799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9b2bc6-a82f-4a04-a45d-14a81021b3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72c1244-5170-44aa-8d62-110831a63493",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d466f97-cf31-459a-8cfc-c3a6c9eac14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f663c50d-7261-4179-a288-82345b96733f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b82967-42d3-4faf-8278-cb0a7d273aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42821cf7-cf8d-4798-96e1-13ac1f9ac93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bea071f-0fe2-4555-bc17-8aa08ddc1f31",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba06b5d7-f27e-4ec2-921f-1f033ebfa7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee01fa2b-a88f-4f86-a66d-8d159338f66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5046e256-729c-464d-80e9-d0652daba9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ba79ae-448f-4ce4-ba3f-3747a48c5a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e89186-3b81-42a8-9656-e8e12f35d198",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee500e-4797-4bfd-ae89-ba5423573774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c09ec72-4420-4716-92d2-b80eb911ded8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c02fd06-1a8f-419d-8839-7dabedbd08e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbe0d57-5d2b-4418-a7ab-9af8454925a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e00193-1df7-4d28-afb4-d0d2b1a45015",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab6cbb2-c564-4d26-8780-d0e7c00c908c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b180f5fe-2dcf-42d9-b6a1-50d9e18d8472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2b77ab-6d3c-4094-b8d3-59ec048be7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0da0940-b2d9-4176-a58f-25c8e97095cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330f36d6-79fb-4e24-a5fe-3aa96dac2ced",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a4a440-dbf8-4c90-ada7-d73e53fe51a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf0ada2-fad3-4689-bce6-3cb7128b3427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2982c3a2-1c70-44a6-a432-64925b056b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43905f05-f7ff-4549-b8b9-79bd13bae640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bbdc43-ce7e-4f3e-a9fe-ec285cbf0329",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac9ade2-98c8-40f3-9634-c2e7a6078236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "592a318e-443b-4764-8356-efeb63d2fb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365a65c-1fe0-4786-940c-9bcb0f3a8625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eac95c3-8549-453a-af5e-4805823b2234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5472ac52-5081-40c9-b73e-de9b8b4fc0fa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8fbbc5-efc1-4dd4-8637-0efa7d340d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f850ad-c971-43b5-a70e-673c07a1cb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e37afc-0fe7-44fa-b2af-ea29e2d51aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3171fd7a-af15-4b01-9482-149782738ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71413c45-a13c-423e-afb3-0ff3ef31acb1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329e413b-4de1-4013-9c82-60a1a01a79aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe42867-2c34-4038-8ea6-dd413b9fe5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1f83bc-f923-4ae7-996b-3198293881f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32928587-659d-41a0-8857-4a70b8af1331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332d4d2c-a256-425f-acde-44705791e51c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3159f07f-6ce5-4eed-894f-36539cfe4ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282aedf9-771f-4284-966d-520f13a088b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f7ed22-6de8-4b37-8a7e-ea0fd4374aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612d11d6-c53d-462d-99e1-43eacd0cdc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bb3ea3-9d8c-4bd9-8990-518e5cc74a2f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99d677f-abed-441b-9f89-86d6decbde79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47bbd9e-f079-4da8-a71e-72f4ba6d58f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca129176-34f1-4bcf-82cb-b0153319a893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48df76a0-2210-4f6d-b8e2-1c64f0aaaf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a0eb3c-0913-480f-b47d-2edcd5495287",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfee7cdc-f164-4273-8cd9-a61d82c75673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d96c27-a8c9-4041-984c-111ec88a8ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe61323-a006-4548-b51f-32b6d8227ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a91610e-5d85-465a-9a32-bd39260037f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db41b702-b357-402b-a96b-4842aa6594ed",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641ec634-c744-4721-a014-13f6cbaa01e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84762ed-3e07-4510-8788-78d80eac525f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8038a21b-ef47-416f-bfdf-af26523faaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcff82d-ed07-4107-aa38-d227e7710c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3943eef5-5f7e-4ad0-beb4-1c03aa41baae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d9fe89-6176-4069-b35e-f1a28f85775b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1792c8-a305-431e-beab-5647555127a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d338712e-1191-4a04-b934-6ecbb46eab03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68545ab-03bf-4a9f-a8f0-5cf6fadd4bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3d0144-9a70-4f85-8aea-a5f1deb3f9c3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e501dc-9c3f-44f7-ab1b-711c9bebb15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb400f0-e46e-46b2-a30c-d1fe7ebd515b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4175e65c-d2db-4e54-87d8-5622d4854343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35989d3-17de-41b9-bfdb-6790e611b4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac218877-f1ec-4aa0-a0f6-f1bdab452d6b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cd2b71-25cc-4d7a-8d58-0d7a2edc7508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "986775a3-031a-4456-bcfc-87c302b7a025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a3dc19-6ad7-4fe6-a24b-f2eff7c33ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ade76d-ee20-422a-9f63-ec95ffcbed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a18469-ebcd-4dbc-8355-54f6941a73a1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63604e06-9283-4607-b483-fb8ffdba85db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07a2e0f-04ec-4f3a-b734-d55782901893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfd03af-3d3a-44dc-9076-9ec12b6e373e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e19aae1-5556-4546-9787-28f8644fd02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ddaa34-a4df-4168-9f2c-b73b3995335b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09d81f-d9a0-44a0-b0a0-4296bdcfd047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d175599-eba7-48ab-9b4b-7f5f1bf3a633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b25988-942b-4413-957f-bb3501092706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3566e44f-dff0-46a1-ac79-1e795f0d1849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c6525a-04af-4c4f-96ad-7f3841de18cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878c6884-46e8-4ad5-ad43-e0d1775bda99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfeb5e1a-c5ea-41bb-b3ce-2e94e71eb2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1250612-2649-4815-aeea-96143b5b324f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7965b840-62e3-4715-9818-077fb89b460b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce4441d-eb7e-4f20-87ae-42d6e8700e19",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eee5872-5673-4df8-b2d8-d08c9151c726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7889381e-0c9d-41a7-bd37-df1232e6c8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12da68a3-3703-41bf-8ba3-5713703d3686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7d38d1-42f3-40c0-b1ac-77f7d88bf304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a14dcc8-9635-4d8d-8ceb-7aa52d364abc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad84c8f-920c-4770-a1b0-9339c14053e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c05d60-e996-4fd0-adb0-6577524fb11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8063980d-602a-4876-b1d5-90dea22d7d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cde478-c24b-4d28-818f-6ad6f19c73f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feeead44-71bf-497b-8b69-784d85093fa6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e274c9-6d30-47c3-8c37-f9e2a1ef98c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fa06ef-59f9-477c-a6fd-b91456f98297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708b462e-f11c-41e0-a2b8-2e70d89dcdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056b37bc-a5ad-4602-b816-0ac73ebc4968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51e1158-ac03-43d2-b6e8-330e59d989bf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d05876a-4161-4669-89f7-fdf6fc49e86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89173ed-68bd-4d5d-8822-01b727b53338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc07666d-b187-4157-9fb7-022a08474828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee802c23-7643-42fc-8151-0e8bc3323fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d126d615-066c-4172-9b8f-7b2ab4331830",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc05aa2c-3fbe-402d-996e-5a972a39bd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00548beb-2c69-45a6-8762-c02a0f7c288f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0068d9-5a7d-40ca-9a3d-c905f8aafea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc1343b-022a-4598-a792-0d64070ebc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c0ee9f-9e22-468a-92f5-71fb410632ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0592af98-af15-4ea3-bc93-195bc4f82b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e04757-9651-4115-94a6-f79d2a28960c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6569a10-f40e-4492-b0c5-041188143264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c39c7e0-cf04-4f89-aca4-69542144bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff83f864-49b7-4173-8714-21d9bc39d412",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d23cce-abbc-423d-b530-d4669973fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e83787a8-4a91-4655-b3cd-00fd4f4d6916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa9d91d-b7c5-4652-b474-f96aafa275a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3604a49-4571-431d-ae91-96903be84454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0429fe-9dc3-408f-bc11-fd3ce2c7d25a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4c70e4-f197-453c-b052-fcf75f65ca93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be28eb7-88e0-4ee4-863b-c92275c18e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586209f1-2cce-4a9a-81f4-d9ecdf369989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfb3338-6814-4697-95b4-9238beb693fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc491d51-bf29-496a-9da3-510f1c14e42b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0412cbdd-0ae1-4a65-abb1-446cf4bc385a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5971e2ba-1d7a-435c-b942-e2abcc341d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6b7c98-2e5e-47b7-b4cf-99b5183c0ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a532e9-245e-4086-88e7-748536ed611b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4cb482-ac2b-46b2-a3d0-5c12ccb68e89",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f2ab90-7932-4992-ad0d-ea7d3aaa79a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0b5531-d99f-4a71-acbe-3acb1660752f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31714c21-2704-4455-b286-5883133898a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bd8912-6f58-4d2b-9faf-c099cbe45647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a4d2bb-2b63-4725-a0d7-13d9e271ebad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33a5a11-aae3-4a81-a633-d1a9335c1adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a8ac6d-8143-4086-9aa6-f8d935ff7ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8842aed0-ce8f-455d-9467-8f97cd80c7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65952d1-7818-4c73-b2f3-8797cca14c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c4265a-1970-472a-9d05-da4d6711d73f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6237bf-3afe-47d6-baf8-7c3b76eecf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705b9169-66c1-4675-9221-7bb0762bf4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f47c0d-4026-4042-ba4c-1350b8d21b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60527471-38df-49b6-8445-d57d4cba83fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f07e2-bd53-476c-b38a-0553f16ba316",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed682fe-aa7a-41ec-96d1-d0782bf582fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b123627f-004c-4256-be65-a1f162cd362e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d97200-cbb4-4e58-9e8c-5ea13371e014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b0a23a-5c51-470d-ba25-5641798fc9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae14802-52a1-4c50-b565-22bd79cbc9aa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfce909b-820c-41e1-8049-cd30256da99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91257cb6-bfa0-4e41-abae-923707ddcf5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426fa6d8-479f-473b-b79a-e2ecc232985c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72b188f-88c0-4ebf-9303-244a39465a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72800c8-f5db-477c-b2e8-5cf5ac54aa09",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79fc652-477d-4359-ad48-05b6d4b910d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1cdd30-2e09-409e-b418-3ea0cdbb1619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bbb630-69ed-46ca-a855-02710b445d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a4042a-91ee-43a7-8b90-ec7faedafb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c558b81a-ac89-4792-b12e-33953801f0ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21377ca-3032-4a9d-976a-c6499cb24a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb72e2ac-12c2-46ea-810f-ccb0515245d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f153a96b-c86a-433a-b4b8-baba99fab0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cc824c-f804-4c39-ae31-e038720493db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5381b4-09ba-4e29-a404-dc3126aaa4de",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f9a68a-45f1-4fee-b469-0066eb3cd975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b95bdc3-7d68-4e58-81bd-720c2a182afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73339413-5577-4e00-91f3-bef0cbcae9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5deb00a-9780-43a3-b492-190f641cf18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e6afba-c8c7-426e-b0cd-40f5ec83d34f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6006ff3e-3fd2-47c4-a951-89cca5e2bfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c36cfc-a603-4bca-8562-8fce1ced29f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32635d24-5310-4fc4-b670-569c08d154c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575a5908-1db3-4086-ba40-1e3919651ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48fbe4c-e5b9-47c2-83d5-bd796c5eeee6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f718b67-0e67-40c2-8e4a-07b300f467d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e7b805-db04-490f-b0e7-503166241833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31718102-923f-455a-b8be-eab44cbf8a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d433e5-6675-4cf8-8032-34c7451fffc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07adf8-f61d-4384-b0e2-6ec17071348b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f834272a-7117-4f1c-aaf8-66f478624f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48280f1f-c025-44e9-b341-4f714b6d55dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dc61ab-50cf-43dd-bbc2-0a9d00d93c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442db5d7-c219-4813-9e86-45cb53824295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867b93eb-0df8-4c7f-abbd-99e2a75fccd0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c1368b-2961-4e68-9321-e82676122b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1795202b-759d-4ef9-86f2-8e1d2010777a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c4034f-4a56-4e54-a1cb-0f8dc7f8a203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f8262b-da81-459b-86ae-2b775046ced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a91b464-abad-4c24-8922-a6c235dbf700",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e68df5-a01d-4920-95ea-95ba01c45dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9dec0d-1f01-4c49-be21-c3abf77513d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cb4c32-5e43-41fa-a27c-06578ede8d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7762af0-2308-44c4-ae35-f04a689ca518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27904b6-2046-4b12-b3de-6bde0c702e8f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3a59f9-4722-4bc7-97d9-337bbbabc566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9d0526-8576-4800-a802-384ce131a5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106e0b71-cdc1-4c58-a1dd-8a3c7c15eb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba05161a-deaa-420c-9af9-ef6b56596195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e233c7-6d48-4cd6-8e59-2646f865c940",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0193d5a3-a5fa-46b5-879f-00133f884cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af722b91-3660-4854-9a76-4c6278a3ffea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a669a144-aeb9-4999-a884-f27917ba91f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2801bde-85a9-4f3f-b52b-c1796050d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356e8646-068d-4031-b77d-ddf69eae2b9c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bb6bf8-7783-4448-a584-030f882dbd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7de43e-d890-49a7-83d5-ee6d86d43060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6906be-affd-4966-b0ed-64f28d69fdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74612735-5901-4d52-9c5a-17975b14a05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b98800-8ef8-4aef-b0ec-55204b4e7acd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df6e101-14f4-4f3f-94cb-3674509cb327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d04931-3736-4317-a6a5-3c866c767706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d4c8c2-2fb4-4bda-879e-ed626f2d87b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dd025a-f642-4789-9a81-349ef49feda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe13f3c-f6f1-4b21-a1df-3b7edebaf222",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d0bd25-bf54-46b3-a311-1ab68e8211ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc55359-bb34-4484-b36e-98813137519c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52092f1-c8ec-40b4-8829-7c73f9734cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed26f96d-7307-41d2-99bc-d2b66599304a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7caf56-77cc-4534-8cc8-8821830dca6f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace6bd68-0dc5-43bd-9522-a2500d681278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43120db9-0e81-413c-ad26-d3a2d4117231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e34aeee-8756-473e-b94c-9688647ad4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce39ded0-360b-44ac-899b-5b73ef78e755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88a14ea-d1ce-46ca-ba32-3da2e7db5be4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1ace63-12dc-4497-93e2-306a807bd70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abc4421-774b-450e-96b0-14b52120192a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3a4b42-b67b-4488-8029-7353fc9e48e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340244e8-6026-42fb-a3b5-036b49e83d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f3d72d-7859-4c32-8cb5-22f5bed043ed",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eced0294-c101-4c93-8fd5-507b4d8c48d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bec928f-10ec-4dea-9e83-9c591665d60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99494424-4431-4434-bbfb-5c784e562171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d81b72-e780-491b-8346-2e203d9d95bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8728c2d8-4f3b-4089-8887-59a68c430839",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9a6b90-1b01-443d-a82f-62100a65cd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b45d355-46a9-4137-82ef-fc5e24f90b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4c1614-5f76-4363-8f16-7e07389fb975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f4e9de-7f1f-4894-95fa-6fe9c917ba97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757a8a71-daa4-4152-b281-f9b2215159b8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa9020-9957-4826-8c02-662f40ed7a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537b549c-d1e6-4dfe-978d-058d348cb451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba58a57c-c991-436f-b726-1110c13d7390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c7387c-a606-492b-8597-f0d78eb01867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd89ad45-175e-4a2b-93de-c0f32e3cdc0a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ab57ba-1adf-4822-b969-966bd3178fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340dbefd-ec29-415f-be41-fd062c81b030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac12aad6-3cc8-4796-aa6f-17180bf59b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c5ff7a-5f52-4a1a-b8d5-f5cd8e777bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39379d6-946f-4c40-aa03-2eb4a4e92a99",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4fb9ea-47a6-444d-ad65-568661b4afc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13a4b48-77d3-4b93-a2a2-e6ab49d81573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472ceb1a-2007-4d7e-bddf-e3d2a259b349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b97c07-ec0b-4e57-a26a-0fcb98728d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b5c6d0-24c3-44d3-bf38-3fd71d5065c5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f0c231-8f26-416e-a5b6-a24225d2194f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d241222-a401-49e9-8324-3de79dda23c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7848b7f5-29ed-4bda-99ce-036708a85efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7272aa1c-7092-4159-b611-33da3dbc4d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445f37b-4419-4a3e-8738-344e38e61c32",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727e5cd9-4857-46e9-befa-23eb524bb9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e817cf76-b262-45f6-8120-71141296812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f97f76-1c6f-4365-8a91-9c9c74c06d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffe139f-e0ca-4ded-8185-70fe7d060b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69589a79-0946-486b-ad4c-99700fae8d04",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dda6a33-c7d5-40f6-84e6-d24b2282771d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c906502-2e9b-4959-833a-a5bf2de57496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13654cf6-d71c-4b30-aa58-fd5d722d03bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b6a92e-aa00-47ca-909f-327ae8529bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd773b7f-5bb0-4523-abc6-51c3e0995cec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0345704f-88d7-45e4-a031-d0449a875b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202c35d4-a205-4de8-818b-45e3b1fac567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9043ae-2b2c-4a3b-afd5-c27721ce09f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd95ef2d-49d5-435b-9a8b-0e1f57e1ea89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29d5ba7-b4c5-4493-afbb-4f775763ffb3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097213b7-5044-46cd-a443-c67287cfbbbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ccda2a-0631-487d-8165-dbb907131465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8bb320-7668-4c84-8382-2311c5dec238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4282e9a-f43b-4752-aeb8-a731a4304457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef899fc-5b55-4a0f-81ee-cbf537d67ac1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04baa2c4-10d7-4ecd-bb8e-8c65597f3d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac56258-95ae-4a96-b201-bd007babf52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb9acdf-ee4d-418b-a02f-e2e52fb1c2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dd9021-8f27-41a5-9274-d6a34f7ce0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2360952-9f19-4ad6-8c39-2b290515bccd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a4e4b7-c680-4db8-9329-1214488e0321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e31bfd-4e58-4bfa-a48a-67d42db852f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de07b9ac-2b4e-4dd1-ae1b-5faf92c17a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c209a6ba-784b-4018-9613-d1ffb8a5cb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cab727f-c15e-41a1-8de5-46b16b32819d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bf914c-b206-4d02-b7c1-6dce0fea0da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78980ffd-17dc-4da6-96d6-31f2f7afdf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7948f8-f856-45ce-a434-2867aecdc547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116b29a5-389b-4a72-b4a6-47221ee7f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795ba072-ff7f-4cb7-a20c-ae3332a3286b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17ec6c0-3b83-4c80-ac94-e267e127030c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47d5597-59c3-40a1-bead-443203354332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fc2c03-c6a1-48f5-99b8-d3b5b3ac69e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edc90fc-d950-4477-86f2-72711e4a43ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a4cdfa-cbd2-4200-b018-de9ab7d5e1f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea9a453-20f4-4be2-b6ff-7986aeec94c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e53a6a-f18a-4e06-a40a-80a17516dc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38a58ab-fcf9-4b50-9b3e-13e412439504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4953da1e-003b-4551-8e58-7965845384bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f5c0a3-d568-4e22-a35a-ddbe29cd7cac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8239461-385b-4bcb-9499-0bea9d5bf9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c2634d-67a0-4367-8a88-fcb87eba1059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00225bd4-e275-47cc-b5ee-b67d6c000d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fb383a-5bd4-4c8d-bbd7-7c1d853ffc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ccb734-bc37-4bf7-8d58-c2738b0d4070",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ce90b4-3cbb-4f6f-b0f3-244aa68d604c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5551111-228c-4c45-9887-aeb83c1a1d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ad56a3-744e-4c85-a8ca-665e75b8dbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90722e6d-c468-4f1c-8723-98b4fcefbf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638c98aa-e31f-4b17-8fdc-a5bd741cc55f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c646b1f-fdc2-41d9-b738-51576b606253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6175820-91d5-4bb6-822f-3c9d14a0cb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd722bbe-e88a-4de8-9e71-af1d064ec666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6fe302-6418-4a11-aa87-7367b621d29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d8a808-7489-4141-b26a-d141dbbc7019",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa6c643-4d62-4e98-8696-41fdb9663fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f607e3f0-ef5e-428e-87d0-2e5f5d19e9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82473c8-77f7-4067-a0ac-a8cb6cf0731f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e26726d-bee6-452b-a8fb-d43e16c40691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cd7409-1851-4e44-85f8-fe9223f6258f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de19f014-f617-4652-a8ae-38b257c49cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d41ad9-5ffc-486d-b574-54c61d7e7787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cfcb5e-bcd6-4503-b448-94c337683fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028a9c7b-3805-4316-9deb-595ca81c7b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0da31c-26f5-47c1-ba1e-c2c374e02061",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897d7f32-e660-4714-8d9a-123646be19a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe02179-8d1f-4e74-a020-50b2013fd8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2368d78-2967-481a-9e19-6dcb352cd648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1693351b-06b7-455c-ad55-838b3dc4a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1900778-5981-43e1-b29f-aa47e652f9b7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb616904-9721-48c7-84e8-bf9370dbd33a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b20eb2-b2c4-4dbe-a88d-48129e52d2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0145e6-1d3f-4d21-9396-8f831a281d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a238b5a-b1dd-4be7-887b-ebed2f9fce9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1eb80c-717a-4121-b7b9-57caeb71cb9b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da405c9-3694-482f-940d-403bfc1076e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d870e7f6-70d6-4ee4-847d-56fcfc0a568d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6560d7fd-1312-4fbc-b5ca-aebdda2b5e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a893d379-cc33-4d52-b48c-3e419e6c4554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f86175-ad17-48f2-abf9-abf219b82fe6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48b97df-2fa4-4bed-925d-72edb0bd6905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32118643-0b85-42ec-909a-ae3d1192ac0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f502a5a-b153-43d4-9783-446326c679fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b90ac17-30d8-45d7-bc12-7507f8b7ef76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989ede96-97ce-4299-a511-dd3874b1d1d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46722d77-7403-4799-a963-830456f98906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3ba973-e468-438c-a28a-cfa214f52c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82396e30-fc0d-47c0-8ab9-bc7d7785a34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6655e42-48dc-4e8c-9899-eaa270022389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85c1651-4a58-4345-afe9-c555b44cffae",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5693f4-0fdf-4ba0-833f-4a97804a37f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "826201ae-cc93-4b3d-8f22-20b5d069e3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935420cd-17a3-4816-a89a-52a990e2cf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc77fe30-3094-4378-b6c2-cccc2c799243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc684d-3532-4331-8db1-e6d6879070ad",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0355ded3-e80f-4212-bd6a-66f1d99959b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd29246a-6019-4f91-a612-b30b0be68bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f439bc69-a4e3-454f-a3a3-7602ca6cd826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a59db5-fb3c-4f2f-8f49-c71f37bfbb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95f0981-56de-4289-b24c-7eb53c56ad1a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9849493a-0cfa-4634-8a43-63dce10c4c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fb376f-d2eb-4d71-8268-e4fd292869ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805ecf96-c064-427c-a6a9-f9c7283dce02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605239d8-4fd0-4281-922c-21bd6fec9bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce137f5b-aaf7-4d4c-a13c-42ea0ead4b7b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab735bee-bf51-4af4-b524-edc24ba02b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6b04d2-0fc3-46a4-8f2a-e1a571ec3b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633f06ba-a037-4125-be9b-2b3d58cf3bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be2dd7a-9c6c-46e6-9475-dd92d2b8599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c8350e-9ba6-43e7-9255-701b9cc616ab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d57344-9c5c-4088-9348-2b6c04c30012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d229470a-de79-4939-9ece-972fcdd75d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef532aa-0f17-4388-a6df-cb0c9589a679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab8f172-18db-4d72-987f-999064b42b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3ca342-94c3-47c6-83c6-f9a100aefc73",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf20fc3-a1e4-4ff7-ae93-884d1f81a252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7199cc4-a025-4818-8fdf-b974967b6eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c86299-92b9-48e7-9dad-eccb9198bee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567084e1-9bc7-44d8-b9e7-ffa548f1b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f246685b-eadb-4e0e-a8bc-db3bfd2c2bc2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6111d466-ef77-42fd-8e33-f07d84ce9428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652c885e-6746-4f79-868c-da2dfda39987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f86f0-19c7-4eee-8b6d-a88703f0a598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbe2e37-46ed-492d-8a14-2a5fb0349a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b813a0-8457-4700-bc34-4e8385a1742b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cfe903-65b1-47ab-bd83-318cb87752a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c40c319-411e-4a1b-a4b8-cf23bdf49aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169c47ad-a825-4514-9eec-93289ee38167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91abfeaa-8c12-4c05-9763-e08de3d3d13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fc44dc-eada-4b1a-aa49-50b196755e97",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6351e9f5-86be-4391-84c4-e32940a5457d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bb8b2d-6f58-4873-9ddb-aca13e46a854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb41d13a-c7db-4efa-8b6d-b6038abb99fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d288120-24fc-4b38-aefc-a37e797c947a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e227d5-10ec-4c8b-b559-26e187084cd8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ac00c6-6c77-4af8-ab05-0c35b0070ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f455b596-b087-43e1-8960-4d4a5aa65074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58d944d-5c02-46e2-b68a-4a257c23916a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677a5f62-65d2-43eb-84fa-7b6dffea02f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8380beae-ee22-4f4e-bc03-4e8e83c87ef3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da26881f-ae20-49a2-a2c7-5aeb0bf2574e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec16ba6-fd4d-42c6-aa12-b9ce1d739b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc349ecf-b046-45b0-aa30-d242dedd3c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bf8179-dfa3-45dc-9406-009a3ee7541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50edb8c3-8875-497c-8ecd-9bfe006e4a0f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2360fe29-ad9d-4f85-a39c-543fbacc800a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99960777-b75e-46eb-bd2c-3ca3ec51d5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fc8c51-85ca-46ea-a543-a91dd3eec894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f450b733-50d4-41b6-bda3-4c016b15c060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade497b6-8548-4adf-8959-72a934a80776",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3346a33-d383-4350-83bc-9c9e89fc45ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f905ed-f953-4bad-bf4e-cc6cf7bc132d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c47a851-3dfe-448a-b0b5-dbcdd3dea45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b98a091-fd65-4db9-903d-c6647e61c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90af0e88-d016-4946-ba23-d9822f56d880",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c932bc7-2d3c-4f53-a749-d5176db8d36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5bc2a1-f916-44a5-9940-e056e3a305e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3efe8e-04f8-4d22-9b89-83075250921a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9639542a-445d-47a1-91db-f8ca70b02a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819ae927-351e-416b-95ec-a4a0545449a9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e698357e-0fbc-4b4b-8685-d71e44dac81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "947c6b5d-d543-4e68-809e-75fe8fecf639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c4a85d-2d36-4a7e-ae0c-550fff2ef930",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd3d5df-faf0-4b89-a0a6-3ba85c8e8529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c237f9aa-9002-4c83-875c-fe13ca8bd101",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc20204c-6df6-440a-9551-bb7b93800a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6e7baa-9569-4cca-b2b3-5fcf7cb80de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e295d9-d395-4a36-a67b-7f5835ae09f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d9db7c-6ea7-42dd-966f-eed3fecc096b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9075f2f4-b66e-447b-a426-61161150ac4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30d59abc-6000-4499-8483-2ff281f319bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec5e8165-9f08-4ff1-bbad-38648df10140",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3682769d-bffc-4d95-94a9-31447c72c089"
                    }
                  }
                ]
              },
              {
                "id": "d78be410-b6da-4fed-b9d8-a2e41a1ff923",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "881241fd-c9de-4c43-bf1a-55f2983e77c0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe37af0-ae6c-432b-9363-0e1c1c8706f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "edcd190e-6927-4c17-96e3-0064ed29f9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e96d74a-1247-42fb-8a5b-73183d2d8de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0092a5c1-bff9-4eb5-8666-188311bb63be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb3d6886-498b-43a6-94ad-2816f1f72ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63e6e961-42bc-40b1-a886-8cb9ba98d350"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2be5ed-b37c-4f2d-bc90-735a3d94eba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48c80f8f-a038-4f33-836d-75f9ce1ff007"
                    }
                  }
                ]
              },
              {
                "id": "f3d91a3a-4308-481c-883c-de73b29f70d5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e651a3d8-639f-4b96-a777-6ad49065f562",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b02a42-b390-48c6-8eff-53aa05ccf1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2771b782-6955-48ac-9ed0-1b75eba140f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ab8f05-12d1-4bc4-b7bd-3d5166d60f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acff6ee-9353-4079-a4d6-d8f442cff0ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c1be447-4f25-4a80-8342-0d2644673e66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2ab74d2-c8c6-44d2-b0fc-7bb5e3c5b102",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74245b54-bab8-4b26-9d91-e7fd1bcbab34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2fa6876-9120-4d56-9988-8f107e9372cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f14509cd-dce7-427a-9831-d72de37b5a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce897a39-0d84-42a9-9e42-b0f214949072"
                    }
                  }
                ]
              },
              {
                "id": "ac38b55d-e1d7-4e13-a667-bda02b6c2b31",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ace85308-b110-4ba8-8cbb-f51814738e69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19bd55a1-8d99-40d6-bfd3-cef6dc047940"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6610e736-a6c0-43fb-9169-df3cb7c4955a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27523f1b-bdb5-45b9-b2f6-b4bc109376c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b35e73f7-c2d1-4779-94d7-5f68edf20024",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "29b308a0-ab77-4a37-848b-6c723db9779d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d005e96c-c084-4b66-903e-2b2357077b3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "559aad92-9c30-483b-b672-c6e90986a8d4"
            }
          }
        ]
      },
      {
        "id": "b8ff2203-9d93-46a2-9398-19aa007be033",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "33846826-19d2-4502-b81a-8b1119bcd5b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b1d1a3a-631f-4dd7-9c90-33a0841a2024",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b575a572-4aec-40d7-8557-1714bc90c28e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b522efc6-a99e-4a5f-bd13-0546f8e7b908",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "39a7bff0-96a5-410d-8cfb-2c9de54ec6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ba67dc-98f2-42c7-82a2-10c3e79f3817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33cbddb8-b770-4751-951a-3a0977d61f57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e358e6ff-48b5-4308-bf8f-c4152afd8648",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92ae3596-c059-4055-b735-9f5dce120b38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e24d87f6-a4aa-4b60-9b66-cc6318e0c402",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdba876b-c37c-4591-b96b-5ce2578b5e58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b32e372-abbf-4cb8-8031-6888730ba8a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "28bdd074-cd4b-4890-a95f-22b723913dce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a70d6585-b538-43c1-adf0-4560ef6795d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f69d7e7e-5a2c-4c49-ae1a-fa1c4a32fcac"
            }
          }
        ]
      },
      {
        "id": "7fc885c1-d0e1-4f9b-9b0d-e98dee2c8f4f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d4c7eaa3-4d97-4144-b406-3535665f2b76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5428db77-5ed9-4548-aeb9-853a901fa5aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fb250db-3952-4c5c-8b82-993e4745220b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbbf55-7863-45c3-9487-b272962fd980",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d427365-730d-44ca-a581-269ef7ddf223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77156cef-2883-4ab2-abb5-a35f31918cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aeb664c-61fc-48f6-8c84-a33c9a201f83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9e0d473-e571-4399-8ecf-2348cc0cbc21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b547f78-f7b3-4afa-82ff-805fa2b8f5c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a83ad27-002b-4acd-944e-437b2c0615d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd548422-5a39-495d-93b6-34aac3b22972"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a3a7599-1159-4e9e-9a26-389669989823",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f83d0d1-de76-4b2c-93a8-f8599ebd15f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b92681-0a31-420c-87ad-ddbdfa0b37dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b99b23a-67ee-4038-a5a0-265d946b263d"
            }
          }
        ]
      },
      {
        "id": "b94607da-7b29-4bf1-b0d8-efc7f957db61",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c3015756-38aa-44b3-bee7-cc40458ae8bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d505a8d4-ad4f-4c31-89ec-cd9cfa774a96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "603119bf-394d-43c4-a308-b97b0a211b05",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c2b28c-9239-40be-9065-a7bba03d7cb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e22f7b8-411e-4c2c-b65b-9e07fd8841e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3a92fc-2720-45ba-927e-13bcbfd7298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7629a204-4822-46e1-a95b-d892e2c332d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5871eea3-eb4d-478a-b43d-2f145edd3b7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60d03d04-8cc2-44a8-a86e-a199aae2549f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f21e819-d25a-41f7-b78f-819ae1887b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d798423f-a707-4586-9a3a-c529c2bbf987"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "930a03f9-7354-42af-8a33-650036a3c2b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "234b09ac-ea31-405b-8fb7-366f7174b171"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53367f64-2a28-45b5-9925-ec8f6ced35a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c693f41-b582-4fde-84fb-08d1aa0ebb29"
            }
          }
        ]
      },
      {
        "id": "5659c3d0-d924-4652-b5b5-727bfa83ce34",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed07299b-0b6c-4a52-a09d-75f9dc956d43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6502b049-8e47-4aba-baba-89e6d813ad50",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5804eb40-5974-4224-8635-8ec527861a80",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ff86cbf-2a17-4152-97c3-fb7e46ccd080",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2b55ab5-3c01-4f45-bbc1-a7cbba86b3ca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 255.1825396825397,
      "responseMin": 9,
      "responseMax": 5308,
      "responseSd": 813.1809517752232,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716943229942,
      "completed": 1716943302658
    },
    "executions": [
      {
        "id": "a6265efe-2e37-427a-99a7-832b51e0d17b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b08ad0bc-c404-4190-91a6-35a6e9d3506d",
          "httpRequestId": "34426356-0b8c-4b1f-8f23-e8d2d2fb4826"
        },
        "item": {
          "id": "a6265efe-2e37-427a-99a7-832b51e0d17b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bf82da5f-a1da-40e0-a4a6-eebe90d3824a",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "10cd0d64-2fc3-464d-ad21-e17e7f1414ce",
        "cursor": {
          "ref": "17c91ae3-92c6-4a76-a27a-f5be375c1642",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0b1cd649-97e1-4584-84fe-612efc6f01cd"
        },
        "item": {
          "id": "10cd0d64-2fc3-464d-ad21-e17e7f1414ce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "655d8718-a13d-449c-87bc-bdf9c853f896",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "c22a2d01-703f-47f1-929e-fa0bea3c08cb",
        "cursor": {
          "ref": "03bd857d-d179-4ccd-bfd7-f3ee8a333bed",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7fb3b659-67b0-426c-a495-dd525de3ba75"
        },
        "item": {
          "id": "c22a2d01-703f-47f1-929e-fa0bea3c08cb",
          "name": "did_json"
        },
        "response": {
          "id": "3fa55f5c-96cc-4974-9af6-8b62e2f02464",
          "status": "OK",
          "code": 200,
          "responseTime": 567,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd43229b-fdf0-45e7-b41e-b8efb60bf0da",
        "cursor": {
          "ref": "c178379e-7659-4736-823b-9dc1dd370a68",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bbf2dec-0670-4b5e-b880-4cbc3fd73986"
        },
        "item": {
          "id": "fd43229b-fdf0-45e7-b41e-b8efb60bf0da",
          "name": "did:invalid"
        },
        "response": {
          "id": "117fa6c5-288f-4b6c-8b69-c17bfb94f9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2310,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd43229b-fdf0-45e7-b41e-b8efb60bf0da",
        "cursor": {
          "ref": "c178379e-7659-4736-823b-9dc1dd370a68",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bbf2dec-0670-4b5e-b880-4cbc3fd73986"
        },
        "item": {
          "id": "fd43229b-fdf0-45e7-b41e-b8efb60bf0da",
          "name": "did:invalid"
        },
        "response": {
          "id": "117fa6c5-288f-4b6c-8b69-c17bfb94f9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2310,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd79b38-ff30-4f0b-a047-05188eaa4682",
        "cursor": {
          "ref": "63a7a18f-d62d-45b8-ab8c-7b60af8ee5fb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7cd8d6d3-66ec-473e-8ebb-15cb902f24d2"
        },
        "item": {
          "id": "3fd79b38-ff30-4f0b-a047-05188eaa4682",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "89ce3155-759c-437b-b3a5-1b1a0591c6e5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2535,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022aafe4-8062-46a6-8855-c0ec836e5313",
        "cursor": {
          "ref": "14175365-fe1f-4d51-bab5-c755a37b1bcc",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "80b09ab2-4326-44b3-a806-3567ed11b7a8"
        },
        "item": {
          "id": "022aafe4-8062-46a6-8855-c0ec836e5313",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6caf07d7-bac6-4974-a026-35d47509d2ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2224,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418059d8-53d5-469e-94b1-03260c758f2e",
        "cursor": {
          "ref": "e1d2cb44-d834-4cde-afb8-815d1d2853af",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ee8f83b4-7407-4e4a-87dc-ae5473318123"
        },
        "item": {
          "id": "418059d8-53d5-469e-94b1-03260c758f2e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7572bf06-3fc2-4336-9c7a-2f402920300f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 226,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c395a9fe-f538-43a3-b72e-6d8eff6d9cd9",
        "cursor": {
          "ref": "0d4dcde5-e02c-480e-b6f1-19a1920e6a54",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "151654d7-c43c-41de-838a-26388c813b1d"
        },
        "item": {
          "id": "c395a9fe-f538-43a3-b72e-6d8eff6d9cd9",
          "name": "identifiers"
        },
        "response": {
          "id": "0e162cc6-98d5-4880-84e9-9f7f8061635b",
          "status": "OK",
          "code": 200,
          "responseTime": 2503,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b86099-d4e5-4f2e-b34d-a41c6581561c",
        "cursor": {
          "ref": "fa63680a-b2a7-4b67-b786-6e1476cd3a49",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aa077266-afe6-429f-9d6d-5c5ded945a11"
        },
        "item": {
          "id": "57b86099-d4e5-4f2e-b34d-a41c6581561c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f09aad7-4bcf-4cad-9ac2-366d0fa44aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d180b-e139-4a64-92d5-524b17ab2adb",
        "cursor": {
          "ref": "2ea9b901-0c08-4761-a4bc-c8025b7c8a30",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "75e98b26-d0dd-429d-a67f-8a1b28697e62"
        },
        "item": {
          "id": "619d180b-e139-4a64-92d5-524b17ab2adb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0970f21e-062b-4162-8247-4e63aab8d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a241e52a-fe8b-4986-bba0-09a1b8b6149a",
        "cursor": {
          "ref": "717ac1f6-dff8-4920-97e5-8067c004c125",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8556d36a-bdfc-4792-a8cb-366ab256bfa8"
        },
        "item": {
          "id": "a241e52a-fe8b-4986-bba0-09a1b8b6149a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d190936c-2d59-4640-af3a-3fde8d54c5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98abd16-904c-40f4-92c5-cabab7bd4ecc",
        "cursor": {
          "ref": "4e291911-ad07-42a2-9677-48a0dc1c7cf1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "796736b6-bb7f-45c7-8e0e-aaa38b549864"
        },
        "item": {
          "id": "a98abd16-904c-40f4-92c5-cabab7bd4ecc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bfc7288f-8f78-47c4-bf40-e7f2409a99e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac2bafe-b21b-4548-963b-542525bd2b3e",
        "cursor": {
          "ref": "05d6c3e1-4b6b-4984-8105-8d3c00b965fa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d538b066-14df-48b0-b5da-ee406967662e"
        },
        "item": {
          "id": "bac2bafe-b21b-4548-963b-542525bd2b3e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1c57c109-53ad-4d0c-9bea-d0ed4e47f9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b1ed4a-df78-49ae-b9b7-53c4d47473b0",
        "cursor": {
          "ref": "030a4894-2582-4ac2-9192-a7db5db26195",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca1b5087-febd-4b4a-afdb-2a2d914d1d38"
        },
        "item": {
          "id": "d2b1ed4a-df78-49ae-b9b7-53c4d47473b0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5270c6a0-2c16-43c3-885c-5514e119880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b0f165-5e4b-4a6a-b9a7-ace9087b06a7",
        "cursor": {
          "ref": "ba2e64bf-0742-4439-ad98-dc8f644dd12a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eb96d419-f661-45dd-8237-822b4ee17c57"
        },
        "item": {
          "id": "33b0f165-5e4b-4a6a-b9a7-ace9087b06a7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0064d14c-5166-4d3c-8534-1dc97253d38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eea3f7-2b5c-429d-bf38-b78c298dd22b",
        "cursor": {
          "ref": "669c730b-333a-4816-8837-9a31be5e0f83",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d733d10-5cf5-4742-b337-bc8196433fee"
        },
        "item": {
          "id": "88eea3f7-2b5c-429d-bf38-b78c298dd22b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "db61a4a2-1481-4541-a5d3-cc4ceb23e21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d9a705-b367-43d0-9764-be2a0ee04ac7",
        "cursor": {
          "ref": "e0d7a794-b512-4abe-9fa8-8345a3856c79",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "60f5a714-156d-4e10-8195-527561c42cea"
        },
        "item": {
          "id": "27d9a705-b367-43d0-9764-be2a0ee04ac7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6840cf4d-1d36-49b1-b327-e214d3e14e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd8e1ab-73ea-4a06-b827-82e43f81006f",
        "cursor": {
          "ref": "c6326ffd-3327-4c7a-a8e0-0c1238f517e7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9e0da936-efdd-4367-b3e4-5ff8243c152b"
        },
        "item": {
          "id": "8cd8e1ab-73ea-4a06-b827-82e43f81006f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6dc388ea-e755-418a-b282-6d303203c0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6da365-3526-4578-8ed1-bc0055d13070",
        "cursor": {
          "ref": "435ee54d-9026-49fb-8e9f-cafa66f91da8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9d3f0894-ca76-4fdd-93d5-9ee3156a7b71"
        },
        "item": {
          "id": "4e6da365-3526-4578-8ed1-bc0055d13070",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aa1db614-dde0-4791-b775-630e9cbee3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7dfcbc-36bf-4824-b6f3-50a5c865f7aa",
        "cursor": {
          "ref": "95ef7c9d-869d-43e2-8b6b-8b3782188f6a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7fdfc342-0f26-4eb0-8598-f7c93054f7c3"
        },
        "item": {
          "id": "ab7dfcbc-36bf-4824-b6f3-50a5c865f7aa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "beffd3cd-d989-4b0f-bd4d-5c95e673156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99cef16-2f0d-4b9c-9685-88c37d644f78",
        "cursor": {
          "ref": "a64ca252-3221-4053-8645-7bb340da18ce",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9a401571-a327-4721-b7bd-0bfa9e7e9f70"
        },
        "item": {
          "id": "f99cef16-2f0d-4b9c-9685-88c37d644f78",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d3a01134-3f9f-43f6-bbe4-4874fb97c2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8323f916-3120-46fb-ac02-bae4d66ca09e",
        "cursor": {
          "ref": "86eec147-8e6d-45b2-a0c7-c72888d42e41",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2f0a1372-37e4-4e05-8e59-17cdede40527"
        },
        "item": {
          "id": "8323f916-3120-46fb-ac02-bae4d66ca09e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "12eb7f2a-0ad3-4187-b346-9d6e3405551e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4152e52-95e0-4783-8dde-30e9929926e4",
        "cursor": {
          "ref": "a5a0fe87-6e30-47d7-8c21-680c50b31da9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "17c9069d-db3c-4522-acd8-c1b43bda3160"
        },
        "item": {
          "id": "f4152e52-95e0-4783-8dde-30e9929926e4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ff43d7b2-0749-46ed-be45-a73836d3ed07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d6d5de-c47f-492b-90a7-ee99b2bc3735",
        "cursor": {
          "ref": "12297266-8326-42d1-b09b-abd8ff8f4df0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d9beb472-717e-4810-aa3d-10e67f84152d"
        },
        "item": {
          "id": "d1d6d5de-c47f-492b-90a7-ee99b2bc3735",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b515d126-cd5f-4ea5-ae24-206bc1c5678d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa91b0e9-1998-4065-871c-24af19d369b9",
        "cursor": {
          "ref": "36066f73-85cc-4758-8e6f-735b9f458987",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f982f742-9737-4596-8d63-d3c3016bd4d5"
        },
        "item": {
          "id": "aa91b0e9-1998-4065-871c-24af19d369b9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a3961122-8c75-4ccc-9764-1bfa76369043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5522b9b6-84fa-468b-9aa6-5ccb2b6f956a",
        "cursor": {
          "ref": "527f2c2d-e413-479d-a28b-05ed9cd54e2b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7882845e-2d18-47fc-b665-23ba2e427811"
        },
        "item": {
          "id": "5522b9b6-84fa-468b-9aa6-5ccb2b6f956a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "18246735-c1a8-424b-b050-997986abfe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe66b65-23ae-419a-b8aa-576279ea422d",
        "cursor": {
          "ref": "b868ec2b-59c0-4537-a27a-3467218fcdf6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2e60e301-df28-4f6c-9575-f60c27959a7a"
        },
        "item": {
          "id": "cbe66b65-23ae-419a-b8aa-576279ea422d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "91d6ee73-0ddd-4747-8839-1ea636c2ce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d863c7-47ef-4259-a726-ef291806770a",
        "cursor": {
          "ref": "6085a02f-8237-4d2c-8ae9-ad7f3893c3be",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3c5c79f9-8db7-4515-be24-ffb64aa02cbf"
        },
        "item": {
          "id": "46d863c7-47ef-4259-a726-ef291806770a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "03ca8379-920a-4547-aa9d-92a405a90ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450eb641-0bc7-4b60-a582-10ffedbc14c8",
        "cursor": {
          "ref": "46e0706b-a560-4d53-a0e9-fe654046ba52",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2cf8ae21-3d39-4857-ae0a-375674c47157"
        },
        "item": {
          "id": "450eb641-0bc7-4b60-a582-10ffedbc14c8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "04feb6df-0737-4e27-9243-165be8c8841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3228175-fd66-4428-b28f-282c959dc1de",
        "cursor": {
          "ref": "e3e03304-d615-4264-8627-ef4238b6df49",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5ccc1562-91c6-4229-99ad-4091491d9417"
        },
        "item": {
          "id": "c3228175-fd66-4428-b28f-282c959dc1de",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8395a89d-6ee2-41b2-bc8c-b2f138de8147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f83dfc9-ba8e-4a36-b376-d4a87248bfbd",
        "cursor": {
          "ref": "aad1019d-ad8b-457c-9b7d-a9fceb333e9e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4da2fdad-730a-40db-9896-2b0f00751702"
        },
        "item": {
          "id": "5f83dfc9-ba8e-4a36-b376-d4a87248bfbd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ff848b1b-4123-452c-90db-9f1cd4d5ca09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93439ef3-26e1-495b-a398-40beb6f1205e",
        "cursor": {
          "ref": "dc825d05-73b7-4525-83ff-d942d556c5dd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b7861e0c-2f0d-4d87-824b-f123f3079f8b"
        },
        "item": {
          "id": "93439ef3-26e1-495b-a398-40beb6f1205e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eb3682b4-2c23-40d9-8703-ac991956fe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b292eac2-f19f-44af-ac07-853a59f0bb8a",
        "cursor": {
          "ref": "f72af94c-55e2-409a-a90c-133614701589",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e4a8ec93-2025-4949-acd1-4b991c05061e"
        },
        "item": {
          "id": "b292eac2-f19f-44af-ac07-853a59f0bb8a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6ef38a15-399d-4ee6-8c88-ac461c7b6514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10992c7a-38d2-49ea-895c-c4c932c1c9da",
        "cursor": {
          "ref": "aa84d27e-afcc-413c-aaf4-6857de196210",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ce92b4fe-cd5c-4b12-98b8-b05b70850bd7"
        },
        "item": {
          "id": "10992c7a-38d2-49ea-895c-c4c932c1c9da",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "37b0f61d-c6b1-4d6b-8556-7d40032bd78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a556e617-e9d4-4fe2-87ef-17045bef65f3",
        "cursor": {
          "ref": "ef9c9362-01b3-4ae6-88d0-d1fb635c57d3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "47253479-e531-40d5-8ecc-c58c9d12f3e5"
        },
        "item": {
          "id": "a556e617-e9d4-4fe2-87ef-17045bef65f3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "24b65099-044a-4306-8f4b-dc07ca9cf665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f49f304-79be-46cf-ba2b-4c4b90dd3df9",
        "cursor": {
          "ref": "4995b471-6246-49eb-8809-f3959366ae30",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0154e278-2e5d-420a-a845-ee0b45faa7a0"
        },
        "item": {
          "id": "2f49f304-79be-46cf-ba2b-4c4b90dd3df9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "90e8adb3-44e3-4c36-b509-dfb011551418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e5595c-41f7-4cfd-9e07-aaa484e2fd46",
        "cursor": {
          "ref": "d9d86d74-b2a1-4400-a42e-811aa90b03b1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "93d786be-d26a-44ec-8de6-662d2a29d050"
        },
        "item": {
          "id": "95e5595c-41f7-4cfd-9e07-aaa484e2fd46",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "40f5af24-bb4c-479d-816d-042e44a6791d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5063a1ce-6565-48ad-8748-a825b4f00a68",
        "cursor": {
          "ref": "aac7736f-9186-4065-bcc6-8b0297361b61",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5f91c22-0c86-41a5-8f29-2b19b7c2c049"
        },
        "item": {
          "id": "5063a1ce-6565-48ad-8748-a825b4f00a68",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "70125a3d-5910-4feb-8c4a-1af11c7e63a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90468221-5f58-4016-9530-f94ceb40b0fd",
        "cursor": {
          "ref": "159b470d-ecf0-486e-be8f-46c64589ee52",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "969bcabb-fe89-4eb9-b481-f52e00805be9"
        },
        "item": {
          "id": "90468221-5f58-4016-9530-f94ceb40b0fd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "49eeb5dc-8b6a-41b7-bcfc-9b944829c956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8398cb1-f769-4987-8fe0-07d7e9191c04",
        "cursor": {
          "ref": "f15d8430-5071-4981-8b89-dd540dc2187b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f5b4dd5-09a3-4f42-b12a-f352ff41b442"
        },
        "item": {
          "id": "a8398cb1-f769-4987-8fe0-07d7e9191c04",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "88319ea4-a624-41d4-abf0-1c643c918dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b750d9e-24e0-406e-9e00-bc17fc1e3eee",
        "cursor": {
          "ref": "e6dfc315-b522-4d17-abda-871833ad872a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ae2b6ef1-5d19-4e5a-be79-72c2895850ea"
        },
        "item": {
          "id": "6b750d9e-24e0-406e-9e00-bc17fc1e3eee",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f70b7abc-6ee0-4774-b0da-c3b89aec466f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec927d31-d5ff-40f5-99c2-8990a8391c0c",
        "cursor": {
          "ref": "be4e1e17-4c8a-48c2-bbe0-5074205fdf0e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2af6dd9a-b8de-4ace-9893-5b03b9cc149b"
        },
        "item": {
          "id": "ec927d31-d5ff-40f5-99c2-8990a8391c0c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "98fd3bf5-284d-4480-bd9c-088b5a3636b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e3bec-f8cf-4f54-8852-46b747d6dde0",
        "cursor": {
          "ref": "b1ebfdc3-2eda-42b5-af0d-bcce1d5eb284",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22a36313-096d-4249-a0cf-d8171add25a1"
        },
        "item": {
          "id": "740e3bec-f8cf-4f54-8852-46b747d6dde0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8f9b7273-f6ca-4977-8bde-789d0d711fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76747509-287b-43a2-b82f-9816c1493a6c",
        "cursor": {
          "ref": "592e3880-20b6-4355-a973-8c856928cda6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c659658b-1a1a-4e8a-a009-039210bdeee7"
        },
        "item": {
          "id": "76747509-287b-43a2-b82f-9816c1493a6c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f1b1c693-d81d-4147-a83e-8008eb6e56d3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c31297-5917-4bbe-badc-fd31ea004084",
        "cursor": {
          "ref": "9ad78962-0e08-4265-b814-5a7c47c8b905",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1f44ec8d-56b6-4f27-8e98-d671b63043b9"
        },
        "item": {
          "id": "78c31297-5917-4bbe-badc-fd31ea004084",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1c310b2f-4714-4f8b-88b0-56222cf72ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb373b-c40b-4ace-b370-f7338ba1f1ce",
        "cursor": {
          "ref": "ab33ba51-26bf-4e7a-93a7-1fe7da6a3d9e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0681cb32-f36e-4c3f-ae96-cc59241db09c"
        },
        "item": {
          "id": "e5eb373b-c40b-4ace-b370-f7338ba1f1ce",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf885a6e-a224-415a-b691-409b904cd140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e51a77-7eb8-4f31-8d7e-7de282bc753c",
        "cursor": {
          "ref": "62dec06a-eb36-45fd-8689-fe744882bd2f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "122982ac-1273-4ef1-b8f9-175f41fe49d1"
        },
        "item": {
          "id": "93e51a77-7eb8-4f31-8d7e-7de282bc753c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9d4c480a-d959-4280-b517-6852884b81e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b41a80-94a8-42bd-b1e2-44d421f31013",
        "cursor": {
          "ref": "0c62599e-896b-4278-80d1-74a6ec57a129",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ce1e3885-046d-4ab8-9011-83c0e75ea507"
        },
        "item": {
          "id": "82b41a80-94a8-42bd-b1e2-44d421f31013",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6f1fb54d-b707-45e6-b692-80c40b9da344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4723f156-2d88-4d3f-8570-283c5f62ec0c",
        "cursor": {
          "ref": "667ad51c-00ed-41aa-832b-75ebfd3651e9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13cf67ff-4c6f-4a0d-bba4-18e10c957d00"
        },
        "item": {
          "id": "4723f156-2d88-4d3f-8570-283c5f62ec0c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "19556a78-be89-4801-9191-c880ff192d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0171172c-24a3-42f9-83ab-9693d53a61b0",
        "cursor": {
          "ref": "493d2df9-604a-40ce-976c-54e47f34e608",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c7aa5039-8d60-48df-ac5d-1127284cce0c"
        },
        "item": {
          "id": "0171172c-24a3-42f9-83ab-9693d53a61b0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d2f1a39-2d76-4d66-8ba6-5f889ba50b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e87417-f804-46b4-a48b-d4a688494888",
        "cursor": {
          "ref": "39f88ee0-9657-49b4-bd83-068c0d15c68d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "45b09cc5-094f-4930-b549-9223e21d58c1"
        },
        "item": {
          "id": "c4e87417-f804-46b4-a48b-d4a688494888",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "129e93ac-aae5-4957-822a-1f1e04963075",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf540e6-dab8-4c97-a4af-0951918e2bcb",
        "cursor": {
          "ref": "9fa91329-50a3-4003-a2cf-77939c904e33",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd00737b-f461-407f-8391-03dbba8a6679"
        },
        "item": {
          "id": "5cf540e6-dab8-4c97-a4af-0951918e2bcb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5c1d13a9-3c25-4c19-805a-47ca1d6fa4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a9c4a2-3e20-407a-b543-123319caa13f",
        "cursor": {
          "ref": "dad86889-6697-4a9d-9cf4-3a35fcfdc410",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6e53b5ee-f942-44cc-8f7f-0a8663c67d0d"
        },
        "item": {
          "id": "b5a9c4a2-3e20-407a-b543-123319caa13f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "093bcbe0-a949-4e86-8918-f8e10f7a6f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83d7155-53bb-4369-b21a-354b6a3e3ca6",
        "cursor": {
          "ref": "19ff353a-bf18-4e8e-9935-d159dcc94cfe",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1096b4fe-d91f-4135-a819-e0bd24fb5da3"
        },
        "item": {
          "id": "e83d7155-53bb-4369-b21a-354b6a3e3ca6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e8c4f9e-f650-4bda-a4f8-8e369945a9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f51ea-663b-4ba5-b7e9-19a0fb16b718",
        "cursor": {
          "ref": "d4f5952f-cd11-4dec-96ca-b75bfb4fc25b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "47cb0b6a-c97f-40e2-88da-6ee0b1376bea"
        },
        "item": {
          "id": "0c5f51ea-663b-4ba5-b7e9-19a0fb16b718",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3a0804a5-d369-4eb9-9e99-0d44ddfec554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a30bcce-6e1a-4c9b-9627-a0cd937656cd",
        "cursor": {
          "ref": "aa7a6df2-2963-41ce-909d-4edd9158a036",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "18cbe5b9-3d09-407a-9fb5-9441858d3bc5"
        },
        "item": {
          "id": "5a30bcce-6e1a-4c9b-9627-a0cd937656cd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "036de6ca-9620-428f-b474-154adce12729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7511e0f4-c888-455b-8a5b-102f9070ba6e",
        "cursor": {
          "ref": "ed1d918f-3eb9-468d-91cd-8b5609fe9d88",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d36ba7c9-b998-45fd-885d-fd1536e4dee4"
        },
        "item": {
          "id": "7511e0f4-c888-455b-8a5b-102f9070ba6e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3d83c38e-db5c-4839-bfcf-06784e4af278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb2264f-1f62-4dfd-9dd9-b60fb68c6482",
        "cursor": {
          "ref": "4e6a1bda-06ab-4ce0-9306-b7c880a49ac9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f29fc138-ba2c-4257-bdb2-3224b9fd2fc5"
        },
        "item": {
          "id": "7cb2264f-1f62-4dfd-9dd9-b60fb68c6482",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9c130324-3f14-49ee-a7e0-aca9cf04f160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6d260a-f3d2-4065-a222-f941d610b677",
        "cursor": {
          "ref": "f00ad51b-70ca-45eb-8f11-eb89b30f465b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "78a76b4a-92f1-481a-b9e0-d48fa7c95d98"
        },
        "item": {
          "id": "8f6d260a-f3d2-4065-a222-f941d610b677",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e3039be7-5642-4291-80db-57d2b248328a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f006cc-cd78-4afb-af03-4b9b33672c1e",
        "cursor": {
          "ref": "8f518fba-d98c-4aa9-a37b-ad14ba96cd59",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "76285aa8-e719-40b2-92df-afbcff9da5dc"
        },
        "item": {
          "id": "24f006cc-cd78-4afb-af03-4b9b33672c1e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "642a0494-5ab2-4e8d-86cf-d4c7e03ebd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa252bc-4ede-4f2f-b663-03ddc6c2519b",
        "cursor": {
          "ref": "09273bf2-fff5-4c95-9c20-1aed4862a040",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "acee9988-d59f-4cb7-b6d5-4ed1ba8a32c5"
        },
        "item": {
          "id": "3fa252bc-4ede-4f2f-b663-03ddc6c2519b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "607f0cf1-3e5e-485c-b088-8fcd58b335e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8eaf8e-a210-448e-a70c-1d76282238e2",
        "cursor": {
          "ref": "b816dead-f515-4f15-957a-456bb125d71c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9bf069f1-87ff-4e85-b23a-c1e78f576000"
        },
        "item": {
          "id": "9a8eaf8e-a210-448e-a70c-1d76282238e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "69ef6b11-68b4-443a-b36e-6d280386640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d26d0ef-73e5-4a3d-9195-f774309c9bda",
        "cursor": {
          "ref": "70a9308b-7e9a-47d0-8110-57f1360c5519",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9b8e03e2-363d-4fc2-bf42-bdf658fe137c"
        },
        "item": {
          "id": "1d26d0ef-73e5-4a3d-9195-f774309c9bda",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "89a00650-d66a-4dc1-a6b0-ed409ce87091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93397485-41b3-408f-84db-bed7c53e812a",
        "cursor": {
          "ref": "ed71a984-ede5-4c2b-8861-967fedbd92ed",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74875198-448d-42e8-91e7-5664cbb46744"
        },
        "item": {
          "id": "93397485-41b3-408f-84db-bed7c53e812a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "065b4194-6429-4630-8099-615613662fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4011769-0149-4456-ae80-8e5156b88232",
        "cursor": {
          "ref": "5c0f4bc4-886f-46a8-b15b-64e02a4f8349",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "424de2c2-cef0-4865-b8df-f7b4f3fdca08"
        },
        "item": {
          "id": "a4011769-0149-4456-ae80-8e5156b88232",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "87b0aa28-c553-4c89-a5eb-a556ef78431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f159781-4c8e-41f5-9bdc-fec7db6e893a",
        "cursor": {
          "ref": "e42628e4-2bfe-46a1-9893-e45d9ec99727",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "55b54dfb-8cea-46d3-bed0-78ff134592c0"
        },
        "item": {
          "id": "9f159781-4c8e-41f5-9bdc-fec7db6e893a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "18335838-3a27-4073-a04d-cb32dc5367fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91438d98-afc0-4c5d-88ea-a2e1dd88415e",
        "cursor": {
          "ref": "3e72eabd-0b08-4279-bc59-f450bd3c2a29",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7ed6bb1f-750d-4f67-af5f-350212777abd"
        },
        "item": {
          "id": "91438d98-afc0-4c5d-88ea-a2e1dd88415e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "72921f6d-4972-46a4-bc18-5c3f0002b293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f456288-4887-431f-a2b5-854c2793836e",
        "cursor": {
          "ref": "07190f1b-e8dc-487f-abf8-ba2467e2c89d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ad16f6b8-9056-4fd3-a6b9-de55eb9be9a0"
        },
        "item": {
          "id": "1f456288-4887-431f-a2b5-854c2793836e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "39479d56-4601-498a-bac4-372d23de00ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582fc630-7928-4677-91a0-405cb798a193",
        "cursor": {
          "ref": "6400c804-2ac9-403b-b843-c4dd0b0435da",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6d59134a-4d62-4e49-9371-d9ec8cbe4c10"
        },
        "item": {
          "id": "582fc630-7928-4677-91a0-405cb798a193",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f4260cd6-f755-4527-9e87-0e4eedaa48d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df2d2c7-d231-4e74-aa66-cf9cde084ec3",
        "cursor": {
          "ref": "6c91c10a-1c24-4cfd-be4b-f2bbd0555f3a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4143735a-17bd-4a9c-bf0d-717eb51bb355"
        },
        "item": {
          "id": "4df2d2c7-d231-4e74-aa66-cf9cde084ec3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "866a7343-4bad-47a0-bf63-dfc112eeefca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177fad1-d75c-4d9a-8967-3c2519063586",
        "cursor": {
          "ref": "a1e2f8a6-6086-4f68-9cf4-4caf3c91dca0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a22cf443-79a5-4ced-be24-bc0f9fbbeaaf"
        },
        "item": {
          "id": "4177fad1-d75c-4d9a-8967-3c2519063586",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c4577780-5d3e-4ccf-837c-995bf31ac4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5117ae01-86c5-49fb-a134-e0a4acc07605",
        "cursor": {
          "ref": "4b981a5a-5968-4f77-9724-063ef13e78b9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d7863fdd-0672-4df3-beac-27a701e1a220"
        },
        "item": {
          "id": "5117ae01-86c5-49fb-a134-e0a4acc07605",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "49677c0e-71b9-4fec-a3eb-52527584a1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165a0055-9a5f-45b9-9a89-23040b6cedf9",
        "cursor": {
          "ref": "e21547d2-484a-4e1f-9be6-72a2595afdac",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d2716f7-1ddd-4ca1-a0ba-8cd89a9d97b4"
        },
        "item": {
          "id": "165a0055-9a5f-45b9-9a89-23040b6cedf9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9526b243-0ac0-4b4d-8159-a211d79a5538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a22e5a-a058-4756-94f1-3e18c96247fe",
        "cursor": {
          "ref": "db09f806-c1ad-451f-83a3-e122606451e2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dca9eda3-9171-4248-9e3e-ace17c4dc18f"
        },
        "item": {
          "id": "01a22e5a-a058-4756-94f1-3e18c96247fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a32080d3-dc02-4400-8af8-38a0a6f9c8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51f3f61-076c-4ea2-890e-88840a2b8571",
        "cursor": {
          "ref": "c6716764-2047-47a4-b058-3f790a9aa33d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "64646dc1-f1b3-4fbc-983f-457d27b1413c"
        },
        "item": {
          "id": "a51f3f61-076c-4ea2-890e-88840a2b8571",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6bd04ebb-ba6d-4f6f-98a2-b5e255e5b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d8dd01-d076-44e8-9d35-8b028eeeb83b",
        "cursor": {
          "ref": "317085f9-c012-4c7c-a2ee-c4f838c9b791",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "83bca6d4-3d89-47ff-a7dc-33374f9872c3"
        },
        "item": {
          "id": "44d8dd01-d076-44e8-9d35-8b028eeeb83b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "67d5231c-aef8-4d9d-905c-a8ce2568ca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0609081-73f5-4b0e-8f22-f14456f4f054",
        "cursor": {
          "ref": "3e51a6ef-2b8a-41a1-b0f6-fae8a9618ac5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "349dd849-6aef-466d-970f-0b5712f00663"
        },
        "item": {
          "id": "e0609081-73f5-4b0e-8f22-f14456f4f054",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da2ad91b-870f-470a-aade-b575bc3a720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde1870d-179c-4710-88c8-026d6e3129ba",
        "cursor": {
          "ref": "79c15d5b-8f5e-4f66-97d9-fabd781f0ce6",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ad4467e6-a84e-41f7-9c7b-cb20d5677b1e"
        },
        "item": {
          "id": "fde1870d-179c-4710-88c8-026d6e3129ba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b63c64a0-30a7-4ce3-9a92-d942ad8feadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3061c73-486b-4b05-8442-084454ee9576",
        "cursor": {
          "ref": "3fb90138-8ca4-46c8-a914-c8cd367cd9bf",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1aa4cfc4-bc96-431c-8ea9-457a9c2b11d6"
        },
        "item": {
          "id": "c3061c73-486b-4b05-8442-084454ee9576",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8573fead-4e6b-453e-8323-809dd2e72400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e7fc4f-8624-4cd0-bfc8-11e318d0e453",
        "cursor": {
          "ref": "75a0816a-2b61-4611-b2e1-cbb694f55533",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eddc5986-36bc-4c3b-9d67-66c5eec03071"
        },
        "item": {
          "id": "85e7fc4f-8624-4cd0-bfc8-11e318d0e453",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6b1aff66-cbd1-4726-8e29-85c301687dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d123163-4860-4fff-9a79-3c3eb43834a3",
        "cursor": {
          "ref": "93dbca77-d756-49ec-8190-c4d0a80d0f9f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eb4e91cb-3efb-4688-8f2e-2f7bea63af4c"
        },
        "item": {
          "id": "9d123163-4860-4fff-9a79-3c3eb43834a3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d81cd63d-e8e1-4825-9b0b-051319ae0f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d8f25-1425-4b4f-914f-0512a5c9e724",
        "cursor": {
          "ref": "ac22d1b7-2506-401d-b398-d42fbd4d2914",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9c6c7eda-c8df-48ae-aae4-8b1f4afb139e"
        },
        "item": {
          "id": "922d8f25-1425-4b4f-914f-0512a5c9e724",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4b6bfebb-40cb-4821-8311-0eea3464cd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6ca259-e18d-425b-9ad3-47dd6868b57b",
        "cursor": {
          "ref": "c0cd9974-ebee-4f88-b41e-eafc7a1a2db6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "898531c7-0bea-4797-bb45-c147c1b74e96"
        },
        "item": {
          "id": "3c6ca259-e18d-425b-9ad3-47dd6868b57b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cafea600-d183-4d56-9b96-e19e9e20bb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5abe46-02cd-43f2-8539-072f0fab14d6",
        "cursor": {
          "ref": "e6132207-c82a-4c0d-a438-1208baf6e028",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0581e84d-b908-41a8-b551-84b051ee34c2"
        },
        "item": {
          "id": "5a5abe46-02cd-43f2-8539-072f0fab14d6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "43d6d143-aa78-443c-a30a-69c55bb5f705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9148852-9cb1-4e66-b1f3-c0c59660c2c7",
        "cursor": {
          "ref": "933a2f1c-b8dc-433c-bac7-32c33f35d300",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b80f0312-0788-4244-884b-0308ab8f1850"
        },
        "item": {
          "id": "a9148852-9cb1-4e66-b1f3-c0c59660c2c7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6ee37757-9717-40b2-86ac-7901b44cda49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3710fc41-c904-46a4-a0d0-a809a2a0fbbc",
        "cursor": {
          "ref": "59d807dc-808c-4085-8f49-145fc7c00b52",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "94ee6afd-c0f5-4062-918d-8eb157c7f3ae"
        },
        "item": {
          "id": "3710fc41-c904-46a4-a0d0-a809a2a0fbbc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e3994538-10d6-4950-893e-763986c447ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c2976c-b366-49b0-83ae-b99da238c356",
        "cursor": {
          "ref": "8daf2675-4811-40f8-8059-1173897c58b9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d4825ca3-756c-4557-8460-2a0294dd158a"
        },
        "item": {
          "id": "c4c2976c-b366-49b0-83ae-b99da238c356",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c26ceaae-93d5-465b-8b66-f34a6a55996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8bccc6-f1c8-4d2a-ab73-8b298e2f6d73",
        "cursor": {
          "ref": "845fd33f-bc3c-4ee7-bf23-90cd1b48dd8f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3ebfc7be-6d8a-46b1-ba93-368ff191a632"
        },
        "item": {
          "id": "fd8bccc6-f1c8-4d2a-ab73-8b298e2f6d73",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "55e55f3a-77ac-4477-b0c8-a39bb9849b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db819c82-182a-49d9-98fd-0270658e5576",
        "cursor": {
          "ref": "9fb4d7ad-9921-46b2-8404-19b7c1452683",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "91917f91-9756-4983-9337-d764ee6f0836"
        },
        "item": {
          "id": "db819c82-182a-49d9-98fd-0270658e5576",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9047a681-4531-4df4-821b-773406d52dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ac894-1127-43e6-874c-8f866581d23e",
        "cursor": {
          "ref": "7153e0f1-754a-434f-9b0f-51c6e4244b73",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "63b37340-b64f-4b32-9c32-7ad69dcf34d9"
        },
        "item": {
          "id": "672ac894-1127-43e6-874c-8f866581d23e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6a18479b-8d07-4fc5-a19b-1af42697df85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb7e75f-c28c-451e-85a1-d53fe529f097",
        "cursor": {
          "ref": "505fe9f9-39ba-433d-98ca-3d8170a986a5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "858295b9-9383-4155-a973-5c6e25ae5325"
        },
        "item": {
          "id": "fbb7e75f-c28c-451e-85a1-d53fe529f097",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c2e7002e-c273-4e80-b549-6e9e3fc2be99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e42b7e8-5b8d-4ca3-bf4a-bce1f20531fe",
        "cursor": {
          "ref": "1b765c30-88a6-4c80-9efa-5fd6c4ea5f8a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e7bedb38-65ae-4aa0-9138-105d87c50c31"
        },
        "item": {
          "id": "0e42b7e8-5b8d-4ca3-bf4a-bce1f20531fe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "569bfd57-f752-4fee-bf3c-523ed953e6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c4d0c4-7048-4c2c-9af0-8815b6618cde",
        "cursor": {
          "ref": "1c47f4ce-69f0-45e0-816e-d78b12c53324",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0532bf50-c005-40b3-bca8-099435bac0ee"
        },
        "item": {
          "id": "d2c4d0c4-7048-4c2c-9af0-8815b6618cde",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "068f9284-e1cc-499b-add2-4688a2c4f8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23f673a-141f-4c7c-a9b3-0a39ee3bf13b",
        "cursor": {
          "ref": "8d2cba7b-4a8d-4f3d-87a3-7272fa33576a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8eb06ed0-6b52-4c84-8cd0-f24dbcdf70e8"
        },
        "item": {
          "id": "a23f673a-141f-4c7c-a9b3-0a39ee3bf13b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d53d0f4a-cd3a-4e92-817a-d97a5f7793b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77233f6-0f4d-4721-b6b4-018d650e5899",
        "cursor": {
          "ref": "d4b8dc7e-074e-44c1-9270-b2e3dabb40ef",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "74ae541d-9330-43c7-8add-4b207409b47f"
        },
        "item": {
          "id": "f77233f6-0f4d-4721-b6b4-018d650e5899",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "57238237-b524-4f09-8326-e0ef018a1949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae06593-7231-4f10-9eca-196a95cdca0d",
        "cursor": {
          "ref": "af8f3666-f5ea-4903-beea-7e346b7f7c3b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c8691a2e-9d6e-4641-8416-23e6e8103b59"
        },
        "item": {
          "id": "aae06593-7231-4f10-9eca-196a95cdca0d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7e39d4f8-7174-4f11-abc4-73dda0b69499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143b14f3-1c14-4acd-8c53-4cb9660688c3",
        "cursor": {
          "ref": "3d7f641f-a117-42ff-8fdf-330aeacae957",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cc0c7379-e23c-4390-accb-c8d071222ada"
        },
        "item": {
          "id": "143b14f3-1c14-4acd-8c53-4cb9660688c3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "489bd81b-c5c5-4a3c-96c8-edd771d26f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a66b5d-c90f-4548-9c80-a72caad61a04",
        "cursor": {
          "ref": "e74e70d3-dd7e-405d-8e05-a1a36ede2728",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "927fd401-51e0-49e7-9bf9-21f2a670ce61"
        },
        "item": {
          "id": "13a66b5d-c90f-4548-9c80-a72caad61a04",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d5ee5982-d28b-4405-848e-2a0dd4b3c6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3499783-432c-4686-951c-64534f9c48dd",
        "cursor": {
          "ref": "60854356-101d-4879-af1d-7e4078bb2e82",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9f8e9cc3-dda6-4c17-a267-ea96dc28b72b"
        },
        "item": {
          "id": "d3499783-432c-4686-951c-64534f9c48dd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c2fbb1f4-c841-489c-ab92-df1924bb4571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24412ce-20ba-4ec6-903a-8928c23fc63e",
        "cursor": {
          "ref": "8b150a1d-77fa-4115-943d-3f3ead865b23",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bdd4753d-f7c2-4672-99d0-2c681614e2ec"
        },
        "item": {
          "id": "d24412ce-20ba-4ec6-903a-8928c23fc63e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fc2fd613-104c-47fa-8c7c-0159f02db5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d802cd-308f-4090-bc7f-72a1c044452d",
        "cursor": {
          "ref": "6c8e7c32-5bae-4187-a014-84746818878b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b0c2a554-b8e2-44cf-8307-cb2e527455f5"
        },
        "item": {
          "id": "67d802cd-308f-4090-bc7f-72a1c044452d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bf536ab8-4335-481d-8e99-803e47676141",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57642d5b-af3a-4596-9dae-6281510d3f2b",
        "cursor": {
          "ref": "3c385322-f8fc-4649-b3df-9f59b2674f99",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c76822c-eb20-4375-9e97-0fee3149264f"
        },
        "item": {
          "id": "57642d5b-af3a-4596-9dae-6281510d3f2b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "411c3408-4863-4673-9752-e4ef630f3423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aebaaf68-33ae-48ba-8f2a-7a75b665f2b8",
        "cursor": {
          "ref": "e1aae4df-b30b-486b-9adc-5a7e5a427d26",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b137b1f3-22a7-46d5-8515-482d1ab6f19a"
        },
        "item": {
          "id": "aebaaf68-33ae-48ba-8f2a-7a75b665f2b8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bf8723c8-4dcf-46ce-a50a-03520cb6d0e8",
          "status": "Created",
          "code": 201,
          "responseTime": 5308,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f1f07e-c6bd-44d0-8c95-e6aff2461845",
        "cursor": {
          "ref": "c17e52cb-fd62-4283-8b12-f76f83c23ec3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2bb4bea5-af95-4977-90a0-116782d01d28"
        },
        "item": {
          "id": "e4f1f07e-c6bd-44d0-8c95-e6aff2461845",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e978cfc-be68-45a6-aa22-c59e3eec9ce8",
          "status": "Created",
          "code": 201,
          "responseTime": 4818,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "de36b2c0-67bc-4ce9-ab5c-bbaf48594342",
        "cursor": {
          "ref": "7356708c-7f40-4e2e-b0ab-9e3e970038c0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f00cef9b-d2ea-4c06-9ccf-eb09463687f6"
        },
        "item": {
          "id": "de36b2c0-67bc-4ce9-ab5c-bbaf48594342",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "46b412de-cf2d-4f83-8ba7-9f478ab249d6",
          "status": "Created",
          "code": 201,
          "responseTime": 4512,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd10f1b-a729-46d5-a487-8dffc2f38517",
        "cursor": {
          "ref": "9b22be5d-8ea1-482f-afdf-80f54f41f4cb",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8a8ea643-f760-4413-92bd-02d80a2d2841"
        },
        "item": {
          "id": "9cd10f1b-a729-46d5-a487-8dffc2f38517",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f8aa4263-1c41-4008-bb0c-b4b3fc9739b3",
          "status": "Created",
          "code": 201,
          "responseTime": 4532,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27abfedb-250f-47ee-8f19-963b73aaab07",
        "cursor": {
          "ref": "9645680d-c405-4d69-9d35-88e34bf8820a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "67652b33-b306-4b82-8a83-b5790f1f54e7"
        },
        "item": {
          "id": "27abfedb-250f-47ee-8f19-963b73aaab07",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ab601d7-7ac9-42fe-a95a-5cdd3b780b40",
          "status": "Created",
          "code": 201,
          "responseTime": 4918,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-29T00:41:14Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-29T00:41:14Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ddd26a6d-0138-44e0-9f95-f5e204efe357",
        "cursor": {
          "ref": "00ef15ed-a313-4462-ab73-b8c33f0eaa4c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "78881ad6-4b9a-476c-a2a4-a4d0f772472e"
        },
        "item": {
          "id": "ddd26a6d-0138-44e0-9f95-f5e204efe357",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d98a0b3a-06ce-4856-92d2-299c5580807c",
          "status": "Created",
          "code": 201,
          "responseTime": 4753,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9ab4c5-e62f-406b-8b02-755f3e36c66e",
        "cursor": {
          "ref": "7ca03bca-0dcf-48f0-893e-4b6b8f9f9960",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "183f874b-03dd-411a-8018-b0bef76c598a"
        },
        "item": {
          "id": "ce9ab4c5-e62f-406b-8b02-755f3e36c66e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "098604fc-9ed5-4baa-9a67-7f5f5304eabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813b4262-25f2-4963-9e85-713c5f1b1b0b",
        "cursor": {
          "ref": "1ced359d-878b-4705-80f3-7101a93d85be",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1a49a9f-fca0-4cf3-90b6-580ecf8d2256"
        },
        "item": {
          "id": "813b4262-25f2-4963-9e85-713c5f1b1b0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "715bed5e-967d-4813-b35e-9415662abff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11c3635-482c-48e7-840f-b289fab650f4",
        "cursor": {
          "ref": "459676d4-52ab-48f1-ae08-b129f14d067e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e01de762-d974-4741-94d0-c2269a87f0a9"
        },
        "item": {
          "id": "e11c3635-482c-48e7-840f-b289fab650f4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3c29280-e545-46c3-9ca3-0156c828aa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1c8ee6-61ab-4dab-8df9-384d6cb53bb7",
        "cursor": {
          "ref": "e30589bb-c733-4a41-ba94-d55cf278e89a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d3b0efc4-706e-417c-8583-81e61dd22252"
        },
        "item": {
          "id": "9e1c8ee6-61ab-4dab-8df9-384d6cb53bb7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d4b22fe5-76b8-425c-8cb3-c500b8f3a5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bca8bc-e505-4d04-92b4-9b2cc02f885c",
        "cursor": {
          "ref": "f1d6c405-cd99-4ef5-af86-345dfe1f3569",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c39e5a7c-5885-4eb4-bc83-25ece380200e"
        },
        "item": {
          "id": "c8bca8bc-e505-4d04-92b4-9b2cc02f885c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1bd0c925-995e-4bbb-86ae-b8065da14969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af33394b-eec6-47cf-8f9e-fb283d13bca1",
        "cursor": {
          "ref": "2369ae84-5be0-4ed3-934f-53a71971f6a3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "56ff87c5-1bea-4633-bd46-93196b7cc887"
        },
        "item": {
          "id": "af33394b-eec6-47cf-8f9e-fb283d13bca1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d19583e-c64d-412a-9123-35c3b937a1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aad92b-0d00-4b78-8f74-b0f4de35eff8",
        "cursor": {
          "ref": "a532e5b0-c33a-474a-ae20-16a5caaeed7f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0ffbd5fd-c5c3-486c-992d-7e3656e95958"
        },
        "item": {
          "id": "50aad92b-0d00-4b78-8f74-b0f4de35eff8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e92e3305-ae46-4f9f-ac7d-3d8bfd2a19eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c93a846-4703-4359-a7c9-ab360e150787",
        "cursor": {
          "ref": "660512a2-ab1f-4cb9-96d8-71787f08c7c7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bfea7866-d672-4e13-b8d1-436b0e13ae88"
        },
        "item": {
          "id": "4c93a846-4703-4359-a7c9-ab360e150787",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8e9400d2-063b-40e5-aea1-bd498841cb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29627c4c-8ce2-4c68-943b-298159801f2d",
        "cursor": {
          "ref": "c9ad4f40-4aa0-4f68-ad0f-2891314f0008",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "783b2eb7-90a6-432f-b123-de09593dce80"
        },
        "item": {
          "id": "29627c4c-8ce2-4c68-943b-298159801f2d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "368c5c23-399f-474e-a91d-c054c7e685fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2afbbd2-f16f-46cd-973d-caf9244d41e3",
        "cursor": {
          "ref": "048f77cb-6b6c-4426-9aa1-0f12aede34b7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e18e15e8-4aa5-4cd1-966f-597da559cbc1"
        },
        "item": {
          "id": "c2afbbd2-f16f-46cd-973d-caf9244d41e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "56b66b42-0df5-42c7-9494-0100920c9857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ce2dc0-27d4-4c3b-a1b7-e430bfd92b46",
        "cursor": {
          "ref": "9209ac09-4e2b-445f-9909-f8dc97e0b46b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bfb7fdab-48f4-46b0-a6a0-7f10f7340137"
        },
        "item": {
          "id": "11ce2dc0-27d4-4c3b-a1b7-e430bfd92b46",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "10a6efab-0168-4b5f-b749-a76c8fcdf768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582d71e2-be59-4513-8017-0a0f7ee29836",
        "cursor": {
          "ref": "a4253471-4601-493e-95fb-7a178d6a67f6",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2e076b93-d7bc-4b82-8cd8-dfa5bd9f511b"
        },
        "item": {
          "id": "582d71e2-be59-4513-8017-0a0f7ee29836",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4b747da6-0536-4578-b6a8-b1167a84a91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa65dece-e16f-4883-b409-c19a3b184ccf",
        "cursor": {
          "ref": "5e332263-bdd7-4aea-bba4-b30624daaf11",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d640bd42-a1df-4fc4-a906-d6f4e5d3795c"
        },
        "item": {
          "id": "fa65dece-e16f-4883-b409-c19a3b184ccf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11c17283-e4f9-4960-9c17-69f84989c86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeeb5a2-6861-40e7-9600-62dbad2424dd",
        "cursor": {
          "ref": "8e9b91b2-5033-47f6-bb23-df2dced230d4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "daa51007-fff5-42e8-bb88-c04361b224a0"
        },
        "item": {
          "id": "3aeeb5a2-6861-40e7-9600-62dbad2424dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "98ba8788-db7e-4874-8dc7-f7730b5737fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d421d3-4b2c-4399-b895-dd96e4fdec3f",
        "cursor": {
          "ref": "2d0ec5f0-9f4d-4179-9b91-d6946c71f228",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "236cbcae-c5e2-40cc-8e60-9989f34c16b8"
        },
        "item": {
          "id": "87d421d3-4b2c-4399-b895-dd96e4fdec3f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ecb86e94-64bd-4916-ad85-d93764a72f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79336d37-df6c-42e2-978d-fdf4e35f116d",
        "cursor": {
          "ref": "b0b9d534-855d-4987-bb60-7b1545516cc5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "73f52587-404b-4f1b-8181-1a70c540991c"
        },
        "item": {
          "id": "79336d37-df6c-42e2-978d-fdf4e35f116d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74d81dc5-4149-4cd3-863a-0ff3faeb5f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3df5dee-528b-4dfd-8e24-af2a3c926813",
        "cursor": {
          "ref": "7751e3fa-d60b-4b98-9e92-2699a43c50c0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "869b7d6a-5c16-4a41-94d7-2596d1cf5235"
        },
        "item": {
          "id": "a3df5dee-528b-4dfd-8e24-af2a3c926813",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6087acd1-bf8e-4e85-af8d-1d71bc5274d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d60ea7-12bf-4643-9616-5c11625ff344",
        "cursor": {
          "ref": "b993f585-221e-4f91-beda-0c35ece5f7de",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "60b6d4e0-a810-44a1-ba45-dfa7c52e0031"
        },
        "item": {
          "id": "40d60ea7-12bf-4643-9616-5c11625ff344",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "29e343e3-74a6-4305-a12e-66312123735d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7548ccb2-8039-4008-a2a2-958503f0bafe",
        "cursor": {
          "ref": "19540d5a-402a-4642-bc09-13142fd1a55d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8995e771-e994-46db-9023-118887885cbd"
        },
        "item": {
          "id": "7548ccb2-8039-4008-a2a2-958503f0bafe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9d5b159a-6924-45fd-8ffe-0679471b6319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30484160-ad9b-44d0-931f-03aef2b01071",
        "cursor": {
          "ref": "9755c23c-0a79-4feb-9293-22ef7d4474cc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cafef66a-9a1a-4ef3-952d-da6891d1f5b5"
        },
        "item": {
          "id": "30484160-ad9b-44d0-931f-03aef2b01071",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0c26958-fa5a-48cd-9226-6da9d0883c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c30b4be-db96-44a8-b6b0-67b13a069609",
        "cursor": {
          "ref": "5773312f-820a-4de5-b955-61794dd7e8d4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "10c4f526-f9d5-4312-b1b0-84d7fac584b3"
        },
        "item": {
          "id": "0c30b4be-db96-44a8-b6b0-67b13a069609",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bf556546-383c-47fa-b33f-ba1f00b16777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62c9c45-3a21-4689-9c02-14303707d3b3",
        "cursor": {
          "ref": "a3c4cf75-adc4-4690-acbe-9db7fcb6801b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "49a18a0c-c27f-4067-bb02-3321023d91dc"
        },
        "item": {
          "id": "a62c9c45-3a21-4689-9c02-14303707d3b3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f132e7a0-66cd-41ab-9013-9bf5e1b61c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fa2a9c-00bb-49e8-aa18-cb33143572e3",
        "cursor": {
          "ref": "3f36d5b0-ecb1-4367-9cb3-6d52ec6ac5c2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "79cdc44a-de49-48b5-979f-c8891f53c139"
        },
        "item": {
          "id": "c5fa2a9c-00bb-49e8-aa18-cb33143572e3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f53697a4-2e76-4bd9-bd69-a2c9a902546c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64af0966-b83a-472c-a02c-be9c2f4ee809",
        "cursor": {
          "ref": "bcb89184-1c09-4b7f-9030-73f38e9f57f4",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6d62a9c1-1b83-46fd-ac92-cd4e3efeb9c5"
        },
        "item": {
          "id": "64af0966-b83a-472c-a02c-be9c2f4ee809",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9879547b-c3b2-4436-b1a2-4d67f8a9d305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae750d93-2f6d-40c1-a7f9-4bd94a4c23a1",
        "cursor": {
          "ref": "82205524-6064-460b-aea8-fb0dc2a62c8d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e3c1d546-007f-4fe6-a26e-c7c23c43e5c9"
        },
        "item": {
          "id": "ae750d93-2f6d-40c1-a7f9-4bd94a4c23a1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "926bec07-0f17-47a0-9717-f192f8584c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233db75f-72d2-40ae-8908-88a11cade1ca",
        "cursor": {
          "ref": "5a5eb3ef-3976-4b3c-b015-33f353f154b2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "34bfa5dd-f9f3-480a-939a-8367c8a80def"
        },
        "item": {
          "id": "233db75f-72d2-40ae-8908-88a11cade1ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a075061-f626-44ba-9303-7c317ff8af9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38548d05-32c5-446b-b09c-78836a990f58",
        "cursor": {
          "ref": "9d3e8345-5b73-4008-8b00-581a802c3983",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "631e2739-dddc-4712-ae35-8456427b2b06"
        },
        "item": {
          "id": "38548d05-32c5-446b-b09c-78836a990f58",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e1e753d0-0266-4dc9-a48c-54a673646ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a82cf5-187e-4e7c-84b3-3b1da91fa36d",
        "cursor": {
          "ref": "734b7747-e6c8-44f8-852b-21a5074284c7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9c403a7f-f601-41b7-b276-2165061a2753"
        },
        "item": {
          "id": "72a82cf5-187e-4e7c-84b3-3b1da91fa36d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37c2ab44-8196-4d9f-a17c-0e6a472228f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179936d-aae3-47fb-b6d6-e6f6f89eff3a",
        "cursor": {
          "ref": "5a9e990f-b9f5-48a8-bb1f-f11112ef9242",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ddbea23-eaee-445e-bffd-d6cf1942c27c"
        },
        "item": {
          "id": "3179936d-aae3-47fb-b6d6-e6f6f89eff3a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f38bc1d5-923d-4e21-93c7-3c81379bbf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5e76a3-1a00-4512-a28a-cfac6fef296b",
        "cursor": {
          "ref": "1a442a62-e547-482e-8de0-e93d62ffbd57",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aa380dd2-a8ee-4c84-8955-7dc6b06620fc"
        },
        "item": {
          "id": "8f5e76a3-1a00-4512-a28a-cfac6fef296b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df8f0946-ae0f-468c-8410-8028f61f718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333b790f-e275-4b4f-a801-8860e3ee5163",
        "cursor": {
          "ref": "66093ec9-657c-408d-831a-038d4a274bbe",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d84780ee-121d-4583-abad-55f83aa98847"
        },
        "item": {
          "id": "333b790f-e275-4b4f-a801-8860e3ee5163",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dcdaf771-c372-40cf-bf5e-569fdf446bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27eecdb-c2fe-459b-b975-cd7d069b4031",
        "cursor": {
          "ref": "d05de812-11a3-48a8-87f1-55a9f9bb0bf6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bad47879-0a67-40dc-93fd-3b8aa38b5dec"
        },
        "item": {
          "id": "c27eecdb-c2fe-459b-b975-cd7d069b4031",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0e329d29-e56a-4ee0-9218-b2821ecea6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069c5618-418e-48bd-b204-73ea02c5181f",
        "cursor": {
          "ref": "220853a2-4831-4dae-b0ea-cada452f02c5",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b59abe0e-4848-49ed-ae50-06746db8b705"
        },
        "item": {
          "id": "069c5618-418e-48bd-b204-73ea02c5181f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "67ec7281-647a-43d5-a317-d37a38b6696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf973bd7-e426-4d46-b459-dc6b1899f352",
        "cursor": {
          "ref": "04ddb6ec-3991-4253-ad8d-6db4e34c7adc",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1695b677-4725-4f90-8c9e-b123ee7abe18"
        },
        "item": {
          "id": "cf973bd7-e426-4d46-b459-dc6b1899f352",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a2a94111-813d-4145-a8f3-4a379fd149dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa01d584-b94f-438f-bb37-6d20c4ef1632",
        "cursor": {
          "ref": "a7d6bffa-1e15-48c8-898e-1039f78610a6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4d7def8f-0b14-4d63-a085-efdec7e784dd"
        },
        "item": {
          "id": "aa01d584-b94f-438f-bb37-6d20c4ef1632",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "175fffb9-0a50-470f-a197-0a4f08b99a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46808c5-e131-48fe-860f-748a1683071a",
        "cursor": {
          "ref": "c36741ff-962b-4f58-a7b0-1d072bc1e3e5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "24d72c36-ede5-43e3-b1d6-b947ccc6b61c"
        },
        "item": {
          "id": "f46808c5-e131-48fe-860f-748a1683071a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "15419ca2-8557-4c60-83fd-9d66370d6564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816d299b-c676-45da-b89c-d529c2ec7c36",
        "cursor": {
          "ref": "81552dbd-73c7-4d70-add9-da741462afdc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "119e1a9a-f37c-497d-b756-eafbc9c53ff9"
        },
        "item": {
          "id": "816d299b-c676-45da-b89c-d529c2ec7c36",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "79967643-0f7a-4b1c-812a-cb1f976d9c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1af86c-05f9-4895-8619-ba24979b3261",
        "cursor": {
          "ref": "8504ffd0-bd02-4266-b548-48e5a96d4c98",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7ed2ce7a-f9b7-409f-bdc9-0ca2d4b4a685"
        },
        "item": {
          "id": "ad1af86c-05f9-4895-8619-ba24979b3261",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "495b5353-3188-4b16-af7b-91f502d24de0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd6d705-9fa8-4b66-b8df-4413ac4d273e",
        "cursor": {
          "ref": "e8f24dd4-0bd2-4f88-a075-2096fb5af344",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2c5d3765-b219-4cae-8afb-629c87d6df8c"
        },
        "item": {
          "id": "fcd6d705-9fa8-4b66-b8df-4413ac4d273e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5c528f8d-8fe4-4786-9cfe-3172bd49b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b760e0-a23f-416e-9223-c01f55a4fa2a",
        "cursor": {
          "ref": "184bc855-24d7-4518-809c-20c9a8250df5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "857691d5-7f5c-4880-baa3-eb6d63d49aec"
        },
        "item": {
          "id": "62b760e0-a23f-416e-9223-c01f55a4fa2a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea5bd4aa-84b3-49ce-9d6c-7c1d400d0aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36142e38-ebda-4c7c-87d3-8ac78ec502e5",
        "cursor": {
          "ref": "8b337544-79c9-4f5d-b751-c2322e3a119e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "76bc9aec-8fe6-4576-a187-3680bdf36163"
        },
        "item": {
          "id": "36142e38-ebda-4c7c-87d3-8ac78ec502e5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8bb4a915-0c06-4a9b-b52a-17467b6f96b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa8fd6-15eb-4378-8185-1a5616f0130e",
        "cursor": {
          "ref": "f74d67a9-62f8-493a-8afa-7fd72c7d0113",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bc0d3be4-4963-4a81-a36a-61431b04cfb0"
        },
        "item": {
          "id": "e9fa8fd6-15eb-4378-8185-1a5616f0130e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "77f58587-9bbd-46fd-8b4d-5dd16251ad05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2999a90e-5e47-46d3-93de-6dc6a7d12481",
        "cursor": {
          "ref": "a27ab015-14af-43f0-b272-b0deed0925aa",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9e7ecc5f-56ee-42e1-952b-63874fc7cf85"
        },
        "item": {
          "id": "2999a90e-5e47-46d3-93de-6dc6a7d12481",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3242f10d-24d3-43da-8460-eb3629d282fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab533d4c-d796-4268-829b-76e0c9f8e24d",
        "cursor": {
          "ref": "916bcb8e-ca0c-427b-a4ad-ee644d4dc3a4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dd305ff7-1ac5-44c2-8002-c995a3b574d9"
        },
        "item": {
          "id": "ab533d4c-d796-4268-829b-76e0c9f8e24d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cb54fce1-db84-438c-a3c1-3a03187bdbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6ebd6e-f9c9-4e02-b182-14bd43b24510",
        "cursor": {
          "ref": "196b266c-ecf9-4d08-9abe-5ad9541021cc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "609fd113-4928-4d9e-a61a-1db28e007f9b"
        },
        "item": {
          "id": "cf6ebd6e-f9c9-4e02-b182-14bd43b24510",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0e3f2a0c-642f-4420-82af-2d45979c09e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5877c-f4f5-46ae-8ec9-37a861027ce9",
        "cursor": {
          "ref": "09885eea-2179-40b8-930e-01e77f2ca5f6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ac53679e-619f-4735-a863-6630b52dcf72"
        },
        "item": {
          "id": "f6c5877c-f4f5-46ae-8ec9-37a861027ce9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e85bd99f-42d1-4b92-8c58-9bf061c46453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc336cdd-8e96-4717-82b3-b3c05e47e47a",
        "cursor": {
          "ref": "8206c8d7-0ea0-4567-8233-1a2c6e9dd3c9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f9f9f230-c7dc-407d-9823-140c37a9c8b5"
        },
        "item": {
          "id": "bc336cdd-8e96-4717-82b3-b3c05e47e47a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f90f2540-5579-4fda-8742-a70f7a0e1840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72c1244-5170-44aa-8d62-110831a63493",
        "cursor": {
          "ref": "027faac4-c425-4cbf-bc10-b9373bd94c90",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bb36716d-a97a-4e5f-807a-11bb30733a73"
        },
        "item": {
          "id": "d72c1244-5170-44aa-8d62-110831a63493",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f65b0bbd-fe65-4c03-a56f-fc4c01a47c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bea071f-0fe2-4555-bc17-8aa08ddc1f31",
        "cursor": {
          "ref": "85a729c5-891e-4385-a6c2-a5a7af89c98f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bc423815-b087-45fd-b638-3852508e23dd"
        },
        "item": {
          "id": "6bea071f-0fe2-4555-bc17-8aa08ddc1f31",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f20cd481-6e8f-4b7b-84ce-81c5a7413fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e89186-3b81-42a8-9656-e8e12f35d198",
        "cursor": {
          "ref": "5087b6cc-cc86-4462-a275-156fd9632974",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bc978b5a-8064-4a83-8e44-77adec61e35d"
        },
        "item": {
          "id": "48e89186-3b81-42a8-9656-e8e12f35d198",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cfe555da-cf69-4644-a35e-b65fbf71d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e00193-1df7-4d28-afb4-d0d2b1a45015",
        "cursor": {
          "ref": "7d9bc233-bea1-4ef1-a298-2f3a43e7fb07",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4d50cc80-26d2-465d-a121-4ef9a43a646a"
        },
        "item": {
          "id": "88e00193-1df7-4d28-afb4-d0d2b1a45015",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c6a2dba6-bdf7-4949-aef9-54bbc56bfc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330f36d6-79fb-4e24-a5fe-3aa96dac2ced",
        "cursor": {
          "ref": "22b3196a-120a-42f7-8fd3-9f1a051ec0ca",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4020da2c-de1e-461a-80e7-1083db4ac80c"
        },
        "item": {
          "id": "330f36d6-79fb-4e24-a5fe-3aa96dac2ced",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51ceacdb-7ff8-496b-a63a-d1d4af8a7014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bbdc43-ce7e-4f3e-a9fe-ec285cbf0329",
        "cursor": {
          "ref": "f105b950-496a-43f7-bf0a-144343591d86",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "742fd0fe-7f6f-4090-a4f2-95a92cc4d4c7"
        },
        "item": {
          "id": "36bbdc43-ce7e-4f3e-a9fe-ec285cbf0329",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0afe9c60-0750-4fc3-ba88-58d9ca380f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5472ac52-5081-40c9-b73e-de9b8b4fc0fa",
        "cursor": {
          "ref": "02e82f05-723e-4dc1-85f2-cffc53164ab1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "215332fb-2d98-4c7e-b010-e6c62edfc905"
        },
        "item": {
          "id": "5472ac52-5081-40c9-b73e-de9b8b4fc0fa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a755420f-d9fd-4601-b4fc-d5dd6b51bdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71413c45-a13c-423e-afb3-0ff3ef31acb1",
        "cursor": {
          "ref": "8260c115-261c-40f9-9d41-227653fe8b2b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee68e2e9-1f91-4037-82cf-411aba758ab7"
        },
        "item": {
          "id": "71413c45-a13c-423e-afb3-0ff3ef31acb1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "faf3a267-7de5-48b5-b59d-1b82ede7725e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332d4d2c-a256-425f-acde-44705791e51c",
        "cursor": {
          "ref": "211ff5b7-808f-4677-a835-9269285db091",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3f3c50a8-0821-4c56-9f63-cc4399bac4d9"
        },
        "item": {
          "id": "332d4d2c-a256-425f-acde-44705791e51c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "86e01e40-c15d-4ebb-a6cf-00a5eae710f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bb3ea3-9d8c-4bd9-8990-518e5cc74a2f",
        "cursor": {
          "ref": "3f8c805b-161f-4bcf-9d06-a3f96b4e6c32",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ede9b0eb-05a9-4561-b9e0-5704034a1b4c"
        },
        "item": {
          "id": "10bb3ea3-9d8c-4bd9-8990-518e5cc74a2f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "45a83bd5-15ce-493f-b334-c740bcb9beb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a0eb3c-0913-480f-b47d-2edcd5495287",
        "cursor": {
          "ref": "1c478c1d-3e9d-4749-bb91-6cfdc5186ac1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "82768a83-cb3f-46fa-8846-2501ca697c22"
        },
        "item": {
          "id": "59a0eb3c-0913-480f-b47d-2edcd5495287",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "82d2fa36-93a9-41f6-bbd1-fb346fac4d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db41b702-b357-402b-a96b-4842aa6594ed",
        "cursor": {
          "ref": "c0ea964c-43be-45d6-957f-79f4a337e6f6",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7cc5c81e-3a75-45fe-b536-d6d5a0ed9caf"
        },
        "item": {
          "id": "db41b702-b357-402b-a96b-4842aa6594ed",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4ab01199-46c6-449e-8e7d-41e3c9091f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3943eef5-5f7e-4ad0-beb4-1c03aa41baae",
        "cursor": {
          "ref": "e42a54d3-fd8b-44d9-9f47-2c585b4a5888",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d9d032e8-87a8-41bc-a00b-4747664b1c9e"
        },
        "item": {
          "id": "3943eef5-5f7e-4ad0-beb4-1c03aa41baae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8adf93cf-1813-49f0-ae40-143ba167ed36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3d0144-9a70-4f85-8aea-a5f1deb3f9c3",
        "cursor": {
          "ref": "360eb252-e11d-4135-b00e-23e041da1ee9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2b41b78-4e7c-45d6-b54a-46d76ce629fa"
        },
        "item": {
          "id": "3b3d0144-9a70-4f85-8aea-a5f1deb3f9c3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c0ae9eff-2cbd-4a59-8fe1-79bb7107c241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac218877-f1ec-4aa0-a0f6-f1bdab452d6b",
        "cursor": {
          "ref": "9aec33ba-4577-423a-a30e-772a231831d3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "24075725-21dd-410c-8bba-c742e284e261"
        },
        "item": {
          "id": "ac218877-f1ec-4aa0-a0f6-f1bdab452d6b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e3af6b82-1efe-49c6-8dce-903522d6e9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a18469-ebcd-4dbc-8355-54f6941a73a1",
        "cursor": {
          "ref": "4c97adc1-cdb4-4f28-9448-7b30e89d14b4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c0acf6c2-0cea-4979-a72c-0d37771f7863"
        },
        "item": {
          "id": "74a18469-ebcd-4dbc-8355-54f6941a73a1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "789872ea-0b83-44a4-bc12-f7ef0178129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ddaa34-a4df-4168-9f2c-b73b3995335b",
        "cursor": {
          "ref": "8901caf1-fb9e-48f8-afdf-9226c39b68e1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9ae821a7-6e0a-4fc7-bd5a-7f7899ec3a7f"
        },
        "item": {
          "id": "82ddaa34-a4df-4168-9f2c-b73b3995335b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b6e12914-db02-4d49-b58b-09849d36dd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c6525a-04af-4c4f-96ad-7f3841de18cb",
        "cursor": {
          "ref": "29ebf610-c8fe-4b21-b107-42ed21ad7b4f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "219fa792-acde-4073-b4e6-e5cf6b98e1eb"
        },
        "item": {
          "id": "87c6525a-04af-4c4f-96ad-7f3841de18cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ab3ca1a-860a-47af-b10b-ca01f9593033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce4441d-eb7e-4f20-87ae-42d6e8700e19",
        "cursor": {
          "ref": "b4a19be1-8fd1-4bac-9f6d-aca89407fa3f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b678123c-2ef9-4b61-896d-ece35726abf3"
        },
        "item": {
          "id": "5ce4441d-eb7e-4f20-87ae-42d6e8700e19",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "93395590-681d-4fcc-b11a-e089e1022f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a14dcc8-9635-4d8d-8ceb-7aa52d364abc",
        "cursor": {
          "ref": "ea1b2ab5-7391-4f68-84d9-9c4a1c56ce9d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5686ba35-e232-4906-9bfa-699ca3e19a2d"
        },
        "item": {
          "id": "9a14dcc8-9635-4d8d-8ceb-7aa52d364abc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0e14f8f2-5687-4857-b022-9e2d06a1e1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feeead44-71bf-497b-8b69-784d85093fa6",
        "cursor": {
          "ref": "a1dfd552-3ae4-41ec-b8b0-f86fe726da45",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ee76ad03-6ff7-4e46-a3fb-c1bf3c37e0f5"
        },
        "item": {
          "id": "feeead44-71bf-497b-8b69-784d85093fa6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5fa6ad61-6cbd-443a-981f-a027a910bc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51e1158-ac03-43d2-b6e8-330e59d989bf",
        "cursor": {
          "ref": "116f45b5-4885-4ef5-94e9-60654ae9fdc4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "471f2575-2a42-4806-9a3e-6b2b22c17199"
        },
        "item": {
          "id": "f51e1158-ac03-43d2-b6e8-330e59d989bf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "03b9c36e-2e7b-4bc7-b1d5-4b13e97ab9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d126d615-066c-4172-9b8f-7b2ab4331830",
        "cursor": {
          "ref": "6388fdd4-4869-4351-9768-c7608875ee1f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "65319b98-2cf4-4c29-bcd7-e81c2ca5b1d1"
        },
        "item": {
          "id": "d126d615-066c-4172-9b8f-7b2ab4331830",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea9170b2-0341-4ce6-8ea8-16472cd280fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c0ee9f-9e22-468a-92f5-71fb410632ca",
        "cursor": {
          "ref": "1c4a75d4-b207-466b-990d-29b071b428a5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "49e76d2f-4eb5-4b7a-940d-5ef6d55c6d9e"
        },
        "item": {
          "id": "71c0ee9f-9e22-468a-92f5-71fb410632ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12bb54d5-9479-476f-9a9b-46f97fff5f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff83f864-49b7-4173-8714-21d9bc39d412",
        "cursor": {
          "ref": "44bc61a5-9007-49ce-b441-b292ed6c9442",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92cad3b8-71b4-41a6-b883-8717c45f5cde"
        },
        "item": {
          "id": "ff83f864-49b7-4173-8714-21d9bc39d412",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bc6efd0e-6bf7-40f4-8f0a-5e466b92e7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0429fe-9dc3-408f-bc11-fd3ce2c7d25a",
        "cursor": {
          "ref": "b1e9a4cc-a838-43ec-b392-71c042f6c867",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "23abd605-6a53-410f-9aa3-daf113530eb0"
        },
        "item": {
          "id": "6c0429fe-9dc3-408f-bc11-fd3ce2c7d25a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bf4c59f0-3590-4e3c-9e34-a03927eec581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc491d51-bf29-496a-9da3-510f1c14e42b",
        "cursor": {
          "ref": "f8aa6f58-3f21-47a1-83b9-8073fd5d1f58",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56eaabe0-d2ec-4b2f-8651-f81cefbdeee3"
        },
        "item": {
          "id": "bc491d51-bf29-496a-9da3-510f1c14e42b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2db29271-ac95-43ac-b6f0-9bc060c7cf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4cb482-ac2b-46b2-a3d0-5c12ccb68e89",
        "cursor": {
          "ref": "6de371a1-cf87-4113-9b89-2508a724a212",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "977f8af5-5145-4ff1-b89a-6263a1e3771d"
        },
        "item": {
          "id": "fd4cb482-ac2b-46b2-a3d0-5c12ccb68e89",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f2d6f52e-6d07-4273-9a61-b9d1f79893ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a4d2bb-2b63-4725-a0d7-13d9e271ebad",
        "cursor": {
          "ref": "c3b7cefd-097c-4833-b01b-1740a3439c92",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6d8dd00b-e404-489e-b248-b3276a116402"
        },
        "item": {
          "id": "e0a4d2bb-2b63-4725-a0d7-13d9e271ebad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "997b26fa-9dc6-443b-b688-762068b705da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c4265a-1970-472a-9d05-da4d6711d73f",
        "cursor": {
          "ref": "2b3d959b-c1e5-4435-94e8-65461ec9d0df",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ee0a92e-99e8-4dbc-af07-b50de3079912"
        },
        "item": {
          "id": "e1c4265a-1970-472a-9d05-da4d6711d73f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b0c2ca8c-a270-456f-a8c9-d7e52a593916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f07e2-bd53-476c-b38a-0553f16ba316",
        "cursor": {
          "ref": "46fe0452-d1e3-456c-980b-e8c29c869ee4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1e4c44b0-a67e-4ea1-beb0-d2c3b781268c"
        },
        "item": {
          "id": "ef4f07e2-bd53-476c-b38a-0553f16ba316",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "87839768-4937-410c-a508-29cd1cb32f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae14802-52a1-4c50-b565-22bd79cbc9aa",
        "cursor": {
          "ref": "b4e724e3-0851-42bf-9caa-eb82050a8949",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0a94128a-9083-42e0-80d9-73ff9c023a8f"
        },
        "item": {
          "id": "1ae14802-52a1-4c50-b565-22bd79cbc9aa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "98e19cbc-e2c2-4947-a54b-5f41d09c4bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72800c8-f5db-477c-b2e8-5cf5ac54aa09",
        "cursor": {
          "ref": "43803584-73e3-4c05-9d3a-53788e0ddb8c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0fb4c3bc-4a5c-4558-af67-1fac168d8283"
        },
        "item": {
          "id": "a72800c8-f5db-477c-b2e8-5cf5ac54aa09",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9a522649-2400-4cc3-8000-f60ed7ce5b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c558b81a-ac89-4792-b12e-33953801f0ee",
        "cursor": {
          "ref": "57887ae1-27f3-40e7-ba66-83a20a3f573c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "018abe8d-2748-460e-8ff6-106191133666"
        },
        "item": {
          "id": "c558b81a-ac89-4792-b12e-33953801f0ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "66e4b887-106a-40c5-aa68-c3269f6aeea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5381b4-09ba-4e29-a404-dc3126aaa4de",
        "cursor": {
          "ref": "c5260235-aa90-4c12-afcc-cb80a7ed8224",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "52be98ac-80e0-4370-93fb-73fabebaf495"
        },
        "item": {
          "id": "be5381b4-09ba-4e29-a404-dc3126aaa4de",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bfb7e242-e33f-4623-8404-376060c0af1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e6afba-c8c7-426e-b0cd-40f5ec83d34f",
        "cursor": {
          "ref": "d740ddca-75f5-47e5-8bf1-d08e3fdc691b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0bd974b2-2e6f-4fcb-b29d-af0db83b0fbc"
        },
        "item": {
          "id": "29e6afba-c8c7-426e-b0cd-40f5ec83d34f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b86a4388-bd33-4255-8bfa-754a3267892b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48fbe4c-e5b9-47c2-83d5-bd796c5eeee6",
        "cursor": {
          "ref": "b983ff2b-8779-4769-b574-1afb994876e6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "833a3256-9edf-46ac-9741-986fe63f21ce"
        },
        "item": {
          "id": "a48fbe4c-e5b9-47c2-83d5-bd796c5eeee6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4cbc4398-543a-4dce-ad60-9687cf5e1c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07adf8-f61d-4384-b0e2-6ec17071348b",
        "cursor": {
          "ref": "9001c271-859d-4fbe-bb37-05535e83a8b5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8e2f95bd-b265-4966-9633-66e69e379f89"
        },
        "item": {
          "id": "9d07adf8-f61d-4384-b0e2-6ec17071348b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "773365b1-c778-4a7c-b7bc-e60ab6215137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867b93eb-0df8-4c7f-abbd-99e2a75fccd0",
        "cursor": {
          "ref": "27fba5dd-88ce-443e-a4e2-a447ab00be6c",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3c1319b8-800f-4b5e-bf0d-55f9f3e1cad2"
        },
        "item": {
          "id": "867b93eb-0df8-4c7f-abbd-99e2a75fccd0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "49dae0ce-a070-4b07-870c-c4e452818248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a91b464-abad-4c24-8922-a6c235dbf700",
        "cursor": {
          "ref": "3e82c378-b854-4af0-946f-6086f8c45713",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7d11fb56-4f46-4f8a-a8af-4482f1f3ba05"
        },
        "item": {
          "id": "1a91b464-abad-4c24-8922-a6c235dbf700",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "313259bc-450d-4c0e-ae71-c2d0f2c0c2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27904b6-2046-4b12-b3de-6bde0c702e8f",
        "cursor": {
          "ref": "65246983-1975-4fa3-a47c-7b9460ba9b02",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0f3bfdc2-02e0-44f1-8f4b-bcadd94bf793"
        },
        "item": {
          "id": "e27904b6-2046-4b12-b3de-6bde0c702e8f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28de9d50-99cd-474e-9d07-3ae44e027082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e233c7-6d48-4cd6-8e59-2646f865c940",
        "cursor": {
          "ref": "0db958ac-f3f3-4967-b6e7-a056eb44aeb0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c50adfb6-55f7-48b1-9fc6-eb39617053dc"
        },
        "item": {
          "id": "63e233c7-6d48-4cd6-8e59-2646f865c940",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "22464446-f527-4a1e-917c-563b257f722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356e8646-068d-4031-b77d-ddf69eae2b9c",
        "cursor": {
          "ref": "60183158-fdbc-49d7-be65-656421c88f0f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0b79999c-9964-4c78-9880-a62af5ffd5b6"
        },
        "item": {
          "id": "356e8646-068d-4031-b77d-ddf69eae2b9c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "828aec10-e899-4d10-adc4-68c0a533b5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b98800-8ef8-4aef-b0ec-55204b4e7acd",
        "cursor": {
          "ref": "2808e00f-1378-49f9-9df8-a1c44a521c3e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7f0b5bdf-54b8-4559-b1d5-666d75ff0eb9"
        },
        "item": {
          "id": "e5b98800-8ef8-4aef-b0ec-55204b4e7acd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c56f78f3-1c43-4379-b702-aea01b25cf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe13f3c-f6f1-4b21-a1df-3b7edebaf222",
        "cursor": {
          "ref": "6702c14e-a8dd-4784-8a6f-ffc52c844225",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "42fd7f26-fdf9-4338-b177-d103832eabfd"
        },
        "item": {
          "id": "9fe13f3c-f6f1-4b21-a1df-3b7edebaf222",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "48200c2d-e19f-4e4a-8c43-91ea9316433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7caf56-77cc-4534-8cc8-8821830dca6f",
        "cursor": {
          "ref": "66256c37-8955-4449-99db-82e292225fef",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "163583da-f3e3-4b42-8e17-50e3742b918d"
        },
        "item": {
          "id": "be7caf56-77cc-4534-8cc8-8821830dca6f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b0f9854c-16aa-45c1-871d-fbb2e0318ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88a14ea-d1ce-46ca-ba32-3da2e7db5be4",
        "cursor": {
          "ref": "f8c39c67-7c78-4e41-8423-e8040e9e418e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "33a0fa13-e38a-4102-a4e6-314c105dfb82"
        },
        "item": {
          "id": "a88a14ea-d1ce-46ca-ba32-3da2e7db5be4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "59715ec3-fed1-408f-93bb-40e62552557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f3d72d-7859-4c32-8cb5-22f5bed043ed",
        "cursor": {
          "ref": "fc51082c-e00e-4cde-a182-78c969422a5b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "885e3cc9-ae89-403a-96e1-c4182ef1b4a9"
        },
        "item": {
          "id": "70f3d72d-7859-4c32-8cb5-22f5bed043ed",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4e10a013-ab46-4228-8ffb-964008281a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8728c2d8-4f3b-4089-8887-59a68c430839",
        "cursor": {
          "ref": "16d1bcea-9abd-4602-aee9-cdb77ddc54ff",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0d954c13-8fe9-4807-bdd5-e6ee8de76815"
        },
        "item": {
          "id": "8728c2d8-4f3b-4089-8887-59a68c430839",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "36ddb59d-d70a-41f9-8232-7387f28109fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757a8a71-daa4-4152-b281-f9b2215159b8",
        "cursor": {
          "ref": "4ef3d520-64ea-4399-b3de-f2cda3eda246",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6e88ea09-2e22-4b1d-8475-9adb4321119d"
        },
        "item": {
          "id": "757a8a71-daa4-4152-b281-f9b2215159b8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2a56f763-3649-46b0-a7fb-3f60221fa929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd89ad45-175e-4a2b-93de-c0f32e3cdc0a",
        "cursor": {
          "ref": "956c7485-1caf-4b70-9d49-540597f2cf50",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6a08c5c3-9593-4594-b444-e891e224c2cd"
        },
        "item": {
          "id": "fd89ad45-175e-4a2b-93de-c0f32e3cdc0a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3906620b-d462-4040-ac57-1db3ccdaff53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39379d6-946f-4c40-aa03-2eb4a4e92a99",
        "cursor": {
          "ref": "37fe78cc-d3d7-4a76-bc64-6ad0a3c08d7d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f31c8bca-2472-4931-8466-96031fd1051a"
        },
        "item": {
          "id": "b39379d6-946f-4c40-aa03-2eb4a4e92a99",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75062f91-8a16-4a34-817f-a5368ee06ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b5c6d0-24c3-44d3-bf38-3fd71d5065c5",
        "cursor": {
          "ref": "302ebeba-4368-4c4d-9af8-676090e8823f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e11017cc-686a-47a2-ad51-bc277450c83e"
        },
        "item": {
          "id": "69b5c6d0-24c3-44d3-bf38-3fd71d5065c5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8276e486-6868-4762-835f-ba472a439de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445f37b-4419-4a3e-8738-344e38e61c32",
        "cursor": {
          "ref": "693181f5-559a-4a78-a4ed-22aa143ac9dd",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8ff8eaef-2bf3-4ffb-8438-b6ed915c4540"
        },
        "item": {
          "id": "7445f37b-4419-4a3e-8738-344e38e61c32",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "457d31fa-9ff2-45f2-bf0f-5a562f362405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69589a79-0946-486b-ad4c-99700fae8d04",
        "cursor": {
          "ref": "43b73bef-2f5e-4728-bd30-6157066fed55",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "126fef12-6af5-4e93-8254-1b45c14b3035"
        },
        "item": {
          "id": "69589a79-0946-486b-ad4c-99700fae8d04",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7149841e-77f8-403b-b015-22a5b70546d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd773b7f-5bb0-4523-abc6-51c3e0995cec",
        "cursor": {
          "ref": "939b72dc-2e62-4761-9fb9-06b4023fbe30",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9e94014f-03c8-4022-985e-6d686c9cc53b"
        },
        "item": {
          "id": "dd773b7f-5bb0-4523-abc6-51c3e0995cec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0675d2cb-44ee-45d7-9648-dc5a86abac2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29d5ba7-b4c5-4493-afbb-4f775763ffb3",
        "cursor": {
          "ref": "d66bcf05-c5ba-401f-be85-836e6b17d284",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "dcb687c7-0d08-440a-8156-f1f067c1ba49"
        },
        "item": {
          "id": "b29d5ba7-b4c5-4493-afbb-4f775763ffb3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4089816d-1da3-40ff-b178-ed6d68dfa0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef899fc-5b55-4a0f-81ee-cbf537d67ac1",
        "cursor": {
          "ref": "d5bdf536-c9d4-4ec2-b887-7ac93326c499",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "602f3ef9-ea99-41b5-9c38-57795a3af3e1"
        },
        "item": {
          "id": "aef899fc-5b55-4a0f-81ee-cbf537d67ac1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "303d62fd-dbe9-4f25-92f0-f8dc77fa02eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2360952-9f19-4ad6-8c39-2b290515bccd",
        "cursor": {
          "ref": "cc595c2c-565d-4f75-9070-df0405ee9f01",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2b519a72-7980-4ba5-b377-a948236ffcbf"
        },
        "item": {
          "id": "b2360952-9f19-4ad6-8c39-2b290515bccd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0cd77020-c229-46b0-8824-ded8d2798bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cab727f-c15e-41a1-8de5-46b16b32819d",
        "cursor": {
          "ref": "b7dbd20f-d2b0-4e76-9537-17c815a2d617",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2e5f3f94-53cd-4a06-af30-eac0e614213e"
        },
        "item": {
          "id": "4cab727f-c15e-41a1-8de5-46b16b32819d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "01c041de-00b2-4349-843d-d7683b0ee3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795ba072-ff7f-4cb7-a20c-ae3332a3286b",
        "cursor": {
          "ref": "696c5c3b-f5f3-42c3-af40-b5de65b93733",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f50dc52-f03a-469a-822a-7d76a95ad441"
        },
        "item": {
          "id": "795ba072-ff7f-4cb7-a20c-ae3332a3286b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "50fa2c13-2f02-44f1-a0f8-1c8b86777d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a4cdfa-cbd2-4200-b018-de9ab7d5e1f5",
        "cursor": {
          "ref": "62d34e3f-4b11-489b-b32e-9c3fdbe1e7b8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d9211ceb-e9a5-4b51-885a-6c6580c8730b"
        },
        "item": {
          "id": "d5a4cdfa-cbd2-4200-b018-de9ab7d5e1f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "490ec62b-1554-40f9-9ff9-225730c2291b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f5c0a3-d568-4e22-a35a-ddbe29cd7cac",
        "cursor": {
          "ref": "a62de606-c089-46ad-9d31-9a82a99f85d8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "da33bdcb-5fe0-4fe0-9bd9-3a64bbfa0871"
        },
        "item": {
          "id": "16f5c0a3-d568-4e22-a35a-ddbe29cd7cac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "63ffc782-fc76-4c1d-bc38-5ad33f52b490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ccb734-bc37-4bf7-8d58-c2738b0d4070",
        "cursor": {
          "ref": "2f3b3602-c294-4a82-9ac0-e4797145bcd3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "701218fa-6a96-4655-ae12-ae78cd4638fb"
        },
        "item": {
          "id": "d7ccb734-bc37-4bf7-8d58-c2738b0d4070",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77896473-df90-48b1-8857-64ceb65e8895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638c98aa-e31f-4b17-8fdc-a5bd741cc55f",
        "cursor": {
          "ref": "bc5c1753-1525-4abf-8280-b484f709af6b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "05e9938c-9861-4582-b465-1a65e572d0c5"
        },
        "item": {
          "id": "638c98aa-e31f-4b17-8fdc-a5bd741cc55f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "204d8289-c017-44fb-8059-62d60ee6ccde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d8a808-7489-4141-b26a-d141dbbc7019",
        "cursor": {
          "ref": "e02a28df-8de0-4677-b597-44f39e508c10",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53b45512-74cd-4028-bf09-53fe6b62fb05"
        },
        "item": {
          "id": "d9d8a808-7489-4141-b26a-d141dbbc7019",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8a73b99c-1779-4a33-abaf-9e09aa7db2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cd7409-1851-4e44-85f8-fe9223f6258f",
        "cursor": {
          "ref": "ad4880bb-c808-4002-bac6-b1431152bfa9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f0701d4-a00c-4d75-85f0-c62f0db6aacf"
        },
        "item": {
          "id": "53cd7409-1851-4e44-85f8-fe9223f6258f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ada5eb4e-69d2-4e00-a626-ba02e7c2af04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0da31c-26f5-47c1-ba1e-c2c374e02061",
        "cursor": {
          "ref": "511a3ec2-018e-422d-a685-9f760778bd1f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "18b439dd-326b-4bfb-9213-9fac0e9d91af"
        },
        "item": {
          "id": "ca0da31c-26f5-47c1-ba1e-c2c374e02061",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c93f9b7-14fe-4177-a913-5fc990ab1b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1900778-5981-43e1-b29f-aa47e652f9b7",
        "cursor": {
          "ref": "fd504627-dc99-48d0-86a4-4fcd69f08646",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d8d8565d-2563-433d-a3a6-f1a44751e932"
        },
        "item": {
          "id": "a1900778-5981-43e1-b29f-aa47e652f9b7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f71fb3e4-cc23-4474-a750-5c0d356eb8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1eb80c-717a-4121-b7b9-57caeb71cb9b",
        "cursor": {
          "ref": "a4f781e9-20c7-42ef-888f-d1ab2fd53afb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "72ccc588-5151-47ee-81c7-5c304db86120"
        },
        "item": {
          "id": "8b1eb80c-717a-4121-b7b9-57caeb71cb9b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a6a0fd4d-7360-49e3-8e25-42591dba98e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f86175-ad17-48f2-abf9-abf219b82fe6",
        "cursor": {
          "ref": "6c58e399-7f35-4bbe-a427-24b74b5d4d00",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0df88d77-3c09-4402-9304-02d8b0d2fee5"
        },
        "item": {
          "id": "32f86175-ad17-48f2-abf9-abf219b82fe6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "57920886-bb8b-43a4-8706-7d019e5294ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989ede96-97ce-4299-a511-dd3874b1d1d6",
        "cursor": {
          "ref": "a83392e6-d21a-4b57-b926-a9754fc1733f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0f3ce3f8-08b3-4b9c-a389-390a5c6d2614"
        },
        "item": {
          "id": "989ede96-97ce-4299-a511-dd3874b1d1d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b0b7dd79-e7eb-450a-93ef-aa5e21a34c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85c1651-4a58-4345-afe9-c555b44cffae",
        "cursor": {
          "ref": "3722ddb9-29f3-457b-9844-63eda466753e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d3a8380-83bb-4aa2-9937-eeec7bdd22b2"
        },
        "item": {
          "id": "a85c1651-4a58-4345-afe9-c555b44cffae",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1ae68444-27f7-4301-bf16-997a0687861c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc684d-3532-4331-8db1-e6d6879070ad",
        "cursor": {
          "ref": "e5fa2393-9d98-497d-95b4-d75469cc5d8a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2cce11c3-cb25-4616-a38c-9ebb7a821993"
        },
        "item": {
          "id": "83dc684d-3532-4331-8db1-e6d6879070ad",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2ca70e9-4a3f-4892-88bd-4187630c6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95f0981-56de-4289-b24c-7eb53c56ad1a",
        "cursor": {
          "ref": "0659ccbf-1814-4822-a9b3-7908e77b0499",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "333f92cc-1d4d-4aa6-89c6-70bfc038193f"
        },
        "item": {
          "id": "a95f0981-56de-4289-b24c-7eb53c56ad1a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8479aaf0-b6d2-49c6-94bf-9e0fe68488fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce137f5b-aaf7-4d4c-a13c-42ea0ead4b7b",
        "cursor": {
          "ref": "6cb8ee7b-37f3-4ba0-9672-fe1049fa6ebc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5c86024-8bda-478d-97c2-dc89b6bb7407"
        },
        "item": {
          "id": "ce137f5b-aaf7-4d4c-a13c-42ea0ead4b7b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "096225ed-c01b-4432-ac95-b894cff8c6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c8350e-9ba6-43e7-9255-701b9cc616ab",
        "cursor": {
          "ref": "76b97e7e-a205-4223-b7b0-bf8c8e4d00f2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "edcba91b-6b10-4b8e-8867-704278e0e3d6"
        },
        "item": {
          "id": "a4c8350e-9ba6-43e7-9255-701b9cc616ab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7933c252-2571-4861-8d76-57aecb467555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3ca342-94c3-47c6-83c6-f9a100aefc73",
        "cursor": {
          "ref": "d0fbd1aa-d436-4feb-963f-69395638cfc8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fcd511a5-87d9-42e8-bbdb-76202bb8ef13"
        },
        "item": {
          "id": "de3ca342-94c3-47c6-83c6-f9a100aefc73",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f77265fb-9014-4d2d-8a88-16c5b8e0d297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f246685b-eadb-4e0e-a8bc-db3bfd2c2bc2",
        "cursor": {
          "ref": "0291735f-410f-4343-b4fc-de6e74c4ee26",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4a688c80-c355-4ef5-8158-59f25e841fa3"
        },
        "item": {
          "id": "f246685b-eadb-4e0e-a8bc-db3bfd2c2bc2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bede5c22-0d3a-4c6e-9263-ac6793556e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b813a0-8457-4700-bc34-4e8385a1742b",
        "cursor": {
          "ref": "d928620b-a461-4f53-bf4e-4cf2246aa720",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "24e6807b-8a89-4d21-a076-e349660152b1"
        },
        "item": {
          "id": "e2b813a0-8457-4700-bc34-4e8385a1742b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b9b36a5a-34a8-48d2-8dae-ebdaf298bdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fc44dc-eada-4b1a-aa49-50b196755e97",
        "cursor": {
          "ref": "9144c7db-c13f-4099-9690-0efde64f81ac",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "80b1dec3-be07-4ebf-9786-be7073d4340f"
        },
        "item": {
          "id": "e5fc44dc-eada-4b1a-aa49-50b196755e97",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "81c3a1ee-1504-4e74-96f6-4283947bd8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e227d5-10ec-4c8b-b559-26e187084cd8",
        "cursor": {
          "ref": "359708ad-5754-436a-9771-7a0ff4037c37",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a2d75cc4-078b-4b2d-a5d3-3af357f190c9"
        },
        "item": {
          "id": "60e227d5-10ec-4c8b-b559-26e187084cd8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "97237bcc-5165-471b-8ff9-5a8540d7567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8380beae-ee22-4f4e-bc03-4e8e83c87ef3",
        "cursor": {
          "ref": "1a0b2d5a-5caa-420a-8eef-951790d4d1fb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0022884b-5d1c-4db3-a3dd-e6f58c005a91"
        },
        "item": {
          "id": "8380beae-ee22-4f4e-bc03-4e8e83c87ef3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b8cedf01-e6dc-4a78-ab85-5e0edf675524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50edb8c3-8875-497c-8ecd-9bfe006e4a0f",
        "cursor": {
          "ref": "e1a6aa9f-c44f-45f9-83cc-70efedecc347",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b9c257bc-a60b-473e-bb6a-af4ef126bf90"
        },
        "item": {
          "id": "50edb8c3-8875-497c-8ecd-9bfe006e4a0f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e36f8f4c-7413-458e-b661-8e017c96c982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade497b6-8548-4adf-8959-72a934a80776",
        "cursor": {
          "ref": "56d3e1bf-79f5-4b3c-a3d6-e4b3ab444a6f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ebf7f983-638c-434d-9524-6d59aeea1b29"
        },
        "item": {
          "id": "ade497b6-8548-4adf-8959-72a934a80776",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f7e507ba-62a9-4e7d-8395-2ea015284925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90af0e88-d016-4946-ba23-d9822f56d880",
        "cursor": {
          "ref": "b636e0bf-a2a7-42f2-963a-a16311e74b25",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c28ad8eb-0815-40d9-a760-d4b66fbb1408"
        },
        "item": {
          "id": "90af0e88-d016-4946-ba23-d9822f56d880",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5369446c-1332-45a5-8703-5dd5500ddc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819ae927-351e-416b-95ec-a4a0545449a9",
        "cursor": {
          "ref": "2234ef35-8733-4420-859f-7e56ccda4c62",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d3ba4dd1-3912-47b5-baa8-7466ab5ab639"
        },
        "item": {
          "id": "819ae927-351e-416b-95ec-a4a0545449a9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ce6d8a4e-4d18-44da-8df9-7863afc155e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c237f9aa-9002-4c83-875c-fe13ca8bd101",
        "cursor": {
          "ref": "d149c154-7be5-4207-8ae7-60db343d1aab",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e7f24334-7d28-4119-aba3-4936cbc342a5"
        },
        "item": {
          "id": "c237f9aa-9002-4c83-875c-fe13ca8bd101",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cb15ca31-3d9c-4d3e-945b-5827070fe1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881241fd-c9de-4c43-bf1a-55f2983e77c0",
        "cursor": {
          "ref": "7e5d441d-b237-4925-9552-bd5a215ce225",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ccfbd4b7-e6f1-417d-8f7f-cfac64e4ae80"
        },
        "item": {
          "id": "881241fd-c9de-4c43-bf1a-55f2983e77c0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "72463ac5-ea3a-4daf-a648-4be4e467f857",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e651a3d8-639f-4b96-a777-6ad49065f562",
        "cursor": {
          "ref": "3dee84bc-cdb7-412f-b357-21b4f042c939",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9ebd35e8-44a9-4bfb-8d22-f83b21c3c786"
        },
        "item": {
          "id": "e651a3d8-639f-4b96-a777-6ad49065f562",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99d9c608-e7bc-4046-884a-4c50719a9ebe",
          "status": "OK",
          "code": 200,
          "responseTime": 2180,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ab74d2-c8c6-44d2-b0fc-7bb5e3c5b102",
        "cursor": {
          "ref": "74793257-0c42-4fb2-9e15-07622cc12881",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8d6bbaf5-9710-4f96-8449-6e8c172adcf0"
        },
        "item": {
          "id": "b2ab74d2-c8c6-44d2-b0fc-7bb5e3c5b102",
          "name": "credentials_verify"
        },
        "response": {
          "id": "941e7aaa-d381-4b8f-a28c-ee461901317e",
          "status": "OK",
          "code": 200,
          "responseTime": 2824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac38b55d-e1d7-4e13-a667-bda02b6c2b31",
        "cursor": {
          "ref": "ac67cba1-0fae-40c1-b8cd-2904099a574b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "11b3dfd3-d2e3-42a8-b607-54d178c445ce"
        },
        "item": {
          "id": "ac38b55d-e1d7-4e13-a667-bda02b6c2b31",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "096fe3b9-ae19-46c5-b17c-02ab7d62596e",
          "status": "OK",
          "code": 200,
          "responseTime": 2565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b575a572-4aec-40d7-8557-1714bc90c28e",
        "cursor": {
          "ref": "086e86bd-6ff6-4d3a-b69b-54b07dfba655",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7adc9aa-0578-4bc7-96ce-70ec4d69dd42"
        },
        "item": {
          "id": "b575a572-4aec-40d7-8557-1714bc90c28e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5b01e35-ea60-4974-a2b6-e4cf3ca11052",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b575a572-4aec-40d7-8557-1714bc90c28e",
        "cursor": {
          "ref": "086e86bd-6ff6-4d3a-b69b-54b07dfba655",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7adc9aa-0578-4bc7-96ce-70ec4d69dd42"
        },
        "item": {
          "id": "b575a572-4aec-40d7-8557-1714bc90c28e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d5b01e35-ea60-4974-a2b6-e4cf3ca11052",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb250db-3952-4c5c-8b82-993e4745220b",
        "cursor": {
          "ref": "317dccb7-05cf-46a2-9230-85f465cfc58b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b0a8ad6d-3388-4226-9e5e-c80f040f6748"
        },
        "item": {
          "id": "8fb250db-3952-4c5c-8b82-993e4745220b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "05ab76f1-ae40-4b24-8fbc-80c529ee73a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603119bf-394d-43c4-a308-b97b0a211b05",
        "cursor": {
          "ref": "8e7e3c3d-26a1-4ab8-a15f-80b201c1997d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3899e6c1-9dde-40fc-a367-2151a0d8a663"
        },
        "item": {
          "id": "603119bf-394d-43c4-a308-b97b0a211b05",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9e8da86d-af12-4b1b-bf26-5d19bb226643",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}