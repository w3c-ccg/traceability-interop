{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9482b1d8-b9d6-43c3-9ff6-b5620fb9b555",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8a585b61-8d59-45ef-88e0-b859bcb424eb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31026191-b7cd-4d13-8b7b-fd4c25a56b28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4fb31839-ac55-4d5a-88f0-5fb5ca968ee2"
                }
              }
            ]
          },
          {
            "id": "6eeed5d4-7e73-48e3-8eeb-a39f883d3a97",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cf5962f-416d-4e5d-b377-72604fdbc298",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e61ee79-4c37-4fca-b83c-e62471203543"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "37c7dfee-7f27-4dc0-aaf6-65017841a890",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "752f8870-934a-4612-84e4-c206f35a50f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05b48095-e47c-4836-8d70-8e0629d5f844",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "237c8567-9fbb-4096-9772-abc9c676bdfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7495039d-1c38-46c4-9bbb-532b3e37ac73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88531458-597f-4e69-ae0d-05d713322905",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c2dbdf5-acf7-4100-a2b5-878170cc2343"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04e055dc-5f64-4eb9-a799-43f7c8731f96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9664518c-45bb-4243-8db8-2494eb798b2a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ce32cac-90ce-4d41-b862-68f7fde36914",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6be152c5-a8b7-42e4-9fc9-126b80c21172"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c9a1ca9-ec16-4cd3-ad24-02e603c54af8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "790cee7e-a80f-4921-991d-5e27ac40111d"
            }
          }
        ]
      },
      {
        "id": "7c726bb7-53ba-4ed5-a86b-3f4fcf0a0d9a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0e774094-79cc-4485-b511-f1e16ef3002d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea7be50b-bd0b-45f0-a5b5-7087eb2d68d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a4c3062-ca43-4897-9c0d-dd63c84b893d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737a3f94-933a-4649-9c0f-281f8c1357df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eb1230f-0093-4a25-9055-25b769473ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd043dd-457e-4df3-8fb7-f5b75ff5b718",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f019d3b7-9644-45b0-8c49-7c9570fff5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "761956d2-11d3-4f44-8d87-383c140ccee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39dea9f-c516-439f-962d-2d9bf4f92714",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d813ba-38a7-4ca9-a3ba-ff7fd2aa1af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84514bcc-030c-44f0-8519-98038a82aa49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a863a856-a006-4b6c-a358-0b45c34a8d01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce873f12-6b4f-4ad6-9783-55d757f0233d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634bb55a-a1a9-4600-85c4-c1fd55bba7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4a462d3-191c-4294-aad7-d14b163eacfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96367739-0d66-4709-abb0-ff8e88709e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2643b239-8d08-47a5-a1f0-2abbdcc5fc9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eba5b6ac-9e40-4148-8a90-ca0224370d21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "984bd284-85e6-4685-91e0-64cc1dd8803b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb34fbb8-8bfa-461b-a4c9-eee6d2402abc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3ffd15a8-60c4-4a7b-8202-4b89e7005355"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45fa46d9-fe9f-48f3-b15b-425ad03f56fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d6de2b97-f23f-4e52-b95c-ce3c6ad9eae9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "759d1987-6149-4e51-8177-9910a1f4c624",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f82629b-c909-4c9d-b5bb-8089ce5d84e7"
            }
          }
        ]
      },
      {
        "id": "afabd3cb-ae5f-442f-a2ee-8dfeb5cea4b3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97217c1a-eade-480e-a7a1-016b0b4460b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a401397-e440-4f90-aff3-ffa0aee5bfea",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e717d56c-b2fa-4530-941d-b36eac8de80b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15598c9b-648d-4616-a21a-d0ff53eaa6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4497d9-2684-4473-a070-3443dffbc8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09a471d-d586-45bb-ac51-9df40f3ce113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f49054-3638-4940-9ef5-9e1e9f3324e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dd2591-ec75-4ecc-9d44-26aafe53efbe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aa0456-55a6-467d-9baa-b801ec617b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec96e72-f18f-4911-b000-bcb041d45002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ea9f8c-7504-4da3-bc7e-7369347c413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b046f82-dd9e-4ae2-9b7f-7464db904dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9919a66f-6772-418d-b7a1-6ef260892027",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853e6ba7-9910-4816-8802-19dae6346be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d5aa8c-4be0-4b01-96e0-d753a0c209ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d6e505-9d42-42ee-b811-3ac024163b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "500e047d-5c0b-40c7-9806-17c97348dd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbad7cc-c53c-453d-a9c1-654935971882",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7df5d4-661b-4bc6-9f43-1aa41e1a108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41aaff3e-c8f8-4554-8d49-6b08ce7f6ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99377cd5-1537-40f3-8242-8253b5b4e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c5c38e8-e10a-4e89-bf09-3a3852363447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4d96d7-7640-48f1-84a3-b9724d48098e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe52ef8-b5c0-431b-aed1-2fc55d368932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044bb173-b948-4824-879d-48f0e8c6c529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d233452-5160-4459-ab83-dfb9ce690a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33fb4248-be36-4fdc-a6da-62aeea2c0f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a8734e-564c-42e1-8945-635056ab11ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d85c0ec-cba5-4310-8b0f-a0be9e3d5953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494b91a0-2dc4-49e3-a3bd-1d65cc23f217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab030e-919f-49dc-828f-cd989d7a6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b40626ad-e8a9-4070-ad6e-e777cdca7bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a08b1a6-9807-42f2-a54e-bb0d08be57c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a987ea2-292b-4d33-8712-94fceefd8315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5acdcd9-8a5e-49d7-9f06-353fca6be7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e717ac87-4ad5-414a-8e2c-91ab95538782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d02c513-e434-4cd8-9911-155a7156635f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46d477b-f177-4c4c-bf03-6cc392726ee9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bca1b12-bc88-4154-a792-3a9cf7a758c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94031660-a90d-40b6-8d77-fe8c2e313d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65e79d4-93de-44af-b677-18e3cebe9a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "783136fe-b35d-48d3-a861-dae85d00de51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0252dd-952b-4295-9572-a8ea85fa1f90",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4315b54-7f8d-41db-a359-e9b5caf54bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd22fc61-fb0a-479f-9bf1-8285f68b6cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d79262-2aa2-4766-8abb-6e8a0b8770de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1c4af64-4663-4478-825e-f41bf8bac01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5ca43e-7470-4c75-8265-468467ad5415",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583e0955-3480-48e9-9709-d4b26c79779e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b83c528-0bde-4f4e-872f-6ebed1c9de9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e68c95a-a75c-41f7-a038-18425f8578fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40170fae-d65a-4264-ad12-e39ef796edbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09aa8f69-55fe-470a-b038-a7c61f243431",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effb49e8-a310-4ffd-91f8-8adc4fc19b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4feae94-d94f-4c37-a499-521da1f32f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4353ed-09a6-46b0-a802-d67d4e19581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bdd7efb-50ba-4dff-915c-f71e40946fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0700dbc9-4b62-4a7d-a6f1-8b65727c0be0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7178ba9-d8a4-457b-b87d-554bb7f07d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f0f166-8d2a-463c-9ed4-bcef502ecfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694e53c4-103c-485e-b26c-b6aff29ac56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a24b5ac-7acb-4c24-93aa-cf98db059119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7203ce8e-5902-45e9-822a-b99e79a1b4ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7731c4d9-d756-44ea-ab83-5fc87e0211cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cd6d0e-1d0e-44e4-93fe-8e0fef756d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128e1339-2a7b-46e4-9586-796e0eabff13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf59f23-87f6-4ef7-aa70-07c52cb9ae01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a18a613-bc2a-4961-bec8-1fcb410c2239",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc41524-d958-4056-8574-fbc366dcb94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e9518e-e525-48b0-9e18-e71d52cd89de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861719cf-7fde-4fe8-94cc-59ade22d3f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "623bca8d-e91c-4b4e-b8ac-71c0e2f9e7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82570510-9e47-43c7-b5fc-39da09622120",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdf59b9-c820-4257-b433-cb37792bbb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f06341b-686e-484a-a84b-b686794345c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f3316a-fc6e-4b77-85bc-f9069a9163ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2f1fad3-d406-4761-85fc-270d0e18fa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87421cb0-fee9-46e5-aca7-3ea591ab2748",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ef3095-982d-4e00-9f88-b74000c0cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05098843-14b4-4150-8d40-a6ad18154467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9851d6-4135-4b7b-85ca-a1d34afef40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29170a37-3077-40da-aaf0-a40fff088522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53423aaa-67f5-48f7-8e5c-790920ad9020",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd6e992-906b-4f6c-aebe-d80ebc163a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd09570-6739-45f6-af24-c1ca3f8bbe52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f979bd82-badd-43cc-bc0a-83c1272c9fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c8b1b4a-01a2-4cbe-b825-75183f8ef0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e555f60b-1963-49b9-b07a-576ccb9c3a21",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005da75a-ed45-4fc7-a68e-cd6a96ebc4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7fdbe0-f49b-4189-a0af-04a4f9bc2749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4a9360-c515-4a26-bb67-3c2519907f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ef04aa-e7bf-4756-bc2b-d19b5819f06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24285d37-3b91-4324-aec3-ea310130eb7b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b15f7c4-091c-4018-b17e-f6cbca8fd4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e790edb8-54a6-4203-a708-0489714499dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8afc753-a64c-4017-b843-34213c8648e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d29b371-269d-4f6a-bd84-4348d4bddc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4a2703-664a-4329-aa76-10ee4b8fec55",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686effcf-7b15-471f-b437-f4f9285ce6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd377a43-aec6-40ab-8dbd-d86a4cfe8e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218802a6-911e-4276-b72f-fa7a25718a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9758e0b1-3306-4be9-899a-3d3d5ae9ceab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b141e-b06a-4b90-a5c8-3a187de8b1bf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4a0daf-086f-4df6-a246-e782cf81d21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1a4dfe-d773-426f-bdc4-21f02e193f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbacbc7-64d3-44f8-9e1c-71c5d1dac57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc871d5-524d-45b4-8610-e762f3f2ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9975e6-4379-4cc8-a122-2086b9ee45fe",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d580fea8-9891-482d-98c0-7975b0a4932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d6e57c-51f1-4363-82c2-d7e13c70d526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644368da-8d4f-4ff4-bb5b-219593611e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ff91cb-19f8-4f59-8ebf-e33ec0c117e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9840dfb3-76a0-408f-ab81-ed5e2673dde9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5429bfa6-27fc-47d9-b901-bbb58bda0719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82f098f-cb5b-48b9-86cc-a6a22492e0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e45012-b784-4184-845f-15dfb5017486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6da7d4da-982e-4870-b9f0-6648cd02498e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d32b978-6f8a-4929-841a-3d2296f1959d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54797757-5800-4e2c-8967-e3d6ba63982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db29c7a8-7845-4142-8c8c-689e735b507d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400e5634-ff1b-4891-ad2a-e2af161a82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd4015f-dc1e-4a89-9f40-2844627c8e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f219de81-2edb-4c05-b415-146422fa4077",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba789a7-804d-44ed-990b-490f1797a091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b0d38b-a61b-41a4-bcdf-618f283fbee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db47d77-1836-4d4d-879a-5bf081c1a608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4607ca80-0854-4c75-b49a-86318b2cbbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626e1eb1-ee51-4862-8dab-9456c1853aa2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1936365-5ae3-4fc4-b92b-4e61ae2bb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f520c4d4-a03b-426e-ba13-178a55598dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a525af2-caae-4ead-8e40-fd97eac3e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9573e1c-7627-4bf4-a511-c7eba9c33e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfe5a1d-40c3-4401-8731-e7cd2dde48c2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b78265-e1b5-4109-b163-4c278589d367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b3e594-9458-42b9-8951-2eed90cb5d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e153c85-a747-40c6-9a51-3e598be82132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd6a08e-d22a-4c3e-ae7a-2ad72fdf21c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68a3eb2-d9ad-43de-a7c4-4ad748f0b6a9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6690c9-20a1-4157-a8cf-1f9f04d4c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bf5cc3-ba3d-415e-9774-1973694dd40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b9264-9578-49df-bc3b-4d292a8a103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7221c175-d60d-43ec-b41c-a6a348780dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b0f17f-ba28-4107-943a-105b619ea813",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5684791-0253-46a4-b1ec-2718e2e36e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082be0c7-d818-4a35-b91d-4b97b6318f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de526db-f06c-4315-8aaa-80e63b0035fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64ab9e3-8a2d-490c-96b0-16db518f962f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7819b3ab-e7b1-477a-88e3-bab4d07f8ac2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1970cc94-8653-4b24-a8d0-3344a7ccc225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f23d47-408d-4774-bf22-30e128895b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba692e40-67f3-4a29-a678-1377462c7ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "78dec46e-de54-4c3e-99df-1c4e0f4b416f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ded901-bf63-4c18-aae5-01fdd2edce59",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4d28d3-81fa-4426-b32d-9205f414bb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b452e9-93f9-422c-bd54-e5a461ce30d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73985a74-3b2f-4f98-bc84-155f6160a61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "858c6e4a-51bf-454a-9224-438641e00fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c030b055-7d6c-4384-9c73-04b612540b3f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d5fb55-82c1-4f3f-b60f-8a6441df4406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c86dba-1e7c-4e03-a0dc-48d38341c07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e654d1-4606-4141-8026-f78fdfbfa671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaf6a62-ad5c-4442-96b5-19aa618dfa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4b9d16-73c0-4378-8fd6-dcb87e301524",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edee4a6e-762a-4a5e-b5ef-73431c3fb865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369fb5a7-554b-451a-a912-3ed15761d6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468f2c9d-b5a7-4232-b45a-d2911b5e8a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "897cc4ca-dd32-4285-8b01-ecaaea8d9bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3fe913-aef1-4807-ad75-847df5371bf7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c3228-9f34-443d-bd9f-6d086940687f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e24e46d-c894-4de4-8e09-8ae456492632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202ffd76-3485-4634-90ac-647d55e3f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2921011-cdd2-442c-93a6-5671d3b65549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daefc9bc-a5c4-4715-b1f4-062fc03bc171",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32f8ba-f525-442b-a2da-ea5faabe1842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f92b4d-0191-429c-8f3a-91f255ad3cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ffbfa9-28fb-4b9a-b68a-f5f91859ad04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d24deb45-1b4b-41aa-89b5-5a086fc459b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5df16-2718-4977-a2a6-6295fe556700",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98782e51-4839-468a-8a71-420d558b1d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52a8fce4-0d40-4d73-a773-bbdd456b469a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ee4f45-ffec-4a2e-9c21-02c399d266ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5470d544-cb6c-4275-ab06-bad4c378eb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad06bf6-7282-4749-bbf7-faf10bc5e0c8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ce1e57-1e48-456c-b199-09b05bbfb594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa867e3-49da-4ec0-95d9-9837ad1da95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7f75c9-1098-428a-a390-5f7cf46a3710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8d9e6b-4265-4985-9119-fa6117bbf68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e89c0-02e3-4c28-8eee-e623fd809798",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637effdb-7708-4bb6-861f-8839879ae030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05151d2-8b63-4c3a-86ef-15a7e4d976dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee436d17-619d-4507-8d17-f80638e1f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3088655a-ef49-4cef-9a4b-8d9d0071d107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3793fd0-f472-4add-9db7-0ef960f9da0a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ddeaab-17c4-4306-9fc5-27a5449b965b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12060d61-5a7f-41b4-a884-66538f7ace8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bced5697-df8d-4107-a344-878be79109e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0f7e0e-4b28-43fc-aa3e-5aeb8ca43148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f512b8b-1ce1-4552-a803-a2b6435e10a3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e9846b-3686-4f0e-bb66-24d7dde651da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc173ac6-70ea-4f34-aef5-bd94a4ca64c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8113e4a8-6196-4a53-9f61-f2d3c7315187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01aa076-b3dc-4005-a90f-ff0e522e422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89a090a-562f-4792-b4f0-eb6bade26048",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8d43f0-3805-49bf-9442-cb321242bf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b484cbec-8ed8-4155-b28e-ccd043f30e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ade5814-e8a7-4973-a22a-c8dcebc3a33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e06e1b91-2afd-4e97-9a1d-8a4aeb15297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaa402f-28f3-4815-b80c-73e1c0799654",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc07dd5-23f3-4440-a007-5b695b1a1ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84fdf62-e6f7-481f-a190-15bfc5bbc2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e17b66-ef96-4f68-9336-596bd7d0e8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "284596ed-aa7c-4fd2-83af-ffb399d25ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfb1cdd-dabc-4de9-82cb-ea5ae4498187",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade05c4-51e8-4421-93cd-406f05a06ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8abaaac-37e8-468d-b145-46bccaa5e31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c0f65d-dce8-4d65-a697-53621aa31409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bf4d72-909e-4313-a55c-220261e338bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ccf56-31a8-4726-a0cd-514c6a446ba7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c5c856-cc99-4fbe-a848-b1669e7e16c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036336a5-4061-4554-972d-f1ed8e319ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8218a588-29ba-4648-8791-4586ec1012e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "198f1e9e-e1da-4e88-9fd7-06ec41a2c6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e8d54f-056d-4032-b9d7-52df9c97c571",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c67cda-ed36-4a5f-8955-2e5f388b7050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76df99c7-81ef-438b-aeaa-5f0dc7be44cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f273701f-c360-4d65-a932-0b0a4117eff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38181efd-8893-411c-a0c0-62a1965d27af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d818e42e-5415-47bb-bf9b-56ef0dc6bed7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21736ddb-26d6-40c8-b4ff-8e843ff080d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfa1809-fdd2-4f10-9d23-9802af16d95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef48de31-6219-404e-bfe8-2a115243d056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a680b75-86d5-483c-83c1-26802cf3a1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0e9f24-2ad5-48cc-8793-6a70989de4cd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fac3055-cb58-4ce9-8d24-b0d9b48b8b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e903847f-bd7b-4cbe-9150-3692db2deb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1548f8-3445-4bd1-824c-e441af443d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0167b432-da9a-457c-bd8a-2c0d9dc33b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc06c2c-0dc7-479d-a643-9f85869282db",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b757e38c-19f6-4350-91d3-752c530e8a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe98122-5b63-4375-a3b8-d744f91d6a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870111a5-6c35-4308-a273-b4dc56cc8ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b640ac-eaf6-4553-9fdc-aa21fee72012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fc00ef-da42-4fff-89a0-a0342a8a0f08",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f81211-6956-4d43-b21c-968fd65fb20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6d4d43-fdc8-417c-9ed0-535b030ebf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee8b75-15c2-4441-9bd9-78dd818981ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e90e2c30-c47a-4da7-9423-98c4c86cddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36710e6d-5db0-45f2-a59c-23ea7d88ee75",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1322747f-815d-4d33-a333-24fdd2ace5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025f4bd9-09f8-4dde-86d5-14542ffc9d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1fbb42-5096-4da1-abaf-8b67990005e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "595c8de4-1078-45f1-9d76-23f237984192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeff02b0-5b65-4c48-804e-eb1b77e7fc5d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95114be9-8570-466e-9332-bf28236722ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3c6ae8-403a-426a-b5ba-6c49949ebd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab81ca59-06d6-426b-af27-9fb6eccc50e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ceeed7f-68cd-46b8-b756-a217d4ac358a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a1ad39-7e82-41be-b5ab-122e90fcd19b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec252cb-390a-4860-b067-cd48b493b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c709bcc-4570-4e9f-9028-ebf58890d82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba79a41-88dd-4654-a28b-bafefcf374ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d6eb91-911d-469c-9e5a-891b0c768efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3150bc2b-a05c-4421-be3a-475f6205814a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c97fc88-e4b3-4bee-adf1-04ca93a25623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c966f4-3e1f-43e9-8354-c58e0313c5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739ec8d6-b30c-403c-82dd-94597e94f2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df827c0d-b7d2-4ec2-b6cd-ee4121e96e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d93ff5-1701-4d3c-8fe9-c16a4c6b09ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e6bbff-58ae-44a8-9e76-b9ccbbef0eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1770943-7808-4c65-94f7-ae576b8bc496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35307a99-a85a-4cb3-b1b5-66574626ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0478b07d-09cc-4bd2-8bd2-803652234336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873ce921-1dd4-407a-9905-9a61827cdcad",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7789caf9-4a71-4510-a822-887a9de97262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2737e3b-df88-4967-948d-e24634b5e7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d50d9e2-5eca-4c6c-aab5-d66aa66600e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d3c693-1727-4f7d-95e9-a233d910f58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4667641-6631-4185-8272-d19258105bdf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e781178-da2e-4ee5-8d0f-849e92755887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6504376a-ef37-411d-821e-18cb7f3161e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048168c5-4dc3-4b25-a6be-8811a3e41e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c4588b0f-0c79-4a0d-bc83-ae8adef1a2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d381e848-7af9-4156-9d94-4f8119533aa2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792388b7-1ccd-4fde-98aa-b5f25cbd3b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a992ea07-4f57-4a65-8aa3-c0e6b3216d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3358925f-54b0-4546-af53-6c0995e12ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "059cfe16-2d8c-41b5-b256-689b010fd6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd8417d-825e-4558-b692-5fc723f512a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6c91ad-b028-47e8-98a5-638bdac23264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478f264e-f4b3-41e8-8b62-17b889d4c13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0107132-c7b8-49ac-99bd-16683d6536d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d096092-462c-4d96-a541-12a63f579163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737d07a9-d797-4536-a42c-53ed6cd3a27c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf36493-6d79-4d05-9db4-bb5bd86b40c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfda9607-103b-4a13-a0e9-8dd78cad768b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445cb2bf-88cd-4b51-86ca-2c50f358e8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e5ed88-3fd5-40d7-bf9e-84b6741e48d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b07687-ff85-4d10-9117-3b91b9e438c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b91b8a-58db-4ae2-ae74-70af69a830b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400e00f6-4b6f-4936-ba94-2f0085a6c47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75454f8b-14cd-48e1-bdf0-8e140f8dd17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cb5163-103e-48e3-b110-92aec68b701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bf8770-6190-4a9d-a731-670604869dc6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113f66c9-92ad-41fc-819c-500392da14b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a431b48-2c0a-4bf8-a85e-8f3f43cdf11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bc9bb4-5a4b-48db-b1cb-95bd777baacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b147a643-a155-4471-90b6-27035d81a82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d656bab-80ee-4fa6-88e4-b47daf976a9c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd04260-13ba-48fa-9dce-f0c77aa3b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c25d04-2c72-48a6-9f01-6777d2f17b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae78d020-bcc0-48d8-9e70-75e0e49c01e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c658da-6a35-4d44-891e-2dab1fbf9f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c7010e-341a-47b5-a111-beb952119863",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1305897d-bdb6-422a-8e68-634b370c00c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7ba01a-4305-4662-9b11-3d74429145bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1722e91e-ca58-4c20-8058-e31bf389c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e546662-0362-4979-bfbf-362e774d2780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61ad2aa-c1b6-455a-805c-d9c5d9e7dbc0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738013be-08dc-43e9-a802-07dcb3000add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3232f6e7-3185-48c7-b708-13cf524f0c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0100e164-d5cc-424e-943d-ce5f4cf7e396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4963d325-8584-4da6-9e34-175818c66446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd961ae-a97f-487b-80ac-b59ee19ca58f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f2274b-041e-4578-b13a-788f1318cdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3c0e61-7a0e-41b3-83da-6643ef42b2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e23d63a-14f5-42fa-94aa-8e349c876550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd83e69a-371a-4d22-a31f-9b0e5586cb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4d4ec0-c04e-44dd-888a-3395fafa15c1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c34d6c7-f977-468d-885c-55190e2df9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d4f8e1-17f7-49a4-bb01-97664a2aeaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb4d451-9e76-48f2-87fd-f7bad4256ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1eff309-0c42-4a53-b095-0c5810b9dbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40d0674-f564-4f9e-8246-e1e058808b82",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a6f21e-d9e3-4f91-9efa-40a8c0a2c801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d5076c-9e5c-4c8b-8cfa-b91a4fb67271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16949c7-44f8-43d9-b20f-c0eec52f652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4efcdb4c-8633-4221-8b2d-11c1db28a948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb13648-8716-4cf8-842e-cdf875510458",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc8e5c6-5a2b-425c-ae36-85e09a78a81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebe5727-32fc-4105-a196-2f8a959881fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becbaece-b9da-4864-a38b-81c287bfa61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ab6f4e-45a7-4ca8-bc12-aa67f4a8716d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cdc54b-a348-437c-8cad-61f962a9d822",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794add8b-1b2d-4d57-a75e-854676a29370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0b29fc-3ffb-40a9-9693-303d2f3cfa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d305e41-7a51-4dd0-84f7-1375e7e2dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b3b058-dd13-46fa-8bef-ca22f4251fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c32e0e4-d7e3-4c32-bf9d-de9d183ef824",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fa3889-ea91-452e-a030-ed57000328c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4901e2-af6e-45ca-821a-05098cac2b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195e9f8c-1ea6-4d20-8d7f-8d1f926b6602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9f8dba-67bf-48a1-a1dd-a263331c2311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4ff86c-b5eb-42e9-ba81-3815fdf8a103",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d753abf-0c83-45ff-bccc-423506238d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c71835-7bf2-4de2-94a6-cdce9f0d7022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e58eb51-2e36-476d-bef1-dc6f7a2a0f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd5f1c7-fb70-477a-8078-de2c6a81ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9ca922-8391-401b-8f3d-d726f43d8e06",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e36327-b099-4410-9d25-af81afca3309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021e011d-8105-4aaa-b4c9-fad76676f88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb65663-f45d-42b8-a480-f5bf5d41b80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19812a65-6893-4f4a-9909-a88c66946b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a5c8ff-f1d3-46dc-bff3-3e7ad2cc4798",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6ff83-ddd6-491f-b0ac-10aaced65170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053089ae-66c5-4931-9651-75ee7961d8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daecd7b-582b-496d-a6cb-56c07f163c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3677052-5508-4855-8e64-4cac34f4b58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb537552-a539-4e75-b356-55e88ef8dd50",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc761afb-8531-4ad5-9752-f0a6c2b65d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9858a2b6-5e0d-475e-99f9-a505f4313e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4da1f1-7b99-45a1-832a-c880019e0d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1adc59e4-fb42-4a3d-84a5-4e4fa2012c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1835f11-daa9-4620-b197-eeedb99b452e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c026111-da4b-48d8-862d-e3977d84fe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153deb58-91ee-4cda-baa0-71f7eeb5c0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad95e8-a02e-4bd3-832c-466eba9717c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44c7710-77fc-4f32-ae98-6ef36821a502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a4525f-3720-49d3-9493-704f9b7f000d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1df1be-86ad-4b97-b51d-fc0d62451446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044aa36c-0b77-4bca-aa58-624780f2f7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e138043-5d90-4058-8d6b-a8b73b4f66b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e659a9-d8dc-49f0-95d2-4b3a06547e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ff96f3-1d4a-4f92-bdee-7bb04de3e275",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de11127-efde-48f2-82d0-39b49f622222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92ccacc-bd11-42ab-ae99-da7016045514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53a1840-92f4-458f-9ccc-b0a303e86f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9de9d4d-1e19-4950-be29-7d1e1574d2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e548dad-4cd6-4d74-9415-8acf3c8179c0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a8deef-a53f-43ed-999c-101b63e64c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043bb070-9b92-48a9-af49-e0cea8bc7798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6d527f-fa39-484b-abc8-615e999ea76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de5ffc2-bc50-4447-9d6f-eb2518bba431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4469e1e3-e8b4-4fee-8ac4-8d8b1218c5d8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff8c104-f44b-47e8-b1c8-d0507e308e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b36aad-1622-42bc-a07d-15e5f9713dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a722195d-9f7a-4f18-9b57-a36b747e23e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82536087-bcf2-4f1e-8f9c-3e008d8aefe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd83bdae-b150-462d-8903-c11d4e36f7d2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e564ae76-1aad-411b-ba1d-94791b05486b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e049e9ac-f45b-4580-b5ab-35cbaa4dcddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8b3b90-135e-4e19-8333-84e286ac0e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05ff2bbd-0b64-435b-a357-d2b1444b6469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f438d965-f15b-47ac-8563-d0073ccec8ce",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ca2a71-e598-4227-8fce-17bc9ef48962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbcfaec-45ba-43d5-b3c5-73d6c522bccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e59efa-0e51-4a32-b5b5-fddf544484bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb4b465-c71c-4fe1-bea7-2671340d0c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57af4f39-b605-4769-9ac8-e547b8038816",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1bf4db-b89e-495b-aae0-3d59c7aaec02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26067c2e-9de0-4e2f-8260-d57de4cf8c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfd76b6-e063-4758-846a-6e1982eabf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "656064ff-56ea-4a79-94b1-3d455da6ab02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbbd045-0aed-45a3-ad93-ec3b4a21f0e9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262392a8-afe3-44c9-bca0-23fc5c811eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbad399-18a9-49f7-a166-8d009209f7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937bf9cd-fbfd-4471-b853-eb1480141c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64209591-5e4a-4e91-8752-3f20016cb2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ea6a64-b8cc-4c49-9f00-46c0fa636789",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc4e1c-0c8f-4ed1-815f-9e99d753edf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8655d3fd-bfc8-4f42-97ed-a2787996c71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4627ce3-d3c2-43f4-8801-6f4e5d5910ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca88792b-6b1d-4e30-ad1e-604fa2dfcd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d933d687-7a4d-481e-85f0-a0d6dada47f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad9a991-b711-486e-9108-4ba016d7a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9fa275-1910-4717-addc-8cfcce64e81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94b7d7-9a2b-465f-b927-c6dff453a251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb342075-8b84-4b6f-8734-866c1db5419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70910cfd-9da7-41b6-b80b-b5ec4e43ffe6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12894e38-9197-4a1b-9c61-f34a7deefc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3160034-066b-4323-b6a8-81604df6fe97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dce2c4-86ec-48ba-a1d3-852f5460224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5ee633-e01c-4e11-aa17-cf58ff5212dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27adc699-4efc-44a1-b50e-26ec125c6bd8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6c5091-93d9-4fb5-b295-6d980d012790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d046792-6e12-472d-b86e-486d9f9538c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd603b7-48de-477c-ac75-6f2e928c93af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2977557c-d5b3-49e7-af1d-f847f5746397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca79431a-c57b-4eef-be87-d218bd314c23",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e9989b-fd0a-4ac0-ade3-a08dd59bcd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429a53b2-1c28-4f2f-85d6-fc08c9f1fef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e4f035-690f-442a-a752-6a03ae93424d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44544416-51ef-403a-b50d-8eedd7ea3299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9644586c-2e20-4ae0-b7dd-c4d9c4868f67",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8603af0-a76b-45cc-b45f-2e025f1955e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ae2119-26aa-463f-bc74-235180d1d0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd9ac9c-b0e4-4aed-9bf2-8b0ec61dec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3493812-d3f5-4773-ae7e-6d46f1f7abfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8c5013-fe54-4f2e-98b7-d0015815f08d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cd7df9-438d-4232-b2bd-f0733dcf7417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7680f33b-8c8c-4fa3-b58e-51cc22dc2957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646950fb-924f-4735-8619-991b056e8fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e883f0d6-f119-497a-a493-0888752a3efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d277ec92-9ab4-4dff-a4cd-6e231f302444",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312a6b55-c43f-49d5-a9c3-9609c233e191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40db98d3-895f-4691-98e3-80dcfe015e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8352f151-8822-42eb-bda1-a30f3a858b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "982e6d14-1767-40ec-bcca-f48a26f61179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67aa995-49a9-4d7c-a744-84728aeea827",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1016b020-17fd-48c5-a236-dd9c4c423b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a28cd0b7-6633-4af3-8505-8d5a11ddb8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185c30f5-b1f7-4c9a-8910-9c376e5f3924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "584d590b-38f0-4d4c-ad4a-8c74256c94c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4b0ba99-4beb-4b16-aa67-f30bc6ed3bb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4fc8fcf-b0aa-4527-b230-dca0c5acf1d0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8bb0d4-61e0-4161-ab8a-2f11d814186d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5328590-023a-4b18-8066-5afe62c26572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9710787-5ada-447b-a2cc-7d72354584aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea380dda-5d13-430f-950c-347023ccfd0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453e601a-2932-4605-8af3-1ebeec962f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45ce7726-923c-4c5e-8e3a-070068ee38b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8780953-6455-492e-885d-003136483350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "829f3128-3584-46b0-aa34-eddba6a526fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6f68aa6-63bf-4a1d-a5f0-0cf60f06a3db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ddd0f1c-448f-443a-b518-252db3317371"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b40ab8d7-c2fd-40db-8bf0-f1b0c58397df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6119e513-afb7-4062-91ce-8d18d718c881"
                }
              }
            ]
          },
          {
            "id": "474d6532-ca64-4268-b24f-b80cb9bad762",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51a23312-39bf-4edd-b8a1-bc0a97b26cc0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "712db91f-4ab6-4053-a06c-9f201272f76b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5956dad6-2b4d-4db6-9050-deba96726519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f9d5919-c04e-43a0-a29d-7f903d09e517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843d374c-6ffb-4900-a7d6-30ccc45168c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44363927-81d4-4b65-9900-e294d7d2a6cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b382204c-6575-4cec-9055-b0a4ea74e7fa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af528955-22dd-4eae-b47f-603e64b7e451",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72958983-0066-4728-85a7-f9643030c561"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01554219-a386-436a-8560-60d77480a66c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b8cdbc2-e4c9-44b1-bf3a-5a655eca4b0d"
                    }
                  }
                ]
              },
              {
                "id": "75b3dcb9-bc93-4068-9cf3-d25fd2b23266",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a17de20d-7481-4047-b90f-4ff4bda9d899",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dda1469d-715b-4a06-b2d9-2aefafc5d28e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cda558c-86fa-43d3-a255-dd1d8b64a117",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21339ee0-06c5-4144-bd1a-24a08d41062e"
                    }
                  }
                ]
              },
              {
                "id": "e3f24a22-77aa-4f09-969c-cdcb071eeb32",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "523ef22f-3bc3-4062-b747-79a8b597ab9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b015ed5-7f88-4ceb-ba3b-ccbd808c3f13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7026992e-ec51-4b03-84b9-c8f0eeb105f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f02876c-b85e-4cb6-9635-ecd5d5d7c9e7"
                    }
                  }
                ]
              },
              {
                "id": "b9b00852-79ab-4d6c-9e74-2755342c3842",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d699d32f-4a25-4a51-895d-4880888ad307",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a45381a-1ddf-4b10-a351-ed40b010843e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20585c2c-1783-4c38-9f67-b15408b44f2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6520326b-426e-4cd1-8eae-981945db23da"
                    }
                  }
                ]
              },
              {
                "id": "90f082f5-cabb-4cc7-8ad9-c89986b1c44d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdba58e2-d948-4acc-b173-bc4f71db370c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5320391c-4392-4b1d-9812-b07f92837ca7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df6e4bd-7580-40b8-88cd-6a90c77228f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dcccf4e3-344e-4b17-9bc3-7fc49fbda53f"
                    }
                  }
                ]
              },
              {
                "id": "c25293bb-831f-4028-8b00-0865b23c0c07",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "600f7e7f-4899-4ad6-bb6a-f0da66489ddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8aa2567-fbe6-48ae-b403-18aa1e6419d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c422d47-b31c-4e37-be70-39feeb0ffb67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "befed7bb-b920-4fcf-95b9-b78427dbd013"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7e1e486-ddef-4b2c-892a-ad7337255cea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26f9f052-ece1-481f-9d5a-bbcf5d8da4b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ba94726-06ed-4054-bfe6-70958fb19d21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0b5af6a-7b97-4415-b04f-0668343df921"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "270d8926-b64b-4bf9-bc32-2a3716bde7ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cb60d4fd-ccd3-4c02-8279-861242ddaeb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7decb46-c5b7-49e0-b5a1-c2cf5ee7f7ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3617c81-c32c-4312-9b66-3929f3bd5964"
            }
          }
        ]
      },
      {
        "id": "e7f38e98-f613-4a13-9ec8-f7697bf92b2b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "098c3411-8b0d-40a7-bdcf-20fa249e4c39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d423d92-dc69-4145-9d75-24546e2122a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15902783-e8a6-48b9-ba16-486f3572cee3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd77db29-074d-44e3-b981-e7bf57e2824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1c7a04-9303-4804-8112-13d030351dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc0cbbc-14ff-4890-a9bf-ed4e04eb131a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "19225138-3d12-4913-a4f1-3db6ce071cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e8f0a8-7c24-47cc-843a-13bda0aef69b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdafa10-099b-4486-972b-46d59511a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bf45b0-0fbe-44b5-b3b2-fe78d92a791f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45c0e5c-bf5e-4b4d-8c24-2e7dbb91a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bff52e6-b01f-4f64-9cce-ff217a331419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21aa2d5-9e8b-4b75-8aa4-daedd13a980c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ed4970-93a1-4821-bd7c-4b3f5df0b9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8184fb7c-f356-414b-8724-23bde4818b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ba68ed-0efc-47e7-943a-bde533354b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae7f996-2ced-40bd-8c0d-1e31c7d42264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3653ff5-7bd5-4c4f-b827-5192123eddcc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757a1f93-14ce-4630-b7e9-07bc66083f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12287c5-a2b8-4e43-ba1f-fd9f37db1269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa6b97a-e070-499b-b7b5-c642188833e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "683895c7-7e7c-4446-965b-cc0e519766e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcad975-2c51-4566-b34c-a9d683174c2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c98e4a-aec2-4378-bf2b-fd4447b6d810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18b2104-f9d4-4c8c-a065-cdd3b55bc85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d912c69a-b24f-4321-b1fb-d354a8a5a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b6ea6b-19c2-4891-bc4a-dfe16372e52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2f545e-6948-484b-bbd4-6834fdfb722a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9748082f-703a-42c2-a62c-7613ed35c5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d211f9-3334-4c17-b017-67732960cb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0f95a3-752e-45a6-a117-befc7b268138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53058c23-ab3a-45a1-9a7e-ee015a99dbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2780e049-a2a3-4f1b-8990-8641b0d69c35",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c49e68-3f46-49e9-8ebd-b4ddadf89a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee680e4-8738-45f2-959c-d427b34497df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b29f777-a7d5-4bae-bc14-c8c89544d6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b72ff8-eb09-4367-9df6-8a73611396d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dda5eeb-bdfd-4764-a96d-fe902b2774d4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc933934-b237-4f4a-9c08-8008d43042ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202bebe1-6eee-4827-aafc-924359e60ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64696ecf-8454-489b-b326-7b2dc3083966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8decd32d-5595-4658-bdb3-4831468a4362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540c1832-759e-40f5-bf94-d1c32a940308",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1eba9c-ca20-4a66-9d31-9bfb32a6f75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79ed464-7dd7-4d30-9af5-82b1fe791c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5079d4-29e7-4b0b-89d1-fd7bc96b2c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fba1e5-b911-4e5c-9d3c-8c7bb3e35a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93973d78-baea-4b38-861d-90c1d75fc20d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f694cd-6795-4f01-b007-2e12e79604a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ea3f29-0077-474b-9037-cfee1f1e390b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4c552c-6009-476f-a793-7a37f2469888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde2c3fb-ef3a-4d33-8634-650fb65307e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23d9b1a-f2a6-448a-a70a-470e9ce556c8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d9c760-75d5-4d56-9f38-4914c5f09bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf81d9f-08c9-4079-909e-6aa25236ce79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176c1ad8-ed4a-46b2-b37e-f44ab3b42226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b410bed3-8ea6-42fb-b7c2-8bbda86b1a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3cf86d-d5d1-4766-84f4-59720feccd62",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acb6677-7229-46b7-ba36-3cc75d676e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6205a9-0c24-4aab-adcd-2ae22b911670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d53760-3e1c-4450-85f8-57b3ef259f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d523529b-71ca-40db-a32c-3156fefeaec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893c294b-aaf8-415e-ba30-488796fa47c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed2dff-ee0b-49e7-929a-84709377b495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21369bf1-9104-499c-95c7-af04081d9f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c743ab-11f6-44ef-9761-6c1c65bfb8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33405d99-8c81-4f46-8315-fb529a7da457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4e2123-336c-4782-bc5e-2c68aa485452",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f990d1b-dfaf-429a-9dc1-404d5471dc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b267d59-08b4-4b4b-afd9-a6ba5e0ec330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e10e0f-40cc-44d2-b67f-08a51ec56033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3213e12-ea49-43df-9cc3-6fd08ab5054e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c1d0f3-2196-45ec-a1b0-98028def9b09",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67038c9e-f016-4e09-ac51-124f6d224d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdde9aa-6592-4752-ab0f-148ae7137219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb4259e-f4ee-410b-b224-2a995b89c532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "320adc57-9124-4dbf-9fa9-46205b73af0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63002e63-499a-4c28-855c-24cf7af131b2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8d1e45-edbb-4a62-9813-3d556f46ffbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5266553c-ac6f-49ea-9873-f1fa56d15c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad46a37-e5cb-4378-b0b3-1366bc455591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fc3d38-f8c6-4958-8cd7-24b1250e79ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c46593-b831-4bdc-8b01-a2da25827079",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04618d60-a742-4c7c-875f-a31df7ef3321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091d7190-917b-4066-a216-7e5830f94a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd77482-998e-4cd3-ab77-5a71d3263766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "927970f8-40a9-4a23-bef9-0cbb39af90a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6f726d-8d80-4463-9423-adc4af26a17d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56133a7-3a62-4d0a-afba-8c413d02421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c4e2a3-4320-4634-8b7a-68d3cc0829b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c100429-bd3b-40b3-9d41-81fc45a02c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b44ce81-b002-4da0-950c-e18b801c9b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef560e6-446e-4000-ac1e-f0639f0d57f1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d559f23-0d2e-469d-ace5-b9e9f6c80214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521957cb-7370-4d75-8889-9f82b8e979f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807ca284-4ce2-4e20-b02e-82d6b6c78e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13ace54-da1f-4044-b080-8d601e32a7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bf80b8-158a-43eb-8750-cd15d626f895",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7b45fc-cae5-4a35-bdcd-00ebea10bdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f8a87f-438e-48a2-9331-8d23f68c3de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab42495-518f-4fa1-a83f-414b8719cf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "790561d9-94e7-4ec6-9acb-f361bace57d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6940c408-02f7-4d50-8dab-f962c409fff3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7cb368-dce0-4eed-8d23-973792991952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5425f13-ab7f-4aa5-907e-65cbdc2c2678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2514c97-b68a-4f64-a546-0f9f88893cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d387502-ba51-457a-a203-e3fa5b97e5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608a7def-0131-4444-ac6d-3c1d5d6f0313",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37586cf0-be85-4db9-b173-0a8819128719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9feec01-ad52-48a5-b751-3b7e4b513084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7821c960-8694-4ceb-8897-5c0d0621ca38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27331afa-9955-4ece-970e-c8831695fee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db43f53-86f0-4f63-90b4-aadbd0656366",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c48444-e1cb-4608-8a3c-bf6e6878081f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880fe522-2078-4a85-bac1-85bda800f01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb62da3-e80c-49c2-b0ae-a5fbf0c16044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e33801f-41b1-47bc-891c-61bcf955590c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0824d2ab-839a-43bd-b53e-08183935c981",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b768e9c-0fed-46e3-83b3-bcb5b604193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed812d7d-060b-42de-b001-facc53039def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f950a7ba-7c22-4460-8158-f1fb322aa340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7bb6de-1273-4684-88df-9fda690fb38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6dfb71-4529-4a81-ba28-2e6985216da5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c0837c-28de-4968-a2e9-2f39a8bd0d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b512e60-4ccb-404d-ae92-56a0e7419f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2a37dd-7b9e-42af-887a-8375c033f31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1dcbeb-47bf-4126-9a7b-b8353bbaf680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da73330c-dcc0-4714-980d-d1f102a9e959",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a8fb1e-8280-4dbc-aae6-2d0ddca06b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2788c6f3-96cf-46b2-9d60-26c9fee3de1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeb5607-5060-4e96-baee-2826b567094f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a824e96-8fc4-404e-8f4d-6f0dd8bdc1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67809e45-ecdc-4157-a8be-39635f01a56d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3e97e3-1559-4aab-8784-93f31e12ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed63324-5aca-4b3e-bd48-158898434e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be3e28e-db8a-4f53-a0ea-ded9d97aef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "013905f6-2e7b-45af-af38-adf320b3ee0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719f6f91-a088-4c2b-8d32-3b17928b9b6d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4c96b-76d7-41c9-94ea-2c12761f0c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1605c018-4295-4340-a9e9-71bbb9cfcb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3860a77d-316f-49fc-9ba6-0493ba0ead7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6d7e26-d995-4190-ace2-a375ea2d2a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0eb931-e9cb-4c54-8e68-36b91f4b0895",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570f7b6-159c-4124-802b-8c298377405b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e7205d-fa5b-45e8-856c-81e844fcfa9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd7d11d-412b-4872-9379-22d78eeed448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da033b90-bc0c-4c6c-b92a-edb0f1ecf1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba0b14a-58fd-47b8-8430-305eab9954aa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78dc7b8-74a7-475c-bb32-8e602fcf2070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9987d799-2cd2-413b-815e-f25adf25df64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be48a75-84fd-483d-b9fe-a833354499d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5307257e-19ee-41a2-97a5-97ef5675abba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15affbf-df0c-4ad1-9f94-8cbd4dc739de",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10ff88e-eac6-4ff3-a77e-640832063802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c83b3d-e3e8-4749-acfe-d1870592fade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb3cce3-9e16-4691-91b3-af452c115f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f4c078-1758-41ff-934e-3481b036cc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4d61aa-450a-42fc-af44-72df420e0dca",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30183ff-5387-4f4e-b8a8-ea70eba90887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704e461a-28bf-4ee2-a189-32940df53370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32439d71-0ce5-4bb0-bf27-4534e7966b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ce5163-62d0-41d0-84c7-245574e36ba2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20fa6787-915a-4436-b328-b725faec35a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50f48482-fff0-422d-838c-1cd29cf2939b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d13fab-26f1-486b-9d95-9021a2bbf4b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb50895-065c-43a2-910a-5833f2a10bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "badecff8-0d01-42f3-8c8e-bd9af8cee34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fa3cf01-c808-4b9b-a444-74ce34e83267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "272dcfb1-07ef-406e-b713-431a78d6fab4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e14be2bb-60b3-47e7-91b3-8ec6e4c2d57b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3b3a9b-fe2c-4d63-8c11-6a4204cf8b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3bc5d1e-c983-4ac4-848a-2c8b2979d506"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a828930-c064-4d4c-824b-c8610b4fc627",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ef28d2e-8374-44ec-b5dc-f4a8b01612fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a28e4b4-a7e6-473a-9c8e-ab7c498350ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61bbe569-3050-4dea-8a6b-7a7f0350cbb5"
            }
          }
        ]
      },
      {
        "id": "86312c88-226f-4d35-83b6-28c22e91f4c2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "547fd348-0b54-4eb0-b53f-62bc2b6e5a13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f146c83-16f0-470d-ae33-142f6beb919f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b5d2569-9fc6-4360-b66d-405583c2c8f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a83d668-838a-48c7-b2b9-5b18c16579e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f1d369-ab69-4821-919b-2b282f176e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef70da79-bcb8-4b4c-996c-534d46ab0d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5beec3ac-0a24-43de-90a9-9c6213312817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab699fd-fbb7-4594-a2e8-3ea36a5202b3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9209a26-5352-4025-a6e4-77da72b0e638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b418d3f-3749-4b00-be77-a3b0558ce7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd942f0-11bf-4795-84d8-15817e1c5c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06e5f47-87b0-444a-8bfd-c7e284fc0035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc34741-f7b5-489d-8ae5-cacb7d5423e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b333b477-9595-4a83-9ea4-ec52f0942f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a6b617-10da-4b47-a823-1f2f2fd74f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c0f766-2b68-439b-ae33-d1b08613449f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3efafccc-d0a4-49c6-832a-5542b0b76491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb72300-dbf2-4fc6-81bd-1851158767b2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74939d2-8454-41f5-b519-8fcbfebc17e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559a44c5-788a-43ca-b93e-00ae5c944933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da65860-6f14-4336-b3e8-a5fb66518551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ef50ba-a8d9-4e32-8e76-e8faefb79564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cc82c3-fda0-4214-b2f5-17a391b3849b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c970fcc-050e-4ed4-9878-198a86d5338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac059efd-a040-4662-abb2-c24cb51f5dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60effbaa-8bc4-44b6-81d1-90e026835a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4d73c4-56f2-4db4-b04f-6f612f6894b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1399e797-781e-4f3f-a5e3-168e73422e6f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65355d7b-798d-4f32-b9de-775a9cc872ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bbb055-7e9e-45cc-8239-3efe23554751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3388f-4be6-4a88-9bdc-18463403dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "061584d1-e733-4159-a696-70ad835cc4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2b5ca6-4085-4b73-92fa-150f1a2ded03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0752ac7b-3a91-432f-a138-6188ce98d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4269d2-9488-4f83-b575-cae08c563974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e602d4-8eab-48cb-a0f9-61be9203baa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "891e8658-1f6f-4068-b238-0d06e1e13e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877019a5-8ee6-4370-8bbb-59f45af1c9c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b2f8b3-232d-4e69-9708-fa192826b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3ba987-eca0-4eff-8223-fba1c56db77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbca2b4-1e5f-467f-8271-f92e235abde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc600bd8-3b75-4572-af8f-fa9722587260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b7cc54-8b60-4e09-9033-4b0eb3a29356",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81603d9-7b5e-4e3f-a608-005e666f872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df20c5f2-0f23-4909-af37-25a12d82d196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256c2f81-6183-4d04-bb45-7a7a3a3ef11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "962939cb-1073-46e1-a748-e756e5b14f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc6ef47-53b9-4928-8a51-8329dbba785d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3cf62b-b891-4f5e-8cda-7b1841226ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80e340b-c721-4b46-b427-817f8fedf4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b198cd-ae67-49ec-be56-ef2ca0c8029a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55994e0-ba7c-4016-a4d1-d4a21f91f9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac4ab02-acfe-4196-a5a9-329329ca455c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b24fb-856b-4cf4-8e3d-96807d6e37bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa9931b-358c-480e-ba6e-64e86e2b6f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd3bbe1-2f56-4156-bc8a-fca5e8053776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5918b0d4-13a7-49f9-a218-a6b9b184de5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cb120b-1592-4178-9b23-43487f7ef57e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c055be-3091-4151-a405-06f4143a519f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e497043-f60f-460d-970d-69540c375552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc483e6-afe0-4d6f-9221-a62f38d04597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cff412bb-c635-40b5-9308-39a70bac5a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e2df40-6996-47f2-bdf9-7df703edd069",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41aefdf2-fb16-4a92-b552-e482de6b2091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26591c6c-af37-4b16-ba03-04f8f2e742ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9eff39-00f0-474c-91e3-22d7e4e35ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86896c61-10ff-4a17-afda-d7bc4ececb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa509843-8258-4714-a9bb-b389a65aba95",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f04a44c-ecb3-4cc4-99ad-257a67693ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23af349e-e362-4e74-9be6-66c0a10b0508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3267bcee-bfcf-4806-9311-8ffda8aab03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c771d655-f16b-48fe-b55e-f51625949566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb685b3-8cb7-4836-8e09-1f45fde1f254",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e018c7a9-933a-4e1b-bf42-34f132829317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4022d007-38f1-4ea6-a7e0-f6747f77be40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f81b633-99e9-48a8-a908-4e6701faf323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "314ea622-d643-4f31-93e3-c40dfe987b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ebbe8a-faa4-4424-a136-c9ae49245257",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dec278-05ba-40b6-9b32-680a09ad188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0572430-0b7b-4ce8-bcbc-a8e56ce6ebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40275878-8752-41de-8cf4-92da17ff68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b55aea0-66ec-489c-ba96-44b596ec3b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb91f94-b3df-4ee2-beca-c6e5021a5526",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f8f497-39e6-45c8-96f3-0875736acb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4f225e-06c0-4912-bab3-6a19a246ce6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3cc18c-ee6e-4b84-9f71-a729ffa3699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b30dc6-06f9-4711-9d2b-f52306d52925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af369076-1405-4a5b-973e-f384d7362f0b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd010e6d-524a-4ead-a836-bd9272b4e173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402f3062-50dd-468a-80e1-6fa73f676cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34ec013-9a21-4cae-a09a-44d2c79c65e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ab3e93-1c74-44e1-9f1b-3c5ed6be7637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb9cbeb-8ef9-4562-a776-7bbc5003a29b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55586ac-6882-4465-9c42-5291a9a1c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ce7de7-e183-4f76-b76a-85652f2464f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd12db39-c9c7-4caa-83da-c0cdd9189df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c926dd-2998-4a93-b0cd-471feb412db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9f058a-e4b0-4ac1-9720-a529ff62bd65",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0304368-7bf6-4905-8aec-61f7fc819180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729dd469-114b-464f-b947-e1508731a48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f777a4-dfae-4e36-9727-d05de7d40143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2665548f-b830-4fe7-a1cc-202c3dc7294b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d01c9f-c216-4f55-9d93-d6163335befb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23ad886-56ae-4890-9cad-e561fe7204b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8f2fd7-67a2-4565-b3ba-aa76de18eac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103bcbc1-6710-488f-b8b4-d2c9d56cff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836025a6-55b3-4436-b7b8-cdd25e4ea33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7052c7f-4162-4698-8c7f-74ea475c5dd3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e594ade-9475-444e-8202-de09c3f75e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a75b176-74df-4368-b591-eb4cf9b78206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b5b588-834c-4531-88e0-087c6b745391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42938e30-4bdf-4b2b-8d20-6d0ea575cea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2168b576-ca23-452c-9efd-a9731b6a7ef6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f1f97e-d093-4e54-a511-a9cf4520dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2687d0c-eb07-4c66-942b-828e0fe340e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9559f167-a405-466d-90ce-2fd87aa460ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1426ae-09bb-4a21-83c3-68008d2b6200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe92d615-4b05-4d5d-b833-65f5be433e09",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5902d23a-4a0e-40a3-b0cb-0daee4fa78fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7608e158-2db9-4ebd-90ab-9e91a25632a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7c750e-fa84-41c9-8dd8-c32d64cb0b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d93244d3-b343-4bfe-bb46-d97adadae721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aeeb20a-8ea2-405e-a988-af1075a900fd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2182dfd-dc27-43c7-aefc-7abd0b890a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6174b066-85f6-402e-884a-3e7c02858572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb2fe14-a4eb-42b1-87ed-59c48e74836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b68d422-a613-4e0a-969c-4c6fe4b3f61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09fce3c-46cf-4042-8890-da4ba7189d6d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eed5f53-0996-45b3-b01d-80e5a9ec870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71a0e0f-2584-4f91-a047-6288d7b322c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f98541f-a5c7-4878-97f6-febc05a01969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "805d017f-42a5-4ca5-8bfb-3757793e8517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97dff88-ba68-447d-afdc-44e648bc8031",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ff984a-489b-4e1c-aad0-e3bddf8951f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b948031-34ec-4d7b-b6ef-91e676149fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64ee522-e394-47e1-8aaf-79d10c194ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e342203-0708-423c-9243-a471518b031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d8ebda-fe60-434e-ac53-4de50d4bf039",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7768c602-2e0b-490f-9d5e-b003f3fc82d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d563318d-8d82-42a7-bbf9-ebebb42187a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502c68a1-9ba3-42fd-86e5-fac42b5a6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f87af727-d8c7-4ced-a85a-0c5179067157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c59148b-e9a0-45e3-8f9b-be1c33f060d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9b3361-742a-414a-8e00-a899fa573a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cef1aa5-3018-45a9-bf00-1affaa150823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff517ff-b356-48bc-95d3-aa18c6a10d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41ea42c7-79b3-4db5-8a7b-7ab8fa5849bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7267280c-3d86-4532-a5c0-d1982879037c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc8ad32-3d53-4644-b885-b91a182732f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115fcc37-421f-4d11-8347-3b620fe40feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717556e-996f-4fc3-9c8d-dd135ae1b925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5063b3c-953e-4faa-8a2c-8e78b77c5180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6291f3f0-5fb7-41bc-b0af-e0b35780588c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d82bc3-80c1-4682-80c9-cc5354f74981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5cde51-017b-4e56-930c-7364b7cacef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da46120-6d14-4907-90b8-2dc3c9b17191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd2247c-8e57-49a0-9bdf-4d354d678148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f664e8-5e22-401e-bc30-cc2edb194325",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb3d760-faf8-47b4-8be9-83aad13bccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53931104-c4ba-4183-bd0c-ef0122cecf96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e56ce3-16b9-4fba-bc82-aacb85d8c7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c8a910-6712-4dd5-9dcc-dccbc7e3769b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b5f79-156d-4915-bdb0-bdf934269095",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec687037-7f10-4790-8321-eec023d1dddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f57ac7-b5d9-4955-a020-0c1cbbde507e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1526a229-0fe0-4ada-acdc-29ac698a77f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d7dd35-3be5-4101-a934-84248d87b22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56f3923-2ec8-452f-b71e-b6e5071a811f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52745f33-9c22-4ebe-8644-fefdb21a3750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10a629f-3247-417c-8b0b-9219b1a938be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17667b0b-550a-4725-910a-e1103cb34043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f801285-55c2-4fb2-99b1-2c467b958f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b090aa-d64b-4b0a-9bd6-f851ca3d3c2d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61b85a6-3a3c-46bf-8dfc-68d8cbbf7b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b042628-e9c1-4716-88df-b580d2038b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1257d06e-bb47-427f-b96f-e20123c99d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbe485f-025c-4475-bd71-1605235c28bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b752284-f55e-4970-8dee-09e72c717a78",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c552f3df-0843-4618-a43c-3d97cc937ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1c2aea-10a6-4bbd-8184-95a25c164a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0bed80-783b-4d7c-8e8d-03f6b2361049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "794f0e04-26b9-4491-9b4a-de0f7b126c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744a5f44-a6b8-46bb-959b-e00d11ab4ebc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86253238-0741-4381-a009-55147562fef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0158c509-0a04-4905-91d0-d37f0c0760e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6659761-04c4-4f64-98c0-15dc6bd1ada6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8726cf-cd4b-4f2c-aeef-b7d2ab9a931b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "607ae2a8-26d7-4ade-b8ee-1f4ca7b3d251",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "567abebf-bdc0-4117-8778-03cf4324e212",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d465b047-c724-494f-9c97-7e63d27efb70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2c93d7-a2db-417f-914b-578404de1b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217040c5-dd4a-4170-b1d1-ca4be58384f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "828fd038-c019-49ce-a8fa-058a07cbbc76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b96e07cd-fff2-4a8d-9cbc-e423129108b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e11a6e55-3e1a-4710-8532-a7619ca001d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e45edc8-df4b-4b77-91ee-45257175e493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "068f9abf-0f71-4993-947d-ab9d562d0097"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7c585a6-fc7a-4b87-8abd-3e6ac8040d4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80a16eb3-3b8c-427b-8026-82e87a00fefa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16e27045-410f-47aa-ac41-cdafd4828c08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1f9778c-336a-4c42-824d-58e636968ff1"
            }
          }
        ]
      },
      {
        "id": "af83427c-818a-43b6-8625-f0e02a4704ab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "91f3ca5b-8f06-45e1-a98c-9e4eb5e53a1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1d26364-befe-417b-8042-3273cd81ddd7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0bcc8f5-1901-44ff-b3d5-d27933aa6127",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072fba3e-2dc0-4193-8857-b391d17f403c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3b3077-89f9-4625-a70c-39e67b3e05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9e0138-61cf-44b3-85c7-1917327eba2c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2d3788-dffd-4cc8-a2bc-bdc21982682d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd06fd45-fc77-4e56-a581-7847712a2b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2127828-f7d6-4cd5-ac77-67f345a056cb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4466b445-e2a3-4895-a2a5-dedfe8404ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2546408-7e7b-468a-aa5d-9a2d9d92b5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecab00ea-419a-431e-882b-48d592605c83",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62e11f4-19ae-4b69-86fe-b6fdc4df3253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e209620b-1548-4df1-9c74-a1425324c44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8d6083-c8fa-447f-a8ae-292cdb86d145",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d147462-410e-4705-93a2-7f39638829ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13dc691-17e1-42cf-9efd-2cf5ec20c9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986a5dbc-3f7f-49c1-9d9d-e10dbcc2aa69",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f96d346-7ce3-411f-8c5b-ac182cd8fdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed58b229-994d-4f74-b507-073c285266bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12133ead-d571-41c4-9be4-1a24fbec1e49",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d067ae-91d2-4dbc-95d8-5f79401bd5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a63bb6-179a-460b-80ac-5aeb927a71d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32ea790-a10b-4805-910d-fbcf71b3b56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffbcddb-44ee-460c-9790-cf1231d92bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909e5e46-d8b6-4d05-8007-5ba4ff39076a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e41928-682e-4e73-a0d4-a26b34bcba8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0082e7-fecd-433a-803b-8695362844e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e171b6-e2d2-4472-b584-c50b45c9f64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e2e2bf-acde-4662-a7c8-d7e142810869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776ec4d5-f451-4f2c-bdc9-356955f5255e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46403ae-e2ff-4476-b9e8-912716f75e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777a5411-5cd7-4e4a-a972-845f896ac831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974da37b-eead-4c94-a065-bc8b22601aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a288a09-d615-4c4e-a302-502c3988a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1decb3-5c9c-4ee6-93b9-81d113747948",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e4b024-82ae-4706-8579-eae1075db26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8a47c9-4c24-493d-ab04-5b17e8e395b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6870d2-962b-4517-b85b-93969cf35ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc4f80d-d639-4031-aece-198e6bd098ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2702fa-9197-48de-8ab0-cb9cb343c8eb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74649286-1995-4817-bd9f-8b5c037cb7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b1d588-fdab-4ae3-b703-e34ca9b93bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ee67a2-ba7e-4306-983b-99aa24c0650f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c01d234-f1d1-46d6-8f4f-fccd9dcea8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c287bb-12d9-4eb0-bc95-e184369ffb31",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9f2114-cb4c-4b85-bbf1-5e78ee1835ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4799f5c1-73ad-4da9-8094-0e63aecbfed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7524ef16-d01f-494c-bf9a-36588530473a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6588aa6-d305-4000-ab4f-299c1b9c6223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353e9f89-96d6-4a0f-a34a-1ac9346c8be3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f644327-64b8-4721-80f1-f905e7f3941b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9e2f2c-5959-4d44-8adb-67b324ab8226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d17004-a227-4eae-8bd6-7a9595fdcc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1841a73a-87f5-42a8-baa3-4a094cae458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc70e2b-5d9c-479a-85e3-08808c2fd94f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebaa48b-346c-41a3-93f8-9b45ba1f036e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd0a680e-1ee6-4d3d-9cc9-804ede3044cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412b99db-1128-494b-a7f6-6f4fd7a288fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f416508-e4de-4da6-b540-f04173a1e6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a298b7e-acc5-40ce-b322-f14259bc9879",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee88559-dc7c-4613-aa89-77266bbb5ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036e8426-09cc-408d-b3a4-4bd8ea4ebde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5e1472-7d1f-43ee-a4e0-b4a57fdeadfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b0f2c5-a380-46cf-9c1e-8fed16e90851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00c2b1e-7442-4dd3-b769-5df4af904915",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf60a6f-0d9e-4792-bfe2-cf85eaf27c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7630b645-e3fe-4975-a0c2-c5bbb83c0f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c78a0cf-9677-42cf-84c0-bdf10693cbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0233d5ee-e566-47c6-bf86-b6c0414ce0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b609e3c7-0501-45d6-b9e3-5570be062505",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcc1cf0-43c1-4f5a-a3a7-4bfdd6a10125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ad6afe-ca6b-452a-a907-459cec2921e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cccdae2-08b5-479e-a47c-a5356e9418e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c30e79b-cbc8-4e47-9c22-79c555f91b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7399050-7bc5-4e17-89ba-74b1c613863f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ae3306-8934-4bc1-aecf-c00f04473b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155ae208-92fc-495c-a38a-8011c04c7d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25aea00-5fbd-4ee0-961b-2e0514e2c4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad03297-4f0b-47e0-9828-12b6a673aa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290dbaf7-30b4-4867-8760-a557136958b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae2485a-dcdf-4f96-82b8-e1be277e8865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1348f4-95a7-4f3e-8a43-865a9011cf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462c6872-e739-49d4-be1e-960870dd1be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcec4a48-0fd9-421e-94cc-07e6d233e60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3894ed-980a-4d2d-bb6a-b9889e419110",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca0039f-e9d8-4b20-9341-69b06b0e8f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb66d12e-b8e3-481c-be10-3210ff2d610d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df786d6-1742-4d47-b6aa-105ce73d05a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2471e1fa-983b-464e-81b9-d9584e665208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9087b35-aacd-4213-8bf3-cc0c1cc44ed4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dbf27d-9245-48a6-bba3-8f5186268079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7f1b7e-e992-4164-ac48-afe0c06363af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558f5c01-ec84-49d4-8d6e-5cca81d1b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099a3252-c887-49be-b9a9-a5d1178b9e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65935506-fafb-47c1-bd78-87c7bb4635e6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c3b19d-3be0-4da0-a8a3-a2f0ccfea237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac3f059-28ca-47b5-9162-8cdb62162dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e54919-179e-4dc2-8b27-3dfa550c27f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb45533b-60e6-44ab-b023-1e8335d7b7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4c9578-f69e-4d11-853c-fbe7bcb9b4cf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa74f6d-9559-4e2b-8570-f15f64f3ff29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9a09fa-89ab-454d-9db3-a62ccf3591fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dfb694-c3b5-410f-9e1c-12a4cf73a746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72de44a6-6f86-4bb7-9a4f-d12e42ec9f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380dfd19-a335-46a0-8c53-2444914978ab",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9dad85-785c-47c7-b6c8-3e61114a01e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b598e6c-b570-479e-a001-2a4173682bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63a030a-2479-4edc-bfff-1a320de4cec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4858b0-145e-4803-930a-e3297d4869ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e179ab3e-581e-462b-a449-ac44333c77f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e37c069-e90d-4480-aec9-b930538b6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0558aff-74de-4107-853e-5836f8a32f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b43a4ac-a20d-4e3b-bf0b-7e2ee7a15766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac81a8da-58f4-45cb-b531-68777d237c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c41a93-52a8-41ce-9038-2e595a659e4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f57154-0586-4563-9628-021a965bfa1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b06e64-b34c-4340-b275-60226eb49ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41baf39f-605f-4302-8a0e-810629d22df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4ee131-69b3-4cdb-aca4-a70a5fd869f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db50088-192a-4eb6-800a-b59448c1f411",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ab1f8b-0a46-492c-9308-304a70aae85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2234cc2-7bf8-4b25-8e92-6077ff29216d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eac9d6c-700a-44b8-9955-5d8820f8c549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b1d33c-6ed4-4f79-a587-3070be614f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4b8669-9065-4042-b010-c6bc4ff4abde",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0584d846-826a-48f7-84a2-08126dab658c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3020f045-194f-42ff-b0e6-060eb8a6db2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7617d8-1e6f-4a2d-8e2b-d241de2f0fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86792d1f-2ce0-4714-afb2-634b65fa3530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafe66aa-f678-4b6a-af01-608d1fc8a083",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec427e9-0b8e-481d-9b4d-870b1a888924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da19c70a-d1c6-4efa-8c7c-d7b9dac59797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed46adb-c97a-487a-9570-a9302be199c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd15c4e7-f454-44d9-aeb2-cd62f327281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce154826-557d-46e2-9a0c-43be88b735ce",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b328a5d-3394-449d-8ad4-a4c2a91f1bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3760da-86ed-42dc-82be-92eac3e0b78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0ea557-54d0-43e5-aa74-94a13f730f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c90b36e-e670-48dd-bf0a-fe3f2fcec338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045b0885-f9c6-4cfb-b7f7-471eae0ee40c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6ef0ea-9431-43ee-9388-cc7b0c81e9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "511d4094-df37-4ccd-83f5-48b20714adce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770a3262-571d-4775-9e0c-8bf626e7fc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bee27b-456a-40fa-a7e6-3818c0eeae95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8504bd51-24f3-40b7-9f11-23248c719029",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe7b76-fdda-4645-976e-926dff433fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b178bc62-ff5f-4c71-b538-57e3bbd1606e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb5ce4c-c410-4e07-9ea4-3fe2d05105f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6040ab-24ab-44cc-8544-f1245cf6c6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398a66dc-2d81-4fe2-9ff7-173fbdc986b2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f3b50e-b06a-43f4-8105-cb560012b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311aceaa-689d-446f-a8d6-e2029f3e3b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da502ff-e875-4b56-b4f3-749631f755a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6289709-3a3c-4dc8-b88d-53e0ff9ed955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33665328-b151-4f83-91ed-2b3821ce34c7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486f8b70-c957-47d3-b2d9-b40feebeabf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258f9750-e42a-4f9f-b72d-291eb650b075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec03679-e8be-4fe5-8351-ef5024401e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8fae88-944d-4e0a-8987-4023de6a2a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720ecb4a-4b6c-4b53-a10c-a3940f319043",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080ddb95-5e99-417c-965d-5858d556b8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b17b46-eccf-4f35-b5ae-9dc27a7ecdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5477a3c2-45dc-4cb1-a746-d2620b0edb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225c4194-4dcd-4fc2-b543-10ca606756ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96e571-84c5-4f50-8379-cb9c1ddca028",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e34358-f502-4f0e-8b3f-4f7d429b8639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2475fb03-f3cd-48de-a0ae-dd38c59a5e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37cc5c9-698f-405e-92f8-3be81363d890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d853b7a3-9602-4f91-abfb-c247bd94ca15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330a2ab8-c49f-45da-863a-ee328d6bcbc0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c473ba3-86b9-4cf1-979c-8ec1f1413218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2417c1-ef3d-412b-a6fe-fc420dc68e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86761e8c-6842-456c-b097-c5d285b8e7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bac0f79-35ad-4b28-8b53-d77dd347673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afda041a-3e60-411e-95ef-0cc91b92ff72",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c392e9c9-857a-43ee-9feb-85f5d7c0ff93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c13f616-3b36-4f26-9e21-77c79021655f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d6858-ef69-4652-b672-adf94483f709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bf7dc5-52de-4f63-8f0e-433a9102cbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5337bd1-1a87-4d88-90cc-b8e805270d76",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbaf55a-4c3a-4292-81b8-4129e87f47e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7b2cd4-70b8-402d-8dfc-ae6f1ecff679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bd77e2-9ffd-446b-a326-558a0d1f2d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1867da-5c36-4fe1-abf4-9e7020b8e38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c03c24-ffca-4675-82e6-2fea433e4a90",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c539b209-3b72-480f-a255-b6d340e3c694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee138f7f-b4cd-4353-a98f-7d6fc9ebd885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6111eafc-9644-4127-8b46-000cc94a9622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7184a308-45a2-4d8b-9d82-a36fc72356d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6e1b39-fd63-411e-a77b-8b91ad7259c7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5d3762-6b92-4cc1-a59f-4cac544056f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84057e7d-5780-4f98-85f5-dbd8200daf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e75cc2-0d6e-4cc4-9d8e-61d2ced6733b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bc1573-5dbd-483e-ae57-5f2dbf90d5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21188adb-a2e0-49d5-9e74-a24e7f9e5e38",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d8eaa8-a1dc-4f14-b028-27b1eee895f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28e04da-fc50-49e5-8aa0-caa1f15bd0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc2239f-8087-484b-8b75-1b7089c1d0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f66ac6-c941-4d79-84cf-6c0d3a1ec603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03db0679-a646-42e1-8a02-cafca301dcd7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3e665f-44f5-4a8a-b13b-fc4dfa317531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0bf9ab-1bb8-44f0-a69a-6b532d874a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcb0115-7283-4f02-b1f4-897ea3262e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c71e24a-7739-4fac-80d9-8389efb593a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced841ac-9507-44f0-9b04-e8b6a86dee98",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26e0bd5-8d44-4809-bd6a-308f9fd2e97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328ec71d-6ccb-4302-bad8-fdd960a71c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49efe5e4-1852-49f7-9c40-5615b7a380c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28dfecf-8a92-4e79-bb71-baf101eaf52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e28cc3-b4ca-4b57-823d-90f9a3826f0a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a786ed6b-2b6e-487a-9b7f-687721dc58b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c07d587-f652-488c-84b8-9b109eab2ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f130c592-7808-4b28-877d-6e21b7dde6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e45913d-0ad7-45a6-a22a-898ff7f64fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66a1840-1f6a-41cd-9076-c918685ba2f7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd636a1-ef2e-42f5-866d-a0f8575cd318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fa7409-98d9-4433-98ac-3772bc265d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d97bc-2eb3-4beb-8dbf-5e38b4a84a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf944a91-53a8-4fef-9474-09c8dc2cfeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8a8de9-3e87-49dc-b279-65eea0c4cc39",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0cc645-4f3d-4f3b-b6da-776efb77f378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7bf703-481d-4135-89e8-fe16bb7d74e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccef0c8-6fb5-43df-86ec-b04cfce1ce78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4219d32-cfa0-41b3-89ff-54315961a212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceef6de-556e-4747-bdef-e8c45211809a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17fc46-e5af-492b-94cc-20ad6ca8d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe912f9-83d3-4da3-aac0-a68ff919fac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36238c6e-f197-4a2a-94ac-94b41c74cf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb2dc9f-3ec6-4b94-993a-98e0ea404a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f5cccf-9d29-4217-bf87-ec15d95c69b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6accb3-4acf-4425-8f5f-939c474cc5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aecb434-b30e-41f8-baba-1b755f40a44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36516eaf-21be-4a3c-b617-91ae4d17a8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62ca43c-aa94-4e5a-979f-575b36314425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30638f60-e99a-41f5-848c-559a069074f0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824925a9-e212-4d6b-bee9-e9d6a4721871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e955f6b-844f-44b7-a22d-a70431a5a99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40c17f3-a0a9-4724-9397-4b2d29753ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22ac8ec-c9e8-4543-8297-d242eb9adc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa9a4d-8c44-41c1-bee4-c3ce17db99cd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9792f6e2-4ee6-4f01-87b7-41ff3f156952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91683603-4e07-47b6-9118-a560b578c0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b6445a-366a-4e66-bfa5-02d5a1ab6758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b55d061-12b2-443f-94e9-7ff55ca0ad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69946fd4-3e5a-4835-a981-5f7a78ca33b4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d712f87-6960-46a4-8f51-c4818b46f67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532d5c2e-80e8-40ea-a97e-f2e1dbc14e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eb2064-cb74-4386-8621-5834a7d5db58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b03ac3-6905-4177-9bf6-821ea7fa40b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c6e696-5b82-4773-b7db-77389e3f1d4e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b20dbb9-84f6-445b-b625-c7df8e8b2431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8219c5-d024-4fa3-8411-39f57118e4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9d5745-5b0b-4276-b376-34de4ecbca7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1655dcd1-13aa-4683-8a32-496717c099b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6b190d-df96-40fb-8e9a-f02b54db44c1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c72403-55f1-42ce-a9e7-c8409e937435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0a4909-8ab4-4a63-ae52-65ac2d6d0bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932d1390-1523-4dc5-9c85-a68a896ad277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b2e795-a241-405d-91ab-b2743a5ac816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edd89e3-c231-4dff-b416-95645d1873de",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcee46cb-fd74-40ba-8e88-6ee0695e2009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705907ea-6a66-4112-abfd-75c736145a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23b2f62-a4c3-4ca7-aef7-b7385106b6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6238166-6f9f-43e3-ab6c-82c4e58bc47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb019b8a-6445-44cb-abc9-25f4e6bc42cf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3acc058-0e54-401d-af2a-b199bebdf448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d512990c-24fe-407b-be7b-9fa8c7d97189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3c26d-1745-492a-980c-e662c9decdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7267000e-e001-491e-8cf3-46d61ebb0cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7edfcca-90fd-4371-8517-23e0d513a6c6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19836977-3695-4f7b-aa78-8fd0502455f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc41a88-ca1c-474c-8604-54cb7ce7f40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9bf582-94dd-423f-9d8b-f8dbc5aa50bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59251d31-9434-4190-b1ce-b02475bacc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15175322-0f19-462e-a83b-19d15136145d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaea330-8f39-4701-a4d5-3c9ab654526c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f8b4e6-9831-4d63-8253-5d8cb7c36562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbc4e6f-35f5-490f-ba4b-a94a462cdfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cbbe2f-2ae3-46c0-a8fb-1fb4367171f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508e6c19-6120-4cfe-8d4b-64d218e2bff1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7176840a-e6e1-40ae-8a4c-6a4d8b9d2807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc79bbce-9d92-4edd-89b1-bf289d3beca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63235b3-b571-43e8-be42-2f83022f0e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd112c7a-98cb-4564-a642-c0acf1b400e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46e5572-26f7-4d76-93da-b16dc65b14c6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4492ba86-de8e-4b65-a41f-6a05ecc0e50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bec37e-de4e-402c-ba28-5672500368bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b216dac-9051-4480-830c-21fd5e9b2eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bc9b35-5e0b-4f2f-8fcc-ff34d278bc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c9b050-9391-45f8-9759-633772a5ccbb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe15073a-5e06-4485-b2b8-a1481951f874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9e1eb5-5bc4-4e6e-82aa-a7b90a488d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cee0364-ccfa-449f-8094-b0ac62b99b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db653e8b-fbaf-49b2-a6ff-67f7f3605ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d3282-be64-40d2-bce5-4357c3509fb0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bb7496-64a0-4c11-a926-7a41578c3165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7ba885-1f49-442d-9e08-1922c5ec9763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f1f33-4dbc-4db1-8bca-33a3303cf79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bf4470-78c7-41e6-86e8-dd95ab0cc8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c82e1c-3cca-4437-adb3-ca4f4146d8af",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdb2e5e-8af3-49fe-a384-6939d97009df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f0ae33-75ab-4599-99f8-ddda5d1b6dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3a3efc-71f8-4aed-99da-c148965e0070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de40ffb-c2a9-49b2-bbc9-67dc735f0996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb947219-3ef1-4269-b836-b508f8e9fa46",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a3b084-a817-4a71-9e51-14d98f958424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5652bdf4-d119-4ae6-9730-35a9da204d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a4dec1-13b0-4813-9098-85f065052885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea19f4c1-be57-402f-9a2b-eacb416a5520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78369aff-7406-47d1-9d15-28c08eddba2c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c568672-d711-46f7-bba6-b6d4ad473e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd6676d-6b41-46ca-9fb3-bb221e7f9ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac91789-aa14-4507-b162-3897d8e6c5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb71c1e-3b5a-49cf-a141-142541cf45b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca694535-2204-4fcb-98b8-a918f7660b4b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abe65aa-8201-4a79-b078-f9c91015df92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7ecd2e-6d2c-4de4-8a2e-969a665ef7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a48406-0606-4e17-ad91-90368ba4c90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad53e8ed-98a6-4c91-bdc2-8f7e0e77e4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d482fc7f-dc7f-4e20-bee0-3183e8053d09",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe037b8-9808-4401-9f7b-1c046362e996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63bedef1-fd26-4ef9-b642-117943f0f949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7feecada-6df8-4de6-8331-860a77a60856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ec3b52-2112-4171-b4d5-f2dab01b0ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df2f65a-8808-43ce-b3ed-a746444b2464",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4e9743-130d-4673-8e9a-a864e234e910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139d6c65-a9a1-433d-82fe-fa36ca63706d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffd0c1b-84e8-4733-8b7d-50443264628e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766773e7-0717-4537-a0ef-32e4ec4f64b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987778bf-c5ef-41d8-b4f5-000df2fc9ee5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9933a2b1-6e67-4e94-adbb-0095a69a5b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7f6979-9f4f-4dc2-bf66-fe523554ca4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87dcdf2-93bb-409a-aa15-18d34ee08077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e4fcc6-86c2-4e43-86b1-d7e7e648a2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe9d191-468b-4e68-91e3-3b5692df57b9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede70d83-8598-4e8a-b648-39d7e787ebc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200a614e-efe6-419a-874b-6b901bd3f3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef436f2c-5f3c-4ee9-aa3c-5316c922ccd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fde5eb-a9c0-4496-a37c-9401a38b9072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b197d8-120b-424b-9be9-b2f22f446d11",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a706e20-7666-407a-bcee-55987bb5dbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d8a74e-8ef1-4ee6-8403-65f31d916009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c8a51-f387-4c56-9371-4aaead6cc51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9deb289-b2e3-4a05-aeaf-8d2425cb6293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18140be6-33e0-4e33-a90d-4aa7f6521927",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e710f66e-f59d-40b5-a5f7-0b3aa954b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f66069-97dc-4a8f-8ff5-37adcad05aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dfcdb3-039c-4be6-a67e-50f3e303f380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b11d4b-3e55-4a39-8531-603c10fcf21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89581e9e-d9c3-43a6-89e5-59b99607b01a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d3dc5-293b-4132-8eef-ec9369dca9bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadd2d15-60aa-4aed-84b8-c97a722aae67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d89065-9615-4408-abc3-1ece0f012315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd528a5-5be8-489d-b92c-8a6cc9fc5b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa1638-c3e3-4f72-a9cf-36dcdf9ba479",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7ab64e-c8f0-4bae-b67c-b3944b16ed69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b8fe83-3764-47e7-a69e-fcd666d9a227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33c7f4d-6e0f-4500-9c78-ca01afaab8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2bf387-ae26-4fb7-8d52-66536b96c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af37372-4c0d-4add-8fe8-9c9f9a99be03",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c55bc6-2ce3-432d-a3c2-42e3563bfeda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2229d486-8b81-454e-b6cb-52d619172541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca2e1a-3f80-4dc4-b748-16d2078eacf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f35cb9-7832-443d-a919-98e18c918c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86bb0a9-369a-45cb-b9fc-646fc1b84981",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949f70e0-2d8d-44b6-93fc-6537dcc2ba42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed0e12b-7739-40ba-96c1-2eccc65f66e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e098939-8694-43ac-aa5d-12f442fdfc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54728833-0639-46f9-8af4-ec299c275efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b434d3-5eac-4aee-8295-0f00a68937e2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0ccd45-2c38-49f6-825d-c5d6996081cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ffc006-3ba3-4aa0-91df-dc3e781c2f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f4ffe7-9b7d-4c1e-8994-44fd16e15e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ef4ae4-d510-4e7f-9827-71bbf080cd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2750b041-a53e-4d30-b6ee-1ae8de3c82cb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6fb24d-8b72-45fa-900e-f220aafa4597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38d410d-8213-4c15-9a2f-b61b5c9e44fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44b831c-94d1-4148-ba99-0fcb8da21683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89692f92-46bb-4d24-a792-64f3aeab57a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8a2f18-fbac-46a3-a968-70259b2f8b2b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e23b03a-942a-4ac4-87f0-69c5333378ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc8f3c4-e32a-4fd4-ab7c-6b7a5deb631a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cecb75f-ae87-432f-ba1a-c55711277ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e94d78d-8382-4637-9cbf-a59a0e80cccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e33701-a07a-44fc-811b-59fc833b1b8d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b966df3b-5a31-4549-9f4f-940f7a9a9b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220c72bb-0ee8-417f-ab2f-63b9f8c9b0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c018584-1142-4a96-9d0b-dfe7625f1208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b278eafd-d169-4d93-afac-74ec2f9d2c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd705b1f-8563-4856-b703-f49ebecdb449",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd9d23a-aee3-4eda-9892-99ed5a9f5ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c468d7b-fa38-48cd-88ed-49c1826543b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f6d15c-79de-4e40-a113-4a11eafbc9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794faee4-df65-4c7a-b672-6b1026465c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768a8bac-b52d-4cf0-a6b4-e8216d5312bf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b31f07-2849-49f8-8169-9babba135f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6316bb-4b81-40e4-8be4-9348c3753ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4443dc-abe8-4aa6-9e83-38550cc75fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4150d7-9609-4455-aaaf-4222b7fe545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be02ed91-69ab-47e5-b1b8-ad847dad5f47",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bc1876-1a38-429e-b743-b3f8fb444fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d0889e-ab2b-46f9-9d08-2132106789c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c9a5a1-0842-417a-9e2b-2e5af458a38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ea9b71-b77f-44cf-8e9b-aaaad4fd595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910f7f3d-198a-4752-ab83-a17e601fa901",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f2e126-2c6c-4796-9b93-dd393540f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e163bb91-fba2-4ac1-9d35-f981d5d4160e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb10a69-8ae8-4ecd-bc0e-f2e585899976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64b8396-a71f-4535-b9a5-5f760488e70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81242551-03ca-4ae6-86cd-321e70a3378b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebee62b0-8f0e-4d12-9b05-0d8dc1838b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e520eda0-72c0-4f78-8f63-ae4f22428e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5497b6b6-7af3-4d7c-b39d-d888f3d8c017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf92f7e-1042-403f-b4c5-fbe647f25640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51ecd5c-bef7-4530-999a-7324335da0c5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e16d3b-759b-4c61-92f3-34e64fc36d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e4e8b1-8ad2-406c-97fa-c0eca2869cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5df3b5d-af92-432b-8a0c-44a3c6637c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd944c4-8d5a-4954-9400-175286338daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eee8b7-194b-452f-8112-5dcfd39f9b78",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdd5baf-9434-44cf-a540-77f3c0cdeba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aedc02d-f204-4bfa-b657-d5b78d7426e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648870ab-6e5c-49b8-87f3-1363f61369e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d85e61a-86af-409e-a02a-523519c16fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dbd4cc-73c4-405a-94ee-139e9fc07178",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79c01bf-979a-4474-a6cf-ff6e2e2c0ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da09865-874f-4167-9284-1d43a940ad67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f200e6f-d55e-42c7-afe6-410eb6ca4ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8879b8e8-c909-45a4-a17a-36252849d7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ee3f25-e3d4-48f9-b4f9-1e3d092949a7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671dcdcf-a516-4f13-9e49-5dae1f5988e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21877d87-07c9-410d-b522-02f5b26d47ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df3db1-590c-473d-9b0c-28e251469d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08350bea-e15a-449c-b209-0c2711da4c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db3f53-99f2-4213-baab-e9144a0c0208",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db644ff5-777f-4353-b60d-2dcd783e17eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3e15a5-ba7f-4a2d-87be-712d636afc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a40d41-eb43-4f4a-a837-9853f0a13665",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01907725-ca06-4c12-a58a-e04f0884cf86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d248e1e9-4528-45e3-886e-c360a607f139",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c09115-5ae5-4862-9410-cf39a7c813d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112c127b-7a82-4a2e-b108-024f9bf71a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e46e12-fce6-4418-9809-20c11dda93b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9f21e8-a406-488a-92c0-4bfe502f8f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6a20f4-faf1-421d-bc78-8f27a7224474",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409539c-5630-426e-b3ea-68f87c7d9bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c3caf96-48a2-4ee7-92d7-c58021a0e29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812cc940-aaa0-4f3c-ae15-4918eaeea119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8075d691-64f5-4587-9308-b5994fb7f294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f29695-d485-451d-85fa-2315f7bf5c6b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721cd7bf-0cfd-4046-8e78-e327e7899ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf19abc-b319-4244-81ef-29d4f2e836a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0b7347-53a7-46cb-907b-be6763da5eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba26b2e-28e6-4388-8bbd-e3e987d0054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf003f3-7b8b-427e-9d26-95619c141e8d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8e0243-d088-44ab-a7e0-9dd9208dac2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ccf14de-2637-432e-96ae-9a5d02156cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c675497-ae33-4cfd-9693-f877616d8fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6218dd9-b258-4494-b67f-fe83e4b1eb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44b0123-bbef-42ce-b2b0-d9db0ea3cc91",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268cf309-6a92-4406-9ff4-0b505b03c95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677e90f5-a9d5-4ee3-bb88-4f80b671ac8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991abedb-8ef9-4b7c-a399-4e474ca74069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7ee186-0777-4faa-b34c-affb89bae01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6e041d-4534-4dec-815a-5cbfe44442fb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd32a725-f986-4817-92bf-8a6dc19eb188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0539bcd-e1ac-46b5-9375-a908e2b5e5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d0574f-5e47-4fb7-bd22-8490f304b8bc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708e7636-74fc-45ef-8a2f-7756770d6982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb261eae-04ce-47fa-ab6c-e1a2f9ff70f2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d7e097-c925-4305-9392-0478fb0a81ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be00d852-69b2-4ffe-b601-a115708fc145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b25f769-9cf9-4d2d-ae52-ce3c4292bfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae11dc6-ebb0-4ed1-b22a-d67201d7c3e8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da0aaa6c-6c6f-48b9-b034-3078b4cb649b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7edb5eb-6cc5-4586-9227-c24829ad80e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16e7baf8-774f-44e8-9e21-5c03f6ac9c0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "241d5043-d405-4b83-afbe-df232358baf0"
                    }
                  }
                ]
              },
              {
                "id": "ce4ffeb3-e932-4a2e-abe8-e8090342946c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6a18750-1fac-45f3-ba57-3d88e0510dde",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840a137e-2ca5-40a7-b60d-62ada7077cc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a95fbc88-4c72-4842-b230-398c9de75bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092fd4a2-d1e0-4c00-bbce-95a572e76ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d891481-467f-4d28-9d42-b07c9f4724df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "085d2bbd-8e02-4ac6-a4fc-519c2cfc6925",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4af6481b-ff5f-4e84-96ae-ba3cae6ec489"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2113a64-e8aa-4e7b-a752-0d9babcf834c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a7d86a7-2648-4061-a4ba-a8a346c09c83"
                    }
                  }
                ]
              },
              {
                "id": "53f38225-774b-4dce-8db9-c76671d8d119",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "423aa4ac-3664-42a0-b8aa-a3eac8849ce7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d5238-8bdc-4b16-8084-c482aea5af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6916771a-3390-4e9b-9c4b-cb0527f79143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b3473c-3051-4b8c-8e38-75f1c70c2008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee6f1aa-bdf3-4125-a3f7-d892874ec911"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10aa2f55-e8c4-4f47-8281-e9d3ea874f9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ae18ab0-9f46-4cd9-8a86-9948546d3f71",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5fa12b5-780b-4a4a-ad5b-2d7d005c21dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f2ae7a6-b7f3-4297-8a64-f5aeac3f6830"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a940f825-a966-4c8d-ae86-f42633343681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81134fa9-5e8c-4371-a0a5-f1505c0c6f06"
                    }
                  }
                ]
              },
              {
                "id": "98b8f6c1-72e6-4de8-ac43-b0efe5a8009e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7ee986a-9c98-462e-a336-6355cdec8cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "79829db9-5fc5-4321-8fab-5a22b418a8a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3876d68c-d1ea-4f03-98d5-6b7465c6ace6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92fd7d71-f1cc-4fdd-a9a5-a452c4fac05f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fde3d91e-fc3b-40b2-b219-40f47df4dd37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88ceeb7f-2865-418c-b6b7-f29d9fe84858"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31d24bbd-5be0-4a2f-be8b-833fd3ad7cb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9be81998-6a82-429f-af36-d849c70a1881"
            }
          }
        ]
      },
      {
        "id": "66201689-fddd-45e3-bbeb-9fb3ccd0d816",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d2793382-195f-47b1-99c2-e664e80eef4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebed2369-e622-40e4-abdc-904e10ce91d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39d841bc-14ce-4734-b95f-dd34aac9878b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686c00c5-75c2-45f0-aa5d-1c623d4c9838",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9aaba91b-945c-4242-97b7-f544b94779e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70984c-4981-40eb-a7a3-ef70b75d55ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dff7b5c5-ebeb-4af0-b9c2-3eea670d6a72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e111d047-0e44-44fa-bc9f-5c329d31b2bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6c2344-e92f-4484-b46a-0fd5aee96308"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b88224b5-e643-423b-86c5-e858e349ed9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39cb450d-1a50-4bd8-9d31-85a5972f24f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b91ea93-ddce-4bf2-b583-98204313d2b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "edc5ed53-e6c2-4bc9-acb9-0181104335a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8b4170c-6946-4e3e-b22d-e2d7548a94ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e522687-46b9-40d3-99f9-8a06ea73d5c0"
            }
          }
        ]
      },
      {
        "id": "a54b7cd3-b160-46dd-93a8-9ffd8a1051ed",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ea984b9d-baef-4d9d-98d4-7ae583b61529",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21a5ff7a-ea05-48fb-b828-323bc62043bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06f12a8f-1834-44ad-8b60-149fc381950c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aff32a6-fa07-4118-a6e0-f77b52bd0f86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6310331c-cdfd-4372-bf5e-1765602d2897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a75b27f-43cd-4e70-9c1d-164436171ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59a2edce-8048-4a10-8de3-759054b0755c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2ca7e87-3b35-4662-b264-bcc624259136",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4425374-f7f4-4bd9-b7fa-ba8f48e8d1dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cfcadad-a14b-47e8-bdb2-ea09151a99e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c61f47e-164b-4c8f-9435-daabc54d7371"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9ddb150-9d72-4ad9-8208-6a0873cf1ac5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9faf0e0f-b310-45c7-b498-b3535e194ecf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6912e504-c6d3-4d7f-a411-07fae1612300",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcea4231-a4a6-4720-bf51-b5d1a3542c9f"
            }
          }
        ]
      },
      {
        "id": "6e88e94c-e16e-496a-8478-1e663ba199ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6ae39296-3afb-426c-99ac-d10233740680",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aca36eca-eadc-44cb-a647-4daa5f2bc5ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccc89e52-0821-44a1-bd93-34f55e5f82f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a500914d-78e3-4cac-84ca-86b04577e23e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8d2af2d-f9ff-4af5-b31f-b4a6ebcf876a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531fdac0-20c3-43ca-bc5c-836efe12aa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f95746a9-835a-45aa-b755-b994e8bc126f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36a99fa-6d79-4507-b040-baf9a23b33c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac10b3f7-bc2e-4184-88c8-b69f9e4d19a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0052438-adc3-429c-9024-63506a20e839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6120330-b30f-4f07-b787-eb7a1608cc2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f71aa9c7-907d-4207-a611-39dc0745f2f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2806ad09-1bc5-4f30-bbc7-40e883306348"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7e31293-0ada-4be8-8df6-86d15e680ba0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "194e1731-5f7d-4525-85ca-cdfc1d4fed02"
            }
          }
        ]
      },
      {
        "id": "7f1c9107-0e65-425a-87fb-910eaa4c1c40",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3de6efbb-6528-45e7-b6e3-c4683ac2e939",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42093930-1ec2-4956-8a7a-2da44876260d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4d558bc7-cd5d-409b-a40f-c31668fa01f8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe3bc55-2ad0-49ba-a519-2bb8e954b9cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c54e781-673d-4baf-93a7-26a1ed9a198e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 242.73333333333312,
      "responseMin": 19,
      "responseMax": 8999,
      "responseSd": 1115.8761481507227,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699230918958,
      "completed": 1699231004739
    },
    "executions": [
      {
        "id": "8a585b61-8d59-45ef-88e0-b859bcb424eb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "da6b561f-bcd9-4c1a-ac48-00f919e87482",
          "httpRequestId": "4dd6678f-9cb4-4a46-9f63-e2515a7f7e02"
        },
        "item": {
          "id": "8a585b61-8d59-45ef-88e0-b859bcb424eb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8bc5ecaa-4bb2-43ca-98c5-a8204f405a5d",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "6eeed5d4-7e73-48e3-8eeb-a39f883d3a97",
        "cursor": {
          "ref": "707ad31e-1c85-48f5-a019-1bf8ed7132ad",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6b57dd8d-759f-430f-bb2a-27f7eabd0bc2"
        },
        "item": {
          "id": "6eeed5d4-7e73-48e3-8eeb-a39f883d3a97",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2e38c386-d482-47c1-b8ee-c8678874bc9e",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "05b48095-e47c-4836-8d70-8e0629d5f844",
        "cursor": {
          "ref": "a5bd9435-1ecb-4f50-8576-a11182433838",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "900c98a2-95e5-4118-804a-f3a6d5e1c61a"
        },
        "item": {
          "id": "05b48095-e47c-4836-8d70-8e0629d5f844",
          "name": "did_json"
        },
        "response": {
          "id": "1f491a08-afe8-407f-8d3d-e02e9870df1c",
          "status": "OK",
          "code": 200,
          "responseTime": 1715,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4c3062-ca43-4897-9c0d-dd63c84b893d",
        "cursor": {
          "ref": "11966692-d030-48c2-a994-50a888bda6db",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c6ce4fe-3bbb-4456-8455-67f1e175f6e8"
        },
        "item": {
          "id": "6a4c3062-ca43-4897-9c0d-dd63c84b893d",
          "name": "did:invalid"
        },
        "response": {
          "id": "72dca41a-dcac-45c4-b724-9b276158bd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4c3062-ca43-4897-9c0d-dd63c84b893d",
        "cursor": {
          "ref": "11966692-d030-48c2-a994-50a888bda6db",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c6ce4fe-3bbb-4456-8455-67f1e175f6e8"
        },
        "item": {
          "id": "6a4c3062-ca43-4897-9c0d-dd63c84b893d",
          "name": "did:invalid"
        },
        "response": {
          "id": "72dca41a-dcac-45c4-b724-9b276158bd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd043dd-457e-4df3-8fb7-f5b75ff5b718",
        "cursor": {
          "ref": "39a4ea2e-b149-4b35-9060-54b65a6a58b6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5e6bcf61-73db-4c27-bc9c-fb1ce17fc3f2"
        },
        "item": {
          "id": "edd043dd-457e-4df3-8fb7-f5b75ff5b718",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "345b8e70-ba12-459e-b274-b802d0463d89",
          "status": "Not Found",
          "code": 404,
          "responseTime": 167,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39dea9f-c516-439f-962d-2d9bf4f92714",
        "cursor": {
          "ref": "7e9a5f49-3fd1-4811-aad3-10b31420e556",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9af9d595-1b9c-4935-b3bd-13594297b638"
        },
        "item": {
          "id": "f39dea9f-c516-439f-962d-2d9bf4f92714",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4c951821-4b2f-438b-b84b-2947999c1216",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce873f12-6b4f-4ad6-9783-55d757f0233d",
        "cursor": {
          "ref": "cf04a1ce-cc9d-49a3-bda7-eea386b2d747",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3494ec7f-2775-45c7-9f30-2178140e556c"
        },
        "item": {
          "id": "ce873f12-6b4f-4ad6-9783-55d757f0233d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "18670a63-a22b-4828-b5d6-93dc01a79552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984bd284-85e6-4685-91e0-64cc1dd8803b",
        "cursor": {
          "ref": "677be242-b894-4917-a20d-b7bb8d394b05",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c19f733a-37e4-4653-b409-670ff38e3820"
        },
        "item": {
          "id": "984bd284-85e6-4685-91e0-64cc1dd8803b",
          "name": "identifiers"
        },
        "response": {
          "id": "26ab1fd0-5b04-4ee2-849b-75add9066d55",
          "status": "OK",
          "code": 200,
          "responseTime": 1302,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e717d56c-b2fa-4530-941d-b36eac8de80b",
        "cursor": {
          "ref": "089acdaf-29e0-4e67-b61b-5df338132077",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4095a5d9-092c-47cf-bce0-02483b8a335e"
        },
        "item": {
          "id": "e717d56c-b2fa-4530-941d-b36eac8de80b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "949687e5-7e39-4aa9-9d7c-26c79c09f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dd2591-ec75-4ecc-9d44-26aafe53efbe",
        "cursor": {
          "ref": "f82be187-3b0c-4d97-bc95-95a7108b5205",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e4e4042-5c25-416d-8b24-6a05003dbf73"
        },
        "item": {
          "id": "70dd2591-ec75-4ecc-9d44-26aafe53efbe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "faff9e11-eeb3-4f91-adf3-dc0691692049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9919a66f-6772-418d-b7a1-6ef260892027",
        "cursor": {
          "ref": "90b26900-835b-499b-ae75-2be026e7e0ed",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "596caab2-7cbd-42d7-a76b-8505b607519c"
        },
        "item": {
          "id": "9919a66f-6772-418d-b7a1-6ef260892027",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c3f6749a-d951-44e6-be18-1b5265a93380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbad7cc-c53c-453d-a9c1-654935971882",
        "cursor": {
          "ref": "841b75f4-29df-4923-a90d-1ceb0029a43c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d2eaf97-9c05-4361-9ecd-4fffe866c8e8"
        },
        "item": {
          "id": "dbbad7cc-c53c-453d-a9c1-654935971882",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3accd6fa-c8bc-4daa-8290-174a4761203d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d96d7-7640-48f1-84a3-b9724d48098e",
        "cursor": {
          "ref": "8fa56d6f-9456-4270-a559-54a0fbd179d5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7de3e48a-a919-4d7b-8ec2-8ad7a75b5759"
        },
        "item": {
          "id": "bd4d96d7-7640-48f1-84a3-b9724d48098e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1a2d38ac-1744-4076-a90e-fd34b79aaa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a8734e-564c-42e1-8945-635056ab11ef",
        "cursor": {
          "ref": "a2b19876-33ab-4632-bc2f-27584245346f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5aa47ca6-d07b-4064-882e-ac9ff94ff39b"
        },
        "item": {
          "id": "48a8734e-564c-42e1-8945-635056ab11ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "abcafa41-b030-4664-84e0-6c97d125f527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a08b1a6-9807-42f2-a54e-bb0d08be57c2",
        "cursor": {
          "ref": "e56c2614-826b-4932-a733-14e108f172a2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5c837d6d-6737-4ded-908d-9b7e75368911"
        },
        "item": {
          "id": "8a08b1a6-9807-42f2-a54e-bb0d08be57c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d6875231-6c07-4e0e-a09d-491758f7533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46d477b-f177-4c4c-bf03-6cc392726ee9",
        "cursor": {
          "ref": "39babb82-b898-45e1-b4c3-13454ca85983",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "16ce9d41-475a-488f-89cc-56f3370d6e22"
        },
        "item": {
          "id": "a46d477b-f177-4c4c-bf03-6cc392726ee9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ab709d62-a8da-447f-84f0-dabc128908c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0252dd-952b-4295-9572-a8ea85fa1f90",
        "cursor": {
          "ref": "8ae8b336-4ad3-4162-89c8-a22c47a8b7a7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "32feaea8-fd98-47a4-a617-9eb6968d70d9"
        },
        "item": {
          "id": "5f0252dd-952b-4295-9572-a8ea85fa1f90",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc9c3156-fc4a-41f1-a62f-4d06503ea8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5ca43e-7470-4c75-8265-468467ad5415",
        "cursor": {
          "ref": "9f8abae8-a106-41f6-b5c3-37374b63176d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "96d387db-7d9a-49af-bb50-322af8ee16f5"
        },
        "item": {
          "id": "bf5ca43e-7470-4c75-8265-468467ad5415",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e715a024-0d75-4d53-924b-dcd2554c8a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09aa8f69-55fe-470a-b038-a7c61f243431",
        "cursor": {
          "ref": "e9b6caef-fc5c-4ebd-b787-29d03daf46c1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "60b87298-56b9-4647-871b-150ddeb54615"
        },
        "item": {
          "id": "09aa8f69-55fe-470a-b038-a7c61f243431",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "336cd647-8dfb-4b60-a742-e890083d2ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0700dbc9-4b62-4a7d-a6f1-8b65727c0be0",
        "cursor": {
          "ref": "5405cc50-4f3f-4bdb-b920-72093e7d77ca",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e6419768-37ce-4958-9ecb-4413e4b2ef9a"
        },
        "item": {
          "id": "0700dbc9-4b62-4a7d-a6f1-8b65727c0be0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "879cff2b-84d1-40e7-8e4c-f651234d86d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7203ce8e-5902-45e9-822a-b99e79a1b4ec",
        "cursor": {
          "ref": "83f893c1-0647-44c4-b099-c75c5e1cd42d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c96075de-74bf-4049-8c0a-598fba00b449"
        },
        "item": {
          "id": "7203ce8e-5902-45e9-822a-b99e79a1b4ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "62414bef-8773-49a2-99fd-af8ac829b2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a18a613-bc2a-4961-bec8-1fcb410c2239",
        "cursor": {
          "ref": "1da49266-11a2-44d3-b8b9-96230bee21ad",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "78df2793-8c03-460a-8327-77553200bc20"
        },
        "item": {
          "id": "4a18a613-bc2a-4961-bec8-1fcb410c2239",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e76ad724-4879-40ac-bd81-efe42a0be25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82570510-9e47-43c7-b5fc-39da09622120",
        "cursor": {
          "ref": "19cd7019-b759-4fc3-84a1-4dc4f1dd7441",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "137a91a3-f892-4f60-b501-4de2db350262"
        },
        "item": {
          "id": "82570510-9e47-43c7-b5fc-39da09622120",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "284aa3c6-bf37-45cb-9e61-d9859df2d9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87421cb0-fee9-46e5-aca7-3ea591ab2748",
        "cursor": {
          "ref": "74facb71-781d-46f1-a76f-3b4b4af3ca86",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "296317b4-b86b-4749-b7c9-701e40e1da49"
        },
        "item": {
          "id": "87421cb0-fee9-46e5-aca7-3ea591ab2748",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0ddff547-f915-43af-9ba3-3c254ff21711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53423aaa-67f5-48f7-8e5c-790920ad9020",
        "cursor": {
          "ref": "9d734a58-80cb-4f1e-9261-ad34698bced5",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e6fbed6c-bc6c-4f5c-8138-3c9db23b0ac8"
        },
        "item": {
          "id": "53423aaa-67f5-48f7-8e5c-790920ad9020",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2cc80056-884d-4dba-9a9d-3c92351f7ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e555f60b-1963-49b9-b07a-576ccb9c3a21",
        "cursor": {
          "ref": "3d731531-3b71-45ce-a0d7-bdf9e57c4752",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b010525c-723a-486d-8f01-f64a13bf2114"
        },
        "item": {
          "id": "e555f60b-1963-49b9-b07a-576ccb9c3a21",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f23af69d-0e2f-4584-b2fe-9304fb45ec78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24285d37-3b91-4324-aec3-ea310130eb7b",
        "cursor": {
          "ref": "3d40b42e-acf6-4369-ad70-8f3e87ef3989",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e40671ed-5bd8-447e-bafd-fb8f6f227085"
        },
        "item": {
          "id": "24285d37-3b91-4324-aec3-ea310130eb7b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "75bb61c2-3e2f-4667-926e-ea89747b0b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4a2703-664a-4329-aa76-10ee4b8fec55",
        "cursor": {
          "ref": "1eea27af-bc6c-4429-8f80-e29fdfeb291b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6af63305-5a3f-425b-99c5-9c7192fdc852"
        },
        "item": {
          "id": "4c4a2703-664a-4329-aa76-10ee4b8fec55",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a3218a4d-152b-4a0a-a853-fb5b612aceb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b141e-b06a-4b90-a5c8-3a187de8b1bf",
        "cursor": {
          "ref": "30859d01-6be8-4592-88c5-b40b6215a6b4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f2b273d0-5c90-4bd9-a69a-6089936e122c"
        },
        "item": {
          "id": "0e3b141e-b06a-4b90-a5c8-3a187de8b1bf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "69909152-84d1-44d7-9d86-3d01e77123fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9975e6-4379-4cc8-a122-2086b9ee45fe",
        "cursor": {
          "ref": "1ccfdebe-180a-4343-99c0-e3bdba082b40",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3ade412b-1280-4abc-9d56-383e795a4e6a"
        },
        "item": {
          "id": "ea9975e6-4379-4cc8-a122-2086b9ee45fe",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5effe36e-c237-4eff-8623-b949539e71e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9840dfb3-76a0-408f-ab81-ed5e2673dde9",
        "cursor": {
          "ref": "d6a5cc79-528d-4bb7-bd15-dcd819f021af",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c043ade0-3da6-43df-a029-0d1e178aac09"
        },
        "item": {
          "id": "9840dfb3-76a0-408f-ab81-ed5e2673dde9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "21f7bd3d-f8d0-429d-b118-2ea91521d700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d32b978-6f8a-4929-841a-3d2296f1959d",
        "cursor": {
          "ref": "851785b2-eab2-4af1-bad3-866e2a6b4211",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e58b321f-6d55-4b97-8ca6-624e5478d1f8"
        },
        "item": {
          "id": "6d32b978-6f8a-4929-841a-3d2296f1959d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7a835394-7925-4aaa-92be-93b7df27db2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f219de81-2edb-4c05-b415-146422fa4077",
        "cursor": {
          "ref": "2b136d04-9915-4169-b838-70494d6338a6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "18b1126f-e108-4c0d-a0e7-553ba26e202c"
        },
        "item": {
          "id": "f219de81-2edb-4c05-b415-146422fa4077",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e6fa3129-e15c-4d27-802d-e06dfd46a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626e1eb1-ee51-4862-8dab-9456c1853aa2",
        "cursor": {
          "ref": "737cf993-37be-4d2a-a378-44552f762b6a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a4942ee3-1b54-4824-85dc-27ee126a46e5"
        },
        "item": {
          "id": "626e1eb1-ee51-4862-8dab-9456c1853aa2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2652134e-1c4f-465e-ad71-5989b54e1581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfe5a1d-40c3-4401-8731-e7cd2dde48c2",
        "cursor": {
          "ref": "3ccb0ab6-93db-41e2-99bd-ebfc3a93aadf",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c27f552e-1f0f-41ed-ac35-5c23fdedaecc"
        },
        "item": {
          "id": "0bfe5a1d-40c3-4401-8731-e7cd2dde48c2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b8853bc2-9bff-4869-9f9b-32a6c45b93c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68a3eb2-d9ad-43de-a7c4-4ad748f0b6a9",
        "cursor": {
          "ref": "80ae65b2-cc56-4da8-afff-6fa4bd24c92c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4de29433-c2f4-4688-a496-e02174218432"
        },
        "item": {
          "id": "b68a3eb2-d9ad-43de-a7c4-4ad748f0b6a9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b72d86cd-de3f-40cc-af77-6962cc5c9f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b0f17f-ba28-4107-943a-105b619ea813",
        "cursor": {
          "ref": "cb1fc074-e644-45e8-a34e-3ef2c6a2b494",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "25945ee3-a273-44ac-8644-49cd3047693a"
        },
        "item": {
          "id": "26b0f17f-ba28-4107-943a-105b619ea813",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "83009645-b967-4090-ae9a-177c35190cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7819b3ab-e7b1-477a-88e3-bab4d07f8ac2",
        "cursor": {
          "ref": "5ff7dd21-2885-44b1-861a-94dae91e8758",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ea25e913-546c-42cd-9a25-f4c0a8bcc5fc"
        },
        "item": {
          "id": "7819b3ab-e7b1-477a-88e3-bab4d07f8ac2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4b2fba69-8757-4dcb-ae44-fa18020fa1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ded901-bf63-4c18-aae5-01fdd2edce59",
        "cursor": {
          "ref": "996b79a4-c427-4d41-b0d3-02604fb5292b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "28fbce15-caee-436c-9ea8-3fbea19ec0c4"
        },
        "item": {
          "id": "00ded901-bf63-4c18-aae5-01fdd2edce59",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "911cd34c-c2d0-400d-9d93-5f5de73b5efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c030b055-7d6c-4384-9c73-04b612540b3f",
        "cursor": {
          "ref": "f00c5246-41cd-43c8-96c6-1f82aa82755d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8a86f352-3c05-46fb-955b-004e0ea81a9f"
        },
        "item": {
          "id": "c030b055-7d6c-4384-9c73-04b612540b3f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eab11a76-f333-4459-bc22-14158e9a94ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4b9d16-73c0-4378-8fd6-dcb87e301524",
        "cursor": {
          "ref": "ed21ff93-d64a-48f7-ac2e-1a06fd39fe4d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3b16160b-0eda-4f98-8b79-f3d7504762e8"
        },
        "item": {
          "id": "8c4b9d16-73c0-4378-8fd6-dcb87e301524",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6206ce7a-9e31-4ab0-bb57-c2d08aef0364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3fe913-aef1-4807-ad75-847df5371bf7",
        "cursor": {
          "ref": "0b5ec12a-13a9-4057-b19a-3aeac40f985f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fa0e6e70-4593-4990-836a-7625ec335ae0"
        },
        "item": {
          "id": "5b3fe913-aef1-4807-ad75-847df5371bf7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c0ba44e3-0635-4329-8b8b-ce27791e8c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daefc9bc-a5c4-4715-b1f4-062fc03bc171",
        "cursor": {
          "ref": "3bce404a-2eb6-4005-a56d-c913437408ed",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ea2ad167-740a-4a16-96cb-9a9332de1a6e"
        },
        "item": {
          "id": "daefc9bc-a5c4-4715-b1f4-062fc03bc171",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dbb4cf87-7c38-426c-a26e-1335836fe944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5df16-2718-4977-a2a6-6295fe556700",
        "cursor": {
          "ref": "0587917a-9d08-418c-a716-ae9df14de389",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "45d367e7-bcde-460a-9ef7-35d683ece2d6"
        },
        "item": {
          "id": "88f5df16-2718-4977-a2a6-6295fe556700",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7da9dbcf-42c1-41e5-9e11-147da708ed5a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1495,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad06bf6-7282-4749-bbf7-faf10bc5e0c8",
        "cursor": {
          "ref": "62dbbff6-01f7-4864-a44e-a5cbe8a34004",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1f2f9c05-6d10-4784-a7b9-bb905a97d9f0"
        },
        "item": {
          "id": "3ad06bf6-7282-4749-bbf7-faf10bc5e0c8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f38523ce-fe5a-4340-a7a2-c0089c349d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e89c0-02e3-4c28-8eee-e623fd809798",
        "cursor": {
          "ref": "7f91b17c-1dd1-47bf-a3d4-ff760394e4a5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a8617cf-d71f-47da-9927-d57a70215447"
        },
        "item": {
          "id": "050e89c0-02e3-4c28-8eee-e623fd809798",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "23219e8b-4855-49c9-a856-c12f67f4b43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3793fd0-f472-4add-9db7-0ef960f9da0a",
        "cursor": {
          "ref": "a89f055a-d3b7-4a0e-b9f4-2e7b7f69c59c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "979cb4f5-f36d-43ca-a295-1ee611630627"
        },
        "item": {
          "id": "b3793fd0-f472-4add-9db7-0ef960f9da0a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b43fde0f-d4a9-4a09-88da-14384151ea90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f512b8b-1ce1-4552-a803-a2b6435e10a3",
        "cursor": {
          "ref": "bb185824-ae7c-4cab-a87a-4868df76c763",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b0bd0ac8-653d-43b5-9bfc-398cb88b3b93"
        },
        "item": {
          "id": "3f512b8b-1ce1-4552-a803-a2b6435e10a3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1de38625-490f-4848-9f07-88e971b25208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89a090a-562f-4792-b4f0-eb6bade26048",
        "cursor": {
          "ref": "5fe1f02a-48b4-446b-8834-20b45f9e69f1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7376622d-14e8-4e74-a82a-f4a443b1dc2b"
        },
        "item": {
          "id": "a89a090a-562f-4792-b4f0-eb6bade26048",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e7ef0943-54de-48b0-8b87-1d8c993727a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaa402f-28f3-4815-b80c-73e1c0799654",
        "cursor": {
          "ref": "f9d8cf65-5aad-4b7c-a137-c7ea2c96c6aa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4d43655f-72e2-482b-b17a-dfa6b5432ab4"
        },
        "item": {
          "id": "ecaa402f-28f3-4815-b80c-73e1c0799654",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "131d2a1b-dca3-4769-b040-effcab4564a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfb1cdd-dabc-4de9-82cb-ea5ae4498187",
        "cursor": {
          "ref": "f25315f5-6ca2-44cc-b19e-23936cfbebff",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "255876b0-580e-42ea-95da-0254093e7acb"
        },
        "item": {
          "id": "5cfb1cdd-dabc-4de9-82cb-ea5ae4498187",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0974b632-bd5b-4eea-a166-a15a5de2de53",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1471,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ccf56-31a8-4726-a0cd-514c6a446ba7",
        "cursor": {
          "ref": "c7c8faf2-3a0b-4e5f-bc4d-2fc1a01e0976",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9a293e59-d601-4ae3-8b4e-e84c2bbc7844"
        },
        "item": {
          "id": "727ccf56-31a8-4726-a0cd-514c6a446ba7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eaf80cf3-5085-4ea3-a0af-305a9eb8b8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e8d54f-056d-4032-b9d7-52df9c97c571",
        "cursor": {
          "ref": "968bf678-a7c9-4edf-854e-a0cfdb74515a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "32b1b12b-b68a-43b7-87fe-8f1ea1433295"
        },
        "item": {
          "id": "80e8d54f-056d-4032-b9d7-52df9c97c571",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8129d50c-3e78-49aa-aca3-d2f508eb21fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d818e42e-5415-47bb-bf9b-56ef0dc6bed7",
        "cursor": {
          "ref": "1638dd7a-0add-493c-a846-7690b04c75ba",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0d4051bc-a694-4739-b54a-9897ad5d0131"
        },
        "item": {
          "id": "d818e42e-5415-47bb-bf9b-56ef0dc6bed7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "88d363a8-b290-43be-be6b-056898a965f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0e9f24-2ad5-48cc-8793-6a70989de4cd",
        "cursor": {
          "ref": "5ced164f-1809-4dfd-9d47-0a8f1bfb74d6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7e4c1504-c6db-4f3b-8c66-40ecb0b304e3"
        },
        "item": {
          "id": "6f0e9f24-2ad5-48cc-8793-6a70989de4cd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f737e136-8bcd-42d7-9a0e-6888cb0679d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc06c2c-0dc7-479d-a643-9f85869282db",
        "cursor": {
          "ref": "4012fea7-24b0-4927-99de-d726335a722e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "028f2c02-d33e-4994-8981-4e18a69eb947"
        },
        "item": {
          "id": "9dc06c2c-0dc7-479d-a643-9f85869282db",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3c49f5e2-c88f-4591-a663-05eae62ad0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fc00ef-da42-4fff-89a0-a0342a8a0f08",
        "cursor": {
          "ref": "01f26fbc-83ea-441a-bb18-18f276aee47c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "40a30749-aaa8-41c0-a5b2-5859b4a7f711"
        },
        "item": {
          "id": "d0fc00ef-da42-4fff-89a0-a0342a8a0f08",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "86ee2328-4d5f-43e6-8c01-030e66e37856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36710e6d-5db0-45f2-a59c-23ea7d88ee75",
        "cursor": {
          "ref": "c7802ef8-a33e-42ca-b438-f353dc11c57a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b0128b81-7954-4758-8e21-a18bec29c836"
        },
        "item": {
          "id": "36710e6d-5db0-45f2-a59c-23ea7d88ee75",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fdb9d605-0350-4b9c-ad30-819f61b12f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeff02b0-5b65-4c48-804e-eb1b77e7fc5d",
        "cursor": {
          "ref": "d2480f6f-5c06-4106-a0bd-a354cb3e6432",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "05413356-2c85-4f47-a648-5b16a38a83fd"
        },
        "item": {
          "id": "eeff02b0-5b65-4c48-804e-eb1b77e7fc5d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "103a9811-96ab-4ae4-853c-8d17066e805e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a1ad39-7e82-41be-b5ab-122e90fcd19b",
        "cursor": {
          "ref": "3d94db3b-7658-4115-b69e-670845d47eb9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1660de1b-6e13-4c02-9fec-a00b25668021"
        },
        "item": {
          "id": "c9a1ad39-7e82-41be-b5ab-122e90fcd19b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "addc33a0-86a8-4dd2-811c-b0e2d9a3029a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3150bc2b-a05c-4421-be3a-475f6205814a",
        "cursor": {
          "ref": "bbf3d3cf-9e33-4bc5-baa8-2f9496e7707d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1e54aaa4-6e5b-495d-803d-fbd0b09bb463"
        },
        "item": {
          "id": "3150bc2b-a05c-4421-be3a-475f6205814a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "668e3a98-d75f-4c53-9ce5-6eb48277699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d93ff5-1701-4d3c-8fe9-c16a4c6b09ee",
        "cursor": {
          "ref": "a578e72b-f030-4432-b391-ba94bd3e6054",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "82ae7346-61ba-437b-a777-469676b27109"
        },
        "item": {
          "id": "23d93ff5-1701-4d3c-8fe9-c16a4c6b09ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7fdf4476-b4d5-4311-b3c7-24074f9a7502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873ce921-1dd4-407a-9905-9a61827cdcad",
        "cursor": {
          "ref": "955f423f-571f-48c9-a48c-a335c8dd8c85",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6df0f52d-0590-4bed-839d-2e5e329326da"
        },
        "item": {
          "id": "873ce921-1dd4-407a-9905-9a61827cdcad",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bdd46100-c0dd-4dce-b28a-2b8c3e1cb6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4667641-6631-4185-8272-d19258105bdf",
        "cursor": {
          "ref": "40702fd1-3fe8-46ad-9e5d-d3f4103d258f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "89b9e2cf-cce6-4cf1-9fa7-efaaccfdd137"
        },
        "item": {
          "id": "e4667641-6631-4185-8272-d19258105bdf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e2b22a41-c964-45ec-b5c1-bc56fe593c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d381e848-7af9-4156-9d94-4f8119533aa2",
        "cursor": {
          "ref": "e14e179f-7c15-4650-8070-d5b7fcaf70c1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d40343c-db05-4260-ab10-b0f3dba5f97f"
        },
        "item": {
          "id": "d381e848-7af9-4156-9d94-4f8119533aa2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "55bafa74-0497-442e-9003-dfce64053de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd8417d-825e-4558-b692-5fc723f512a6",
        "cursor": {
          "ref": "56948e08-69c2-4ee3-8f83-ee2abe1a0257",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "797b745c-bd87-41f5-acdd-bea96fdb378d"
        },
        "item": {
          "id": "dbd8417d-825e-4558-b692-5fc723f512a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6a86d89f-57e5-4608-aaa0-bda81c8fb06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737d07a9-d797-4536-a42c-53ed6cd3a27c",
        "cursor": {
          "ref": "ed8e5a98-d0e1-4425-851e-c258f5a1c970",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ba5a70e-538c-4e97-8462-1ad2b076da4a"
        },
        "item": {
          "id": "737d07a9-d797-4536-a42c-53ed6cd3a27c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cb45aece-2b4e-413c-8b7f-24211f61ab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b07687-ff85-4d10-9117-3b91b9e438c5",
        "cursor": {
          "ref": "386ff434-2764-4447-9a25-9eec78eb8b41",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d9c942cd-cd5c-4f7d-93d8-18d572c803b6"
        },
        "item": {
          "id": "55b07687-ff85-4d10-9117-3b91b9e438c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "024fa250-ae52-4af1-ae99-dbd764b29249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bf8770-6190-4a9d-a731-670604869dc6",
        "cursor": {
          "ref": "84a89905-d5da-432d-87dd-6a510bb10ce6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c553391e-9cf1-4395-99f7-f38a2b9d4ce4"
        },
        "item": {
          "id": "b7bf8770-6190-4a9d-a731-670604869dc6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2e82b503-2a43-4851-904c-1de8168270a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d656bab-80ee-4fa6-88e4-b47daf976a9c",
        "cursor": {
          "ref": "e36b916a-e82d-4db6-b5fb-43dd458222e2",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f3a304e4-e36a-4380-a48b-94b236228bc0"
        },
        "item": {
          "id": "0d656bab-80ee-4fa6-88e4-b47daf976a9c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d7406e92-0d6b-4445-8185-329a94dc541c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7010e-341a-47b5-a111-beb952119863",
        "cursor": {
          "ref": "c78d2a5d-566b-49fc-ac9b-2354475cfb7b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "20fb50c3-0e93-4718-a5af-96105867d11a"
        },
        "item": {
          "id": "44c7010e-341a-47b5-a111-beb952119863",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "31fbfc38-69d0-4f26-b35c-d9b865649d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61ad2aa-c1b6-455a-805c-d9c5d9e7dbc0",
        "cursor": {
          "ref": "5dd6c790-cd0a-4752-8db7-c8317e8fa52e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8bbc4139-4128-4748-b1f7-edac33c7b664"
        },
        "item": {
          "id": "e61ad2aa-c1b6-455a-805c-d9c5d9e7dbc0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "482b998f-5d40-47fb-ad3d-3a2ad280d02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd961ae-a97f-487b-80ac-b59ee19ca58f",
        "cursor": {
          "ref": "f418cffd-f5ad-44c5-b7e2-39b140078fe6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7feabbe1-0efd-4cc3-845d-3bcc569dfb1e"
        },
        "item": {
          "id": "4bd961ae-a97f-487b-80ac-b59ee19ca58f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "127a3ff8-93bd-48b6-8e91-53942ec01c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4d4ec0-c04e-44dd-888a-3395fafa15c1",
        "cursor": {
          "ref": "784deb60-6190-4402-a700-09cac91c4fae",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bc79aa6c-47a7-4727-832e-5b1269711c7c"
        },
        "item": {
          "id": "4a4d4ec0-c04e-44dd-888a-3395fafa15c1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4dab14cd-705b-417e-8d38-29a5f62bd5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40d0674-f564-4f9e-8246-e1e058808b82",
        "cursor": {
          "ref": "68358597-a29d-4ad1-a2e9-9a63dd387c28",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d941ead4-aec4-413d-adc7-33ee13f49430"
        },
        "item": {
          "id": "b40d0674-f564-4f9e-8246-e1e058808b82",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1a8c2409-5491-473a-8280-3e23e2042c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb13648-8716-4cf8-842e-cdf875510458",
        "cursor": {
          "ref": "ac667e22-d3bf-456e-a452-e650815cd02c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "12d9fc73-6356-4653-815e-df2a030f5259"
        },
        "item": {
          "id": "6eb13648-8716-4cf8-842e-cdf875510458",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f6fdbee2-8f27-4e59-91f5-8e7380d3e6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cdc54b-a348-437c-8cad-61f962a9d822",
        "cursor": {
          "ref": "9ad0d432-2a4d-4bb7-b5bf-89a1a527b9e4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6b14c150-dee6-4a09-82f3-ec693fdc97ba"
        },
        "item": {
          "id": "60cdc54b-a348-437c-8cad-61f962a9d822",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6dd5a2b1-426c-440e-b706-6cb5e69b1441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c32e0e4-d7e3-4c32-bf9d-de9d183ef824",
        "cursor": {
          "ref": "c87c985c-6d8b-4b8d-a8cb-bc4e714106f2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fa002548-f51d-449c-b8a5-853df1f25fd1"
        },
        "item": {
          "id": "2c32e0e4-d7e3-4c32-bf9d-de9d183ef824",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "70624e02-1b35-4087-8541-e6dc822b0d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4ff86c-b5eb-42e9-ba81-3815fdf8a103",
        "cursor": {
          "ref": "f811fad2-077f-405a-827d-0eae523cc6bb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3468b89f-ee1b-41fc-af1b-1c4ad93a61bd"
        },
        "item": {
          "id": "2d4ff86c-b5eb-42e9-ba81-3815fdf8a103",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a4583b38-061a-449f-858d-ec91aec0e472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9ca922-8391-401b-8f3d-d726f43d8e06",
        "cursor": {
          "ref": "cb37fcf8-6ed9-47e4-b914-66fd5d32abe6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d825c69b-dbff-4202-9a95-af48e7800849"
        },
        "item": {
          "id": "7a9ca922-8391-401b-8f3d-d726f43d8e06",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c67ef16e-2570-4701-a44f-70eb53bd52ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a5c8ff-f1d3-46dc-bff3-3e7ad2cc4798",
        "cursor": {
          "ref": "45d2a10a-c88f-4a4d-9d6e-c9f5e32ffc49",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a2666af7-66c3-43c1-a431-ab978e648375"
        },
        "item": {
          "id": "88a5c8ff-f1d3-46dc-bff3-3e7ad2cc4798",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fb931ddb-18ff-4ff7-948e-0a88e13c01eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb537552-a539-4e75-b356-55e88ef8dd50",
        "cursor": {
          "ref": "4ee401e3-4f30-4607-934d-fa64bb533d89",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ab313a36-1988-4153-bf02-3acded88ee8d"
        },
        "item": {
          "id": "eb537552-a539-4e75-b356-55e88ef8dd50",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "85068cc4-b8c0-4fee-91fe-7c3d9e8758cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1835f11-daa9-4620-b197-eeedb99b452e",
        "cursor": {
          "ref": "7009a83a-c3f7-40ad-b713-1247b6e3640b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "72c18a77-0891-4d93-af66-8d51554fdf6f"
        },
        "item": {
          "id": "a1835f11-daa9-4620-b197-eeedb99b452e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8694ae7c-e420-48a2-b109-dc442930c88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a4525f-3720-49d3-9493-704f9b7f000d",
        "cursor": {
          "ref": "eb5d1e20-46cb-4164-92f0-459ceec2b2c2",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df8365de-2b12-4b73-b2d5-47a67e6a7867"
        },
        "item": {
          "id": "62a4525f-3720-49d3-9493-704f9b7f000d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6bf21839-779d-4311-bfcf-476bb4bd5e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ff96f3-1d4a-4f92-bdee-7bb04de3e275",
        "cursor": {
          "ref": "5d38777a-e126-49e8-b595-4a8e5d88dad4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "99257023-5594-4c75-9aeb-fa83bfa6cb2d"
        },
        "item": {
          "id": "e7ff96f3-1d4a-4f92-bdee-7bb04de3e275",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "da8a27f7-302c-4502-88c9-0f17d118c1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e548dad-4cd6-4d74-9415-8acf3c8179c0",
        "cursor": {
          "ref": "58f293c1-9a7b-4f5c-8f71-e79ea0ae9639",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cb1490b8-9a91-492f-ae5e-0914504c844d"
        },
        "item": {
          "id": "3e548dad-4cd6-4d74-9415-8acf3c8179c0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a9fbc771-e499-4e3f-9608-31016e9bccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4469e1e3-e8b4-4fee-8ac4-8d8b1218c5d8",
        "cursor": {
          "ref": "59c682f5-010e-4723-91b1-aa4b23fc725a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a255540f-78d9-4b34-992b-f6ec9f6efc83"
        },
        "item": {
          "id": "4469e1e3-e8b4-4fee-8ac4-8d8b1218c5d8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5c02df84-9434-456d-82ea-d8d9d54be38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd83bdae-b150-462d-8903-c11d4e36f7d2",
        "cursor": {
          "ref": "0cbbc334-3909-49da-acac-f9f14df7ed66",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "27253812-3e03-4974-ab53-a354e4c94662"
        },
        "item": {
          "id": "fd83bdae-b150-462d-8903-c11d4e36f7d2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5ccec380-0fc8-4063-84b7-a2a8920e2992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f438d965-f15b-47ac-8563-d0073ccec8ce",
        "cursor": {
          "ref": "56fb02cc-451d-49ee-9357-84947f07bf65",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f11a38ee-aee9-422f-a816-2ccd5e8eb0ee"
        },
        "item": {
          "id": "f438d965-f15b-47ac-8563-d0073ccec8ce",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "58216d6a-8cfa-4dda-a16c-bf4664b5d086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57af4f39-b605-4769-9ac8-e547b8038816",
        "cursor": {
          "ref": "b304f7f9-d08b-4f29-be3d-f27d6586788a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a8b3ea4a-de6b-4728-8fa2-051ad12b51f8"
        },
        "item": {
          "id": "57af4f39-b605-4769-9ac8-e547b8038816",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c3ed2cfc-5bbe-4f13-a1d4-50b78710fb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbbd045-0aed-45a3-ad93-ec3b4a21f0e9",
        "cursor": {
          "ref": "f971a19e-b74d-4839-b7eb-144f8f9169ca",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5e6080d9-cbba-4bba-9630-674597fa4e07"
        },
        "item": {
          "id": "1fbbd045-0aed-45a3-ad93-ec3b4a21f0e9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "41235ba4-43be-4593-a459-57d6d7c7db93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ea6a64-b8cc-4c49-9f00-46c0fa636789",
        "cursor": {
          "ref": "2c3165f7-b50b-453b-b222-03452378a4c4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c69b080c-4dfe-4473-8d10-b3a11c91b340"
        },
        "item": {
          "id": "69ea6a64-b8cc-4c49-9f00-46c0fa636789",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "578a09b5-d6d8-4ccf-a63f-dbc910307036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d933d687-7a4d-481e-85f0-a0d6dada47f9",
        "cursor": {
          "ref": "f309a4b5-c3c0-4d7a-a44e-cd0625bbf078",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52dda360-629f-49ab-a20d-512751ab0b9b"
        },
        "item": {
          "id": "d933d687-7a4d-481e-85f0-a0d6dada47f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0526d2a5-f574-493d-ab8c-703a0d261477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70910cfd-9da7-41b6-b80b-b5ec4e43ffe6",
        "cursor": {
          "ref": "e3532103-39ef-41e0-ae2a-42cd3422a022",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6a778d06-dbfa-4308-9ad5-d80724a6cce0"
        },
        "item": {
          "id": "70910cfd-9da7-41b6-b80b-b5ec4e43ffe6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ba8db22e-f2e4-4b34-bb4e-35aae93acee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27adc699-4efc-44a1-b50e-26ec125c6bd8",
        "cursor": {
          "ref": "06eb56f5-d5dd-4f43-941b-b5b9e9e9f124",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "eb1b1087-f814-46d1-b387-607f5d462a2f"
        },
        "item": {
          "id": "27adc699-4efc-44a1-b50e-26ec125c6bd8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0da1148f-493a-4ab8-8d16-53e674b49b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca79431a-c57b-4eef-be87-d218bd314c23",
        "cursor": {
          "ref": "b6d0a424-1215-49fc-9dbd-1ab51ef165b3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9524d50e-e4f7-46b7-8236-9044fee7710b"
        },
        "item": {
          "id": "ca79431a-c57b-4eef-be87-d218bd314c23",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "68cf42f1-e6fd-4625-a2d2-3205c28f9249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9644586c-2e20-4ae0-b7dd-c4d9c4868f67",
        "cursor": {
          "ref": "598be075-69aa-49a2-a27b-8f7a40bd16da",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b21c87e8-914d-4499-943a-54d26f7e89cc"
        },
        "item": {
          "id": "9644586c-2e20-4ae0-b7dd-c4d9c4868f67",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b0ef58ca-c7b5-4e08-90ca-464317bfb274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8c5013-fe54-4f2e-98b7-d0015815f08d",
        "cursor": {
          "ref": "ce862525-64e6-464a-aa3d-9cb42be2770e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "24197757-89b2-4bb2-afc5-b6816cdc42c2"
        },
        "item": {
          "id": "7d8c5013-fe54-4f2e-98b7-d0015815f08d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7fccd51d-36a1-4b21-b760-9d7c38f909d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d277ec92-9ab4-4dff-a4cd-6e231f302444",
        "cursor": {
          "ref": "72a80246-de50-4b7c-95a4-476d7c5832e3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7f3ab967-fb17-421b-be44-6f49bc33f939"
        },
        "item": {
          "id": "d277ec92-9ab4-4dff-a4cd-6e231f302444",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "15ad87fe-9946-4b85-9cf0-82d7ac8abcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67aa995-49a9-4d7c-a744-84728aeea827",
        "cursor": {
          "ref": "e8ad4c29-ea2b-4aab-8771-afd153f5cefa",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0df6b35f-b198-4178-896a-4dc6e8196ef4"
        },
        "item": {
          "id": "a67aa995-49a9-4d7c-a744-84728aeea827",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c0a2797c-eacd-4700-831f-fcd6868ff9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc8fcf-b0aa-4527-b230-dca0c5acf1d0",
        "cursor": {
          "ref": "c6ffc8f2-2609-44d6-88bd-211aeca105f4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9d5cfdb8-5510-4c27-a598-d31e0acfe0dc"
        },
        "item": {
          "id": "d4fc8fcf-b0aa-4527-b230-dca0c5acf1d0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "87a7c00c-5b59-4e53-9bab-8f9dae602ce8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712db91f-4ab6-4053-a06c-9f201272f76b",
        "cursor": {
          "ref": "f31ee067-3daf-49c6-80d4-82c0978a7674",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "26758fc5-376f-437b-8a70-ecbdf218bdee"
        },
        "item": {
          "id": "712db91f-4ab6-4053-a06c-9f201272f76b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "27c5054a-7aaf-45eb-b739-bf152f092b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b382204c-6575-4cec-9055-b0a4ea74e7fa",
        "cursor": {
          "ref": "0110577a-dd54-4292-91b7-76025fc86efc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e5688cf5-3f57-4e23-a02a-066c21776f12"
        },
        "item": {
          "id": "b382204c-6575-4cec-9055-b0a4ea74e7fa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c9610bce-0ab2-4eaa-ae7b-0908ed0d7d7c",
          "status": "Created",
          "code": 201,
          "responseTime": 8999,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b3dcb9-bc93-4068-9cf3-d25fd2b23266",
        "cursor": {
          "ref": "c37cb51c-3e78-4d46-a177-2014224bc96d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ffc6450f-c2fe-4da9-a436-34d9739db2b9"
        },
        "item": {
          "id": "75b3dcb9-bc93-4068-9cf3-d25fd2b23266",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "92c5478b-fe1b-4495-a323-d9d513881601",
          "status": "Created",
          "code": 201,
          "responseTime": 8016,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f24a22-77aa-4f09-969c-cdcb071eeb32",
        "cursor": {
          "ref": "3a5d89bc-8059-46d4-95fb-c1bc10b08cfb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b1ecba1d-5e47-4b15-9aa3-f3da3be1ba59"
        },
        "item": {
          "id": "e3f24a22-77aa-4f09-969c-cdcb071eeb32",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2cb07e9f-20fd-47eb-b326-1df53fb8dfda",
          "status": "Created",
          "code": 201,
          "responseTime": 8519,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b00852-79ab-4d6c-9e74-2755342c3842",
        "cursor": {
          "ref": "8b7a5c44-8899-4721-b16f-064fcc0c9d1d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7fa93189-31cc-4bdc-b829-8264f9b66be2"
        },
        "item": {
          "id": "b9b00852-79ab-4d6c-9e74-2755342c3842",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8017b5f3-7f78-4c27-a9da-af5e00d1f33d",
          "status": "Created",
          "code": 201,
          "responseTime": 8259,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f082f5-cabb-4cc7-8ad9-c89986b1c44d",
        "cursor": {
          "ref": "25600b51-b6ff-4265-bc2e-19096db06e3e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "683a4e30-6357-4be5-82e8-efd7aaeedd10"
        },
        "item": {
          "id": "90f082f5-cabb-4cc7-8ad9-c89986b1c44d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fa2354f7-0ef4-4c39-a759-ce362e01b3d3",
          "status": "Created",
          "code": 201,
          "responseTime": 8318,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25293bb-831f-4028-8b00-0865b23c0c07",
        "cursor": {
          "ref": "4b6d7306-7cd4-4f06-8fc8-8c9f910de656",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5dd6f68a-a63e-4c3c-a030-bda202019fbb"
        },
        "item": {
          "id": "c25293bb-831f-4028-8b00-0865b23c0c07",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "125a4621-49c2-4b72-b3de-eb36e3e53c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "15902783-e8a6-48b9-ba16-486f3572cee3",
        "cursor": {
          "ref": "310b56c4-7b93-4f67-8933-0cd3b7120e3f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b962815a-0121-40e0-b1c1-f96ba32a332d"
        },
        "item": {
          "id": "15902783-e8a6-48b9-ba16-486f3572cee3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dca55584-60dc-4c1a-ae1f-2f2c551055ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e8f0a8-7c24-47cc-843a-13bda0aef69b",
        "cursor": {
          "ref": "f4e5bd3e-c0e1-46a6-85e0-55a2416da775",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26b1e94c-e0a3-4e01-b6ce-d61dfb6ae3da"
        },
        "item": {
          "id": "d5e8f0a8-7c24-47cc-843a-13bda0aef69b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "801c717c-ba7b-4d8e-ba51-b57fe412d070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21aa2d5-9e8b-4b75-8aa4-daedd13a980c",
        "cursor": {
          "ref": "ba2c03e2-3469-404e-a88c-13ef173b550b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3edc1590-10e9-4193-aba4-a3b2285cbe30"
        },
        "item": {
          "id": "a21aa2d5-9e8b-4b75-8aa4-daedd13a980c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f06b5e2a-7bfd-41cb-b184-44116b47470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3653ff5-7bd5-4c4f-b827-5192123eddcc",
        "cursor": {
          "ref": "c6bad577-634b-49f2-8434-b768fe47a4a3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f987683c-17c4-401a-906c-ffc810605b55"
        },
        "item": {
          "id": "c3653ff5-7bd5-4c4f-b827-5192123eddcc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f1b18d8f-87cc-4b5c-86cd-f8dec7417bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcad975-2c51-4566-b34c-a9d683174c2e",
        "cursor": {
          "ref": "da2b73a6-d1c6-46c5-9b19-623cb834b0fd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "154dc291-3c1f-47a7-a8b4-839524970057"
        },
        "item": {
          "id": "9dcad975-2c51-4566-b34c-a9d683174c2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5ca5c8c6-8748-47e7-9d8c-6c6c11990f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2f545e-6948-484b-bbd4-6834fdfb722a",
        "cursor": {
          "ref": "d15f7f97-aac9-4fba-a3ec-b8693529f985",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "98e046dd-79b6-49f2-a53f-6d15ea4c9a39"
        },
        "item": {
          "id": "ef2f545e-6948-484b-bbd4-6834fdfb722a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1df8c724-f523-4183-986a-a3137baccbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2780e049-a2a3-4f1b-8990-8641b0d69c35",
        "cursor": {
          "ref": "f6e24441-fa7e-46b2-9776-730890ab1078",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5ac5da51-c976-4d39-a633-9f122c46ce63"
        },
        "item": {
          "id": "2780e049-a2a3-4f1b-8990-8641b0d69c35",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d9740acd-34cf-4c9c-ac31-d93b58489b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dda5eeb-bdfd-4764-a96d-fe902b2774d4",
        "cursor": {
          "ref": "f74321e0-5bd5-40e6-9694-c5ef7feb1e4c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "92e3dbd4-946c-485a-b93d-ade026d42141"
        },
        "item": {
          "id": "6dda5eeb-bdfd-4764-a96d-fe902b2774d4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dfea19e3-87ba-41fb-a417-47873dfee7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540c1832-759e-40f5-bf94-d1c32a940308",
        "cursor": {
          "ref": "daad7257-dcf3-48c8-96c6-dce468980e56",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ab9bc39d-d226-41a1-8634-1b149f77921c"
        },
        "item": {
          "id": "540c1832-759e-40f5-bf94-d1c32a940308",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "62ab5306-2fee-4216-9342-46096433ec75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93973d78-baea-4b38-861d-90c1d75fc20d",
        "cursor": {
          "ref": "0a5f7e4c-0865-415b-85d2-061d5f57bb06",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "86a6670a-0be9-431a-810d-c0fc07c19b22"
        },
        "item": {
          "id": "93973d78-baea-4b38-861d-90c1d75fc20d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1a9d9d7a-25e5-4630-a61d-16ab302639ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23d9b1a-f2a6-448a-a70a-470e9ce556c8",
        "cursor": {
          "ref": "778cf961-bbdc-4af8-9302-e0a5a1722c5c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f24d7cfd-575a-4c01-966a-5a3a29d811ea"
        },
        "item": {
          "id": "e23d9b1a-f2a6-448a-a70a-470e9ce556c8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cce08cb4-5377-4694-a56d-5d6ab3145a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3cf86d-d5d1-4766-84f4-59720feccd62",
        "cursor": {
          "ref": "c8fa90bf-a45f-40f9-88cd-562fd11f47a7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "83f44829-e481-47e9-9ecb-c0693c58a4cc"
        },
        "item": {
          "id": "cb3cf86d-d5d1-4766-84f4-59720feccd62",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7f7b0ae4-9b1b-461e-b1f8-a3f48b34fdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893c294b-aaf8-415e-ba30-488796fa47c0",
        "cursor": {
          "ref": "9254a034-4ad5-4a8d-bd04-e8841b8863ac",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e55aee2b-db03-449f-8f59-a74c29e7cb74"
        },
        "item": {
          "id": "893c294b-aaf8-415e-ba30-488796fa47c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99f0693f-198f-4fa9-8fff-1a413376278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4e2123-336c-4782-bc5e-2c68aa485452",
        "cursor": {
          "ref": "d6dd013a-204a-41bd-be35-2d179b9a0005",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "00f83685-bc72-4cb8-86fd-1f515e1976f7"
        },
        "item": {
          "id": "9a4e2123-336c-4782-bc5e-2c68aa485452",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7766bc09-8631-402a-9159-39ab38277482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c1d0f3-2196-45ec-a1b0-98028def9b09",
        "cursor": {
          "ref": "f787089e-1d62-4894-9008-251a05b4a6a9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b7bbb6bf-22f9-4771-b87c-da82053053c0"
        },
        "item": {
          "id": "75c1d0f3-2196-45ec-a1b0-98028def9b09",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c782125a-6278-4534-b4ab-482e523f2073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63002e63-499a-4c28-855c-24cf7af131b2",
        "cursor": {
          "ref": "a1060b5c-d373-4586-8be3-176705f1c0d6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6d8975ee-e6cb-4ec7-8725-88390e0dfadb"
        },
        "item": {
          "id": "63002e63-499a-4c28-855c-24cf7af131b2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7ebc5579-55db-48e7-83c1-956dd75144a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c46593-b831-4bdc-8b01-a2da25827079",
        "cursor": {
          "ref": "54c6037a-f93d-4337-818b-bc982d72b3b5",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9066cf8d-552c-441e-aa27-6d7556ca3e64"
        },
        "item": {
          "id": "e0c46593-b831-4bdc-8b01-a2da25827079",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "161c7587-3ef7-47fc-b684-67c72c4eb83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6f726d-8d80-4463-9423-adc4af26a17d",
        "cursor": {
          "ref": "70c40b8c-f9e7-4eda-ab7d-604ffc0a0c49",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7e4f1790-fcf0-47f1-aecf-8bc94943b1f6"
        },
        "item": {
          "id": "4e6f726d-8d80-4463-9423-adc4af26a17d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2a43ae1-61fc-4c5b-9420-a9406ed7f63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef560e6-446e-4000-ac1e-f0639f0d57f1",
        "cursor": {
          "ref": "e5d27f72-2945-492a-8455-d8f196494565",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e00ac4b6-1b8c-47d6-ba86-06efdfa8b948"
        },
        "item": {
          "id": "8ef560e6-446e-4000-ac1e-f0639f0d57f1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "01aa2443-ab80-408c-901b-69780eca00ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bf80b8-158a-43eb-8750-cd15d626f895",
        "cursor": {
          "ref": "f610a7d2-0b2a-4599-8bbf-ccbd733d08ad",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6458d498-85bb-4c81-b11a-e39743a450a0"
        },
        "item": {
          "id": "38bf80b8-158a-43eb-8750-cd15d626f895",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "592bbaf7-b1f9-4709-b556-16bd087c688f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6940c408-02f7-4d50-8dab-f962c409fff3",
        "cursor": {
          "ref": "8f41f04e-229d-48a8-9387-23081456d8b3",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "869f6a10-21c2-4af5-8f59-69da71f564be"
        },
        "item": {
          "id": "6940c408-02f7-4d50-8dab-f962c409fff3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f2075bf8-319b-4195-b096-bdca394a5aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608a7def-0131-4444-ac6d-3c1d5d6f0313",
        "cursor": {
          "ref": "3d296550-0f33-46d4-a1ac-1c431f12f1a4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1911e31a-d38c-4f8b-9bfd-b17c5b960579"
        },
        "item": {
          "id": "608a7def-0131-4444-ac6d-3c1d5d6f0313",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "748ef06a-e339-4995-aaf7-568d7f6fed6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db43f53-86f0-4f63-90b4-aadbd0656366",
        "cursor": {
          "ref": "2fc33916-b2b7-47e6-94a5-f9a865a06a4d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e20ec224-db33-499c-97eb-4915a111dd04"
        },
        "item": {
          "id": "9db43f53-86f0-4f63-90b4-aadbd0656366",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9aec747e-5d1a-4195-aac6-c4fe7ad4fad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0824d2ab-839a-43bd-b53e-08183935c981",
        "cursor": {
          "ref": "d767f72a-9369-4277-ac9c-ba6157a55ca1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b53bff46-1ec6-4218-914c-85da47044a51"
        },
        "item": {
          "id": "0824d2ab-839a-43bd-b53e-08183935c981",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2235d78b-3333-4254-8c77-183ed302e0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6dfb71-4529-4a81-ba28-2e6985216da5",
        "cursor": {
          "ref": "bae2455d-cc85-4ef5-bc34-8f70e44c9ee8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "34f9719d-5365-4a77-ae10-f35706d06a51"
        },
        "item": {
          "id": "de6dfb71-4529-4a81-ba28-2e6985216da5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "560acafa-a75d-4231-bda2-f12bffae5ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da73330c-dcc0-4714-980d-d1f102a9e959",
        "cursor": {
          "ref": "d01849b6-f8a9-499d-a700-c8169f8b3328",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f3476214-6cb8-455a-85bf-b5480e1e2eb3"
        },
        "item": {
          "id": "da73330c-dcc0-4714-980d-d1f102a9e959",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "629c3798-9fe5-4760-8aed-9db0d8bdbb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67809e45-ecdc-4157-a8be-39635f01a56d",
        "cursor": {
          "ref": "205378ac-c2dc-4b59-8d2a-1456ceb39e75",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6cbb29f3-6671-41a9-8c7c-75508d83d6e9"
        },
        "item": {
          "id": "67809e45-ecdc-4157-a8be-39635f01a56d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1ef2bf7-65db-43f7-ac78-87ccb20bfd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719f6f91-a088-4c2b-8d32-3b17928b9b6d",
        "cursor": {
          "ref": "db3282ef-3863-4c8e-8856-5ecb10913caa",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "347dcc85-dfb0-494a-8e4f-1c114f3cf829"
        },
        "item": {
          "id": "719f6f91-a088-4c2b-8d32-3b17928b9b6d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "28987dd7-d517-4181-a1e0-36da6e72ed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0eb931-e9cb-4c54-8e68-36b91f4b0895",
        "cursor": {
          "ref": "acd1705d-c4ee-4052-9c82-caf72440d5ff",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04d556b6-b9f1-4037-9c1a-c57db3011964"
        },
        "item": {
          "id": "5c0eb931-e9cb-4c54-8e68-36b91f4b0895",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e18176c4-b399-42a4-a4c1-20890d84ebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba0b14a-58fd-47b8-8430-305eab9954aa",
        "cursor": {
          "ref": "4206012c-2c91-4009-8d72-32bcb63f1ac2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7f3c0173-7da5-4243-a078-bce938a5e2d8"
        },
        "item": {
          "id": "bba0b14a-58fd-47b8-8430-305eab9954aa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f66d481b-5357-48d7-9c7a-49f394a4ac8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15affbf-df0c-4ad1-9f94-8cbd4dc739de",
        "cursor": {
          "ref": "c9724574-d520-46cc-9fe9-80dd0f730ea3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "03838fb6-2b18-4b99-aef8-2d87b7188067"
        },
        "item": {
          "id": "d15affbf-df0c-4ad1-9f94-8cbd4dc739de",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd598259-f7bf-4923-b14f-db6cdecb33cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4d61aa-450a-42fc-af44-72df420e0dca",
        "cursor": {
          "ref": "80862d30-f854-4b2e-a2c2-b58be1fd2abb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d7439b81-d69c-4469-8850-3ca6e8c6eab3"
        },
        "item": {
          "id": "7e4d61aa-450a-42fc-af44-72df420e0dca",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f34c3608-a8cf-4610-af5a-0a113bb36612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f48482-fff0-422d-838c-1cd29cf2939b",
        "cursor": {
          "ref": "ac3f17cf-a73a-4cf5-97b8-4fad3c91384d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3f8631fd-316c-4b17-9b69-9906eef0c8d4"
        },
        "item": {
          "id": "50f48482-fff0-422d-838c-1cd29cf2939b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6fbe706-dc19-456c-9767-10f8ce90cba6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d2569-9fc6-4360-b66d-405583c2c8f2",
        "cursor": {
          "ref": "65d3626e-543d-4e5f-b890-80ac6c00f783",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "122211df-5413-41e4-a0e5-4e0770148f9d"
        },
        "item": {
          "id": "5b5d2569-9fc6-4360-b66d-405583c2c8f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cdf73e89-2efc-4f74-940f-802bc2a3b6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab699fd-fbb7-4594-a2e8-3ea36a5202b3",
        "cursor": {
          "ref": "94ca0dbb-18d3-47c2-ba16-fa685f344f31",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d2abbd54-bfc4-475e-8c15-067837c7012d"
        },
        "item": {
          "id": "fab699fd-fbb7-4594-a2e8-3ea36a5202b3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "715b516d-3802-455a-95d3-dfe95473f65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc34741-f7b5-489d-8ae5-cacb7d5423e3",
        "cursor": {
          "ref": "8bbcd20b-e578-4d98-808f-2ebc48d485ae",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ec5460f6-7834-4971-8b2d-0941d89d45d7"
        },
        "item": {
          "id": "9bc34741-f7b5-489d-8ae5-cacb7d5423e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "565f101c-c499-4ea5-ba3d-60fe93f9b24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb72300-dbf2-4fc6-81bd-1851158767b2",
        "cursor": {
          "ref": "dcc0839e-4366-4a84-a279-a1fd9bc09eb5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "170c1046-9edf-4441-b402-c67d3ff6ad8b"
        },
        "item": {
          "id": "3cb72300-dbf2-4fc6-81bd-1851158767b2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "34e31328-01e3-4e2e-9d2c-0624eebe36fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cc82c3-fda0-4214-b2f5-17a391b3849b",
        "cursor": {
          "ref": "055129de-d8d2-4cde-ae3e-aadc4d32d62e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66fdc9df-6939-4776-a4f6-3059247c2045"
        },
        "item": {
          "id": "e4cc82c3-fda0-4214-b2f5-17a391b3849b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3b332703-c2b8-4499-a9cf-c2609433eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1399e797-781e-4f3f-a5e3-168e73422e6f",
        "cursor": {
          "ref": "47c04b3f-9d1e-4788-8814-6c9687f4e487",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e7e9acd4-5f30-4d7b-8644-610e28f4a6b0"
        },
        "item": {
          "id": "1399e797-781e-4f3f-a5e3-168e73422e6f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a4653390-1fb3-471f-ab79-0a2c52d10481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2b5ca6-4085-4b73-92fa-150f1a2ded03",
        "cursor": {
          "ref": "b92aba17-05b1-422e-995f-376df4525dd7",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "34d90680-5338-4ca0-84d8-2532a60d4b07"
        },
        "item": {
          "id": "ae2b5ca6-4085-4b73-92fa-150f1a2ded03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "908512c1-2b27-4d90-bf01-a20f74ae806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877019a5-8ee6-4370-8bbb-59f45af1c9c2",
        "cursor": {
          "ref": "a49dd306-e916-4609-a4a1-94a363117531",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "eef7236f-ca3e-4433-9355-b53357656bc0"
        },
        "item": {
          "id": "877019a5-8ee6-4370-8bbb-59f45af1c9c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d3515274-041b-4f12-a8fe-14762c5e3fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b7cc54-8b60-4e09-9033-4b0eb3a29356",
        "cursor": {
          "ref": "725e2d53-7677-4258-9c24-7ff58ca9ea69",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b0eb54e2-b496-418c-bcfb-514049885a64"
        },
        "item": {
          "id": "98b7cc54-8b60-4e09-9033-4b0eb3a29356",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51baca47-b2ac-43dc-90f0-31169cb32ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6ef47-53b9-4928-8a51-8329dbba785d",
        "cursor": {
          "ref": "03502b3e-5bae-43be-b1e5-85dc0303073a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f783bf1d-5aec-4094-b487-6386600c03ec"
        },
        "item": {
          "id": "bcc6ef47-53b9-4928-8a51-8329dbba785d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97bf0ea0-d48d-4b99-83ba-aae8ec2fec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac4ab02-acfe-4196-a5a9-329329ca455c",
        "cursor": {
          "ref": "3f548cee-f83b-4589-b2f2-7c0a29994786",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c4298371-bd78-46fe-b3a7-41c3aeec4aeb"
        },
        "item": {
          "id": "eac4ab02-acfe-4196-a5a9-329329ca455c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8d82599f-cce6-4a20-80e1-075911148a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cb120b-1592-4178-9b23-43487f7ef57e",
        "cursor": {
          "ref": "7e93d0ff-ff2b-4f9f-8a3a-df63ba438627",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4a10b828-1c38-4e21-ae0e-e55197b5f646"
        },
        "item": {
          "id": "49cb120b-1592-4178-9b23-43487f7ef57e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22fc52a4-1523-4864-9f52-0f720228b908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e2df40-6996-47f2-bdf9-7df703edd069",
        "cursor": {
          "ref": "74d68e84-6757-4b8a-bda0-f0aeb3cedc7f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4c3b93c5-c27c-462d-b27c-84f11cb0d67f"
        },
        "item": {
          "id": "04e2df40-6996-47f2-bdf9-7df703edd069",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fff4e7db-b462-42d9-b010-8e3c09d71673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa509843-8258-4714-a9bb-b389a65aba95",
        "cursor": {
          "ref": "4862384a-39fc-464c-87ae-e1270128e0e3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c474dfc9-1519-4f07-a413-e81e5b278249"
        },
        "item": {
          "id": "fa509843-8258-4714-a9bb-b389a65aba95",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a158c5c-3b22-4e0c-91c0-0a25c53dd6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb685b3-8cb7-4836-8e09-1f45fde1f254",
        "cursor": {
          "ref": "2e944ab4-5a3c-4c2a-a521-139f078b7682",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9054fa10-2a74-4641-8385-680ed45955eb"
        },
        "item": {
          "id": "afb685b3-8cb7-4836-8e09-1f45fde1f254",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dcf11618-a3dd-4abd-9be7-5c4cc627cdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ebbe8a-faa4-4424-a136-c9ae49245257",
        "cursor": {
          "ref": "32e6d6fc-433e-4ab8-bbae-c2166221654e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a9e8666f-5477-422f-8834-e82cf016bde6"
        },
        "item": {
          "id": "e7ebbe8a-faa4-4424-a136-c9ae49245257",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b582c9df-4ce5-4ad1-adaa-21784e35e6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb91f94-b3df-4ee2-beca-c6e5021a5526",
        "cursor": {
          "ref": "b056662c-4ef6-4573-9b66-98f9dfe3a06e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c9bec276-c92d-43e2-bfb3-114bc67c9613"
        },
        "item": {
          "id": "efb91f94-b3df-4ee2-beca-c6e5021a5526",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7df64693-cfc6-453a-9cef-3723d46dd144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af369076-1405-4a5b-973e-f384d7362f0b",
        "cursor": {
          "ref": "5bc78640-b3b9-43bb-b5b7-51b83127fd61",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "125bf972-57d0-49e7-ac0a-49485cd3a111"
        },
        "item": {
          "id": "af369076-1405-4a5b-973e-f384d7362f0b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2806ecd0-a542-4f96-8a9e-cbe186454eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9cbeb-8ef9-4562-a776-7bbc5003a29b",
        "cursor": {
          "ref": "419407e9-e733-46ef-a483-5ef94b0844e6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "073b775a-ff06-4ebf-ab2b-27bd3cfbf367"
        },
        "item": {
          "id": "5eb9cbeb-8ef9-4562-a776-7bbc5003a29b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b35ee2b3-6d47-48a5-a613-d4d1e012a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9f058a-e4b0-4ac1-9720-a529ff62bd65",
        "cursor": {
          "ref": "5a77c92f-7ee4-44cb-8f0f-6e3cdea57179",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "93487b28-f9f2-496e-a2d5-42310867b099"
        },
        "item": {
          "id": "1b9f058a-e4b0-4ac1-9720-a529ff62bd65",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "08af0be0-691c-40d4-9806-87c4d282c5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d01c9f-c216-4f55-9d93-d6163335befb",
        "cursor": {
          "ref": "07660139-29c2-4a3b-a6fd-582ec4277457",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3527835e-3c84-48ca-9870-c59e37eb9780"
        },
        "item": {
          "id": "44d01c9f-c216-4f55-9d93-d6163335befb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e91928b6-3278-4247-8598-cb318b423bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7052c7f-4162-4698-8c7f-74ea475c5dd3",
        "cursor": {
          "ref": "1576d043-98ee-42ba-b6d4-982f54195207",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d834d694-93d8-429b-a416-d23f26d8ccc9"
        },
        "item": {
          "id": "c7052c7f-4162-4698-8c7f-74ea475c5dd3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3ebe9b4-a8ee-40b8-8b04-fb9c09b38153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2168b576-ca23-452c-9efd-a9731b6a7ef6",
        "cursor": {
          "ref": "88426583-7f94-4e12-91ed-cb9da2a04d76",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4e5767b3-007e-4b99-991d-56a8c6df1d7e"
        },
        "item": {
          "id": "2168b576-ca23-452c-9efd-a9731b6a7ef6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dfed7c8d-7f71-447b-8720-cf84fb8374e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe92d615-4b05-4d5d-b833-65f5be433e09",
        "cursor": {
          "ref": "6ba66d7c-b105-424b-a56f-387d01d005dd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "01a1e1d2-46b2-43bc-bd59-2be198cc48cd"
        },
        "item": {
          "id": "fe92d615-4b05-4d5d-b833-65f5be433e09",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b643b2f-9a75-4f4b-887a-117cdf3b1240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeeb20a-8ea2-405e-a988-af1075a900fd",
        "cursor": {
          "ref": "c4dd9d29-0ec3-42d4-81c2-f3248b45a894",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "46f641ed-c743-4697-ac7d-56e9c3660d17"
        },
        "item": {
          "id": "6aeeb20a-8ea2-405e-a988-af1075a900fd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af5bbed9-7f4f-4d6f-bb70-49530e9b49f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09fce3c-46cf-4042-8890-da4ba7189d6d",
        "cursor": {
          "ref": "6b7d2cb3-b963-4acd-aa41-a0c0290007ec",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a62ca1b5-0479-4d70-8a7e-7a37179141f3"
        },
        "item": {
          "id": "c09fce3c-46cf-4042-8890-da4ba7189d6d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ae7208c-ceed-4169-8ed3-1b36cfc83c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97dff88-ba68-447d-afdc-44e648bc8031",
        "cursor": {
          "ref": "e82eef40-2b82-444d-9996-7ba054171737",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2da2d60e-5b5e-4ca8-83c2-b78dcb768135"
        },
        "item": {
          "id": "f97dff88-ba68-447d-afdc-44e648bc8031",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e3085f6c-fcf7-49f0-8e73-2844526be1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d8ebda-fe60-434e-ac53-4de50d4bf039",
        "cursor": {
          "ref": "c28597ea-8fab-4de6-bfe4-15313508f87f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3410bb61-072d-459d-b6a9-8af96b5f839c"
        },
        "item": {
          "id": "e2d8ebda-fe60-434e-ac53-4de50d4bf039",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "610fc947-b1b3-4eb0-a51c-ed204bbbc998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c59148b-e9a0-45e3-8f9b-be1c33f060d5",
        "cursor": {
          "ref": "a34c2d65-be83-4d35-b31c-4945f4b2aa5f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "06609e15-5e36-44bf-809b-1714a10d5b13"
        },
        "item": {
          "id": "6c59148b-e9a0-45e3-8f9b-be1c33f060d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d1694ee6-20c9-4a6b-98f6-c1e23cf185b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7267280c-3d86-4532-a5c0-d1982879037c",
        "cursor": {
          "ref": "11ee8259-553d-4c81-8add-ca058dddf8be",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7559b416-d37b-4697-94fa-c001b0003f5d"
        },
        "item": {
          "id": "7267280c-3d86-4532-a5c0-d1982879037c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9bd1e920-8c06-457b-bc6a-7953db2819d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6291f3f0-5fb7-41bc-b0af-e0b35780588c",
        "cursor": {
          "ref": "a80bf6a5-43b3-4668-8596-755da927f84e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e7fea751-1f43-4ccf-8a7b-42a9b1c7992b"
        },
        "item": {
          "id": "6291f3f0-5fb7-41bc-b0af-e0b35780588c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0300a419-6b1f-457b-9bef-ae1b7cbc9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f664e8-5e22-401e-bc30-cc2edb194325",
        "cursor": {
          "ref": "d63f030a-4f5c-4ed0-8c3a-9ce362eff343",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f347848a-43f8-4187-bd00-22f3e6097df9"
        },
        "item": {
          "id": "c7f664e8-5e22-401e-bc30-cc2edb194325",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "55335787-f9b5-4adf-844f-c78bfce310d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482b5f79-156d-4915-bdb0-bdf934269095",
        "cursor": {
          "ref": "04895bb0-a757-47c2-9dab-0801cf684ace",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6908b578-a69b-4096-ba67-5c685fb0916a"
        },
        "item": {
          "id": "482b5f79-156d-4915-bdb0-bdf934269095",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c7a00fbc-0cef-4164-980d-6e09251c7e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56f3923-2ec8-452f-b71e-b6e5071a811f",
        "cursor": {
          "ref": "4b1c1bf5-30ab-4f48-af92-7690780557fb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4e4716ce-6ce5-4285-b2c1-395792b6a146"
        },
        "item": {
          "id": "e56f3923-2ec8-452f-b71e-b6e5071a811f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "66b3d864-d960-439f-85b5-7f2edbca80d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b090aa-d64b-4b0a-9bd6-f851ca3d3c2d",
        "cursor": {
          "ref": "2dae8627-d186-4436-8b35-698812fc266b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "231c4a8f-b8d4-4025-b82e-8528a1d24215"
        },
        "item": {
          "id": "a1b090aa-d64b-4b0a-9bd6-f851ca3d3c2d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f753c475-f74c-48ac-ac68-8b4bc9af3185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b752284-f55e-4970-8dee-09e72c717a78",
        "cursor": {
          "ref": "b3e4ae63-0d01-4750-9207-e673ec5ecc04",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1a68bb02-a9f7-4628-8741-ded7cec9bd14"
        },
        "item": {
          "id": "4b752284-f55e-4970-8dee-09e72c717a78",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d8059a1e-9d09-4980-8a3d-6ef834475a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744a5f44-a6b8-46bb-959b-e00d11ab4ebc",
        "cursor": {
          "ref": "3b0a49ff-29a4-4b2e-a05b-32293376d3a2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "da844d47-6a6d-422a-bf39-02e0b79e3df1"
        },
        "item": {
          "id": "744a5f44-a6b8-46bb-959b-e00d11ab4ebc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f5dc6c5f-f773-4e18-a808-ce1e8f0e8d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567abebf-bdc0-4117-8778-03cf4324e212",
        "cursor": {
          "ref": "49433ee6-00f0-4fa2-9b5e-b579a19b83dd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0e9f8019-5d0f-4c21-847f-fbc58ccaff43"
        },
        "item": {
          "id": "567abebf-bdc0-4117-8778-03cf4324e212",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e642df9e-35a6-4342-9a7a-e70b88a5c487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bcc8f5-1901-44ff-b3d5-d27933aa6127",
        "cursor": {
          "ref": "0a45f65b-0c56-43b3-9a0a-ef7346226532",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a5e412ad-cdab-4ffd-b373-1a933334bcde"
        },
        "item": {
          "id": "f0bcc8f5-1901-44ff-b3d5-d27933aa6127",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8ea8838f-49a4-42ba-84fc-48048da95b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9e0138-61cf-44b3-85c7-1917327eba2c",
        "cursor": {
          "ref": "822a164e-e8d9-4b58-9466-20add6faedee",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2e0a0e1b-1289-4979-894d-8a173f48152c"
        },
        "item": {
          "id": "cc9e0138-61cf-44b3-85c7-1917327eba2c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "88756ca4-ac84-4def-9f90-7f1cc098994a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2127828-f7d6-4cd5-ac77-67f345a056cb",
        "cursor": {
          "ref": "4e39dc09-c936-40f4-a7ae-764e39449bf7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f9d16698-395d-474e-960b-a9117f658989"
        },
        "item": {
          "id": "c2127828-f7d6-4cd5-ac77-67f345a056cb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "142c3d3a-811d-49f9-be5e-95248901ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecab00ea-419a-431e-882b-48d592605c83",
        "cursor": {
          "ref": "486c4a20-a380-44ff-935f-4de2205a95cb",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "28845a9b-2ac3-415a-b18e-1dab6effa740"
        },
        "item": {
          "id": "ecab00ea-419a-431e-882b-48d592605c83",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe8c64cd-8b97-49bd-9e0c-799b70625d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8d6083-c8fa-447f-a8ae-292cdb86d145",
        "cursor": {
          "ref": "84732133-0ffe-40d5-a1dd-95aa979a8d69",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ad3da569-85c9-436b-9e4a-aaaf7a88149d"
        },
        "item": {
          "id": "1f8d6083-c8fa-447f-a8ae-292cdb86d145",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "380a6eca-98b2-4c12-b8d8-6875e3f37c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986a5dbc-3f7f-49c1-9d9d-e10dbcc2aa69",
        "cursor": {
          "ref": "4240f5b9-4f88-4ba7-b619-a9c5fc1c32a0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1fd02e09-4579-4915-92ff-d2faf20e1280"
        },
        "item": {
          "id": "986a5dbc-3f7f-49c1-9d9d-e10dbcc2aa69",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "61a5a5bc-f8aa-4e8c-8a8c-90e898f58efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12133ead-d571-41c4-9be4-1a24fbec1e49",
        "cursor": {
          "ref": "136d42f4-1dba-4c23-b87b-80b1601150ce",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "819f5137-c5fb-4432-9daf-4c618ead771b"
        },
        "item": {
          "id": "12133ead-d571-41c4-9be4-1a24fbec1e49",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2147b470-98be-41af-b624-09f4f0e981c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909e5e46-d8b6-4d05-8007-5ba4ff39076a",
        "cursor": {
          "ref": "99b2a76b-02ae-4c5b-aa3c-8e7655a63f8b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ab6b02d7-f36e-4d3b-826f-7e8dd9f23eb4"
        },
        "item": {
          "id": "909e5e46-d8b6-4d05-8007-5ba4ff39076a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3edcd624-807d-480c-bc76-cb6421e19d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776ec4d5-f451-4f2c-bdc9-356955f5255e",
        "cursor": {
          "ref": "5c6d4605-ec64-4060-bb3a-4f190794a1e7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "435ca07d-18e2-4392-8d28-c796a411c8e7"
        },
        "item": {
          "id": "776ec4d5-f451-4f2c-bdc9-356955f5255e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "29f20381-c3fa-4789-80ff-cf2b86f845d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1decb3-5c9c-4ee6-93b9-81d113747948",
        "cursor": {
          "ref": "ad48c2da-7f6f-4d72-a5fa-ff40216fef6c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "be72243f-999a-44c2-aa80-fe64294f3026"
        },
        "item": {
          "id": "1b1decb3-5c9c-4ee6-93b9-81d113747948",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e43d363-2e2d-4881-b369-43f9f3d30cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2702fa-9197-48de-8ab0-cb9cb343c8eb",
        "cursor": {
          "ref": "583ca1de-de5e-41a7-80be-9651f252a1db",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bf13f724-5ffd-4d38-9f4c-5db083a2e491"
        },
        "item": {
          "id": "5a2702fa-9197-48de-8ab0-cb9cb343c8eb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f38797a0-0fbe-426f-b0cb-5f6b1818ed7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c287bb-12d9-4eb0-bc95-e184369ffb31",
        "cursor": {
          "ref": "1e3c9962-c4b4-420b-b67e-6bcb93de8d7d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ff70c26e-3f33-4784-ac63-04ac1c135ffb"
        },
        "item": {
          "id": "46c287bb-12d9-4eb0-bc95-e184369ffb31",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ff23e8cb-04c3-4276-8566-e034e8d54581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353e9f89-96d6-4a0f-a34a-1ac9346c8be3",
        "cursor": {
          "ref": "6ec18e99-524f-4d5c-83b3-0c7e90d6332d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4d8cd277-8ccb-4058-951d-0285307682fb"
        },
        "item": {
          "id": "353e9f89-96d6-4a0f-a34a-1ac9346c8be3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "96592304-42b3-4e98-8439-6540d6434ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc70e2b-5d9c-479a-85e3-08808c2fd94f",
        "cursor": {
          "ref": "6bd6037d-8501-4e0e-a62a-0f40d6da698d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ad3f8f2-e297-42ec-b48e-43b13dccfe2b"
        },
        "item": {
          "id": "afc70e2b-5d9c-479a-85e3-08808c2fd94f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5662656-3fec-4f8d-815f-75081634b063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a298b7e-acc5-40ce-b322-f14259bc9879",
        "cursor": {
          "ref": "a883f826-a060-4e5a-af87-06244cda1f33",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9e7aea4b-a93b-4620-8d65-b4894a11353d"
        },
        "item": {
          "id": "5a298b7e-acc5-40ce-b322-f14259bc9879",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3ad47135-9d54-4194-b5d4-9a38c4c086df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00c2b1e-7442-4dd3-b769-5df4af904915",
        "cursor": {
          "ref": "639e5f80-a0ee-4f7a-8a9f-305c7a3f9eea",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "78631769-9752-4b1d-922e-1c092f3fa870"
        },
        "item": {
          "id": "e00c2b1e-7442-4dd3-b769-5df4af904915",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c7499a0f-f939-444f-9738-fb439fc828a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b609e3c7-0501-45d6-b9e3-5570be062505",
        "cursor": {
          "ref": "65136c60-b2e6-4fb2-8bf5-9e3228519f68",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d95c5b1-2888-4a79-9e85-313bd6252e34"
        },
        "item": {
          "id": "b609e3c7-0501-45d6-b9e3-5570be062505",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a00886f8-d90d-4f40-9ad1-c09ae61b7165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7399050-7bc5-4e17-89ba-74b1c613863f",
        "cursor": {
          "ref": "5dd3a392-a987-45f5-a05d-e311f6befaff",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b2dedef7-153d-4665-9aa9-351ebbd0fac4"
        },
        "item": {
          "id": "e7399050-7bc5-4e17-89ba-74b1c613863f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d785c797-bb8c-4f4e-b3ba-4bce81084ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290dbaf7-30b4-4867-8760-a557136958b1",
        "cursor": {
          "ref": "a068f78c-33a7-4665-8872-127fc95a97b8",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b720d594-151e-4624-92f7-e6ea05de48c4"
        },
        "item": {
          "id": "290dbaf7-30b4-4867-8760-a557136958b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7a156d7-02f1-4bab-be93-9d54cad629a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3894ed-980a-4d2d-bb6a-b9889e419110",
        "cursor": {
          "ref": "97b4bcfe-550f-45be-9823-24d7573f3e1b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f788dd4f-f68c-4a66-8df6-9e486161a23b"
        },
        "item": {
          "id": "db3894ed-980a-4d2d-bb6a-b9889e419110",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "626358fd-bafb-4a8a-b407-58d1862dc828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9087b35-aacd-4213-8bf3-cc0c1cc44ed4",
        "cursor": {
          "ref": "c97f4ed5-c3cd-41f5-adc1-d2bbb1da7008",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "87d916c0-66b9-475a-9227-b615c0b7b13b"
        },
        "item": {
          "id": "f9087b35-aacd-4213-8bf3-cc0c1cc44ed4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d35a6c65-61a5-48b0-940d-458e373fc38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65935506-fafb-47c1-bd78-87c7bb4635e6",
        "cursor": {
          "ref": "2df56670-b348-424d-96a5-6cd5b616433c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "679f5cc9-c5cc-4e74-95ef-c0f170f7dd24"
        },
        "item": {
          "id": "65935506-fafb-47c1-bd78-87c7bb4635e6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "32220a51-f731-4b9a-9bbf-3d95ab27e5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4c9578-f69e-4d11-853c-fbe7bcb9b4cf",
        "cursor": {
          "ref": "a4d43d87-fc29-4f32-bafd-377eada3002d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9a43da80-787e-411a-97bb-9fd26799c24a"
        },
        "item": {
          "id": "dc4c9578-f69e-4d11-853c-fbe7bcb9b4cf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ae73f759-67b7-4e2b-92d2-7aa024e45c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380dfd19-a335-46a0-8c53-2444914978ab",
        "cursor": {
          "ref": "b5a05a68-fa66-44c5-b121-490a8e639753",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "63280745-63bf-4b94-aff4-87aad0d0bba5"
        },
        "item": {
          "id": "380dfd19-a335-46a0-8c53-2444914978ab",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0dcf0881-3b3d-4d7f-98ca-2912ef63d0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e179ab3e-581e-462b-a449-ac44333c77f5",
        "cursor": {
          "ref": "e4de426d-add2-434d-aab3-3823e6edb686",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e23cf51b-9d0f-4cde-9957-1ae9f182747f"
        },
        "item": {
          "id": "e179ab3e-581e-462b-a449-ac44333c77f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f1898d24-2965-4735-8a12-4ea9e7320af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c41a93-52a8-41ce-9038-2e595a659e4f",
        "cursor": {
          "ref": "0f7f8832-a511-4c2c-bc3e-d1ed17ec61c6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ef65678b-4c36-4e37-8f70-95e13c1b6072"
        },
        "item": {
          "id": "d7c41a93-52a8-41ce-9038-2e595a659e4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "644c14b5-ea33-4acf-9feb-800d3a2cbefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db50088-192a-4eb6-800a-b59448c1f411",
        "cursor": {
          "ref": "24092b26-9d5c-4686-9018-88aeead7ddf1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c8db1736-eb11-4c07-a629-4ac2c6a35d70"
        },
        "item": {
          "id": "3db50088-192a-4eb6-800a-b59448c1f411",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc70023a-c5dc-4a71-8190-61b2986136ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4b8669-9065-4042-b010-c6bc4ff4abde",
        "cursor": {
          "ref": "387b50d4-7f4e-442a-97dd-33215f2bb905",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "56c3759c-99e7-400b-a481-78c0d1d70b9c"
        },
        "item": {
          "id": "2f4b8669-9065-4042-b010-c6bc4ff4abde",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8b796745-f1c7-40b8-9881-208410092ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafe66aa-f678-4b6a-af01-608d1fc8a083",
        "cursor": {
          "ref": "50f84654-220d-426f-ae96-9f752e486883",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "824e179a-e083-4a6b-8e2a-accfb41cbcf1"
        },
        "item": {
          "id": "eafe66aa-f678-4b6a-af01-608d1fc8a083",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "148bb30d-d077-4361-aac3-c5e466bc16f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce154826-557d-46e2-9a0c-43be88b735ce",
        "cursor": {
          "ref": "9c437962-bf80-4dd1-8d66-8e21081e8ec0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "931a6bbd-a023-4b23-bc14-12c341cd14e0"
        },
        "item": {
          "id": "ce154826-557d-46e2-9a0c-43be88b735ce",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "95a6347e-62d2-4f25-a105-ed7a1da8c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045b0885-f9c6-4cfb-b7f7-471eae0ee40c",
        "cursor": {
          "ref": "7e16a592-c437-4102-898e-68fe41728c25",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fd50e14a-9d4b-4928-abb5-a2f8c09249b4"
        },
        "item": {
          "id": "045b0885-f9c6-4cfb-b7f7-471eae0ee40c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "af32f852-3e4d-42f8-bdff-ca9dee6c0ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8504bd51-24f3-40b7-9f11-23248c719029",
        "cursor": {
          "ref": "5df8a097-5efc-4dc8-a937-8ae0109c09f5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "88bd13b2-ad4b-4996-8fa7-3489d5a5525d"
        },
        "item": {
          "id": "8504bd51-24f3-40b7-9f11-23248c719029",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62bc01ba-f7e3-4f22-907c-b5272426b8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398a66dc-2d81-4fe2-9ff7-173fbdc986b2",
        "cursor": {
          "ref": "98f85d6f-e64c-4f68-b7aa-ed4460331dba",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5fae9f49-25cb-4d7b-8e77-6cb7e779fb7b"
        },
        "item": {
          "id": "398a66dc-2d81-4fe2-9ff7-173fbdc986b2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b3f7f95e-1f6b-4e3c-8a1d-0351278ff3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33665328-b151-4f83-91ed-2b3821ce34c7",
        "cursor": {
          "ref": "d378100f-47a5-4d27-96c6-1afeb2a40fdf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93066864-90a1-48b6-a02b-856e8262c81e"
        },
        "item": {
          "id": "33665328-b151-4f83-91ed-2b3821ce34c7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "45259d05-8b3f-4952-895b-d19c23aeb458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720ecb4a-4b6c-4b53-a10c-a3940f319043",
        "cursor": {
          "ref": "9a3477ca-a7aa-4fa5-aaf9-4c91c6980b10",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "71dc53d3-c92b-4981-a908-081c47a21309"
        },
        "item": {
          "id": "720ecb4a-4b6c-4b53-a10c-a3940f319043",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f89576ec-f1f2-468c-822f-48ce16c34f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96e571-84c5-4f50-8379-cb9c1ddca028",
        "cursor": {
          "ref": "37af9646-0d72-4a92-af02-39b6ee9d5839",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "671df007-5491-4b0e-b362-e7fffeb7a949"
        },
        "item": {
          "id": "1c96e571-84c5-4f50-8379-cb9c1ddca028",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1845f86b-da47-4148-9b37-41fe999823ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330a2ab8-c49f-45da-863a-ee328d6bcbc0",
        "cursor": {
          "ref": "07dc4a7f-876d-4669-a255-6c04d7e91476",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "35aa2ae4-4ea1-4cd8-9224-f69b530e72bc"
        },
        "item": {
          "id": "330a2ab8-c49f-45da-863a-ee328d6bcbc0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "31bab49c-8522-493e-99cc-dc19283b0fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afda041a-3e60-411e-95ef-0cc91b92ff72",
        "cursor": {
          "ref": "6da0ba22-faf8-4636-bba7-0516f82c9e8e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c2538a1e-bb14-408e-b55a-0f197ca865ff"
        },
        "item": {
          "id": "afda041a-3e60-411e-95ef-0cc91b92ff72",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ae710121-3ee8-44bb-94ff-b888347940e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5337bd1-1a87-4d88-90cc-b8e805270d76",
        "cursor": {
          "ref": "050d3dc3-2c43-49ab-9bfe-93003b7bb006",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7d32082c-1045-43fa-8212-da95ea5046a0"
        },
        "item": {
          "id": "e5337bd1-1a87-4d88-90cc-b8e805270d76",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d4c1796c-1f5e-44a0-a1fe-d1accc1f428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c03c24-ffca-4675-82e6-2fea433e4a90",
        "cursor": {
          "ref": "bac7b5c3-1305-495f-941c-d22fb37594c1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d4077b88-7462-4302-82d1-ed1d12b52f49"
        },
        "item": {
          "id": "b0c03c24-ffca-4675-82e6-2fea433e4a90",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8a2a3fc0-9bf8-4670-8f0b-4c644dd7c467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e1b39-fd63-411e-a77b-8b91ad7259c7",
        "cursor": {
          "ref": "d292e4eb-3425-47ae-a6aa-9c84dc8869e7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b3c5214a-22b9-401b-a000-7eec08bc50d6"
        },
        "item": {
          "id": "3e6e1b39-fd63-411e-a77b-8b91ad7259c7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a66ad513-95b5-41b8-b1b2-7bc625dde676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21188adb-a2e0-49d5-9e74-a24e7f9e5e38",
        "cursor": {
          "ref": "055a9ca2-246c-4068-a018-6fb2adc46a89",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "93272677-e32f-4247-92c8-5dbe63012279"
        },
        "item": {
          "id": "21188adb-a2e0-49d5-9e74-a24e7f9e5e38",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "28999626-4739-4054-8684-a7577008ae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03db0679-a646-42e1-8a02-cafca301dcd7",
        "cursor": {
          "ref": "aee39914-801a-4e23-bd98-26d2425f1440",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4bae8fd1-022b-4d28-8595-d3f66e4cee2d"
        },
        "item": {
          "id": "03db0679-a646-42e1-8a02-cafca301dcd7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1491872f-f8d0-4400-84a9-27ff8ba2ec8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced841ac-9507-44f0-9b04-e8b6a86dee98",
        "cursor": {
          "ref": "46ffcbd1-3b60-41e2-bf14-157752f259e2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6dbd3a72-b5ec-48b3-8056-297496912345"
        },
        "item": {
          "id": "ced841ac-9507-44f0-9b04-e8b6a86dee98",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0ba83f43-e2c3-47d4-9e8f-279e8cb62740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e28cc3-b4ca-4b57-823d-90f9a3826f0a",
        "cursor": {
          "ref": "09f93957-ef21-45bd-a4e2-b888bcac8c99",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "84f29871-ee8a-48c8-bf8d-ea8e3b801313"
        },
        "item": {
          "id": "52e28cc3-b4ca-4b57-823d-90f9a3826f0a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5ba97c93-aef0-4131-964b-a2058e341a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66a1840-1f6a-41cd-9076-c918685ba2f7",
        "cursor": {
          "ref": "990ee5be-d696-41dd-ae29-9dc5197563cd",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3059a319-0df8-40d7-8cf4-944698056e61"
        },
        "item": {
          "id": "f66a1840-1f6a-41cd-9076-c918685ba2f7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a3f6831e-4884-462c-9264-999710afa73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8a8de9-3e87-49dc-b279-65eea0c4cc39",
        "cursor": {
          "ref": "6cd1fdc0-d534-4f3b-ad73-362538b0d808",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b2d44121-f53f-462a-a7b1-4454cacfe38f"
        },
        "item": {
          "id": "1b8a8de9-3e87-49dc-b279-65eea0c4cc39",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1b1f16ce-b51a-4b6c-bb38-41a8ca1733c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceef6de-556e-4747-bdef-e8c45211809a",
        "cursor": {
          "ref": "5c816116-507b-456a-beef-6faba341b056",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7bf1dcaa-71d8-413f-875d-b22f79ade9c0"
        },
        "item": {
          "id": "5ceef6de-556e-4747-bdef-e8c45211809a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6556fc1e-7e8a-4e5f-abc4-2fbe95196e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f5cccf-9d29-4217-bf87-ec15d95c69b7",
        "cursor": {
          "ref": "a478310f-2ac1-4101-835e-860c8ba2f10d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0664067-fd24-4486-8a44-ef81a1adf434"
        },
        "item": {
          "id": "a9f5cccf-9d29-4217-bf87-ec15d95c69b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d4330dc6-dc30-4f9f-830c-6665b6a8e143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30638f60-e99a-41f5-848c-559a069074f0",
        "cursor": {
          "ref": "f668f58b-9400-43ba-99ca-9c9514e85377",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7ed60697-d285-48cb-b707-7e0b2902e2bb"
        },
        "item": {
          "id": "30638f60-e99a-41f5-848c-559a069074f0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bd1ce5eb-2609-44e3-8472-b45db1f07e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa9a4d-8c44-41c1-bee4-c3ce17db99cd",
        "cursor": {
          "ref": "113073a4-708e-47d0-8234-1f6c1b335ee2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5cc29830-ec59-47ce-bf6e-fc7be862777a"
        },
        "item": {
          "id": "d7fa9a4d-8c44-41c1-bee4-c3ce17db99cd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "63900114-75c4-47c7-ad9b-7d58c5d54e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69946fd4-3e5a-4835-a981-5f7a78ca33b4",
        "cursor": {
          "ref": "dfe1453f-8180-4aaf-9aa8-566ed1870a2c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7872f8aa-5f26-48ed-a2a3-b61bf8a946ad"
        },
        "item": {
          "id": "69946fd4-3e5a-4835-a981-5f7a78ca33b4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "89b687bf-191e-4995-87c6-196d48f5d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c6e696-5b82-4773-b7db-77389e3f1d4e",
        "cursor": {
          "ref": "200b6bb5-bff9-4198-b14f-3191a039dabd",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "85dcb893-def5-468d-a4f1-f216ec6e1edf"
        },
        "item": {
          "id": "28c6e696-5b82-4773-b7db-77389e3f1d4e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "11b84046-4d91-40af-830f-1e1d4a75c6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6b190d-df96-40fb-8e9a-f02b54db44c1",
        "cursor": {
          "ref": "8a4496e8-a5bf-4a58-a4cc-1cb82aee1c12",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "35b1cccd-da93-49f8-9932-7b531ea13714"
        },
        "item": {
          "id": "9b6b190d-df96-40fb-8e9a-f02b54db44c1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5bdbf0d8-a0a1-4719-8b39-7ebc5f18f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edd89e3-c231-4dff-b416-95645d1873de",
        "cursor": {
          "ref": "70b67ee1-5e96-4dca-a310-4dedadace7ab",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4310e954-78cb-4dce-a79f-6f9d6155d24b"
        },
        "item": {
          "id": "7edd89e3-c231-4dff-b416-95645d1873de",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "535503a6-0270-46ed-a36f-fdb5776e1c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb019b8a-6445-44cb-abc9-25f4e6bc42cf",
        "cursor": {
          "ref": "b07d41af-7175-4ddf-8821-e9c88e52514f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7eaade97-5eff-4c80-84e6-011b96c1c994"
        },
        "item": {
          "id": "bb019b8a-6445-44cb-abc9-25f4e6bc42cf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "046461a6-52f8-429a-beda-c2b9e2a5cb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7edfcca-90fd-4371-8517-23e0d513a6c6",
        "cursor": {
          "ref": "bc1ca102-7d45-4a30-bdce-fe7af5f709ea",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "74884ae4-e8d8-4c63-aa2e-1ff2de5883ac"
        },
        "item": {
          "id": "b7edfcca-90fd-4371-8517-23e0d513a6c6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "41bb61bf-3801-46c7-abf7-9ed254b07330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15175322-0f19-462e-a83b-19d15136145d",
        "cursor": {
          "ref": "03cfa445-c4ba-4637-8feb-2513dc560952",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2fbd53ab-7d8e-48ad-9321-a49387f5481f"
        },
        "item": {
          "id": "15175322-0f19-462e-a83b-19d15136145d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "02f838cc-7669-445b-b7ca-8d0ce3f75845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508e6c19-6120-4cfe-8d4b-64d218e2bff1",
        "cursor": {
          "ref": "3a1ce26a-ff9c-46b7-9846-1f45aab5f0a5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f3df2d4d-6050-46d2-8b2a-d6b54ec4559e"
        },
        "item": {
          "id": "508e6c19-6120-4cfe-8d4b-64d218e2bff1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7db75056-6d6a-4ea5-95e7-fc6312679ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46e5572-26f7-4d76-93da-b16dc65b14c6",
        "cursor": {
          "ref": "ad8384e1-2c24-47f6-a673-29db3753daff",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d8c75064-411e-4d0d-b887-637c1ddb46fa"
        },
        "item": {
          "id": "f46e5572-26f7-4d76-93da-b16dc65b14c6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8dc71312-9035-416f-aa30-4364bbc849f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c9b050-9391-45f8-9759-633772a5ccbb",
        "cursor": {
          "ref": "a165c31b-9d85-4e34-9d1b-41476220f25a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dc9fc6b6-d5b8-4ec0-84e5-a6bd6a382d6c"
        },
        "item": {
          "id": "a2c9b050-9391-45f8-9759-633772a5ccbb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "400a928c-7255-4c18-9aa6-ac082f365e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d3282-be64-40d2-bce5-4357c3509fb0",
        "cursor": {
          "ref": "45a25221-6a06-46bb-a68f-a0a5f8342523",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d43f5de1-9f42-4139-bf63-8205c8e8ff5a"
        },
        "item": {
          "id": "ac0d3282-be64-40d2-bce5-4357c3509fb0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "151c5b89-fd90-44da-a169-69a3f90f8779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c82e1c-3cca-4437-adb3-ca4f4146d8af",
        "cursor": {
          "ref": "096e07f7-aabb-481f-ba12-fcda4dfa414a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d1a88989-e2cd-4f04-acb5-51eff1cfde25"
        },
        "item": {
          "id": "d1c82e1c-3cca-4437-adb3-ca4f4146d8af",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9db32678-ef77-4f3d-a973-2cbbc37996d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb947219-3ef1-4269-b836-b508f8e9fa46",
        "cursor": {
          "ref": "f20564ff-7586-4c2b-874b-c892c78f6953",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "774187b1-726e-4601-9465-6e305aea5e7e"
        },
        "item": {
          "id": "eb947219-3ef1-4269-b836-b508f8e9fa46",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9901a8b3-889b-45a3-92f7-f610e0401eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78369aff-7406-47d1-9d15-28c08eddba2c",
        "cursor": {
          "ref": "9ae55ece-e8a2-4a1d-92e1-34562d8ebc1a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2008d9b-cc00-48a6-b96e-902fff9539c4"
        },
        "item": {
          "id": "78369aff-7406-47d1-9d15-28c08eddba2c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "509ac5ad-a98e-44e7-8d06-42f61592e9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca694535-2204-4fcb-98b8-a918f7660b4b",
        "cursor": {
          "ref": "f54ac62c-6ae4-497d-b014-89400805ac0d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1e53bfe7-7137-41ba-b8dc-57bb19f99f90"
        },
        "item": {
          "id": "ca694535-2204-4fcb-98b8-a918f7660b4b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "621cb10d-6d77-47dc-9bd2-dfca53de12f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d482fc7f-dc7f-4e20-bee0-3183e8053d09",
        "cursor": {
          "ref": "9dcb13a9-4c63-4e0e-bf4a-8e7bbedb628d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cb32026e-34e2-4cad-a160-44f0f5b526cc"
        },
        "item": {
          "id": "d482fc7f-dc7f-4e20-bee0-3183e8053d09",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f37ed2a9-19e8-4e98-b9a4-81e2ab3008ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df2f65a-8808-43ce-b3ed-a746444b2464",
        "cursor": {
          "ref": "a7347570-51ee-4bff-89ee-4f5f8093d763",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6fc832c4-e77c-4122-a919-4d4bf449b8d7"
        },
        "item": {
          "id": "8df2f65a-8808-43ce-b3ed-a746444b2464",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19c0bbaf-c233-4723-9f5c-a54aa328baad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987778bf-c5ef-41d8-b4f5-000df2fc9ee5",
        "cursor": {
          "ref": "130b4513-cc8d-4d56-b065-ddabc109ad08",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ccb5a338-ddf9-4534-93a0-c8f4ab6311ee"
        },
        "item": {
          "id": "987778bf-c5ef-41d8-b4f5-000df2fc9ee5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "65bbee37-b2f8-451e-af5e-6702d43833a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe9d191-468b-4e68-91e3-3b5692df57b9",
        "cursor": {
          "ref": "e26d47c0-1978-41b1-92f5-0dd1fbb3b371",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f34f232d-c0f1-4688-a3f4-2d10fa37f058"
        },
        "item": {
          "id": "cbe9d191-468b-4e68-91e3-3b5692df57b9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2695287-0cf3-4afe-a515-61cd860e1e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b197d8-120b-424b-9be9-b2f22f446d11",
        "cursor": {
          "ref": "b5e01869-d69a-4920-bd69-255de1b9e644",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "967b0250-a409-4ac7-aaab-54f39ef42bde"
        },
        "item": {
          "id": "59b197d8-120b-424b-9be9-b2f22f446d11",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fcfd0857-7d0c-4b4e-92c8-7b6122fda69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18140be6-33e0-4e33-a90d-4aa7f6521927",
        "cursor": {
          "ref": "a34ee274-3ced-4e49-805f-7bf7c95f2eca",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f9e32d74-871c-4a1c-81c2-54beb74e9759"
        },
        "item": {
          "id": "18140be6-33e0-4e33-a90d-4aa7f6521927",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fcf87b36-0829-4240-bb6a-07297e3c8701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89581e9e-d9c3-43a6-89e5-59b99607b01a",
        "cursor": {
          "ref": "1377aa1e-6149-4980-aac3-cbfb04c6d181",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dfb5af5b-bea2-42b4-ba47-92f4399b09ab"
        },
        "item": {
          "id": "89581e9e-d9c3-43a6-89e5-59b99607b01a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee73363b-e996-4db7-b24a-7037704a856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa1638-c3e3-4f72-a9cf-36dcdf9ba479",
        "cursor": {
          "ref": "b2e0c5f0-361f-494b-8c3b-90ed67f203a5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e2979ddb-9d8c-464c-8ffb-016ef66cda37"
        },
        "item": {
          "id": "cbaa1638-c3e3-4f72-a9cf-36dcdf9ba479",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9bacad6b-ab70-4b7d-bed7-29295162f9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af37372-4c0d-4add-8fe8-9c9f9a99be03",
        "cursor": {
          "ref": "c578e67f-581c-4f8d-aafa-12d4ced29513",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "195cc2c9-b7a5-45a3-90c6-366f6643160b"
        },
        "item": {
          "id": "7af37372-4c0d-4add-8fe8-9c9f9a99be03",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f9193ad1-5798-4b66-9f80-29d4eb54f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86bb0a9-369a-45cb-b9fc-646fc1b84981",
        "cursor": {
          "ref": "dba06182-ce4c-480c-a9ee-8fe3ae10e631",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8203f122-be53-4c0c-8899-16acce784911"
        },
        "item": {
          "id": "d86bb0a9-369a-45cb-b9fc-646fc1b84981",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9754e8a4-1f72-4776-9edb-85bb4e862bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b434d3-5eac-4aee-8295-0f00a68937e2",
        "cursor": {
          "ref": "129a8b4b-200e-4aad-9fdf-ede3e9604c0d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e882e4f2-7903-4065-bf38-ff165e038c00"
        },
        "item": {
          "id": "d6b434d3-5eac-4aee-8295-0f00a68937e2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b4518b00-4a58-4078-b2a5-37785f1d7556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2750b041-a53e-4d30-b6ee-1ae8de3c82cb",
        "cursor": {
          "ref": "edf4f81d-6339-4633-b67b-7ed210139710",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "40cf496f-131a-48c9-bbc9-45530fe25208"
        },
        "item": {
          "id": "2750b041-a53e-4d30-b6ee-1ae8de3c82cb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8ad8e341-1917-4fb5-9441-9758fb5a4d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8a2f18-fbac-46a3-a968-70259b2f8b2b",
        "cursor": {
          "ref": "cc6e2b76-cceb-4eb9-8953-98952c632b4a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "39559f17-0fcf-4959-a05e-5740750bcd42"
        },
        "item": {
          "id": "6b8a2f18-fbac-46a3-a968-70259b2f8b2b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d4b620f0-e47e-492e-addc-d955d3cd213e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e33701-a07a-44fc-811b-59fc833b1b8d",
        "cursor": {
          "ref": "70e3eacd-84d7-488d-bd31-1f65eaac267c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b170c335-cf0c-4770-84b6-84880d78e7b5"
        },
        "item": {
          "id": "18e33701-a07a-44fc-811b-59fc833b1b8d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2b566c06-1da5-4f23-a52e-0d31ebf55685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd705b1f-8563-4856-b703-f49ebecdb449",
        "cursor": {
          "ref": "a4f129ae-0163-4089-ac32-2463e4f58579",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f75b1644-d196-40f6-a1e4-90d5da5d04da"
        },
        "item": {
          "id": "cd705b1f-8563-4856-b703-f49ebecdb449",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "945b6df6-c438-450a-854f-ef52f83c8e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768a8bac-b52d-4cf0-a6b4-e8216d5312bf",
        "cursor": {
          "ref": "24f952a4-4d91-457d-8fda-b9d2d4f542a6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f10eac47-5a9b-48eb-a7c3-f30caf5eddb8"
        },
        "item": {
          "id": "768a8bac-b52d-4cf0-a6b4-e8216d5312bf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "889c0eaf-786c-45b4-bae4-7b1a23b9045f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be02ed91-69ab-47e5-b1b8-ad847dad5f47",
        "cursor": {
          "ref": "993f497a-0dbb-4b79-b704-164cc124bf2f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4c9daf81-7fe8-4d96-8194-6301707571e1"
        },
        "item": {
          "id": "be02ed91-69ab-47e5-b1b8-ad847dad5f47",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "da053232-6d80-42a1-aabc-a313cfe0666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910f7f3d-198a-4752-ab83-a17e601fa901",
        "cursor": {
          "ref": "9c020bf8-644a-4d8a-a31f-cd6b0133c7ff",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "74d62b21-39ee-4df8-9068-2803153ee666"
        },
        "item": {
          "id": "910f7f3d-198a-4752-ab83-a17e601fa901",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8825013d-3b03-47c8-a492-a94631393d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81242551-03ca-4ae6-86cd-321e70a3378b",
        "cursor": {
          "ref": "2d1caf28-049c-4ec7-bfb0-8c0e51a5d799",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7a521a47-e771-40d6-ac20-95cb3394b9c5"
        },
        "item": {
          "id": "81242551-03ca-4ae6-86cd-321e70a3378b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b362fd14-8628-436a-8935-78e9ba6caba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51ecd5c-bef7-4530-999a-7324335da0c5",
        "cursor": {
          "ref": "4881f223-f0b0-47a3-8a4f-55387ac5b0dd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f1544ff6-f0c3-4ccd-95b5-9c8c046d677d"
        },
        "item": {
          "id": "b51ecd5c-bef7-4530-999a-7324335da0c5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "36d22e82-d94c-4c37-b5bf-dbdd50af5b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eee8b7-194b-452f-8112-5dcfd39f9b78",
        "cursor": {
          "ref": "f6153561-b1b0-41fe-8885-03ea24f83fc5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7246a00d-ce6e-4af0-8feb-ee7bdf0ace24"
        },
        "item": {
          "id": "49eee8b7-194b-452f-8112-5dcfd39f9b78",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9059e106-eade-43e5-9abe-4ca1569c0241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dbd4cc-73c4-405a-94ee-139e9fc07178",
        "cursor": {
          "ref": "b3bfb2dd-7316-417a-9ebf-8897d4948da5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ed4017cf-71e7-48eb-9909-c4af6987e10a"
        },
        "item": {
          "id": "42dbd4cc-73c4-405a-94ee-139e9fc07178",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4b005044-27bd-49e9-be68-477aa69f3fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ee3f25-e3d4-48f9-b4f9-1e3d092949a7",
        "cursor": {
          "ref": "f4cb124e-51d6-4697-ba5a-0aee4ffa16be",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "899bbc63-a225-4132-a28f-4f305dbbcb32"
        },
        "item": {
          "id": "f6ee3f25-e3d4-48f9-b4f9-1e3d092949a7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b8407d18-6af8-4ba7-92b1-f3d11172946a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db3f53-99f2-4213-baab-e9144a0c0208",
        "cursor": {
          "ref": "d8b2beac-9039-469d-a448-86aa8e82effe",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7dff8362-7d15-4996-8972-053e77352e36"
        },
        "item": {
          "id": "e5db3f53-99f2-4213-baab-e9144a0c0208",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c37c84d8-d159-446c-a2b1-b77f4bde9f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d248e1e9-4528-45e3-886e-c360a607f139",
        "cursor": {
          "ref": "8da6d4ec-e409-449a-b5d1-911321e34b4b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "643aa6fa-291d-4387-8ec6-e9a56284017a"
        },
        "item": {
          "id": "d248e1e9-4528-45e3-886e-c360a607f139",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8ad28670-a3c8-43db-856c-e22511a07168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6a20f4-faf1-421d-bc78-8f27a7224474",
        "cursor": {
          "ref": "9de34391-9971-43cd-9510-d3c03f492038",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c4df0bc6-dfd0-409e-acad-b33587b9c4a2"
        },
        "item": {
          "id": "2e6a20f4-faf1-421d-bc78-8f27a7224474",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "670c21c7-3556-4bb0-97a8-b89e47d0b4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f29695-d485-451d-85fa-2315f7bf5c6b",
        "cursor": {
          "ref": "70978f42-bd2d-4db3-82fd-3d79c547a879",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f5f70565-45e3-4f9e-862d-af2c4d668f96"
        },
        "item": {
          "id": "f8f29695-d485-451d-85fa-2315f7bf5c6b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8795d64d-9c90-40d3-ae19-33e39e9c93bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf003f3-7b8b-427e-9d26-95619c141e8d",
        "cursor": {
          "ref": "51736392-16c0-4b5a-8ab2-de1d37176bcf",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c33569ab-bed3-4a7a-87af-f882fa3d3065"
        },
        "item": {
          "id": "eaf003f3-7b8b-427e-9d26-95619c141e8d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "752560f6-c9bf-43b1-b922-725bec7c29fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44b0123-bbef-42ce-b2b0-d9db0ea3cc91",
        "cursor": {
          "ref": "0ae0eca4-80dc-4457-8055-0dc1f6e167d7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "95270b70-2d9f-4221-9865-511bb177a039"
        },
        "item": {
          "id": "d44b0123-bbef-42ce-b2b0-d9db0ea3cc91",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8cc516b7-50b5-485a-b1be-8b87223aa73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6e041d-4534-4dec-815a-5cbfe44442fb",
        "cursor": {
          "ref": "6e031438-49b9-48b4-8d12-0a9baca3bd0a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "29c64d96-bf41-4b2c-b6eb-e38e0a85f364"
        },
        "item": {
          "id": "1d6e041d-4534-4dec-815a-5cbfe44442fb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0388cae6-b89b-4b2b-adb7-dd2cc66abc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb261eae-04ce-47fa-ab6c-e1a2f9ff70f2",
        "cursor": {
          "ref": "1d21e233-e36f-487f-a71c-d538238c6761",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7dafd6c8-202a-48af-8c02-9b832a19fcdb"
        },
        "item": {
          "id": "eb261eae-04ce-47fa-ab6c-e1a2f9ff70f2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "153de51e-1746-41bc-af0f-c9cac327d2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a18750-1fac-45f3-ba57-3d88e0510dde",
        "cursor": {
          "ref": "c4228fdf-be3c-401d-b9db-ad10e1dc372e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0e64f1e4-ec67-4ab3-8567-a070a5c07512"
        },
        "item": {
          "id": "a6a18750-1fac-45f3-ba57-3d88e0510dde",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dea8055f-5ab7-4f5b-8b17-0878beb6c622",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423aa4ac-3664-42a0-b8aa-a3eac8849ce7",
        "cursor": {
          "ref": "7a3b0f17-7c82-457a-8386-cabaeb3c8c6f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bb104103-6760-427f-a98d-f14ceb77c137"
        },
        "item": {
          "id": "423aa4ac-3664-42a0-b8aa-a3eac8849ce7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4e8b62f0-5cc3-4212-8c5a-8ddfb29a26b9",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae18ab0-9f46-4cd9-8a86-9948546d3f71",
        "cursor": {
          "ref": "229bc7d9-d837-4bc4-a36b-29b376352b1f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "96e98557-74b8-4f69-9a32-9f625c57db0f"
        },
        "item": {
          "id": "0ae18ab0-9f46-4cd9-8a86-9948546d3f71",
          "name": "credentials_verify"
        },
        "response": {
          "id": "94775c91-fdc9-43fe-8e5e-481e16591044",
          "status": "OK",
          "code": 200,
          "responseTime": 1417,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b8f6c1-72e6-4de8-ac43-b0efe5a8009e",
        "cursor": {
          "ref": "67d28161-063d-47bb-8aac-72e2ca23fe11",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "087d8463-b601-4bab-afb5-5b46bb3ddc04"
        },
        "item": {
          "id": "98b8f6c1-72e6-4de8-ac43-b0efe5a8009e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7f4401da-1647-45fd-96c2-ce48afdb3d58",
          "status": "OK",
          "code": 200,
          "responseTime": 1380,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d841bc-14ce-4734-b95f-dd34aac9878b",
        "cursor": {
          "ref": "147d90f2-8642-4aa5-8b7d-05d6fa8dd192",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b46738ce-9a45-4944-988a-4d5ef56342eb"
        },
        "item": {
          "id": "39d841bc-14ce-4734-b95f-dd34aac9878b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7711909-827e-47a2-8330-c3cfe78e91f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d841bc-14ce-4734-b95f-dd34aac9878b",
        "cursor": {
          "ref": "147d90f2-8642-4aa5-8b7d-05d6fa8dd192",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b46738ce-9a45-4944-988a-4d5ef56342eb"
        },
        "item": {
          "id": "39d841bc-14ce-4734-b95f-dd34aac9878b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7711909-827e-47a2-8330-c3cfe78e91f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f12a8f-1834-44ad-8b60-149fc381950c",
        "cursor": {
          "ref": "f6dab24c-dc83-433d-aed5-5dd8a2bcc959",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4dff8b1d-3839-4c89-b2cb-3d76fc567929"
        },
        "item": {
          "id": "06f12a8f-1834-44ad-8b60-149fc381950c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4cb1a58c-488e-454b-a379-c840c1ba7f83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc89e52-0821-44a1-bd93-34f55e5f82f3",
        "cursor": {
          "ref": "2316dd33-4ac6-4b71-8726-848ec98752ff",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "57fd98e3-ddee-407e-ab18-ef81700a9e1c"
        },
        "item": {
          "id": "ccc89e52-0821-44a1-bd93-34f55e5f82f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "db2728e3-8d88-4cb3-a12c-8b93c8fb39c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}