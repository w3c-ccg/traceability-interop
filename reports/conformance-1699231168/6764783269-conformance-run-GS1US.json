{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ecb6662a-29f0-4b00-9531-d9dac509a3ca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "078c8f0f-2e3c-49ab-b86c-203df78119ab",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93fa2cb5-9f03-4c53-90a2-39b5ca0d9f94",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6fde1279-ba7f-42b9-84e4-d1f5f8b7dc2a"
                }
              }
            ]
          },
          {
            "id": "64118517-f09f-4ce5-b130-e9d938629970",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e2f31c9-ec51-4206-88db-13032ca1b8e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "96e52d00-2ec9-461f-8e24-eb195f2b12d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7f0b2db6-b837-4355-a39d-ec554132efde",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bc1f4242-9b50-4fcd-b1dd-95142c87e4cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54fd2c7e-92a8-4a25-ba8a-d735416bc023",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30cc1fba-dc59-4deb-9eb8-4d43d5d4f301",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63d5645e-b8dd-437a-ae2a-0528e567436b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a0491a1-aed7-4756-a751-ff687ecfec40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "013fcb2c-61ad-447f-9c9a-1f192b978327"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3cf7408-3cf3-4202-a3a0-dc224b7c95fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb562486-7506-47a9-8d6e-85cd7c8ddd8b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c4345d0-dc23-43bf-95c2-e9343b7a2296",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7c58f2f9-86eb-4133-a323-ab97738ab49f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "318861c2-1bde-4531-9c7d-d9df77276c07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b29079e-5d1a-4e11-9aa0-7eadb7fa1a31"
            }
          }
        ]
      },
      {
        "id": "5d8b265c-74ea-4453-911a-872a4593718d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5280a93e-48c1-485b-a88a-45e1f166ef5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afe60acf-a74e-4449-839b-6492106c070e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d8259f5-4fb4-4d08-bf1b-960325839b5d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aed574-12fe-40d8-87bd-358ece57301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f48681e9-f67f-4fe2-9db4-cd45f5fbfd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e18c00-d45e-47bc-a712-833ed5f174ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a390b5-e9b9-4300-9c45-982d82936aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f122507-bb0c-41c9-9753-1c17d21c06eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57833b8b-36d6-4006-9051-1608e70df5ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f998f4-97bc-4559-8f15-6c5396425fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76fa8808-b5de-477d-9fe1-08241e4ac0e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d649d06d-81ce-4025-b39a-9eff1cff5f2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2ed71fc-d3b4-46e7-b053-f65e29b852e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d204a424-d0b5-481a-bb0a-dd5f743f559f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d5d9fcc-d823-4877-9cf8-64f8268981e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f3edd-9d8d-4f52-83da-77409fbd9bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709d9f1e-160e-4907-821d-19567df516f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94923502-d5f1-4ffd-98c9-21d951f5c93e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa7945b3-b977-4a11-b4ef-59dfeb86b435",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afc7cb69-6fba-4396-a278-30ab17c1cd7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fb702e17-d7de-4303-be15-a9ec6fcd72c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "803b295f-9d55-4a54-9213-c88b5a2b3215",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a133b454-158d-4e7c-89b1-da443d808080"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a332baf1-4ba4-4b5e-a9e9-d573c178821c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1317ebc-8190-4bef-9908-7b8977dc6f52"
            }
          }
        ]
      },
      {
        "id": "43a4cfb4-225d-45f1-863d-c91eb74d90b3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0c04aad6-58e6-47a2-9684-f856077c03a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0b0f02e-209f-42f7-aba8-d494c77c79aa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7465009f-0317-49cb-9803-5888397bd481",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776655d8-4f5b-4f25-a27d-ce05343925bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178295d2-00f0-4216-8441-eea8f5afe2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eff8ba1-4d9b-4a9b-819e-ba55ccdae445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16673e46-f6be-42c3-99ab-a86cca2bcd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34023ec7-b8ee-478c-b1a3-9fc6d45718eb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17e3c18-9f76-45e0-ad57-b1deb4827ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3d3ead-7345-4924-80e0-418047cbf740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12aae71-d542-478e-ba51-a54e722c7397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bc91e02-2870-459f-a815-74fdf7499e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684561d2-66c1-4860-a1b8-bc8b2f170565",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd102b75-d02d-46a0-9e5a-0828a8d1738a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52792505-0c7a-498b-a423-f843b428b60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a4f5ab-419e-4dc8-8f81-433da5da2619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37b11439-cee0-4dd6-a40a-3d7e44a0e999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c53e06-557a-401a-9399-29bb7b28e686",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d4a2c6-9f5f-46ad-9163-797b7624dfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a28230-f0e5-4309-bc26-7743e1c8c24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa79567-c0e5-4ea5-bc65-a7b2388e2f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb59a9f3-e41f-4a5a-87a4-73b708a44729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fbb758-b90f-4450-b551-834ae43cee5e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0150b5e-b8af-418a-a270-eb387632a211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb81979-9213-4d57-8881-987e0639e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49cc209-4ac6-4198-bf1a-dccf220c65ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad7d8787-1553-435e-812e-57590935baa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef928051-2d51-4421-bc4b-1e78aaf5d79e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ffa4c2-eb42-4e12-b592-71124e73cc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663968db-8f6d-448e-9726-fc689124bdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36cbbc4-41ac-4746-9137-39773774b8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e41fa9ac-9a6e-4a19-8166-c4b75647efeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534b040-91a9-47cd-a652-64f11654084f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda7bbd1-3588-458a-96bb-fa94965e87fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfd40ff-48ce-4f02-9ab3-d5316dd9fc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea07300-4378-414a-b02c-fcb00221fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c09d17d-e112-4c78-9f30-98fe0b8fd343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba96122-c658-4864-b1c2-3ed75973d36b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8413299-0e0e-4c03-afd1-bfe4f0cbe606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea41e10-c056-4f61-8f8b-707bf70ebf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a356ab-e103-40e7-9234-768bae00e076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff1fe48-5251-4e7d-96f0-8a0efc450fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9737189c-6b7b-4fb4-9fc0-cc928abbb8bc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35178461-6f1f-46fd-b31f-806121cf2ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d9f36c-ace5-4bb3-8b5e-160625e2dbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d25622e-93c0-4d92-8842-98756e12796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d198adf-3459-4ea7-b07e-97bedfdd7967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e15912-d247-4f3b-9c6a-54b360ad1cc0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ab2711-e00b-40f6-9547-239d354be0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d10faa-464e-4bed-b8a2-d3b58ca6e1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd2f4ce-8aa7-4b41-bf3a-a0593fd9615c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c0c49dd-8730-4edb-a812-79e14b86d48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073478a9-7365-46bb-9b8b-c648b8f2b94f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a71f7-188e-4047-8704-c7fc95a0d75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa48774a-58b2-42e7-84f3-c156d752a11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e1a743-b8d8-49e3-975d-71cb9022b9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9069bfb1-0f59-4418-b55e-0ec81565eb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a885563-243c-4912-8e3d-3bdfa4d1de17",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa239588-9761-4b50-af68-49c2e0dca53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d28197-9f78-4831-ac99-86d0604ce89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5104ed26-2fd9-40ce-ba38-8ab0c5f13618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "937abe45-923e-450c-9004-fe354edd4def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aed4fb3-9c50-4c30-a7e9-850551a37a28",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2670e4d2-44a1-4a83-a3fe-57d026e7b6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48499be1-8bb0-4a4a-b4aa-3a63aee22e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdab57f-a5b0-4d6b-a085-a7e4c16facdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65bf2699-5c42-47eb-b81a-b6bd308385e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae1e6ae-2867-4af4-b934-e1dbadc3425b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7071fe72-2df7-451b-89ba-5eeb1bfa7c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea3c8d9-1a34-46ec-8539-ad8caf46189d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c118f316-25ef-4d89-8346-906fb98dfc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c57d2c3-eac1-4682-a8ec-ff89c8b4a410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d21f64a-7e79-4481-85d2-dc205c07dd0d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3cfa5c-b0a5-45a2-b1bd-3e7acc7e6755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ee66b0-3d84-49bc-9fdf-d724a40d6770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e262c57-0702-4ab3-910f-3892333f8ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "903550a6-64eb-4abd-9a9a-75141b7ef2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbbabbc-f4cb-48bd-9257-543b0a6650e8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cb4db5-9994-4eac-bf13-3a0c87a9b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca50d32-ade3-4659-ab34-8349952b61ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc962138-a9b8-4852-a63e-41630173ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcd74dce-590c-433b-b3f1-4a0093909784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906566ce-269c-48b5-9f75-650eaabc0b1a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb04dc16-71cb-4429-a719-fff588aaca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fc9d90-bd12-43a2-863e-a0ffc9c33aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d33d64-3d9c-43c3-bd96-b337eb762133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef82ab05-43b0-4e0f-ad1f-6809036c6865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7305941-6fbb-49a6-82a3-01dfdd97a11d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1873e5f0-245d-4ad2-8d44-5874eba41842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b44131-7826-400f-9135-b831ba14713c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba441d9e-1742-4907-ab39-21113743296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c5a0a2-60c9-43da-9c5b-17120c23ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d66817-fbb2-4a8c-8eed-b9dc61c98734",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a6d649-3456-49bd-b357-7dc4e5b8c03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0111af9-254b-4e59-a6d4-211b407a2faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981bfe14-d05e-4ec3-af7a-c71cbe848308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "442f2c0d-1601-47c7-b9b1-3b160012df7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23825b52-284c-4ceb-b88b-13a799baa654",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69254f94-d193-4558-9722-d7c43f98ad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb37682-f82c-4262-88b8-7e52355ca4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d8b94b-d501-40f7-bacb-98dd5c263eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b90cbd8-0aa8-4011-964f-c2d1e84b3f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a88cf-5aad-472e-9c0d-966140b7a3b1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb711cb-e800-48eb-bc73-242de5c87842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7d508a-974c-49aa-ae8f-f58d4f667f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f85329-a3a9-4370-93a6-89514875f128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04ff719-a94f-486b-82f2-06091126ade3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b5dc08-455c-41b8-a945-13d0063dd6c7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73fdf2-ae8c-4e0f-a30f-08875f37d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9e1464-5ef3-428f-9785-58e37eda760a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae898b9a-d5eb-4724-99f1-a1b45255fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f142657f-d337-4f9b-b9f3-571d4e63d830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7bdde0-46e2-4bf8-ac33-fabd85ac13e0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29701286-08ac-4e2f-96da-1cdd65ebc93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79748e90-7ec4-4334-9065-1a0a97758e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b15e071-7982-4627-a70c-f25d8a3f59da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de95ec96-69cd-4ec4-9671-73e36317352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2df606-96b5-4222-9b7d-8144c5600ef9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91b8d49-09d0-427e-977e-aaf376414bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91738ae-c413-44c7-a770-18382e54dbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850ae028-b9bc-4fa7-a3b6-4d0e61405adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9463bdf-36b9-4e55-9fc9-95bcb3d38d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee965559-987d-4e08-ba0a-0cf4185eca9f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f313cd-c224-4c40-bd35-b512a190469d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa9afb-0228-4111-91e6-369802ad887b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e46556-ebad-4742-a561-0969ebf5a14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5dc851-9749-4159-bd0c-a60de9f4c26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb48b9d9-ed75-4720-846a-f174eb5881b0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b15654-2320-4eed-bf6a-17a8c464274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b63d795-77c0-4621-8645-43123f03af21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64f0690-9751-43d3-9e74-a96ae379db08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "767f5408-45b4-43a8-b48a-2b75cd649064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b779b9-a520-48c8-8c03-3a83666e6b9c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b0253c-9e40-40aa-9661-78c2d8515bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a4dcd9-df25-4402-8401-9b17c5228287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a007ed95-67b6-42d9-ba21-4b188dd4c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab3fc79-c999-4e5f-9e01-044a54df32db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3f0b87-608f-4f9e-87cd-44de589ac0a3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be35b8b7-a4dc-4dd9-a771-f17a4fc084cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f72b46e-c645-4c05-b864-185c7c51939d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a9af80-05a7-4c2c-bd8b-5dae8597179b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9dd4c1-d576-40ba-97da-6f1344b33f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f59ac9-60d0-4ac3-a6ad-54ec0895b31f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4211d0a7-c2a7-45a9-9741-860e2b571d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba95609-d042-4291-90c3-69f8464f763d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7f4b45-d118-4a93-a49b-b4989344feac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05d44f4-a6ed-4f37-b4a9-60340e1e4c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8338cbd5-99b5-4333-8d07-4b2b2b3685b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a42f6f6-2c99-4860-a26f-134bc6ccf35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c39590f-3a4c-46df-8c6f-78742696db85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2af3be-cdae-4e55-aceb-300010a8eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d920ee5-056f-4e5a-802c-38fe0d1abfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14558dd-9c0e-4a06-ae79-e2fee8fa6572",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df983247-c9c1-4cdb-8ff6-45db15c59e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305a4828-80b3-4a2d-9bb8-bd92e09a30e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3115b09c-a38a-434c-807f-510560cfdd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b2f846-906f-4c7a-923d-adfbc0683767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b0cd3d-b3e6-49bf-8646-834a9dd35591",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409c92b0-67c8-4776-b1cf-24478c1aa377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02433137-28f0-4998-bb04-78285f5fa388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6579d106-b286-4f4c-825f-01e10991a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da74c66e-2f62-44fc-8ce3-04e43dbea6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f484c0-4d98-467f-a80e-7d2bbe3c5348",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02817e6b-dca9-4388-8816-96f808fa0474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d39ccd3-5d05-4877-86c7-a8d456ba9490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61eb3a5-d492-476f-959c-4ebc149072e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b91ab6a-29a5-43b7-b72a-57c864f1cb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7eae58-f6a3-4f8d-8c41-a13d72ef6463",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16418ec-fc3a-4797-a319-9826be0dfb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe03189-335d-44a2-bf4d-dae3cdb2987c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8614c85-f223-4d39-a314-42d0064ac0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6be0ef-6d5b-4c96-91d8-09903f4a977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58350cb-abad-4125-8695-92a61701584d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f91ecfa-0872-495f-8be3-b2a1931b6443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552f38f0-fd9b-4de9-9355-7a87cbb49381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b286836a-bd58-4b77-b399-ab105ac98dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "816a590c-8293-4ee2-8a30-987515f499d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60994e68-b4d5-4fa8-95bd-de2f2a9383dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c320c78-db87-463f-ba71-e5346d7fb57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1ff2324-30ad-4ff9-be0d-26e24219faaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a618232-ebd9-49ac-a808-0b7851dbb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe92b4ad-ff2b-4cc9-ab93-5ca6ebcdc87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8e7b0e-1721-4de6-8541-a7fa9bbb61db",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8ea453-d04d-44aa-aea7-3f875dde3702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ce7a4a-4d89-46e7-b62d-36406f508d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de4acfc-df05-4824-a8c7-0a90e1d84c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32cde3c3-d86e-44c4-9615-3b4f68695b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9565c988-8305-4282-b819-a5951f5ab541",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603c96b2-73a1-4926-978f-d8b836e0f590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a51314-8fd0-43f6-9dae-3ca4ff6a7e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07e2b3a-1588-4b5f-9ab1-beee6bd08a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6653554-5ba0-44eb-8b36-1172f4362817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356d1ca9-d514-48f8-b69c-fc02500ad94e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e99585-29f8-4932-845e-a1692cb8980b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba32a25-f030-445c-a56e-8f0d6d73ba77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b785c389-1790-46b5-b992-5fe67d0105a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff67d8c6-bd1b-417f-811f-b97ee4126e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6320aaf4-531b-4312-9690-5fa00b09813d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a53c32-cbc8-4c42-ab33-e834db12c518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996fe9ce-69d5-4db0-a166-df3895422a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112f1aaf-3cd3-4303-a280-9749cc3b3ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "977e5b00-ff88-45d2-950b-e372d92c09fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775aaf07-213a-479b-9077-eb8a3e024031",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86df0e8-00be-4466-8356-3d7dfdb62e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca71878a-bb43-46cd-9305-ccb04126ed88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fd04d7-75ae-4d23-b3e3-789e67e750a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e48c2a-db54-4eb1-81ed-720167623de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006eb8f8-4792-4639-b863-074f6b7de4d6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f83b5cd-6bb2-4435-8ebd-a3cf3a0462c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00b90fa-5ea6-4e2e-88f2-f4116f305cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7ba13d-0d63-4a27-9ff9-dd67a6c3331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08086ff1-c1e2-4088-b893-2a23961e4c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9fdadf-6683-4877-a251-7395b692e164",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e56a960-817e-4208-9c2c-8b53cec07165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0510ed-ad53-475b-8864-7df9759baf96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f648fa17-588c-4d48-be6e-31a2c8f5d65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "920026d3-7bf4-44ed-8989-b8b58c84f3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aca2c1a-59e4-441b-963b-71e302631065",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb924aa0-0734-4e7d-afc2-a187b342f48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beacded8-02f2-43e7-995b-c449f3463645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ce8233-2975-412c-aa7b-a8bb0864d703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4d77ee-198f-4640-a310-42bd69dde28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d87a0ba-703d-47c4-a611-b4921ef9c2c5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7116e66e-f99d-44b3-b360-a358c23f8c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651a06ff-ced6-4ea1-bd51-eaa971697d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b246e4-333a-4cd2-80a3-cc10eb26b81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30488f15-8bc8-4377-bc39-7f2dd425502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36d1206-010c-4513-a55a-37c5f30e498c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ef89c-5a2b-4af9-86b5-e527376868c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ce1734-1b54-4918-b961-f52df490231d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b1759-3c9b-4596-bb2a-4156c30d713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3378c6f1-3b51-4481-b6f2-d75a837626cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee244e4-4440-498b-80c0-3d307344ab42",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62edd5c0-b59c-4e0a-80c2-0b99f6bdfa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063ff211-3ad1-4ac3-bc6b-4a99d7ec90dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7875db5-6264-4a88-a469-d31d067477e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6016c994-96cb-4be3-b34a-7fa461073b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebd0540-6373-4ea9-aba5-31ab9693cade",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac3ced-7d30-4795-b0b8-4e6f85d8bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03fac21-30c5-4520-b081-b5f282d23da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e49029-298c-4e29-891f-1d1cb46f24f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef39688e-30df-41a4-9b5b-97118863b28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9cf1ed-2077-41df-9bfc-85392908b4aa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d9221c-d146-48f1-853d-058d7e1a47e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb319099-8687-49b0-8bdf-b34a9cea2836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6718a425-bcc1-43cd-9bc2-81e7516e72ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "205ce6c2-a2e0-405c-9517-0fb187104b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e786094-fc3a-42bc-a33a-27182ff3239b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e7540b-5ac6-4311-b9c1-83ea802b995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a85626-4d5e-43f9-b73f-27433214d794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fc842b-f388-4a64-a1b0-b1ce448b4696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e671da7d-22f3-41a4-a3a5-ac0b0e9bbdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bba2d1-8d7d-4fa1-9768-55ea8fde124e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7f54e5-0533-4480-bab6-4591174cae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50a69bc-2d3d-4fa8-b850-2321540e99d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ab7db2-5f48-4434-a20f-4252eadde002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea19fa5d-6d88-4330-b6a9-959f6d85a7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ea8246-28c9-49f3-8e6a-bce883527b16",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6960af71-85a7-48f7-802e-b5ae51c6957f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8ca820-0b2b-4182-8956-239606fd912b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e52bae7-9d63-4dfe-8371-94cf46289371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e83c24-5f2e-4f30-bb2c-6e2026d58394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2902be2a-f780-46d8-a391-aec03312bdfc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21989b7-f9eb-413d-b3b3-d0844a7e69d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc10d059-b372-4e00-8234-985ee46bbde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbaced1-4fa9-4fec-a289-199b31d64471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c5aefc-da32-4429-8644-79ddf407fcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80c07fe-a290-4fe1-a00f-126a603ab6f2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6312e3-759d-47bd-81cf-787115cd54e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08ad725-9ac2-47fb-990c-41a3ad3eee05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4f16bd-1aa4-43a9-b8d9-d5c0677f6569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48b2ba7-8c5a-4e0a-93b3-59b44763a7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78d3580-543d-480c-b0b8-a22cdea65ac1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cfc6f9-6d1c-4f71-a81c-4a4fe7ee9f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8dbdbe-f51f-4fda-bbf5-47d505c850d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c90af-0456-4821-8b4b-54aee6ad851f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbb072f-7bb5-44cd-a280-938ffd356fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dc701b-7eb4-4252-a01c-93b977003b14",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f9b323-4ec2-4bb7-91ba-3be028cbddd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab1471d-f510-4ad7-8836-4dcfd54e6234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac7c135-7a37-4222-af6f-c2a8cd615f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "480ff841-63fc-46b7-97c9-1d0d8dea072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1a0005-619b-4c4f-b378-67ee42aad7b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0434acf6-8106-4e48-9be3-d6b13a5fa9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77ec7de-fc0d-446e-973e-a5844443b900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5337103d-f319-4d4e-9efa-7666db7806fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5800ed3a-2c62-451f-919e-3be297212807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9785787e-7f08-4b31-ad6d-4bbbe218c02d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f18460-e6a1-4084-8bdf-33eb3223a369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064d1f04-a367-47a1-ad42-b9af3248f2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193f809d-7a88-4ee6-9a5d-e25f9aa79966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb74e5ba-b728-4b90-9749-ed06ac5077c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78999ff5-c19d-4cd5-a2df-6b3f6b3d25ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5a2a18-b0ab-4a99-bef1-5e41737b6bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b63b0b-f75f-47a6-875c-19ddc0da6176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ecb9db-651e-45f4-97ba-78902270ea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94a9c38e-f622-4947-b201-d31ce88b5c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71718b1c-9192-408c-b5da-42282b947eb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477f804a-06d6-4853-afaa-ed81a064a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae0cef2-d857-4463-88ed-cd34ea0bbd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d734bd-fe9c-4bf6-9172-ecded657790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05e7a66e-438a-400f-b434-267ac9021bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac74bd46-4bca-48c2-a507-2c163a9f67db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb3aaf1-5dcb-4a29-8147-3f43ee78eae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e16255-43b9-4333-a91b-c08d0becf220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5ff244-3f1d-464b-a6d3-1ee0afd40c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "028dec11-de76-4db7-b4c8-34c7b9161188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631da660-45ea-453c-9e50-6b2b54376a83",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4bea08-4ba7-4fdd-8e98-61932c96601f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d7945e-b5cd-4d6c-8a0c-055fd7a945a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a74cef9-c0a3-4133-a060-88fac810bd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "de405421-ca86-4469-a92b-79db2db5c990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc539559-3de0-46be-b5f7-76d635c92b46",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b30348-8c3e-4fb6-b6f3-272a1a46662c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f0754c-5554-41d0-8ecc-692444a13ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e7599-3fba-49bd-ade2-0393a1f807b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3574d3-6271-4716-ad17-28253647a8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4997b373-f24a-4786-bdf4-d42080804da2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f3e721-322d-4274-ae98-043066927daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e885f8-54c2-4490-b01d-1b994128ce8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f572709d-2836-475d-b2c4-4579073b75a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "535aa16a-5acf-437b-a777-6546f27cd445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c46d9c-a0a0-49e1-9d0a-38622c64b210",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e64dc9-3b6b-4a21-8cd6-1436b6f8834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da098837-2dbc-46d6-8e07-545c06776221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c907eb36-a40b-4824-906a-6ed09d16685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf65145-8448-46e8-aa52-02d3b715b555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7a11d2-3e20-4c9b-996a-eaecdc2c79fb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71f0135-ae42-45b0-ab81-da4bc151a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fdb9e5-8098-4211-941d-a3ffdb6a4c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47300668-f3db-4ecd-82d9-1cf9f593c698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c38be43-00f4-44a9-84f2-cb16fc994d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fbfe07-1e54-49f4-a780-7b0341268d74",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb2089-1949-4df2-a378-f3474b46eff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd51c5e-86bf-4768-845d-77e49399d4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c4e5d5-12da-4216-9f77-83ce5f4f789b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8a1a69-a9a7-4950-a8a2-844e871a48ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c756a8-291a-4395-be15-03cb96693f18",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886001f2-9e6b-40ab-8b60-b753dde898ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e69f888-78d3-4024-9c02-6cc90410d762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1755d472-6e1e-4644-bda5-479439ea7f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "247cf2eb-f93e-43d0-85ba-900a3c451a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ce605e-4b71-49ce-bbb8-28419e082ff6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed40acbf-e77a-4c25-a054-d02add8ae294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0faf84cf-84ed-4177-bcb2-a37039c6cbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8cf9c2-3074-43c9-bb98-852982f6b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cde714-1eb2-41f9-8f74-3121f4917765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6916f42e-681a-4bb0-bb15-b5c0721ad1ba",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab9622f-3153-4329-b4d9-8c6cdb75134a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7c16f4-744f-4374-abee-20b0df0bc6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d022f6-3b5d-4fd5-990f-1e9d916e79bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff183c24-6f13-41bd-87df-c6ce758d87e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b952eae-5f8c-4a65-80e0-dba5369f33d4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e230231b-e00b-4101-84a9-e748bf979541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01efa44a-ee64-4843-8445-607767128054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0678d242-3c17-478a-83df-7f9c00795881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43aebb73-7577-4b70-b14e-9512eafd9b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99bf320-5533-4059-948b-a76971648352",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cd8914-fcf0-4c93-ac3b-3c140c94794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76367f28-2820-4bf8-8edd-7f3d86a1255e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1733fb2f-9cdd-476b-935c-090aa3ef64a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df86810-9bdd-4531-8e16-5b8c768d3fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07a71dc-b6c5-47d9-b75e-52f2e0f9adb8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988e7bfc-d7b5-4e06-a484-19ad791ab5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6f1072-23e1-4312-b3e3-6c838e347256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3568cf47-7bf3-4c70-8932-d4fc8ab9dde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d368b507-3a57-4880-b381-d47d0430f640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3bcb6a-2d68-45c8-9172-77f46e2d0e97",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeab697-2536-499a-b5ce-6e4bdcd4284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a4f6f7-2f11-4d7f-80e6-9349050c4162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821609a7-b611-44a1-8eda-d147910e21c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70da62c6-2352-4927-8fb2-5e36c6ada9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c6fdb7-b8a8-4b3b-804f-b39396cf2a86",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3669c7-f699-4483-8eaf-acbf7d42d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f760be5a-3143-46a0-8ec7-8f0bfc1a7600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990a448c-3567-4d82-8444-db06d382e18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f018b47-a70e-4a7c-9eb8-0bb4f23d78b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bd738c-7b9b-4dad-83d6-70c462e930f9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c84055c-a2a0-44be-9bae-f7ce4a9d9332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df8e2ae-132b-413e-be02-b0695f9066d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13a6242-54c2-4ff4-828f-c135bc6a4057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc45117-be88-4985-9bb6-6d2cb7c8783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dc479f-af34-43aa-b8ca-ce67389bfbd5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b891af39-c6ff-4f7c-a4b0-a6c039cf40bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d0bafe-79bb-42bf-beb8-7eaf6cfa07de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c839096a-9bf4-4ef4-a334-9f85fb9b0ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc30318-0e57-4830-bd44-0745cc8e088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5654e4-f6dd-4085-82bd-7516dd870664",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe4db23-c86d-4154-b74e-5acaf7f6cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29608fdc-90ac-44ed-a932-e814a9e156d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8f78e-8e86-40e7-90a6-3bbcad6fcc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b839e61a-2ef6-4581-bbc4-0c12a6bddd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a773ef2d-b71c-4a01-9c4e-2a101e9a07f4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b8cb96-dccf-45e8-ab4b-e02e7e9b8399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9303c1-9567-4fcc-8a2c-5fef194a9c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0002ee1-7282-41cc-a564-d365da1d4e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "426ce3d3-3428-4538-8dd5-912fb785cdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef50b87d-8435-4797-a071-b1dbed89e9a5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe8351-1549-42f2-b870-d8b2e183d416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c025b432-18b2-4017-811c-4fa49f023c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51e9b2e-786e-4073-b300-e4c9be9906dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9357f631-d8e0-4676-a845-e27de48bcbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40f1f6e-f60f-495d-990b-a24529ff2440",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b87a1f0-4253-4abc-abdf-a7dd7dad1356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a49d00d-874d-450e-918f-4972c0b78f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc5f668-5c62-4804-b12d-b94e72d61835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab75d8e-a55b-4f06-a385-62ca92f13c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9b8bdd-faab-4332-9527-66db085e1a78",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121ba746-afff-433a-a8ab-f611d5e35e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c37e82a-bb25-4747-afbf-9d08e904af6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc61d59-0f23-410c-8a25-2d4411d66edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3f425a-437c-4023-b0a1-95a29fedad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbefb32c-861b-4a8e-acdc-54e944a0c309",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97121004-8c23-40b6-8bf9-9674e7bf8339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583fd1a1-423c-47dd-8c68-fa98d6f898f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41614a86-32e5-475f-8c75-01446ff038c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed7d197-0b2f-43d5-a423-82e450791899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefb674b-56dd-4c98-9d39-384f9bf3162f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e99189-206d-41f4-b037-eb9de246bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314fcd49-e767-4e06-a337-fcb34e5973db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f6a1d4-a500-475b-b20a-5e692e0a10aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12cd432a-606c-4742-ba38-acc6a6c21269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908974bf-936d-43d2-bfde-2a7815e9a4e1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76052b78-e934-4a52-baae-7949ce4efe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a932363-e578-46d1-8b2e-467264f252a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa989dd-db2f-431f-ac2a-9b34405f8c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b78265f3-c652-4579-8a9f-fb8ebada50dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d05c680-60c0-4f29-9a3a-24d85c0e7a7d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84493fe3-965f-47ae-8e14-6ef580d75798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a0e9a9-b5a2-4bbc-80d7-73a5669339e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6583d5-0eb6-48e2-ab98-8a7ce25e39c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4629e9d4-366d-4f90-8dae-928ae91a3a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c00692-d1cb-4ff3-8527-51ebb142db59",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54db5932-85d2-4e7a-9906-534800fdd910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84efbb3f-0798-4506-a8c7-819276bab988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa55804f-86be-4028-8dac-3d2848112f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cc5413-c5d7-497c-a5b1-1234f4a23a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ef92fd-f4af-49f5-a49b-08dbc1ef47a9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70913cf5-ad29-4eb3-896a-1c46272fb78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4911204f-e76b-426f-b9c6-00fee7c4fad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f11b32-2a68-478c-ad38-70cd9d0a0471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f595ed4e-cdec-41a5-a295-071a1a3eb76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3406d7d8-a8e3-43e8-a7f6-bd54efc05629",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9355b6e-c065-4780-a333-665370d67a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22147cf1-f215-4a9d-9e10-50199f53d8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63984083-9fab-4122-a2c1-9b8f0afe8d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f0c707-ae89-4763-91a9-3c7d61e076c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5de24c6-25c9-44eb-82a8-1e9fc096e53d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c3479-747c-4711-b973-16d696fcadd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc0cdde-f637-4519-be9a-d6b5a57a864e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced1ea6c-7caf-470e-8dee-c3371ad2cf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a378b3da-b7c8-414e-ad1e-d655b7108ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5882d1ea-4c49-43ed-9cfd-ab46203fab43",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6221b7-5dd9-43f4-9532-3b229a4d888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad676ed-e978-43e2-8dbf-c5028711d536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ab8b31-0e63-466b-bbec-fe0e9a8f4bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c12154c-67b8-4e2c-b617-9e401d23b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ec3831-079b-44d5-be3c-059e7e998cf8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffd5738-a3e1-4833-8f91-66dcac6e238e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9cc3985a-ddbb-4b69-b991-b5456b3215ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dc46a8-9597-487e-853c-fab2423f845a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "34b8c1fc-2610-48f4-ac2d-c866967e3176"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c18a123-5b6f-48da-aab4-ac8703ee3325",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4f9009e-faac-4ca5-985e-27457ecc32ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff19f9e-13b5-4d61-84df-23b998fdd694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0871df92-37ab-48fe-9a4a-31c9cae643d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8839d4f8-c876-426d-9fe6-8f121aeb58db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475da6e3-e15d-4424-bd1d-e9f26faf4d1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71521b3a-ada0-45cb-a7af-cb84fcf2b314",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c971a61-0f8d-4ce4-b264-4e4c0a8a434b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6697031d-c079-4d6d-a161-fb6b3fa85da7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83ba1fe9-df50-4941-a365-c83a194651c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb0be97d-8379-4fff-b10c-1e34ed376e5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13c02444-a474-4b21-b689-cef413b77652"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc5787a4-ecc8-4fc2-a80a-f6ca75bf9e6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18dc676a-0d2b-4224-a121-f69767d87da1"
                }
              }
            ]
          },
          {
            "id": "8c4e083e-9762-47f1-870c-f9d92c6e7758",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01526405-890c-4929-9507-41d370c0296a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7fc7838a-a0f8-4f3c-9f4f-59ec660d0de8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5e5b90-7577-4f33-b46e-9d75e8e92ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cedd2b4c-37df-4a1c-84ac-234930d196dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7302fd-121f-4141-9ffb-df7774824c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ada591-c9ae-494d-b694-57a688a4f394"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1f6ea28-e939-4da0-a37b-e240354d0b2e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31a8af48-9e11-4b31-a4f9-4d3c7e8dcd8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26c9ee17-a4c9-45af-baa3-e965f4e9d8c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aa91b86-2ee6-4b38-ad74-3d4f82338a1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5364db8c-9a02-473f-bc10-b70a59e36520"
                    }
                  }
                ]
              },
              {
                "id": "905c06b7-0f45-48eb-a792-017204050e7b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db0965ec-5994-4ee5-971b-4fe535749d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82122f19-7e22-42d4-9fe7-a5a6aed0d163"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03aece70-a010-4385-b7b9-902c34f7d42a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d20772bb-d43e-4ee6-a957-086e2fc44659"
                    }
                  }
                ]
              },
              {
                "id": "d4fabfde-8691-4a9d-aed0-b829bb955a4c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21846046-321e-426c-9bcd-0110051dd79b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16c7c082-0aa3-45c5-b361-fa0537308095"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a43d918-0347-4b3e-802c-b9028a86883c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf43848c-b93d-42b0-b1b6-02d8117b05bd"
                    }
                  }
                ]
              },
              {
                "id": "423c579c-e46d-4743-8550-5d9d9791b8e6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7533d457-0d8e-461a-8249-7ece1874da82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcb258f5-7b2b-4181-874e-de38b2e549d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82b929a8-2e16-4e17-954c-0ea5d2ee6deb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ecd04309-3111-43d6-b424-17e633171098"
                    }
                  }
                ]
              },
              {
                "id": "c521e67f-326a-40e1-a77f-e40fd9c6635f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d6510c3-f752-4395-b2e6-216b5391b2c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f92a67c-9755-495c-9ba2-3ad265e2f23d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e0b8fb4-9cfc-4532-915c-4eefe944f1da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f057f059-7c90-4ee3-bc8c-50a60b2f3aa7"
                    }
                  }
                ]
              },
              {
                "id": "477e71bf-b716-4dde-ab1b-83cbc2bb854d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ac56c8a-9f37-43a9-9166-6fc66508387a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7559f76f-1d70-4a7f-a6c3-e7427c3569be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1617de9-5a9c-40e9-814e-f7f3b7bbf554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf16d0e1-773c-467b-ac26-cc66734c0000"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e65deaf-13eb-49a0-890f-fb335119627a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db028995-c514-41cd-a97d-c1ce01c47dac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15fb6128-c4b6-4bfa-9cad-7b1ce9e02fb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39fd431e-2ad3-4952-8bee-d386690a8468"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62e6f223-c2b5-473b-b304-af42c9f15f5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "75a860a6-4f35-4c3c-b0de-b632792c0523"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d056f5bb-ecba-4f06-bbef-5e803dde8cd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "950272a8-b935-4180-9234-327701c0b78a"
            }
          }
        ]
      },
      {
        "id": "de86d0d8-f3d0-49ac-a592-44a78ad4714f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9485c3bd-c71c-4c91-816d-5c42d67a19d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cbfe4a1-f5ec-459f-a32e-faffcc3ce77e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a2aa222-88a0-4a3a-a122-bd11f6889392",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104b29c5-963f-48a7-82be-0002aa22ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2f527c-bfbe-408c-a523-6eca8c53359c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5b035c-5eb4-4e21-837d-8ea4dd5e2d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9b67f0-df06-4a18-a56b-f2ff01f87267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d780d1d4-d292-47a1-a3ff-960ed9bba30d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19c0de3-d182-462e-801b-314854390447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2eb693-70bf-4f47-b640-dd12597419bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688109c0-f8db-4c46-965b-1cc49ba99cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed9e71c-cd14-4df0-9594-80f9703655b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f229aed-0c37-4aee-977d-801a501072ba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d90df23-c129-4e90-9316-14826b4c82f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c33958-9901-4a4e-ae5a-b6644cbc5480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e65e2a8-3e2c-4bdf-a454-4213694d79f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15038de-3359-4635-bfdf-e54ea8d26e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa7e1d3-60ab-4536-8f7c-d340353c8c34",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a57bef-30b9-483c-9b3a-2a3567a6afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ba9e81-ce04-4f35-8767-0e600f8cf751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74587f8c-3580-4eaf-a000-45a2970ac04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be2a151b-cb75-4043-ae1f-98431ea40ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3791da-44b0-4a9e-a1a6-cd4d0599f7a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f63e6bb-23bf-4254-a0f4-d09b6684b79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767edb2f-2b02-4d0f-8d43-14af5efea47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac47f8c-f620-4b09-a886-4b37b31a12f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f1fa7c-89ae-4e75-a01a-41f771d37139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208bd35b-570d-4161-9d1c-9550931a8dc9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907771fa-0b7c-46b2-8127-7175d12954eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f6c07a-70bb-47dc-8fed-d808b20216ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0b0827-30b6-4078-9372-1a77d03f9792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24384392-2eb5-4d37-8098-cce9796ae39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f9203-7078-49e0-98de-3afb52ef839e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cc6701-2669-44a0-a667-0166f4d2f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328c22ac-efb7-4449-8e90-4a1bb3a4009e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effbd4ee-03e2-4a50-8da5-39401cd4882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1991bd3d-583f-4827-b92d-636156bfe23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5251fc3c-c440-45f2-a0c2-2b20bf762944",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7316eb0-dc20-4d20-a80b-a4b5e09a41a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e494659-12cd-493b-82b9-8d0b7ae9c95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c028113-8684-4917-8307-b1265e5ee2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2f32a2-611c-45a4-83da-106e86220038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd61229b-531c-44f0-a358-0b8656915e4b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41a0d8a-f232-4669-83c7-1bbb119e9154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790deb83-552c-4f63-b9cb-b0869fdcb024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1be389-bbd9-4a95-a70d-451b3e6d0d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "941771a2-0d75-41e8-9e4b-fe2a313bedef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc05816-f3f6-4678-94d2-6f906ac4ebae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f2c1df-ac0f-4ec2-8db7-fe7d117c05ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8997875a-79bd-4b5a-9732-1a523812aa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86bde65-6749-4caa-9cfd-2648f37afa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4eab48-5e58-4d3d-8587-09141f1423ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f793a-95e0-4528-863e-c1e18b75f546",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff24e39-962c-4607-ac45-2d60ac63afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16330596-b855-433f-bf7c-a6b1fdfc7d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b4d238-2c68-4a74-aa80-26c13ce85e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6f763400-0115-4e36-8b4e-ab71020280d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22a37ac-07cc-416a-936e-1a4cd9d03cc8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0153ec20-e80a-425d-8e76-0c3b7ad6e747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6335b8ba-5c40-4b9a-ade0-a755a60ce68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69da8bb2-eb5c-4cca-ba6d-7ef677e7b322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77ec487e-88fc-49c2-82e1-3e303987a0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2394b1-6fd5-45dc-af66-4e4ec52f09eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb98dc-8498-44b0-9e22-502acfa62259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7d72c4-cf24-45f6-9715-8f63491da258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9a0a3a-66eb-4986-81ca-c320176a6b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77559f6d-939f-4f6a-870b-ca364a883546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9a348-b120-4b07-8b47-14cd6c00c685",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1461207d-2311-43b3-90c6-c166b97dd807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba2cbda-92ef-4f8f-86a1-730354cb1c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c65f7f-0c14-453c-8879-3d5a09e3c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2a3c89-9999-4ee5-9bca-c4b9b1f46bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dcbe93-3971-4c85-a764-a94829967836",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94095515-7ac0-48d4-aa7b-7fe84ca9eea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9c41fb-f73b-4192-a210-71a08e705bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9dee7a-d79b-448c-86a9-6f5f2d663eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d24f859-bff1-4c00-8b20-36bd7eb1ae85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbefb895-1f9e-44b2-aa94-8850ea019fd4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009203d7-1895-4db4-9c29-5d1017f9da58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b302644e-b6c8-480b-a2f7-d67ba37babd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e4d946-d766-4bdb-8cd7-7bba28274146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9499e14d-be64-4776-a47b-bb01c9e19484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f9613a-6961-4cd4-be97-b790bce5cc38",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad77657-1483-4cb5-bfb3-d6920ea96259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19457fe2-f32b-47a5-b04c-864a9b0fdaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d717331e-2650-4c2f-915c-acd63b58aa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "024a1c70-e6e4-438d-9379-6688af96759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9335b35a-6c68-4982-b99c-1fb2bca6e50a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50de825b-9df6-4c7b-b7cf-954e9d353b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb5bef7-148f-4069-ad24-206458ab93b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a2e5d-7961-466e-b7ea-701ddc704777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9a41a2-c9a8-4b91-8852-3d8f1bbb58b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e099b2-89e2-4114-a339-cea8738650f4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d131e2-01b0-47c1-be06-971f60211cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e430f87-7ba2-457e-b4f4-abf6cf92ee5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d9768f-012e-4b3b-b613-361b78cd6d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddb5882-01ba-40b2-969f-0d2eea32943f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d933a9-2e00-4d88-8a31-e45cc7e26ae9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82dbcc8-e553-4f97-83b6-b814cd201f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f009b9c-2614-487a-b300-4a828608ff71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a167755d-c241-4bf1-acf4-0921de3b06b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f447df05-5134-4b2b-aa8f-702069855053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3446c6f-ad5c-4e24-b8eb-e82a6415ff43",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79ab465-d82d-4318-b7a4-2b866d38ddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b8267f-0fcb-40bf-8f09-590859846d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5f1e18-6e5b-4294-b97c-6bbd62e21ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc81ead-5eef-4255-bd26-e053bf36c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de20372b-1334-47ff-a3b8-75a11bb71a5e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5610176c-b28e-4b57-9092-acd1b4242dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a04f03-7ca7-430d-ada6-b91b53422e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a56bfb3-f174-43c3-8696-c84854684398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a695f399-cf12-4370-9d96-0c17e7ea35fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b91b12-c325-4fea-ac0a-02a1e1797a37",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c1607e-b5f0-4196-bcb3-b91ef3c4fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb01521-741a-4720-a6f6-bf7b10c3e9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40701a10-5ed9-4fbb-b479-ef8da5764572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e1d843-7525-4811-b4e2-0457a6bc50ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3040c182-6177-48ee-8063-4a17b4cad500",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b30b1a-4f81-4ca4-8e31-b24f78f4bc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58378c8f-beef-4c52-89b1-c575f5d4f338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a039d4-a481-48fc-a54e-b70ed998d62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5218f601-9ad7-4a3f-94cd-12f628d91b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079e022f-ad93-4b43-8b60-cb934113bc31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b9e04a-3551-4beb-9109-0fb277de3647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51903bed-7c54-4f50-939b-2cf40f1826f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98ce6e4-9280-4db8-b451-f0bbf87273d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2889aa83-1d0e-4ed7-8ed8-4b0e73d4e62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364f5e7b-724e-42af-9f5f-cacf7f9242fd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a359014-9ccc-467f-8ac0-a7355ed7de46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dac545-64be-4697-8ea5-8a25b8a5904f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47d49f-da21-49f2-acdc-873d034f1cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aac0a9a-801f-4832-af42-daccb2211bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df145a-c9d3-4f4b-ad71-5016105f31b4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8c4860-6491-4e9e-b086-b3449cdecdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ee32e9-a1e3-44f0-a1e5-aca2d6505481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56045d4-db11-4bec-b266-3aa97f0ba97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd7a673-de45-4a41-8abc-22aad39ba276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450b4a7c-fe75-48f9-a011-06d1b7406735",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eb6094-36ad-46b1-8776-2791e6e2081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f61cbf6-2405-4ee2-814f-d1d115e18892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25369102-3b18-40d1-91bb-1ddcf055aba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f096eb-ff2d-4d8f-b6ce-61726f2b74c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2266d2fd-64d0-4123-bd07-fb6d429728d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4a3b23-bb7e-494e-919d-ca62c71e172d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b61c3e2-67ff-4c3d-ada8-279297c6ce0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e88e74d-9c50-46e6-9c4b-a53f72a9d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25477a51-bd1a-4b62-afd6-7bb8c0bc1c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7d022-bc56-4194-a911-7dd51a229af9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba2e191-2065-40bd-add4-dcb1480df864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9b5c42-0020-4432-94b6-31f3cf5522e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41477fb3-8d2a-436a-833b-150b897d6a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60b7f37-ace5-4420-b590-ee42d73e9342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2857a442-f569-45f2-8716-84ec8ed31f91",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5647bf57-aeb2-420f-8ecb-5600b10058bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d97614d-4263-4758-ae88-ae862ed4cddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1767c5e-712a-4dc3-a83a-0ed17e6be5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f822db-3f26-42ee-aa5f-dae263acc523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d792f4-7a77-47f4-9184-e4d07041aa29",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c640ea59-c561-4a1a-9fc3-bf863ae562cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba16d1d6-79f1-4fd4-b109-49b087542c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61ff9f4-76e9-4002-8ec7-1b474c4e961a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fa2984-75cf-45dd-a490-d15c4fe090af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "709ed90d-a0d2-4135-8ec1-687d9d4c54f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8b77965-0be6-410a-b40c-e28171f724b5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe582c47-d779-4e49-9ba6-855dcfdf0c0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7fe382-62a0-4536-a9a3-e47ff4244060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb458b31-994b-439b-97b2-106061236706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3eacd985-9e58-4f56-9aa1-269ed646fc05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f9e195-44d2-4337-9f3a-ca54628775e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "add52191-1963-43c7-8b44-7b0f38d3cd0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efb6bc55-9855-46b3-906e-75df42476b54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc2024b2-ca5d-4e4f-b62d-bc70f4dca934"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "286c5bc7-d5de-4a18-b21c-d0e5866cccdc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d378f663-7832-49e7-8886-55a3994cc5d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "188ac0df-299f-4d95-b9f9-e4f3cf7c7238",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a8b2fb8-14ee-4750-85ba-480ad6673c13"
            }
          }
        ]
      },
      {
        "id": "655249ec-9a71-46f9-958a-7c29d134c9f9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0d906e79-5566-4cdf-b9d3-ccc858648e88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55e77981-7912-4c99-8157-34a870b0f59f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23e85e9a-6def-4648-837f-59c775ce2ff4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f70b3f-d8b6-4dcd-80e8-080f6e754343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69c2c08-a799-412e-af26-bb445bb0c7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1068450c-3b08-46ce-8d61-dd9e36a09431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "387d3a8f-e0ba-4a22-afce-f48cfb30d7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b42fc-8154-47dd-b7b2-6229e53c23f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8006a653-c1a4-4e57-bf3f-99fb6b9eb3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92dc3d4-8caa-4ddd-96b0-b3e9e986fb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0212c172-389a-4715-8196-6625326f1a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa16a07e-7f22-434e-99c4-ff35432dbda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2f3949-c5a9-4429-98d8-81edda99207c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830731d0-07d4-416a-98c5-3c4df5b87a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698590fb-47d7-493f-8815-91f39c51f3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c6dc1e-5243-4f0e-b472-919ed9e826a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea57acfd-3f21-4a10-a508-8dd0fcad7963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f046f0bc-f51b-454a-99c7-d33eb4be1217",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb2b52-26da-4bea-94da-8e02bfbec173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a174cb9c-905f-4d70-bd0a-378c1472011e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3889a073-0d5a-43ae-a749-87715d2e5a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06eacfc0-d949-4bed-ae95-4ff701440eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb2e567-135b-4a29-a5bc-786f7e940739",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eefb367-269e-47ff-afdc-a474a9b0c43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38f46b5-dcdf-41af-984d-19e61a783e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e122930b-233f-423f-a7bf-774ca7d76862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5428d2-5324-4e57-8265-49f4dd9c6862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02e1a6e-89ab-4473-ab28-bb0bedf93f34",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479be928-fbbf-4fb5-91be-cb333dea3023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea91853-1a18-42fe-a7ed-7ac949ba9e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52089fef-193e-4cf6-a2e1-34558f91e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f888202c-fb20-4a9c-b6b2-1fb97500be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01df236-32da-4279-8a96-823712abc1df",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a5bcde-fabe-4970-b2cf-55622518a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb95ee70-f0e0-4986-bb9e-70d1859740e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef3ba2-45fd-480b-a857-20e55a801df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b06e362-51cd-4661-b289-e9799d122539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e712282e-2d4b-4b1d-9c38-0a7f8d4a9f22",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc494d88-6c75-4403-937d-bd978c697454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49af7a4-4248-4b53-86bd-9ca1bb095355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b92f36e-af1f-4f4a-8e8d-b6ad638af781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "500f143a-30ba-4b61-8771-5bf58b1dbc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b8cab2-2ebf-4a41-b6aa-17f496ac9585",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b292ee18-5520-4e44-a875-07a9b768c392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a6cc94-614a-4fe3-99fc-8dbae856202b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58693fd4-baaa-4271-8a1a-7c19a55ad229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "239e2af1-13f8-4494-89c4-f1cc20874c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e216f5c9-67ae-4047-b1cd-7de1729e3652",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c3631-d601-49d7-8233-9095ed4c199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce7d36f-0480-4fd7-b16d-9d5455b51485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac04e517-a6e8-47ed-9a21-76185ec31e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b530ce5d-e521-4cc3-9bce-edfef45b37e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dddfd84-4c46-45d5-a049-4f2a8cf0fece",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779ae81c-58f8-4b6c-9661-2b23d4fe0659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edea16b-c269-44d8-a059-c28f9ca24df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a7341-8681-4b7e-ad06-29b32542a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eed21324-20cf-417e-982a-1456f3c363de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d570fccb-e622-4731-a626-cd1dc8c569b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c18ad9-e09c-47ba-9ebd-afaf963f41e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10545e44-83d4-417e-b9db-0e86c018b320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd762d0-1fe6-44bb-86a5-08ed68cc0ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35fbc78e-a370-489d-a0df-16d272f7c9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162e4c37-987a-4e3e-8d0e-4351780a8cef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f07ebc-e5a5-4b58-a445-e67635dc521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bccd0dc-5efb-46e4-9fba-c612210d896a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095b26f3-67bb-45b2-8c95-7370ece48564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db25358-44ac-4446-955b-e2b9e378f094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f6b266-8c3c-4f22-8b80-42fa23f0be51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e193c81a-45a8-4fc9-b3c2-03809c8cd57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f6f48b-1dd3-40e7-866c-85b982c2312c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28827923-12f8-4095-b257-eefb4108f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf89f98-539b-491b-8dfd-1aee5c18579b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c19e158-3941-4583-9009-b00782fa9769",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5dd308-0a53-45ec-80d7-650374adef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda9e50c-04ab-4abe-87a5-60dc72a6d0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358cdeb1-23c7-49a4-8514-60bf5ceb368a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c37c1b4-c04f-464d-8383-e6d700786ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e2cd74-ae5e-4098-abc4-a3c9e3f2632f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3bf374-46fb-4324-b0a7-94bd934f7737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b876c2a-b3c7-4cbf-93f3-7d76405cd8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb13a18-7b2d-4906-828d-a765afde5bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "91990563-1e7e-458f-9edc-2c88f0c0c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a916e9c6-6449-432d-a2e6-d330f9ef0b35",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05340a6-feaf-4e22-8dda-47d3f9149f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e2e308-15ee-4ba2-a6ae-91c1af3bd677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97a5a51-a3cd-4450-ba72-516d900da485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4adf9d3f-600d-40c2-b61c-cbcb98f88fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf88e771-6182-447f-9403-01adc3b004ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cc282b-17b1-4444-980f-925b8e1de6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb90490f-5b6e-4c62-8b03-f13a6f4aa2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b3a19c-d2a0-4339-952d-982d7f4aa1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7e9529-4b87-43be-98fd-61fc58b4d017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71971a5-cd01-4634-b14a-070980873615",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e05e51-733f-4266-b86a-ad3022fba4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e059f24b-7274-491c-81ed-64610288f3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28739f4d-a5b0-4194-9812-603389f93de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff8f36f-17cd-46c7-abb8-4e6386709a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec241c30-93d7-479f-bec3-4bf26b63f35d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6be84cc-7548-4b3c-a163-5ba3dd629c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebcf255-83bc-46e2-a2c7-50c86d9c6003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097b0aa3-d1df-4ed2-9bb8-a5084ca1fff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1a56d2-8da3-41cd-8188-4b37b86e1b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1f9152-2ec9-483c-aa59-d3bf38da736c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d559c4de-00c6-4761-9d8a-f5ed6b6f8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8042bce8-edaa-4b4d-b7ae-3bbc508a9035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9e0a7f-7330-4f98-a627-f4eb928730c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1e94d5-8b21-4287-a2f7-13edb021f143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f556543-0b1d-4aba-989a-80c693b3f1be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ac1ce7-8d6e-408e-bd05-91fe95de332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab74240-1d47-42a2-b751-ae8504958298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072cdb12-44e2-4f8d-8e56-4a8b5a7bf69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d59b31c-a42f-4f91-9ba2-19e60e0424cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ac9b08-0768-4bc4-8a8e-cff67262a334",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16ac98c-2542-4eed-a659-1c3687e30e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557d9c5a-602f-4a30-a281-eb981bab564c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407d6d0b-ad04-4334-8281-70edc1dc8040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb674d4-d2fa-4c1c-89da-552f0230e49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e1dc1e-2887-4b02-9969-3fb33f9b0e37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03823e5-35be-431a-be4b-40db1645516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ceca28-f46a-4653-a749-d34d72cec3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e981c21b-73f8-4cf9-8fec-f621bdaf42d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26be9304-e295-42ab-aefe-b2fb0ba14412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e40539-24e3-4411-9ce2-dada038e7dad",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52909bf4-2168-4b6c-b4ed-81814e325331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a760a59-366f-49fa-a3fe-3e1b70395a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3720bc-5eb5-4d07-b2ac-f1d8e3a6265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ea03b7-421a-46ff-9094-e6a6fd962aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63df9df5-6e50-4e5d-b928-565dc7355f0b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a76dcf4-9a72-4254-9a2c-52612be15867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afd2461-b536-4494-ac11-f8215b7a3c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f84d65-3fc0-462c-b5ba-c475ff33706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ad96b2-416a-44f2-b1a7-70ee55f8f9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84aced03-a903-4d80-ad5e-6fc3e8b1fd8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ce4b83-e8e6-4951-98a4-80b24b395a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c372f8c-1d53-48bf-9965-1a4db17f4bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b7d10d-bca4-4830-90e6-42feddaac4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d264cb-0210-4e7c-9349-45577e258291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dfab53-cbc4-4d69-8372-81e6d17899a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f76b10a-81e6-4c57-9404-96c62fa598c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623421bb-d89f-46e5-9a62-3580f801172a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38381f01-49b3-4c02-977d-8548998103ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54018c16-1ca6-4b87-911f-1a7670c59175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a157be83-ef3a-4186-a775-e17eabb50d6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cc279a-b5f0-428b-8293-5d256ad1b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f938825-dc82-4a1d-9aca-bc1fa6391492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e6f01c-ef7f-442a-b14d-9ecca68df599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7299e30c-621e-4d97-97a0-35cf3a5fa5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8418bad8-b94e-4281-a9bc-90354583746b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d779cd-2359-4545-adec-ce5a0ab51916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946bf958-48b6-4c89-ac37-60dcf36dd3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b18d5d-b100-4747-9fad-598e3bf9b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffb3bed-77fa-4d15-9289-db39293c6137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e3c5ac-f3d2-422c-8b98-0f4ec12e9e65",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8496981d-497c-48bd-92ae-198e7539f3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c212ca7b-1ad7-44eb-b500-4d3ce850d527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4882c1fd-f85e-4586-b950-f78008cbc987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa27ed95-1684-4d2a-8e8c-cfae6def6a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35344806-e187-4917-a0d1-f84de99389bf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28d5e12-bd7f-48c7-8599-8459b3b9dbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41aef102-c295-4bee-8216-e286c6371200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00fe825-f0e7-4e3e-aed4-f87fc5b96ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873b062a-1f82-4ac2-93e5-499b7bbf9ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98380cd1-9539-4b01-897d-56a7e3373af5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff853a2-4860-4a00-b241-c3e71cf0c33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c4898b-582e-4d16-989e-6a72b89e6af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a29819-bf85-4d79-aa26-28b014fef5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "332fc209-afb0-4504-a852-19bb8e2b7d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3d36cc-3d66-4a65-978d-028751152002",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9f8b57-fce4-47a1-be11-dc9afed968d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce0d5f9-6592-470c-a6cb-b11731f14f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c735ba0-f3c9-4694-ab90-146d62cd2e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db80a0b7-2226-4013-b6f4-2c7bf8a71271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f7cb5a-8229-476f-b67d-958e25cbe853",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc941451-1caa-4756-885c-aa14908d4f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfd5caa-a12f-4bcc-8ea3-7aa9d78155ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeea397-5353-483b-ac89-a38836b02219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1caa3eaa-f908-4b67-adf9-9cb24b5b88e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1319a7-0bbc-4903-80b7-c0e19ebac2e8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77ada61-b16b-4a58-87e7-8aa7a4f9cbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bb5c53-8384-43b0-9264-004b731aa52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf130eb-3031-4572-a6c1-d288c819a796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0118c9bb-f437-4daa-bebb-b10f0e62ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbb156e-07a9-4016-8b5b-7e1266a75cae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87bafea-3511-406e-8995-18596eb04b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1046b781-236d-476a-8e46-3c1fe6f094a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91fb838-7975-4103-a4a6-490729af7e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeff22a7-4b0d-490b-a370-e7ae370d3b6c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfc5441c-5b2c-4e93-b13e-8638b73f1173",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07ef6fcc-1ed1-4acd-85f1-ded574c9ea92",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7890bc0-a01c-41cf-a859-b0429b68ac82",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2dd8f8-8447-460f-a24a-c917579c927f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f155ef-c0b4-4b52-811b-40aff2f5e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73ac73e4-0bb8-4d19-9963-73d37750d49a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5ec0db7-1850-435d-ac24-019b7f95e984",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4d44802-6eb1-4d7b-af91-49d0486a96f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbd8822f-2698-42e3-841b-53af15bd1885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7500f15-f69c-4647-9117-3d59a6270f72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a2d02e1-7560-4bc7-aa37-9da786acd92d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "333c3d7b-93f9-4bed-81fc-7b99a3cb3921"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d91b5332-07cb-4c03-a941-9ca166f82e55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4f0ee7b-4f32-428d-af8f-af0fabd49e23"
            }
          }
        ]
      },
      {
        "id": "69e4a02b-fbc7-41f2-b24f-9df72cd9b578",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cbf0bcbf-205d-4054-b44a-d92f63307098",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e935d370-e6e0-4a45-9a44-70406d15feba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ebb1a3b-7cac-4ec2-a7ae-4188547488af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54965ad3-0e43-4b1c-a9a0-d64857f5e0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fccf484-ddda-42be-b12d-3f7e82793f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddd049c-a4fd-4a22-a277-f7f1a89d0986",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc4abed-abf5-4170-a47e-cc6f15c38134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b86eea6-8940-4e34-84a0-8dc862012b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64fe942-6bc9-4e5e-be50-8f03d85baab5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88f2fd6-86c2-4ad3-ba7d-3f30c8d0c2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9596974e-762d-43b7-85d5-d0a41a9b592a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca20131-a27e-4004-8f20-82a1e34fe76b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f9df00-b419-498f-9ffd-aad4053914de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05c1992-25bb-4dfd-a3d9-46d0aa034422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a156ce0-fe82-433e-a87b-2eeb9184e4c4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec1494e-ba06-4b14-b9cf-367e93dd5b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573fa2b1-2e1e-443d-a08d-21bedd570b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3c7196-f75a-4891-9700-a20002b50898",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f447c1cc-53b2-4ba1-9bc2-de185399926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d69846-4765-4ec3-8642-be219832642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5dbf7a-ea7c-4dbe-94a4-a28bf9d9c043",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d94a791-dd63-4a2b-9cd4-1538e9c5d695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8f249d-e718-4ace-bec9-96eb3ace91e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a4d954-190a-4e85-ae4d-97d787e31884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd33f55-5318-4029-b9cd-809acea7c673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31356f9-01a4-4b32-93fe-2eb5327da59e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becfcf7a-f453-4f15-b9b7-93d707a0250f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22111be3-1d28-410a-a4d4-d02d81a57ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326b6269-bf67-406d-9f14-a6c211bd3ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf6e371-1ec6-4b18-9dab-9b073c7c1366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec4701e-bf7f-48f2-969d-2c14ce22b598",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6caa63-012f-4501-81bf-0253040985cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe893e3f-3d17-43fd-a1be-b847c81f2f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd80168-879d-4beb-bd80-5b3f7b8cc988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9a66d-e902-4bae-9d11-8efb8b34ed92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95b2c55-d172-481b-83c5-bb5042d00193",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d213bca-3b23-4af8-a215-54204d646fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5617e1fe-fd6f-45e0-82f8-1b94882c7489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452822df-149b-4d09-be25-ae257815462e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0908c2-5f1b-4e34-af85-a6c706e8e495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93890aa-6423-4406-b261-9ff7a249238e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691fc32e-6efa-4e7f-b40e-855b07a916c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2bf327-d2c3-4996-b4bc-dae2c19bb592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4076383-3f4c-4a7a-b47d-691c0a681be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0df3f46-72ef-42d4-bb7a-f871e61e0ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a044d037-b362-47dc-abb3-5d771297d924",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba8031f-011b-42d9-81dc-53c7312ea131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9468ca-3b84-47af-8fdb-fb08bc5ac664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3571100c-96cf-4fa7-8602-17b72211a412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e62f15-70bb-464f-898c-5c9b8e60e976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c893ee5-1a1f-488d-a8df-ea2b4083ec7a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d80c91-f621-416c-808b-c73bf70acd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7681b8f7-5529-4440-8c38-41db14655b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a968e8a8-d8cf-4c5d-8d7d-94d02ab6b5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13abea84-ad2b-4414-b8e2-96665f5391a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8657aaa3-ae91-4206-bd18-49e5f582dac7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d85d65-7cab-41ba-9309-6f1c397d2b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17deed7-fdcf-45dd-a567-408df8a5aa39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dfdee2-34d9-4563-83c8-b3adc901a111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64b2549-fbc6-4cc8-925b-5c717eb3f566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5acde25-bf79-4b49-9bc7-a7628581332f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60dd4a3-b201-4832-a929-1ff3d68dae68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7297b9a-1e15-4191-acd7-070924d53d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ebf53e-ad44-4231-ada6-596a5a7a8a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f884ef-cd1b-4425-bd44-c5d6f203d1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb5a978-761d-4cf8-ad92-2bc88f07ed90",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6086b6a-9b1c-4446-8396-5b8240150eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d5968d-990b-4303-9719-8a5b0aaee7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbe76d3-c165-4236-bd9d-889ddd72b4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d7f388-fe92-4383-9469-49a8fd9b9ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aded2a22-d9fe-46b9-ab2c-b8f387b7a607",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c36ce6-a27d-452b-961b-e446ed599376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eaaafd-dcc9-4580-a6ed-fb535e2dc436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e8d1de-9d00-4925-815a-7c1a54f976d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562caf52-bbe1-4467-8c7a-0c57a906f90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1a6fc0-f556-4406-bc54-0da85121ec19",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42f3614-c56b-4a04-ae8b-0a591f590daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ccb4a2-4c4b-41bd-a5c1-459548b8fd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7dc51a-bebd-4b88-a6b5-7d23dcf4a8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129ae2ff-4cbc-4ac7-9211-521d033d8631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79555c1-73d8-4300-bead-b0a9f88d0c76",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e93cc2-9c6f-48af-a656-a125e29cb7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1fede5-c456-4bbc-83e6-c54c842a94cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127d9f5b-6976-4eaf-a6c9-42dd0141b514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0593d204-2b56-4e9d-8d3c-9569b09ab165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff386dd-0b8e-4ffd-bced-6e2d122468ec",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9ac0aa-f4c7-40f3-83f5-8157037b6417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999ce819-d1ec-4f60-8c4a-88e0564af045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca159070-a18e-4e1b-81a8-7ea36f0e3cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413630ec-f59a-48e8-8848-5f90a50472a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240fc08b-a93c-4142-ba85-1fce6ce1c97b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8bf18e-f3bb-4f69-af78-fbc4e835a147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d60558-6485-461c-baa0-aae9e67a4040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06404a4c-f11b-4cfa-8dc2-60664ce1a2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd9f43d-398c-4ef8-82a2-1af4c20e89fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6437e3f-1b2b-4552-a9ae-86be044b61e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcc34bf-3338-492d-8fd2-4afcef997f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e113953-8680-4cea-b102-eb8e93518b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e7268d-ae34-42e2-a353-fb503e845ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729b196b-fee9-4156-9b06-29f4969c4f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bc9377-06f2-4ede-bcbc-9ee6606913f7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59265843-2b9f-4a0e-b99c-9a0d3b4f3219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082814a5-c814-401e-9976-4fcab6ffb8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d48e8d-ae72-4c3f-b9fd-c1b0a112e106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9025be68-0a86-47da-b262-e223d6d72d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c211d6-e34c-4cf5-b8a9-7b8b526e396f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a212cdd-e522-484d-b267-0da6b69c1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee3f419-009b-45f3-b125-3519ac42263a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300b25cb-bb84-4d37-9190-9fb4072bf0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8dd22e-96f7-405c-9898-86a20d6f4014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63d3af2-f452-45b9-9cb5-76234db77f6e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494a6128-0fc0-48fa-bd5c-bb5ff7e66576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ca8db2-e162-43b4-9e56-4080686339a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10229c9-2568-4495-b06a-6b4bcbf4eeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea59630-fd3a-455d-8073-f326df4f78ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf325820-afa5-4419-86b4-dafcb08714d3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e691a2-733c-4c83-ad4c-137d71345592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167e3ef1-a6e2-47a2-80f6-41d64b19bc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d410fdb2-389c-4ac3-aae6-ff3e6c8297c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ef22ce-8453-4ac6-a60c-0f5d6e4d03ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe2cf0-fb1e-4a45-87c9-4441af824a91",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3577e4f7-6636-47c1-b37d-de61767ad842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf4806a-ef00-476b-bfb4-cb818a6f40a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a614e56-e907-4d03-b06a-dc0193ad6cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba558c3b-89fd-4fda-8693-73892e110ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e4d90f-f424-4741-b6a7-1275acda58d9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fe6da0-2c9b-4ff1-9fe3-f7e2e05804bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7639d4-ba2a-4f4b-b02a-df9761e4ff96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680e71f8-147d-468c-bce2-8325e299cade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeea6853-9eb3-45ca-a89e-70560b174e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7b141-32dd-400e-89a4-3083b8518a96",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab18a3a-d679-4d92-b7d8-14a1ef9f8598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599bd26a-d538-4a4c-ba07-5021ee27588b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e10226-9c00-4b7f-860f-3569a2a68ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c51cbba-da99-4abe-8ee8-d1cec3218dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7db6690-a0ed-4ab6-8a28-cfd3aa098fda",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b21b813-7928-4dcc-98ac-78a1c5ea4d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eade7369-a5bb-49a7-b533-709d10aeae3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332be254-73b8-4e1b-986c-668900901758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39524ef-70ec-44d8-848d-d1b7d2daad70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b58e7c1-e4c5-437a-a2dd-897b7b7f05fb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67aa5fb-1da4-4b6c-88a8-dd1ed49e2ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fbb626f-054f-4442-859e-f2ca22b7655f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6d116-6ede-47af-b27d-5e54cd34ba53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83f01ee-3d12-4d30-b6de-1c58987c8c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b05ad2-50c3-4fa6-a594-33681abb8822",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c598a92-e16f-4eb6-a4ef-efc7086872b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81e6f9e-5f2b-43e1-83ed-b1e1d791de88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaeddd16-b18d-4747-9d9b-ed927e0e9f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81db1c48-63e2-4ae2-818b-72e6abb63bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e5fa4e-1d8d-436d-8aa8-6aadbe985580",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74602b22-4876-4f11-a7ad-6fd49d95ea73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ec76ae-4332-4a30-bb1b-2bcd71777633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c19f840-f611-4775-aef0-d414c2ec6e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0a87fd-260d-4d97-9e91-6475ad1443eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd0657f-beaf-4559-a513-0d02be2af7a9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a38e868-d766-4db6-8878-b15ba6a170b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7183bd3c-710b-459c-b5b5-c247392f1fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f02138-d1ed-479a-9294-65be44932ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850f4198-ce60-4c0d-8571-4d91f0c2889d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398e4a5c-fa7e-4d5a-a6f3-242b009d162d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c155db0-acb7-45a8-9e9f-57fb04216943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160a3726-44fb-498e-9f62-e9e2325fa37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407a1276-e7af-4b45-b562-35347aa70ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c96e55-b0b3-48f8-aa36-532d85b9c1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ed06d1-f4a6-4937-81c4-a265e47c262e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a04916-5c22-4f6e-989a-1719924061fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65881222-21aa-4d55-9005-d64d100b4743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96de07c0-a956-4d97-bd08-9d505d1ab7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54d14d5-c84c-4a40-a455-73d12c05604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb3b536-3b35-4ca1-b5e7-493c279eaaf4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b228d1da-bac0-4742-a6ae-34bb48ca91c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5a106b-d542-4426-b7d8-55127eb0691d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72757014-70d1-4189-b129-0c412fe09a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b68be6-1426-4145-8612-2feeaadf178f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e806e-1338-4aa1-85ca-5a2871a3f408",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed0f92c-5579-4486-8759-94a795a26faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d5b356-2268-4561-ab0c-6f9265bb89bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc21823-11f5-44e6-a609-489fd9a67e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdd6863-9b60-40e9-9af0-01a0abe5650b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45654e45-f858-42a6-8663-c688ff4dba13",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5857c81a-c152-47c7-8b8b-ea5b678023e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fab85ab-fe05-4de4-ac7b-a0483c2cc328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bd63ff-72c6-41b3-a35e-8a821c4a798b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f661fa3-804f-4ee5-8f04-1a8f17d0b809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafe0432-9951-4272-9793-e37d56933ba3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d26c3e6-7d84-4063-93a9-f89b57886bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70330d2a-53e7-44af-8acc-dbfdad2c00d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d015f7c-77f8-4c53-883a-5df3aa97ff11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f08335-547e-4776-84de-1647b0a467be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f38b53d-b733-4bcb-974b-8d87499a1982",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b148a3a4-c3b3-4702-83e0-036cd36e0c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e149769d-7c68-45fc-b759-cea72f036bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cefefb-0394-4455-88ef-f48427c09671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca1250d-6a4a-4b2c-be06-fffa742d00ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ea6ef-4ac7-4891-9e8d-e721b07e4f55",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae09277-1cdf-476c-8114-6062d0a8fc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a43b1e-a921-4853-9bca-e385f006f043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d1595-2358-4de4-9282-0701d7eb63ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3abdb3-a4d2-463f-ba38-12c4a0e74d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46feaead-a52b-42a8-be43-209b51b6f5ef",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af42e47-acb0-4e01-b3e7-c625f492b118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2b6dae-74bb-43fa-be6b-1802744e077d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07fe56f-c7e4-44cf-812f-6460cb3e9777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097a4be3-9ba4-44ce-b583-834d46f8874b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f709c1e-8908-4d2a-a687-4861422d7a8f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3811c7bb-2053-4dae-8cca-7e0685393bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76a0985-3674-4fb6-952d-45ba3244a3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e98f30-6826-45ef-a24c-de4b58ab9acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5a48be-3a8f-4830-b9b5-fa48d2972f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76d168b-273c-4a8c-aefe-fad56702d3b1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605cee18-bd27-45c9-899d-ea56f3f49884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d5215a-25ed-4563-a112-fdb2afba6fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64880088-3587-4b44-b890-95cd3e632379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7325eef4-dba8-44c9-bdf4-4347efd894b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83fff77-4d70-4a5b-b727-3a19c493907e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8e2806-99e9-47de-bfad-345039c93200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21ea0a2-41a8-45f6-bbd5-63a6f4506540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784e7ee6-ee2a-4be3-9611-72accb950446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e251fd8f-b382-4dd0-af49-e0f447ae49d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7eb26e-2374-49d0-a7cf-389b3ae06eed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81f313d-691f-4849-ac14-701b196a5be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b615003e-20d8-450b-80b2-eca04bc1693c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660458ea-7b2c-4d97-a81c-43f4beacdc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa08ae60-7dc3-4e37-8144-018bc91a42e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3d9ec4-4bdc-457c-b0a9-8d6cc34421d8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb64578-2a99-436b-9162-7d4987257bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758ee528-8aa4-4fd1-8d6a-da4c63b93f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f960571-4127-44ab-a24b-b58b189df2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f61dda-dafe-4a8e-a557-48b7ca3ab074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767f5f1b-6806-4d08-a661-60fdc2139a50",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cca3e9-42a3-457e-9dd2-d0a300232b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb127f36-644c-40c2-ad1b-577cf65c707c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cd9590-c5c1-4ec6-9456-1b099b3c0357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef60a828-505f-4444-ad7e-53b03099b1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5e301b-cf93-479c-85ff-863f8ae9763b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eb12dc-daf2-4ee0-b783-253c39f44a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39db00ce-af4d-43ac-b2d2-8800aa7f5183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8cb25-f907-485e-b8cb-706853b6a805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b9ef27-cb50-420b-bb72-568b4a884f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69863ca6-cc36-4e69-aeea-8ad2f81aed42",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cf72af-04ca-4e7e-a134-3b6dc50264d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcef4e3-e4dc-465d-9f1c-75d42bace9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd283c27-d43f-4bcc-82b2-032b30aff64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad49573-0b0a-4372-9952-c5b0f402e77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4096b1c-e7d9-467a-a304-fb766a2f077f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f0e8e-70fc-46d6-baf1-01f42746c219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc247d5-44dd-460f-8dde-53abc12c656f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91165f42-e571-4d22-9f3a-58391979538a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80856c3d-90d6-49ab-a372-b33fa049fa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cc7d57-ab7a-4de3-8b40-0fdbbdb30eec",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f0a1fb-6f7f-43f4-a916-60f680a464c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6546867e-3fbb-4897-8fd4-21d6ace83370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3f0c89-88eb-4efb-8741-866ea71fb93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f22fd9-89cb-4be1-9ca1-0f58385d74a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333d2326-c733-4a16-a98a-30b9c1aad304",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661d3760-dbf9-4305-b680-00139595e8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e02148-e01b-4418-98c9-3dd44b05ae57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efd3f75-722b-47f7-b2be-fc2d60bda86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb9bf7c-3ec8-410b-88b1-bd070c1adcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb11ab7-b5c0-4575-a22e-a72daf2d0f35",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cadaf94-035f-4c27-bcc8-260ac7d6e009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e0b24a-f3e0-4ff5-b150-bb8bd87ad854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185ee936-2b3f-4cb2-9198-9428101757f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16ab5ff-e44d-4656-8531-ec7860e6ec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bbb06e-4e6c-41ba-a432-54d29a07deeb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08563ce-d474-4989-9736-92e953e36c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef275ee2-532c-4d5a-bd21-b48e07d2d7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4146add0-7be2-4505-851a-deab5585abaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836f3bf8-0812-4687-a5da-439cbacd10fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202d922a-cc72-4209-ab83-7d0930782dcf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8faf6f9-b99c-4d72-ac1a-f009d1eb96cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cc17e6-b5b0-41eb-beff-bb4d2f56a153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae5085a-412b-45c4-820c-0c04c7ef3085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de05b87-c1d9-4220-86cf-0a5bc7d7c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f941555c-3a88-4d83-8d46-dd3efb508e65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e578398-254e-4e3b-bdc8-0bbefabe3bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7cb3ee-90ab-407f-833c-a508cab4f4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf0ac3e-0201-49c5-9ed3-e91880673035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499732e2-6a8e-4ba2-90be-cb1b8b6a2e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceb0c4c-410b-4c89-9dd4-b5640cbeeb33",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9d3e99-031e-4869-9055-79335ae83af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b05a7a-7126-4f32-b90f-9349d445bc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b44178c-0afc-4efc-993e-a0c324d9be67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4f5303-f860-4653-8519-eae173a6bdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fdfe44-fdcd-4aa2-b2fe-20e01b4feaf1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef09194-cef8-4c0d-ab59-681cedd0f762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f008c644-a7be-4873-bfad-0fa27f8f4a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4175888-61d9-4f9d-8da4-8b305f14e38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3e919c-a3fd-46a7-a84e-bea9e44bd6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad4372e-1a1e-4232-8d04-0bc3001ad823",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09c3cb-9c28-442a-a986-97fa3b1a7a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64662a5d-f6b8-44d9-ac86-12a4afe29529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8bf1ec-79c8-406b-bca7-5a226cd78ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9794869-6aa2-47b9-aca5-fb4412ccc491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e134477f-4eb0-45e7-b5f6-a8cdfe1c4a77",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57009ae5-f82a-4805-8204-a3dee9294ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc978d51-c1e1-4c65-8a38-5ddda2e7e2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7857bf3-e4db-49b6-ab1c-f84e7487ec79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b13ef25-de4e-4e87-9028-71ad9bf2416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71be533-1423-4429-96db-47d060aab44d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69497c55-7feb-483a-958c-46d5fbc6c431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e60f1f7-c158-4637-bb48-1df94658c7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5356d7-b608-4fc3-ace2-830a6a437dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8ae021-7f73-4ef9-90bc-e9994d8d6064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874d9cd1-49db-4ec2-98b5-b4eaf6019f91",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd9e158-4621-44dc-bd5e-750eeaca0f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38325743-af05-4c42-8953-c91257c497c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c61c76-0a8f-46ad-93f8-b893495d586a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842e1fba-a3c5-4cd0-9b3b-439f11550561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41157024-c112-4adb-9d53-2f001616e97a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c64036-63a3-46c0-be2e-8665f1aac792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5f9b30-b76b-4df6-9f73-e1090b763e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d492960-587a-4dc9-b06f-896c46660fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85fefb1-9335-4885-bec6-b5e0c532833e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca14e33-029f-4578-a9f3-c8d972f7aae5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34535d73-e3d8-4a14-a1a6-67f23d93f575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3c27f8-2504-4e1d-890f-f0323935b77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dbdf72-8873-4d40-9e6b-7b0b004a71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb73f27-fc9a-4e70-b9ec-7848612a3ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5758ce-3560-434e-8855-675ad4157e9e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5963ce-3d5a-48a1-b932-f34e39593559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f4e705-4688-4950-9090-78157ff23bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6df7a18-bbf5-4bfa-ac8d-9af8f574cb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9fcf6f-da6d-475a-9b7b-320b66ebfef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dbbe15-2534-49f7-a4f3-e48c796efd0c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7691d972-03d4-44b0-86bb-b6098c09d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5392c44-dc0d-4f55-8d12-e8bab25d859a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffac6b9-96a7-4ae4-90b8-8a8310c95735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b30c146-de99-41f9-af54-c716139af265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9070109f-33fc-440a-a2c0-4946cb72963b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618828b6-3172-48b9-b18d-8ac5f9ba951e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a06ed4f-4340-4b42-83b3-7df0f238d89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9774209c-53cb-4688-ba7f-1bed57913355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ca1e19-a489-481f-8886-5786daacc68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d0a509-5d6b-4d1d-b113-18cf070d7a7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5e1580-c3e6-415c-9258-6a40ff81f201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b0a5e4f-2e09-487a-85f2-bbb9479a00a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f055203f-59d5-4c47-9314-42f83f81cd31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b711b43-9365-4f2b-aa7d-2d1cd193e749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70cff8e-9b78-4409-af65-2d812758991a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1623fa1-44ac-4ccb-aeec-1d807869d868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2db8b32-b594-47fb-b4ea-a276a629ac78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cff994-dafb-4e0d-ad8a-d8689e7d5331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bef60cb-0b36-4719-abc6-88765867c678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d4eaa5-774e-44a3-bdf6-ff813c90ee80",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fb2400-02bf-440e-8663-ff6d1b41b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bfbb7ef-6eea-47ee-8604-e46283c62927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd19d1-3e72-4490-8a97-d1defee84be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7a4e83-c0d7-4cb8-aa81-30350ae9b682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c56ae7-9aae-49f1-af6a-7e621e7a090e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05087c17-fadf-4af1-9f6c-a5eb5e632b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b41fd78-bd55-4137-95fc-657b2374e56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb276cbf-b267-401e-be02-062de537fff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7abe15-e960-4f8f-9ae1-ca43876e0a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b0f03e-ba01-49bd-815e-5efebd945ccd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f104a6bf-c2c7-41ba-8afe-6690bcc28ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7e749d-efe7-4d24-bebd-655ba95d862e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c395fd4-acee-4abf-b188-e9a5334250eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9bdc30-b171-4095-92b3-182db7ee2836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bb95d5-3c1b-436b-9626-3211ac75ceb2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4484fd-8b34-4c50-af94-7d2ac5a4e5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5423b39a-4bd8-40a6-b1a4-e388fb7c9b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aae2fc9-8f2e-4fa2-bf18-705ea93f4502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af69eff9-03f3-46bb-91d8-531011812c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fc103b-b5bd-4478-b01e-28e9795b46c5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60cdc80-d990-4e36-83bf-70c2ddb6b25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166a7e3c-5e3c-4ddd-be18-2beb800ec589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21c5860-5388-4469-9b17-919faa6d984d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c408a307-0df2-4d66-a1a0-bc74151cc9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a208e-48d4-4b83-b5e5-2c90ded94caa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8757d3-c853-4394-b481-b3c037dcecbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df47b61-a4e3-44d2-9f9c-db1b969fc878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f73b814-9f12-42e4-9a9e-e3a7eaea9a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a0c8c0-bdc8-432e-8c80-9b230e70ff1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f08d1db-24a0-43fa-993e-d2facadfc249",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0193925-ffcb-4e43-9487-7c943423d4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df02856-c53b-4c5e-8853-6220e0a802b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7007f97e-bef0-43ca-b2fc-6bfcfc4b11b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79ad0a7-ca95-44f9-acbe-8ce390418841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe7795f-5380-4c30-976f-90b25d69f187",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cbd1c0-0c0e-42af-be47-273e6da2a67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08cfacb-a3c3-40b5-bdcd-ffbcb387d2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913a8591-2865-473d-aa08-056e835ee79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7653eae3-7e84-4c13-9855-edd51921185f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef806dd8-2886-4d84-bea4-67335dbd7ed6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084119b6-5534-43e2-b196-bf19b3f4f3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f39889e-7516-4c25-bebb-72fcd6e00673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3877858-f2ed-42f0-8d79-3e86c2b199e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf07188-04e6-45bb-9f26-a3cac7bf8549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b234d8-51a9-4fb1-8634-17614f63b6c8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b1dd3d-b1c4-4aa9-a33e-df1672068b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd430c91-fd2b-44d8-802f-1ef1db949d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467f728c-2aa2-4d56-beec-6d1db06d5189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a27cfb-3161-405f-890d-05a2d9f6d683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295ea8e0-dff1-4eca-be6f-28a2e9704199",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa27056c-e6ec-4c0a-b321-107800ba808e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dceae757-a813-44c6-a639-5ff29339e497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0a6ded-b093-45bf-8f57-50567ee1038f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f34a2f2-525d-4437-ab2a-25e7da7655ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e681c29-e3c6-4516-84cf-70e56eb2e2c7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fb5c59-5b1e-4e0c-a924-348ca2b8b8a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547825ad-86a1-472b-a9b1-07508a517792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a99ec9-0c8f-4f74-97fa-cb861214f44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800e8d2e-9abb-40ff-b225-9205fa7316a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f8956c-44c2-454f-bfcc-89f0cc50303a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f494c99-5066-4d29-b1a9-ab9046512da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8ffe2f-8a3f-4496-9148-4a123a089384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0527c53b-87db-49bf-9e48-d0e27f70dae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c8c330-929f-46f8-8e97-d475f13aafb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6335a5-32cc-4601-8024-af982d644e4b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bff504b-3ae9-412b-9b37-5f445bcbdcfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d0b2ee-2ea4-429c-a717-f2d03c103300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0286f9a1-b466-40b4-94cb-0f4d430874c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d730b25c-a26a-479b-b201-01c9cfcb2e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d25c5d8-ffe2-48fc-939b-a34c12bf290b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0996f6e7-b233-46e7-b136-26309ca08a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36026c8-497a-459e-afd7-d286b2016b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83188006-0208-4dc3-9c8a-cb2bbc73d3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d752b785-575f-4960-a49d-1f1a5fe6c66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3bc528-e377-4f0d-a6b0-5692b7cfb529",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5446b973-5698-4290-9ad9-e03aee59f37c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f771ce7-80ba-43c0-84c6-470b8497895a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84083033-4695-45f2-84f1-82aee103e402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e28c5c4-fbba-486a-8d1c-ce69f7ca2466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c65ea50-0f67-4476-88a2-6f30d4e7aafa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e3908f-8513-4215-b69f-aa659c748712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca38bad6-2ccd-42dc-b246-7c9afd5bd4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d16b13-7d8e-48b0-b251-27478d964f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65b8fc1-d7bf-4285-949f-7cab4cd7280d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfa0f54-7e18-451f-aa53-43fc42bedd67",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95394d1-44d9-484c-b9cf-a7dc25ea14d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106e1d3e-8147-45dc-a51e-8c5c411aca7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1f2f62-facd-4c39-8442-93f96028bacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c77a47-a675-4cec-9177-4a0639238173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f839b5-b66f-4ef5-ac66-dc4bf74065f3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5ff5fc-ab98-45fc-8b10-f9506e877d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715a55cb-3424-46bf-b9dd-355c11474746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e85c5d-0ad7-4e14-bf3c-7e73e604ac68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa554b9-d6b5-42e3-9420-8cc8727935e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c057b6fc-cc01-4352-ac8a-dec3585d275c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e694d3f-516e-441d-98fc-ea27ed53e1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b5a569-d688-4d2e-aa9b-2eee1ae7928b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a51be50-8c9a-48c0-b1fb-5c80a06d82cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b23736c-5339-4212-b35a-9d1261de4d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28beff8-8344-498d-865d-aef0ea7350ec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aca8ce0-eb42-42bd-a711-cf4702e3da01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29330224-4ce6-48ed-9444-c4f69d41bcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a747b97b-364a-4dc2-95de-0aa63c28f012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31596ad1-d889-42a5-96dd-ebe67b913258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf61cf2-ece4-49d8-80e6-73944ad06bd1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258719af-84a4-4044-bf38-e5a11cf05d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6a94c0-bb8b-4e0f-898f-b1824e6e8705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c703b53e-fe8a-41cf-9ce3-7ee11679b859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdd90a9-3450-4739-93b4-49e746356f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b510cdcc-fa58-45c8-9e57-ecb3acea6e4a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9495b033-8f54-4527-93b9-bd714bf914be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1fd455f-22d2-4a3c-abf9-e2653d3d3571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e70e55d-2eb7-4e6e-bf68-81cd8f2d3b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46fee28-1e35-4ed5-bc02-e0911ee9e109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4775b92-e4f5-4fe4-bdd6-01c311b8ca02",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0535cdad-4caf-49a1-8409-3d80df07b8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c1d68f-9690-45cf-afe7-49b8f9a03925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfe02b0-7d4f-480f-ad2d-7be2d5e9114e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ffbb06-bcef-45ce-ac25-2ace90f990c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b86c146-18e1-4073-862f-0ccefa8b0726",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf4e228-712e-47fa-be79-583f3ed43579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c09b4c-7549-4bb1-b014-bd1d6d9f9ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2395dcf-e2c8-45dc-95a7-de955e9bb4c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9374ec-38f2-482c-8e8a-e740b02a38bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ce5c66-f644-4e84-9466-30bee2669cd1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bec18fd-3387-40ff-a694-0a9c7419f8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1933d642-4e75-467c-8561-18e63e2623db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1f918a-3c47-4cee-a895-ae80f5cde7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13058ed4-a449-42b9-80fc-24f53d855d05"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bbeffb4-0a0c-48f0-b766-05742b5d0c41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50f1456e-93a2-4711-ba5d-9b9b08d0b93a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38fd387f-e977-4105-9f91-bf270615a160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed9f980a-dfa3-4758-be35-af2050a57189"
                    }
                  }
                ]
              },
              {
                "id": "de2210b1-a3c5-4c59-b2a4-63d91131ebdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dc8970d-b442-4560-be9f-f202ebeed81c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372f78f9-002c-40cd-8396-3405ee8b9bc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b124f23e-cc0a-4a17-abb6-52e0a72ce7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c5d748-e119-49cf-8f79-61d5256e5ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a1a3801-8bad-4353-883f-3b137f0dbf75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf07e4d-779d-44bb-ae36-bab7387b8d47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f36866ce-f293-40f9-9c67-613cb059a559"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fdeb771-34bf-44a8-8f8f-f879645e438a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f6aa3e1-3bf2-4c57-9235-e33d3b90140f"
                    }
                  }
                ]
              },
              {
                "id": "05ca75a8-b928-4f03-8e34-86d5ba15f6e3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "65700d3e-5f39-4c6c-9b21-ad7a2cf5d08a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3ca7d8-f9e2-40c1-823b-76ed15f77208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0eedeb70-710e-4da4-8023-45ca39802b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eefc85e-89fe-4dc3-b12b-11b68d41527e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8123fb61-77bf-44be-a0ba-1382ca73f849"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d17d1820-8519-4d13-a7f9-f013b80572eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8036acb8-fef7-4384-9a82-21397b3562dd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d52d2b3-b019-41e9-b82f-c73d48bf902f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "03c7bc92-3e73-4197-9f1f-791c4fd9e9b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "893f14ec-25c1-4c32-9ebb-62e9e40ed49a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95bcdc2a-e052-463a-84c4-1452d867cf6a"
                    }
                  }
                ]
              },
              {
                "id": "bba6e75e-1bf8-4a7e-b731-ac935a5b537d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bed1a8ec-6495-4b9f-b1d8-d1006fc982e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2b6fb2d7-ce25-4638-8392-a0b0ab96fd90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ee8df69-f82d-4d89-8da1-ef02e5e35f46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "367468d3-6975-4a3e-b8c0-74838ea9d1b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "085e02a2-a8fb-46c9-bed8-1176840e6ff1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36941a55-e993-47eb-b707-669f90143135"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b5a7361-9b90-4a14-b4c1-e0751471d17c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ad6ad8b-ca55-465e-babe-3ef9470e5f58"
            }
          }
        ]
      },
      {
        "id": "38d3014c-ad13-406b-8648-d0ca109bd9c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "267fae01-f40a-4f98-b7a3-9c30eb641c9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21be6a78-adda-4853-a35d-411a529a6647",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41572c9a-b1d4-4fb5-95de-3f947e64c694",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b294b-ca55-4dab-91c3-9812a40117a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6d187307-6c5b-4ec4-a71d-ce6bd8b1f7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deef590e-f0a8-4c3b-b2b9-645611db43be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "764a31ac-e7bb-4475-9486-dacb8ee20ee7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ebc8ee9-6fa4-41a1-84b2-b8ebec8980dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98dd3a93-ed3c-4752-aef4-ddfd400250ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50c1ae55-8aa7-4b50-8def-8767ff349630",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b5e440a-3001-42fc-8edd-04bad086bbae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06b35489-1e50-4fe4-b19a-f109fadb49bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f059ceb1-d4b4-47b0-a119-9ea03b37061b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b039a05f-4e81-4010-835b-873393789098",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d0d8fd5-9e62-4fa8-a531-5a279b31c4fe"
            }
          }
        ]
      },
      {
        "id": "2bddca75-df1c-4157-81ca-6a3e8ba242eb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dd74649a-e6d2-48fa-97d3-142492336837",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71605fd8-d019-4666-be53-40259ff2d668",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83e1ca2e-ca4c-47ed-a9ed-f27d32da99ad",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f213ce-3d59-4b87-8f49-78a16b10c4c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4f66859-40c9-415e-98fa-295fa1d1187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd19321-31d9-41c0-85d7-7cec9dae0e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3976b8d8-af59-4c67-ba0c-2b8107d5f6bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15354c57-bea3-4530-beb0-2e125c5bb4ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c1dca1a-2269-4f42-a44c-7ac8ededd61c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76b67f8b-0652-4535-87fe-5df97faf13d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b90ca0d1-1cf7-4116-93e5-172a4442bbec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6fdeb1c-f859-455d-958a-c97d651b5a91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb26f619-7b2d-4f5f-a506-0465ae281310"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b69548e7-ed29-4f60-b731-008193d44fca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "373a8ba0-75bb-464c-99db-16bc6cdfe388"
            }
          }
        ]
      },
      {
        "id": "71be11fd-53a1-4db9-ad15-dad3c1242329",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ca79ec0a-13fd-4bba-b23a-847b446a0bcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7eb7ffa8-7431-4000-8566-48e85ac88eac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "939581c6-ced6-4e84-acce-60c8b4bc27c1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1e3246-f411-4704-9278-895702fd3ce3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab21adbc-a23a-4a9c-bf9d-f6467b701cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5f5a43-12bb-4905-9241-1a9ff87da244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e684f7c5-1c8a-4cf2-bc4c-7a9f722e0266"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cbeb85b-afe2-4e06-8ab3-4cb68f45a6c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c6b2df-86ea-4850-a0f7-0571b0bb846f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59949545-835e-4abd-af54-5b59d132da9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72f23ffa-0001-4e85-9745-03884be71b0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2c476d7-e450-4286-8fe9-89bc4a6ad27f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bcf849d8-5151-4812-9bf6-4b8ada3c2295"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a3de96e-3028-40de-b368-0aa957af613c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "197ed464-0a61-42ee-9808-da779b409344"
            }
          }
        ]
      },
      {
        "id": "67c67845-1546-46b9-b2eb-8a445f1cccda",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b8fd8fe-c02e-466f-9de7-f94216589c41",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b33b221a-9a7e-4d24-bd7d-ffcc50063349",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3209581e-0699-4826-8837-12e47c28d581",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72d4f5d4-7b54-4f2b-b979-79ecf17171c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "390b93e4-19bc-49a4-9729-e43577a4cf91",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.48421052631578,
      "responseMin": 5,
      "responseMax": 5104,
      "responseSd": 398.419954667193,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699230901922,
      "completed": 1699230935811
    },
    "executions": [
      {
        "id": "078c8f0f-2e3c-49ab-b86c-203df78119ab",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ff9b2001-2b31-40d6-84ef-e27a5b9ac36b",
          "httpRequestId": "53f9fcb1-5a97-4db8-b9cb-4d86f3f24596"
        },
        "item": {
          "id": "078c8f0f-2e3c-49ab-b86c-203df78119ab",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c91dde7f-491e-428b-b6f3-beb81b5e3973",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "64118517-f09f-4ce5-b130-e9d938629970",
        "cursor": {
          "ref": "49e6ad7c-61a1-487e-ad81-f355b03977ee",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0dbd680d-0c6c-4689-9a28-c3d1b9559cb8"
        },
        "item": {
          "id": "64118517-f09f-4ce5-b130-e9d938629970",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5edfde10-7e9c-42bf-8565-f8193d37117f",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "54fd2c7e-92a8-4a25-ba8a-d735416bc023",
        "cursor": {
          "ref": "03e32bad-db9f-4a14-b9e8-7aecb170d3b4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fbc6d030-1d6a-4820-89a0-7e8f55e54a85"
        },
        "item": {
          "id": "54fd2c7e-92a8-4a25-ba8a-d735416bc023",
          "name": "did_json"
        },
        "response": {
          "id": "1e6d73e1-ccbd-4e92-8579-18e86cf93f8f",
          "status": "OK",
          "code": 200,
          "responseTime": 258,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8259f5-4fb4-4d08-bf1b-960325839b5d",
        "cursor": {
          "ref": "44547aff-a898-4514-bc1d-5323f52815a8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3bba8a7c-40de-4dbc-898f-63a0bbe55b88"
        },
        "item": {
          "id": "1d8259f5-4fb4-4d08-bf1b-960325839b5d",
          "name": "did:invalid"
        },
        "response": {
          "id": "176be73f-d23c-47b4-9799-98023d51f3c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 892,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8259f5-4fb4-4d08-bf1b-960325839b5d",
        "cursor": {
          "ref": "44547aff-a898-4514-bc1d-5323f52815a8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3bba8a7c-40de-4dbc-898f-63a0bbe55b88"
        },
        "item": {
          "id": "1d8259f5-4fb4-4d08-bf1b-960325839b5d",
          "name": "did:invalid"
        },
        "response": {
          "id": "176be73f-d23c-47b4-9799-98023d51f3c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 892,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e18c00-d45e-47bc-a712-833ed5f174ea",
        "cursor": {
          "ref": "e7f649af-7f70-4483-b36c-f6d192a76879",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "19e67e1a-8d3d-471b-825d-13fcb411ee6a"
        },
        "item": {
          "id": "78e18c00-d45e-47bc-a712-833ed5f174ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2010e308-6bc1-4657-bb63-25ddb381c988",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57833b8b-36d6-4006-9051-1608e70df5ae",
        "cursor": {
          "ref": "23d22a81-991f-4600-a482-b4d1337fc31b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4732fcf8-4e6b-49f4-88bf-d68bd4d4ab39"
        },
        "item": {
          "id": "57833b8b-36d6-4006-9051-1608e70df5ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f1e5d8ef-2399-48b4-ae8a-de00849195e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ed71fc-d3b4-46e7-b053-f65e29b852e2",
        "cursor": {
          "ref": "fcbfc709-07f9-407c-ba71-7b45168e5029",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "32a29a22-c4a0-41c4-b071-2fab4ebc4f30"
        },
        "item": {
          "id": "a2ed71fc-d3b4-46e7-b053-f65e29b852e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1d066277-fcec-4d8c-9482-8a719c9a2cb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7945b3-b977-4a11-b4ef-59dfeb86b435",
        "cursor": {
          "ref": "6780ab35-8f2d-40fc-96e3-6065fbe92981",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "690c9340-76e4-4486-9d8e-6ca704ad6815"
        },
        "item": {
          "id": "aa7945b3-b977-4a11-b4ef-59dfeb86b435",
          "name": "identifiers"
        },
        "response": {
          "id": "afc1b4ba-9446-46cd-8bb7-1550a486d8fd",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7465009f-0317-49cb-9803-5888397bd481",
        "cursor": {
          "ref": "41e42a06-444e-43d4-881e-255efde90170",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b736cd06-fc8c-4019-9d34-74402d82000f"
        },
        "item": {
          "id": "7465009f-0317-49cb-9803-5888397bd481",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c735ecc6-d141-4699-ae57-c5d86cd8e849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34023ec7-b8ee-478c-b1a3-9fc6d45718eb",
        "cursor": {
          "ref": "1ab039a0-3efd-45c5-bb03-85eb331c02d2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba77f42f-0fd5-4b00-87f5-4f59d9bba028"
        },
        "item": {
          "id": "34023ec7-b8ee-478c-b1a3-9fc6d45718eb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8834f083-def6-4786-aad6-a1d296077f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684561d2-66c1-4860-a1b8-bc8b2f170565",
        "cursor": {
          "ref": "0dc974db-68b6-4f98-8926-0fc1be7a5277",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ca7948c1-63cd-4aa0-a55a-f3f494aa48bd"
        },
        "item": {
          "id": "684561d2-66c1-4860-a1b8-bc8b2f170565",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f7640b0a-fa70-4068-be21-a7467faa1807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c53e06-557a-401a-9399-29bb7b28e686",
        "cursor": {
          "ref": "d61e61ca-0e91-4bee-82bb-ab387df82480",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4fca6f65-5d43-4eff-9d05-4e57f61e9cff"
        },
        "item": {
          "id": "61c53e06-557a-401a-9399-29bb7b28e686",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d5d08691-3098-44fa-96a5-d530c929247c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fbb758-b90f-4450-b551-834ae43cee5e",
        "cursor": {
          "ref": "5de59a44-4163-484e-9599-bc1d0eac3675",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b1226368-9a56-43c1-b530-82e5167ceb03"
        },
        "item": {
          "id": "b7fbb758-b90f-4450-b551-834ae43cee5e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "98002e54-a628-4a51-bd19-9639e8b04c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef928051-2d51-4421-bc4b-1e78aaf5d79e",
        "cursor": {
          "ref": "3cc582b8-790c-43a6-baea-f2f951bd96e6",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca7de8f6-7d42-4200-a802-060965a793d8"
        },
        "item": {
          "id": "ef928051-2d51-4421-bc4b-1e78aaf5d79e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7eed5df7-88e3-40dd-8086-2759df53cdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534b040-91a9-47cd-a652-64f11654084f",
        "cursor": {
          "ref": "8c88ee2f-2575-43a7-b78c-f3f505742a46",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cc720efb-4592-44f2-afe8-4c75431f0ac4"
        },
        "item": {
          "id": "0534b040-91a9-47cd-a652-64f11654084f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "addf8372-1b7e-45fb-b69b-bd1f52f9214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba96122-c658-4864-b1c2-3ed75973d36b",
        "cursor": {
          "ref": "d91b6a2f-d016-4ef6-956e-1d311e46424e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "26272e8a-f0b0-494a-8217-a8396050244a"
        },
        "item": {
          "id": "aba96122-c658-4864-b1c2-3ed75973d36b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "09af09a3-be40-4ee4-aed8-f7047a410f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9737189c-6b7b-4fb4-9fc0-cc928abbb8bc",
        "cursor": {
          "ref": "45d2ed2d-4060-48e3-bd47-c929685f5192",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fa18a84a-9572-47be-b1ec-4cb1cf921fe0"
        },
        "item": {
          "id": "9737189c-6b7b-4fb4-9fc0-cc928abbb8bc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2e539527-0545-4f0a-a022-ce0d5dbfaaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e15912-d247-4f3b-9c6a-54b360ad1cc0",
        "cursor": {
          "ref": "93db1437-57b7-4985-b581-f0ae94dcfa19",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ef651f8f-a217-441e-a072-b9def022ccd1"
        },
        "item": {
          "id": "04e15912-d247-4f3b-9c6a-54b360ad1cc0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6a8cc8e4-a36c-4ac0-84d7-a9ce75145c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073478a9-7365-46bb-9b8b-c648b8f2b94f",
        "cursor": {
          "ref": "e0a19541-b2db-4e36-96e8-cb8947dc95e2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a1041ff4-e181-4a4f-8aa4-577423b09937"
        },
        "item": {
          "id": "073478a9-7365-46bb-9b8b-c648b8f2b94f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b7a9e04b-2849-4c08-8dd9-8a03d4ff3d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a885563-243c-4912-8e3d-3bdfa4d1de17",
        "cursor": {
          "ref": "13c6a567-1227-42be-b40a-e02a668b2d0b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "06085913-88eb-40fd-8672-804439bc7ac6"
        },
        "item": {
          "id": "0a885563-243c-4912-8e3d-3bdfa4d1de17",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bc883539-a8cc-4972-8ba0-d633c8e1da38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed4fb3-9c50-4c30-a7e9-850551a37a28",
        "cursor": {
          "ref": "31f2beef-b43f-4c2d-8221-51f1f6b6addf",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "652f4199-edde-4683-83d3-039d363a240f"
        },
        "item": {
          "id": "6aed4fb3-9c50-4c30-a7e9-850551a37a28",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bc1c53ac-dd55-47b2-92a6-3e9377430eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae1e6ae-2867-4af4-b934-e1dbadc3425b",
        "cursor": {
          "ref": "ed2c8e50-539a-4a77-bc62-b0ad834a0e8d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e116341a-eef5-4958-a8c2-d83ab460c968"
        },
        "item": {
          "id": "5ae1e6ae-2867-4af4-b934-e1dbadc3425b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "75d51526-7fd0-4ed6-b7e3-991be53ea9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d21f64a-7e79-4481-85d2-dc205c07dd0d",
        "cursor": {
          "ref": "891cfd46-8bef-4e07-99b6-256818f6d0eb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "23e58308-1f16-4471-8d2d-26f424c25e8f"
        },
        "item": {
          "id": "6d21f64a-7e79-4481-85d2-dc205c07dd0d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61d36bc3-719c-4dfc-b68f-b5a203d66c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbbabbc-f4cb-48bd-9257-543b0a6650e8",
        "cursor": {
          "ref": "e904fffc-89ac-451d-bc12-62e2c7776e5d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0640cd2f-9c0a-4ebb-b3f2-345b896ce5af"
        },
        "item": {
          "id": "adbbabbc-f4cb-48bd-9257-543b0a6650e8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46024acd-21a9-4fe3-9bbc-595e560b256a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906566ce-269c-48b5-9f75-650eaabc0b1a",
        "cursor": {
          "ref": "2f4c05df-5237-448d-8906-537c5f5d84ab",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a15fcd08-ec8a-4067-844b-cb7ee9fb5895"
        },
        "item": {
          "id": "906566ce-269c-48b5-9f75-650eaabc0b1a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2322ae85-4575-465f-9c1c-0bcac4dcf8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7305941-6fbb-49a6-82a3-01dfdd97a11d",
        "cursor": {
          "ref": "12797a9a-e7e7-4e73-b252-a25d4fea47fa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "afe59bd6-3148-4f7a-94e8-c9f08dfc24c1"
        },
        "item": {
          "id": "e7305941-6fbb-49a6-82a3-01dfdd97a11d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7e404e42-ac19-4770-9faa-e987f779b81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d66817-fbb2-4a8c-8eed-b9dc61c98734",
        "cursor": {
          "ref": "755ee243-aeb0-4ac9-b2b5-b400a0486e15",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "81eacee0-44ee-4c16-ab4d-970644802fd5"
        },
        "item": {
          "id": "f5d66817-fbb2-4a8c-8eed-b9dc61c98734",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "64ec45cc-2879-4c96-8ac9-e714c3cec1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23825b52-284c-4ceb-b88b-13a799baa654",
        "cursor": {
          "ref": "1450f3df-5bf4-4319-9457-83c60fb92b94",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6677cd17-db04-4da4-880a-37aa5d5a7f7d"
        },
        "item": {
          "id": "23825b52-284c-4ceb-b88b-13a799baa654",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "06cc8178-dc72-4bc1-94f0-08953ada3641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a88cf-5aad-472e-9c0d-966140b7a3b1",
        "cursor": {
          "ref": "697b5a6c-97c1-4bf0-8305-5905bbd00953",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7f98a1e9-cca6-40ef-93c5-aaad15a63b13"
        },
        "item": {
          "id": "643a88cf-5aad-472e-9c0d-966140b7a3b1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3eea79d0-e68b-4f25-9be7-eea133a5a6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b5dc08-455c-41b8-a945-13d0063dd6c7",
        "cursor": {
          "ref": "fd3bb22f-f5f3-45eb-bcde-817a35317317",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f696a4e6-1cf4-459c-a92d-b546249f9a87"
        },
        "item": {
          "id": "26b5dc08-455c-41b8-a945-13d0063dd6c7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d9c31eb8-37d8-42e7-80b8-cc57e8017c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7bdde0-46e2-4bf8-ac33-fabd85ac13e0",
        "cursor": {
          "ref": "b3060f5a-3ac7-4105-9799-a51b9ab9b1bc",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6bf73a15-e634-48cc-94fd-573706f14e33"
        },
        "item": {
          "id": "4a7bdde0-46e2-4bf8-ac33-fabd85ac13e0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e575368d-bcef-49c2-b182-d14735cd3365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2df606-96b5-4222-9b7d-8144c5600ef9",
        "cursor": {
          "ref": "74518cca-d584-47a2-bf73-77486d148a90",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "db2c5016-3b93-477c-be7b-bdaca3ddebfd"
        },
        "item": {
          "id": "aa2df606-96b5-4222-9b7d-8144c5600ef9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1e72a91d-3c34-4404-bf97-ac195458d750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee965559-987d-4e08-ba0a-0cf4185eca9f",
        "cursor": {
          "ref": "50d716af-fd8f-431f-a6eb-223798dd6c61",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7ebcc783-026c-4f2d-9606-2ce1c526369a"
        },
        "item": {
          "id": "ee965559-987d-4e08-ba0a-0cf4185eca9f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "68f6e4f3-cf84-4436-8e15-d2404bd3f7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb48b9d9-ed75-4720-846a-f174eb5881b0",
        "cursor": {
          "ref": "db1962bb-9ef5-46e5-be4a-79b772050452",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e8ac670c-9f61-41b5-bc41-e8231f9977e1"
        },
        "item": {
          "id": "eb48b9d9-ed75-4720-846a-f174eb5881b0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0d6d971e-ac63-4264-9634-29da259ce2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b779b9-a520-48c8-8c03-3a83666e6b9c",
        "cursor": {
          "ref": "8ef291b3-0e36-49f7-a4a3-2d83a468d52b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8aa70775-c7f5-4d28-a761-0624ea815bb0"
        },
        "item": {
          "id": "09b779b9-a520-48c8-8c03-3a83666e6b9c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1035dcc5-3d7e-4a75-91c8-326c4bfeb804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3f0b87-608f-4f9e-87cd-44de589ac0a3",
        "cursor": {
          "ref": "c1cddd26-2dab-4cbd-85c4-edcb29f9c187",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "565e8f79-72e3-4519-91ec-d98553d2bc5f"
        },
        "item": {
          "id": "7e3f0b87-608f-4f9e-87cd-44de589ac0a3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "675e7e28-c38c-4390-b2f0-fbc9e10931d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f59ac9-60d0-4ac3-a6ad-54ec0895b31f",
        "cursor": {
          "ref": "556dceae-b97b-4734-a8bb-2d37c1e457ca",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3d26a7bf-d60f-4b4f-a007-8e81ad9d6565"
        },
        "item": {
          "id": "56f59ac9-60d0-4ac3-a6ad-54ec0895b31f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57a0be3a-5291-4b44-98a8-b386b86a42ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8338cbd5-99b5-4333-8d07-4b2b2b3685b0",
        "cursor": {
          "ref": "efe946ce-7ec0-427a-bc35-58a9543e8644",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b0eb155a-1594-4ad0-88d7-5b54ebf426d2"
        },
        "item": {
          "id": "8338cbd5-99b5-4333-8d07-4b2b2b3685b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ab512a68-802b-4849-a990-d4204b71ec26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14558dd-9c0e-4a06-ae79-e2fee8fa6572",
        "cursor": {
          "ref": "31e4856a-16a0-40d2-9e40-45b0ad907bc4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f04fe90a-02c5-4013-a1f2-b04c4b2b0b5d"
        },
        "item": {
          "id": "b14558dd-9c0e-4a06-ae79-e2fee8fa6572",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6b32d24e-6937-48be-9042-116b38998b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b0cd3d-b3e6-49bf-8646-834a9dd35591",
        "cursor": {
          "ref": "f1618856-2203-4d85-9951-54fa729dbaeb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "54e9cf81-ed92-42a6-a3ea-15c804221c9d"
        },
        "item": {
          "id": "08b0cd3d-b3e6-49bf-8646-834a9dd35591",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dd4f6d71-dba9-4f56-a0a4-f304f5925886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f484c0-4d98-467f-a80e-7d2bbe3c5348",
        "cursor": {
          "ref": "5aca2ad5-b786-484f-aa9d-b96a95416317",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7fffbf1-82a4-4dc2-844c-70cd2e7ad0e0"
        },
        "item": {
          "id": "25f484c0-4d98-467f-a80e-7d2bbe3c5348",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "73acbb52-8292-448a-b342-e82a38c39c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7eae58-f6a3-4f8d-8c41-a13d72ef6463",
        "cursor": {
          "ref": "84f2b252-a00c-4f83-9067-03a64ad79bb8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a1010161-917c-47c9-89d0-2d779cc8c4f7"
        },
        "item": {
          "id": "9e7eae58-f6a3-4f8d-8c41-a13d72ef6463",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "54b6a621-f6a8-4fd3-abe1-4b48b6159fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58350cb-abad-4125-8695-92a61701584d",
        "cursor": {
          "ref": "f1231a9a-2a4c-4012-9ced-eaeb792f6da4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6f842213-bb7e-469e-9158-a1e98b72a08d"
        },
        "item": {
          "id": "f58350cb-abad-4125-8695-92a61701584d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "25bac173-6a3e-43a8-a1ab-a849dbc55213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60994e68-b4d5-4fa8-95bd-de2f2a9383dc",
        "cursor": {
          "ref": "243ed809-7eda-4b4f-a558-ed822583575f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ba628806-2eff-4d2e-adc0-96e4e7bed972"
        },
        "item": {
          "id": "60994e68-b4d5-4fa8-95bd-de2f2a9383dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f02571ad-8c9c-4ccd-9db0-c3444de4cb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8e7b0e-1721-4de6-8541-a7fa9bbb61db",
        "cursor": {
          "ref": "8113f4a2-fa42-47a6-8edf-74e8774f632a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "769f1b16-0b06-44db-a9fe-803eaf44ce03"
        },
        "item": {
          "id": "4b8e7b0e-1721-4de6-8541-a7fa9bbb61db",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2700b3fc-52f2-4ab1-a84f-760e465d2de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9565c988-8305-4282-b819-a5951f5ab541",
        "cursor": {
          "ref": "369a3411-92d0-41be-9c6c-0e162a8c60cb",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "87bfad1f-f247-4c56-9e59-507742ea334c"
        },
        "item": {
          "id": "9565c988-8305-4282-b819-a5951f5ab541",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "62d938a7-682d-4d28-be1f-09a634d192a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356d1ca9-d514-48f8-b69c-fc02500ad94e",
        "cursor": {
          "ref": "7fa449f4-9621-4f39-a043-700f7cee43c1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "17e3f3ad-d21b-4885-bfb4-0d40391e8a39"
        },
        "item": {
          "id": "356d1ca9-d514-48f8-b69c-fc02500ad94e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58bc26e5-69cf-4a64-bbef-ce925abda2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6320aaf4-531b-4312-9690-5fa00b09813d",
        "cursor": {
          "ref": "411f6faf-e40b-4984-a4d3-1b9a8ce0bc8c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "358ee908-82e2-4368-b9ad-eac2274d46a9"
        },
        "item": {
          "id": "6320aaf4-531b-4312-9690-5fa00b09813d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf75f966-ca2a-4783-90c2-bfa789d21b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775aaf07-213a-479b-9077-eb8a3e024031",
        "cursor": {
          "ref": "16bab8c0-5574-4e57-b9d9-11eff95d2787",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3dfba88b-3e40-400a-94b5-1a4cff07a737"
        },
        "item": {
          "id": "775aaf07-213a-479b-9077-eb8a3e024031",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "23cea342-bac3-45de-ae88-78803b6ad812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006eb8f8-4792-4639-b863-074f6b7de4d6",
        "cursor": {
          "ref": "c2395e8d-0217-4945-a325-e0373c454e27",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "960ddd66-6255-4e8e-9af6-75080b861226"
        },
        "item": {
          "id": "006eb8f8-4792-4639-b863-074f6b7de4d6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8dfa7110-a8ec-460d-a66f-6e4f90c7df6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9fdadf-6683-4877-a251-7395b692e164",
        "cursor": {
          "ref": "336e741c-5e3e-4713-ac9c-cd0ce2f9e625",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c26667a7-44f6-40c7-b684-c3f021b3f8b0"
        },
        "item": {
          "id": "ed9fdadf-6683-4877-a251-7395b692e164",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "25d04aa7-a6be-4056-90eb-6608bde1bbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aca2c1a-59e4-441b-963b-71e302631065",
        "cursor": {
          "ref": "91ba4bb4-b427-46f7-8d24-f3f44dddaba8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5ce9df90-465d-4211-9bc5-667a754d5f7e"
        },
        "item": {
          "id": "9aca2c1a-59e4-441b-963b-71e302631065",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b510a1aa-a9cc-4220-b428-ff97e53fe150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d87a0ba-703d-47c4-a611-b4921ef9c2c5",
        "cursor": {
          "ref": "a03ad3f9-6cc4-4541-b0e9-b46af54a0bda",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0a41e95c-a9d5-48b2-baa7-2bd1cdee9c47"
        },
        "item": {
          "id": "1d87a0ba-703d-47c4-a611-b4921ef9c2c5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d815d3b-c91e-4839-8b4e-501543ad27e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36d1206-010c-4513-a55a-37c5f30e498c",
        "cursor": {
          "ref": "7804b4f5-09df-444b-9f0c-43d9e3a246cf",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7788de1-7624-4b81-bfe4-952e2f71d948"
        },
        "item": {
          "id": "e36d1206-010c-4513-a55a-37c5f30e498c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b12c9de6-c45a-407f-8085-3864b89676e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee244e4-4440-498b-80c0-3d307344ab42",
        "cursor": {
          "ref": "459c5073-f162-4590-bd07-232e9fbb8f9b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5199136c-8cc5-43c3-aa56-1ba166878892"
        },
        "item": {
          "id": "9ee244e4-4440-498b-80c0-3d307344ab42",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "78e0da66-ac7f-463a-a72a-2bae2f6eae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebd0540-6373-4ea9-aba5-31ab9693cade",
        "cursor": {
          "ref": "2986ba58-e883-4cef-8c4d-81bd6628324b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "19e234a6-1f7b-4359-a4e2-c111999cbca6"
        },
        "item": {
          "id": "4ebd0540-6373-4ea9-aba5-31ab9693cade",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b368b663-e01a-4313-9606-87e57709ece8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9cf1ed-2077-41df-9bfc-85392908b4aa",
        "cursor": {
          "ref": "18e0bcbf-5895-47f4-b015-d3bdd9217983",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46926b57-d664-4db9-a268-eff117901c13"
        },
        "item": {
          "id": "9f9cf1ed-2077-41df-9bfc-85392908b4aa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9b1d5142-2fa8-421a-9e7f-7330ea663877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e786094-fc3a-42bc-a33a-27182ff3239b",
        "cursor": {
          "ref": "ac6b72ff-cb80-4fff-8fcf-d2bb08a7b606",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13f14678-0cdc-4a11-b91d-d60f96391b9f"
        },
        "item": {
          "id": "7e786094-fc3a-42bc-a33a-27182ff3239b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5ed208ae-0eed-4118-ab2f-5d932cbeb783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bba2d1-8d7d-4fa1-9768-55ea8fde124e",
        "cursor": {
          "ref": "d105166f-609d-44ae-95f2-fd51078a87a1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f003cd6e-a391-424c-8ae6-7c9e6a0803dd"
        },
        "item": {
          "id": "97bba2d1-8d7d-4fa1-9768-55ea8fde124e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "41b01cd8-c74d-4d3c-9b35-cc7873fad2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ea8246-28c9-49f3-8e6a-bce883527b16",
        "cursor": {
          "ref": "ec98d7de-bc45-43a1-bdb8-105c9b645e99",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "365eb4ed-84ff-432d-91c1-dc7796370ec9"
        },
        "item": {
          "id": "f1ea8246-28c9-49f3-8e6a-bce883527b16",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ec98f042-28d5-4a04-8c1f-598dbdd5fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2902be2a-f780-46d8-a391-aec03312bdfc",
        "cursor": {
          "ref": "9a168800-b393-4bfc-ab1c-3ff31892e398",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "942d5cff-99bc-4399-aabf-1073569595df"
        },
        "item": {
          "id": "2902be2a-f780-46d8-a391-aec03312bdfc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0f5b9695-320c-4920-8bd1-5d46eb7ec03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80c07fe-a290-4fe1-a00f-126a603ab6f2",
        "cursor": {
          "ref": "b2e9ba76-5114-4b90-a6d1-4c7ce4b7a654",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "25c20421-5834-4ef9-90b8-1bcff9b1faa5"
        },
        "item": {
          "id": "c80c07fe-a290-4fe1-a00f-126a603ab6f2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3b4ef5b-5515-4d60-aa70-6169f5b7e22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78d3580-543d-480c-b0b8-a22cdea65ac1",
        "cursor": {
          "ref": "161fad6d-03c9-4ca5-ac3e-affd3cb11b36",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "919d508a-9614-4442-b280-8efa85e31d08"
        },
        "item": {
          "id": "e78d3580-543d-480c-b0b8-a22cdea65ac1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8b5c0a3a-9536-4331-bc87-2a7ea51d3b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dc701b-7eb4-4252-a01c-93b977003b14",
        "cursor": {
          "ref": "9dc037c3-da14-4a46-8ebe-a6801ef4864e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4e3daa77-b232-43f8-8f1b-ddec79e5cd4c"
        },
        "item": {
          "id": "50dc701b-7eb4-4252-a01c-93b977003b14",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f41d75c9-02d6-4243-b847-bdf91fb2c00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1a0005-619b-4c4f-b378-67ee42aad7b4",
        "cursor": {
          "ref": "9c9c8ac9-8a8d-4aa3-aeeb-e5464fd7e0d4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "38f87f2f-bfb1-4434-a664-abf62910376d"
        },
        "item": {
          "id": "cb1a0005-619b-4c4f-b378-67ee42aad7b4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8b7dfad2-c86c-4391-af34-2b66c5fe82ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9785787e-7f08-4b31-ad6d-4bbbe218c02d",
        "cursor": {
          "ref": "80663e35-aac2-4597-ac3e-4440cfb38d97",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7b3cf146-adb3-4950-9bc2-a5c6fc6ee0ce"
        },
        "item": {
          "id": "9785787e-7f08-4b31-ad6d-4bbbe218c02d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "34ae07ba-68a1-4d31-983e-7a98687de6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78999ff5-c19d-4cd5-a2df-6b3f6b3d25ab",
        "cursor": {
          "ref": "8e4117db-4736-4051-8612-18f9d2326f0f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ffdbb6ae-fcdb-43fa-9162-414ca2646cca"
        },
        "item": {
          "id": "78999ff5-c19d-4cd5-a2df-6b3f6b3d25ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "da214c67-bb82-4335-9fc8-3cba5a4bdc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71718b1c-9192-408c-b5da-42282b947eb0",
        "cursor": {
          "ref": "53242e11-3d07-4312-9b47-0ec5959ec18d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6d8648cc-f343-46d6-bf1a-5f4218659f88"
        },
        "item": {
          "id": "71718b1c-9192-408c-b5da-42282b947eb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1d94012f-8d4c-4137-a770-a9d51b2f840a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac74bd46-4bca-48c2-a507-2c163a9f67db",
        "cursor": {
          "ref": "2e4a4f6b-c61f-480a-bc0b-44494964c84c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9b0c4e21-876e-4f70-b913-e227ea0cd348"
        },
        "item": {
          "id": "ac74bd46-4bca-48c2-a507-2c163a9f67db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cd26977e-7d50-4614-9a23-64cc9cb402f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631da660-45ea-453c-9e50-6b2b54376a83",
        "cursor": {
          "ref": "b2735488-2cc3-4039-b1b3-a4ce12b8a5d9",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "672463e6-5e7d-418a-af49-2ec063932713"
        },
        "item": {
          "id": "631da660-45ea-453c-9e50-6b2b54376a83",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e623f7fd-3974-4419-b0f7-538c12370b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc539559-3de0-46be-b5f7-76d635c92b46",
        "cursor": {
          "ref": "024ecf21-2bee-4668-b666-81d6c5ded7a6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "964fac65-37aa-4d3f-812a-39904e9b5b3e"
        },
        "item": {
          "id": "fc539559-3de0-46be-b5f7-76d635c92b46",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e03b1602-09d9-4fbf-b278-fa9d22858962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4997b373-f24a-4786-bdf4-d42080804da2",
        "cursor": {
          "ref": "3e957cd0-c7c0-4715-bea2-6ea2d908def0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "547ebc59-a026-4441-86a2-e398c58cb153"
        },
        "item": {
          "id": "4997b373-f24a-4786-bdf4-d42080804da2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cf7009a3-a87e-411d-9f80-47f4da1d662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c46d9c-a0a0-49e1-9d0a-38622c64b210",
        "cursor": {
          "ref": "82ab01e8-8382-4673-866b-d8c49e2e1796",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c24e0b6f-b5ff-4cb7-8caf-ccb4ae327e32"
        },
        "item": {
          "id": "f2c46d9c-a0a0-49e1-9d0a-38622c64b210",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eb649e53-3c8d-411e-b5c9-87aa1771e6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7a11d2-3e20-4c9b-996a-eaecdc2c79fb",
        "cursor": {
          "ref": "81f5518f-6d41-4fea-a280-baec9b6df204",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b848b47d-9c8e-4730-afaa-8d60f2fbcae3"
        },
        "item": {
          "id": "fa7a11d2-3e20-4c9b-996a-eaecdc2c79fb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f44205ed-3fd3-43c4-bc24-257f89e2f71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fbfe07-1e54-49f4-a780-7b0341268d74",
        "cursor": {
          "ref": "38dfcfc9-c114-466f-a0a4-d5c43c0074e2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "23fccf34-0e9f-4c4e-97f4-0ed94e5f8148"
        },
        "item": {
          "id": "f2fbfe07-1e54-49f4-a780-7b0341268d74",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "afb17a4a-b992-4698-989d-f5ad62b66c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c756a8-291a-4395-be15-03cb96693f18",
        "cursor": {
          "ref": "fb47f7f8-681a-4744-811a-5f2d09880854",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "063b96f5-1cf9-41e2-a14b-a172fee3b1b1"
        },
        "item": {
          "id": "b4c756a8-291a-4395-be15-03cb96693f18",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d33e3642-1746-4e0e-bf04-16a4a9951195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ce605e-4b71-49ce-bbb8-28419e082ff6",
        "cursor": {
          "ref": "f3d0f212-bce7-409a-90ec-2643dc7f4c5e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "62a17f47-817e-4b29-a00c-5ed11b54eca7"
        },
        "item": {
          "id": "20ce605e-4b71-49ce-bbb8-28419e082ff6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "36895a03-f2af-4a22-b880-ce329a780226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6916f42e-681a-4bb0-bb15-b5c0721ad1ba",
        "cursor": {
          "ref": "ea953661-3aa3-435b-ab06-c2b96b682ee2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0149bdbc-5382-497d-a7d1-1d637367f0f9"
        },
        "item": {
          "id": "6916f42e-681a-4bb0-bb15-b5c0721ad1ba",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cb6aad13-1a6a-4fd5-b065-7228c8cd589e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b952eae-5f8c-4a65-80e0-dba5369f33d4",
        "cursor": {
          "ref": "bdff333e-f90e-49c5-bdfd-9ab6e238ca58",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4c7a19a7-1140-45eb-acba-1e2b5fb0273f"
        },
        "item": {
          "id": "8b952eae-5f8c-4a65-80e0-dba5369f33d4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9a6d2350-7a24-4573-88e5-5af91f76f95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99bf320-5533-4059-948b-a76971648352",
        "cursor": {
          "ref": "b7f521c5-cc3f-4fb7-94a9-adceb2582b3f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2332e044-a88e-453b-b4e9-854ed3492694"
        },
        "item": {
          "id": "f99bf320-5533-4059-948b-a76971648352",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1c9e6797-3461-48c7-a919-af5cf239fb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07a71dc-b6c5-47d9-b75e-52f2e0f9adb8",
        "cursor": {
          "ref": "55ee26bc-64f4-435f-b5b5-baba0a0356f6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7d4e539f-92a3-4961-a36c-352762cb3404"
        },
        "item": {
          "id": "c07a71dc-b6c5-47d9-b75e-52f2e0f9adb8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b5032539-f92b-4b68-a738-f5c4f4475a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3bcb6a-2d68-45c8-9172-77f46e2d0e97",
        "cursor": {
          "ref": "2bbbbd2f-738f-4c99-b7c7-fa68d5f229ef",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0d1387d7-088e-4190-8828-0ea75ec83b09"
        },
        "item": {
          "id": "2c3bcb6a-2d68-45c8-9172-77f46e2d0e97",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e39cb5ed-e39d-4adb-8302-d6b6290e6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c6fdb7-b8a8-4b3b-804f-b39396cf2a86",
        "cursor": {
          "ref": "c9e7c42f-1dbc-4751-ad29-f4c080203b42",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "90797f17-230b-4446-98a3-191b985e6038"
        },
        "item": {
          "id": "d0c6fdb7-b8a8-4b3b-804f-b39396cf2a86",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c981e1b5-8931-4c28-a599-cfaba9c87be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bd738c-7b9b-4dad-83d6-70c462e930f9",
        "cursor": {
          "ref": "d3c516ca-1868-45c2-90cf-edcbcda09c92",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e3e284cd-d603-45b1-b94e-8eee51b6b4dc"
        },
        "item": {
          "id": "23bd738c-7b9b-4dad-83d6-70c462e930f9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c51911b6-8951-4a16-9b60-318f46ec6f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dc479f-af34-43aa-b8ca-ce67389bfbd5",
        "cursor": {
          "ref": "578fd57c-e2e2-4e5b-b14a-49ccf192fcab",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "984f6202-d0e5-479f-b90e-0a7819f533bf"
        },
        "item": {
          "id": "c3dc479f-af34-43aa-b8ca-ce67389bfbd5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d797fd56-3916-466f-b312-7671c8e2a0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5654e4-f6dd-4085-82bd-7516dd870664",
        "cursor": {
          "ref": "3a7fbefc-f33a-40e7-8346-6ff7a5d7398e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "926b6549-68cc-4e37-85e7-1608bacee6ab"
        },
        "item": {
          "id": "8e5654e4-f6dd-4085-82bd-7516dd870664",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "78b7a645-556e-4f2c-b87d-bc7a31551453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a773ef2d-b71c-4a01-9c4e-2a101e9a07f4",
        "cursor": {
          "ref": "d4d57245-5568-4be4-b2cc-bf537ca8f705",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ee3d00ff-f82b-44c1-a6e2-83c5d4df46d7"
        },
        "item": {
          "id": "a773ef2d-b71c-4a01-9c4e-2a101e9a07f4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "088a3bc5-2872-4bbe-93d1-0eee6742f0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef50b87d-8435-4797-a071-b1dbed89e9a5",
        "cursor": {
          "ref": "63b0098c-beab-4fba-b4c3-8fd587904dad",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eba27174-03a4-4015-9b19-54958a21fc95"
        },
        "item": {
          "id": "ef50b87d-8435-4797-a071-b1dbed89e9a5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "efd11ab1-306d-4261-bd53-5505b84688fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40f1f6e-f60f-495d-990b-a24529ff2440",
        "cursor": {
          "ref": "822bdcab-d50e-4b1f-b2c6-f603157bfcac",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "de7b40d7-2dfa-4087-a234-ba3f93e99b0e"
        },
        "item": {
          "id": "d40f1f6e-f60f-495d-990b-a24529ff2440",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4b341d57-93f1-4df7-b192-e496607e9273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9b8bdd-faab-4332-9527-66db085e1a78",
        "cursor": {
          "ref": "c08b4e4e-d152-474c-9974-a655499e76e2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9995d8a3-ab3e-4a31-a9b0-d9cde71ce003"
        },
        "item": {
          "id": "0e9b8bdd-faab-4332-9527-66db085e1a78",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "270937f3-6db6-4c28-9338-9b40d056d720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbefb32c-861b-4a8e-acdc-54e944a0c309",
        "cursor": {
          "ref": "03d0879f-fa50-4dd1-8a09-39ae8b48c4e1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "64ec60fe-7770-40b3-b8c7-fcaeede1182c"
        },
        "item": {
          "id": "dbefb32c-861b-4a8e-acdc-54e944a0c309",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "63758b0d-0fb7-453b-89c0-3df2a71d2d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefb674b-56dd-4c98-9d39-384f9bf3162f",
        "cursor": {
          "ref": "9d3619fa-4ee7-4dc5-8e12-dd3ecd125e7e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "39a6a314-0e12-41fd-9746-630e0f5989c7"
        },
        "item": {
          "id": "eefb674b-56dd-4c98-9d39-384f9bf3162f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "52987980-7f1b-462b-b7a4-faa3f39f2219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908974bf-936d-43d2-bfde-2a7815e9a4e1",
        "cursor": {
          "ref": "87ad41a3-b8db-4ba0-833b-62dfe5e2c803",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "edec43fc-6313-4d95-943e-87afca490442"
        },
        "item": {
          "id": "908974bf-936d-43d2-bfde-2a7815e9a4e1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f279a8b0-937f-46d3-8aaf-17eb6862877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d05c680-60c0-4f29-9a3a-24d85c0e7a7d",
        "cursor": {
          "ref": "29328487-0aee-4ea9-8b3f-8083aa8205e4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "512044aa-affa-4b84-aba4-569e2c6ffec8"
        },
        "item": {
          "id": "1d05c680-60c0-4f29-9a3a-24d85c0e7a7d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4fb8b90d-33fc-480b-b1db-9fc3ed3c83f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c00692-d1cb-4ff3-8527-51ebb142db59",
        "cursor": {
          "ref": "adb74a2a-c8ec-4048-9205-2ba41c03f579",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "02fd3857-da53-4926-93c6-e93cd9a29247"
        },
        "item": {
          "id": "78c00692-d1cb-4ff3-8527-51ebb142db59",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "35a11a1b-fed1-4108-aa44-3f8096ccb82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ef92fd-f4af-49f5-a49b-08dbc1ef47a9",
        "cursor": {
          "ref": "2799ca94-ff19-43ca-be0c-355047cc9e6a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f6a53c06-95c6-4c1a-a4b7-847f6ded4262"
        },
        "item": {
          "id": "b7ef92fd-f4af-49f5-a49b-08dbc1ef47a9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "63c44ac0-7250-4558-b75c-8df5a5313aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3406d7d8-a8e3-43e8-a7f6-bd54efc05629",
        "cursor": {
          "ref": "588ca9d5-b123-4a1d-8fa8-6384f7575ea6",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7e2e6290-739e-41a5-9478-60aba7e6a471"
        },
        "item": {
          "id": "3406d7d8-a8e3-43e8-a7f6-bd54efc05629",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2ece39a1-a618-4ef8-9326-90967f505f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5de24c6-25c9-44eb-82a8-1e9fc096e53d",
        "cursor": {
          "ref": "e48cbc70-63ff-4203-a116-4777982b814f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f163574c-c29b-45a6-85bf-e9bce292d24e"
        },
        "item": {
          "id": "a5de24c6-25c9-44eb-82a8-1e9fc096e53d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e8b6c1c7-e575-4aad-9f2c-10774f0665fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5882d1ea-4c49-43ed-9cfd-ab46203fab43",
        "cursor": {
          "ref": "bf244b10-6bce-4798-8db6-5f67cc1027d6",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "945bcf40-a040-47d9-8f70-7efe941347ed"
        },
        "item": {
          "id": "5882d1ea-4c49-43ed-9cfd-ab46203fab43",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2cf20ce4-4c4f-4821-8c89-9d407f665e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ec3831-079b-44d5-be3c-059e7e998cf8",
        "cursor": {
          "ref": "2c26eaf6-3ec4-4f0b-a2a7-a663d3b244db",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2df8134d-3303-42e6-9b5a-3267b43fbc0a"
        },
        "item": {
          "id": "60ec3831-079b-44d5-be3c-059e7e998cf8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1eb7657d-61a5-497f-a329-23fab168cb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f9009e-faac-4ca5-985e-27457ecc32ba",
        "cursor": {
          "ref": "eaee7cca-e4ff-4ca3-825d-e38dcd97379a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b9262140-bf43-45db-a6c2-65dd9e5861d8"
        },
        "item": {
          "id": "a4f9009e-faac-4ca5-985e-27457ecc32ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4cfc9653-5de6-4eda-8347-addd64f7b136",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc7838a-a0f8-4f3c-9f4f-59ec660d0de8",
        "cursor": {
          "ref": "214c3e66-ea81-4400-8f4c-6a1dbcb338b7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ca796514-c368-4241-8157-bcd47c7a04d8"
        },
        "item": {
          "id": "7fc7838a-a0f8-4f3c-9f4f-59ec660d0de8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "629cc9af-eb38-4a68-bb65-3042830f4fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d1f6ea28-e939-4da0-a37b-e240354d0b2e",
        "cursor": {
          "ref": "c43ffac2-d88f-48d0-8f60-d76b7181db17",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "62340265-5be6-49da-9f1c-3b86199b4c20"
        },
        "item": {
          "id": "d1f6ea28-e939-4da0-a37b-e240354d0b2e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ddc2359d-b7b2-4c1f-9dc1-9a55b04b2449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "905c06b7-0f45-48eb-a792-017204050e7b",
        "cursor": {
          "ref": "05289e48-0483-48fd-9ac0-139cb62829ab",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5dd65ab4-aebd-49b0-898e-2337ba7abb5b"
        },
        "item": {
          "id": "905c06b7-0f45-48eb-a792-017204050e7b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7b19a3a6-5806-4040-bccc-fb18cdabdbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d4fabfde-8691-4a9d-aed0-b829bb955a4c",
        "cursor": {
          "ref": "7ec995c0-bb87-4c66-85a6-e13a4e2d20d2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ddc7e2b1-315b-4ecf-8559-56546fe63007"
        },
        "item": {
          "id": "d4fabfde-8691-4a9d-aed0-b829bb955a4c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e5ef89f3-6afb-48f7-a3bc-af47b0245086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "423c579c-e46d-4743-8550-5d9d9791b8e6",
        "cursor": {
          "ref": "e0a22c26-b346-471b-8996-3fdd1869b456",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3f34b18e-706e-446d-a19d-7fe76dcb8330"
        },
        "item": {
          "id": "423c579c-e46d-4743-8550-5d9d9791b8e6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a501db08-3817-4a60-9124-3b57c76de70f",
          "status": "Created",
          "code": 201,
          "responseTime": 5104,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c521e67f-326a-40e1-a77f-e40fd9c6635f",
        "cursor": {
          "ref": "3a234950-f992-43c7-a2bb-794235ba03d2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e822e8db-af9f-4017-bd20-ef8bc248b43a"
        },
        "item": {
          "id": "c521e67f-326a-40e1-a77f-e40fd9c6635f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c3344627-3192-45c8-85bb-8b7d195155e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "477e71bf-b716-4dde-ab1b-83cbc2bb854d",
        "cursor": {
          "ref": "9f094568-9198-4e6d-92ba-ef988009a4b9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "db8b8698-c4a2-4ea3-8432-3e90f9e24571"
        },
        "item": {
          "id": "477e71bf-b716-4dde-ab1b-83cbc2bb854d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3145135f-a252-4fde-9b91-77877fb0526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3a2aa222-88a0-4a3a-a122-bd11f6889392",
        "cursor": {
          "ref": "fadad17a-d55b-4bde-a3d2-781c697d2dc0",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0f819dcf-eb03-4b3d-8738-407fea6b8e86"
        },
        "item": {
          "id": "3a2aa222-88a0-4a3a-a122-bd11f6889392",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5484bf6e-0fda-48f3-aa5c-343f9b9e8bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d780d1d4-d292-47a1-a3ff-960ed9bba30d",
        "cursor": {
          "ref": "7ba72bc0-a0d3-4da7-8b61-1f36eb5565a7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec415d1f-d018-456e-aa58-27bf44552888"
        },
        "item": {
          "id": "d780d1d4-d292-47a1-a3ff-960ed9bba30d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2179b0d5-2996-445f-950b-ab9a022b8fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f229aed-0c37-4aee-977d-801a501072ba",
        "cursor": {
          "ref": "c66a6841-a413-4e26-8a41-60a6a99f8f52",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59df93a5-62c1-4db9-9553-c516da06ca66"
        },
        "item": {
          "id": "2f229aed-0c37-4aee-977d-801a501072ba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8bd4d79-82be-47e9-9e78-7363a4d3da87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa7e1d3-60ab-4536-8f7c-d340353c8c34",
        "cursor": {
          "ref": "10eda929-0996-4764-9283-355a9e58b228",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "91dd4d6e-cdf3-4ee2-b593-00c58cf90f5a"
        },
        "item": {
          "id": "1aa7e1d3-60ab-4536-8f7c-d340353c8c34",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4d74189f-e885-4d17-8521-57c366dc9b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3791da-44b0-4a9e-a1a6-cd4d0599f7a3",
        "cursor": {
          "ref": "81a61ec2-d5d9-4fb0-aec1-3d41ce27d67c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "555f930e-540d-4975-9b5e-49af3e423fe6"
        },
        "item": {
          "id": "ee3791da-44b0-4a9e-a1a6-cd4d0599f7a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9d1e8e7e-0df3-410b-9357-8b6b5e3ec71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208bd35b-570d-4161-9d1c-9550931a8dc9",
        "cursor": {
          "ref": "4942f691-ec46-41e9-a20d-de9d83e8cb46",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "08009cf5-221f-4ef5-857d-58cd2a1decd5"
        },
        "item": {
          "id": "208bd35b-570d-4161-9d1c-9550931a8dc9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc084aae-4cd4-4788-b121-d6c5093391f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f9203-7078-49e0-98de-3afb52ef839e",
        "cursor": {
          "ref": "a8aa440f-06af-4bfe-b72a-a77bf414cc68",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6e9e771f-daad-44f0-9922-7c0ac6143c25"
        },
        "item": {
          "id": "518f9203-7078-49e0-98de-3afb52ef839e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0de75aa6-cabf-43de-ba8d-b243fc202e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5251fc3c-c440-45f2-a0c2-2b20bf762944",
        "cursor": {
          "ref": "eee41d64-7340-4e0a-8575-2b37170123f7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8db4e86e-fa6f-4b4b-8a27-e50f415be186"
        },
        "item": {
          "id": "5251fc3c-c440-45f2-a0c2-2b20bf762944",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ba3fb152-e035-4b16-a132-bdd5a9aab6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd61229b-531c-44f0-a358-0b8656915e4b",
        "cursor": {
          "ref": "49d8f3e8-d623-4ca4-8bfb-dbc190d8188f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "06292185-4d19-445f-9ebd-ba59ea5e48ef"
        },
        "item": {
          "id": "fd61229b-531c-44f0-a358-0b8656915e4b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f335455c-caec-47a5-b843-7c5be3375f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc05816-f3f6-4678-94d2-6f906ac4ebae",
        "cursor": {
          "ref": "720dfe8a-e837-4f6e-b7ba-68fc6d78a4d9",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9c343496-f802-47da-bf34-7f80da935917"
        },
        "item": {
          "id": "2bc05816-f3f6-4678-94d2-6f906ac4ebae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c91ea072-6b2b-43e6-80ef-3a8037791cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f793a-95e0-4528-863e-c1e18b75f546",
        "cursor": {
          "ref": "74d833f5-f5c5-4898-ab06-ff4e6654654a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aff9dfdc-b57a-4a47-aa43-0262f45d500b"
        },
        "item": {
          "id": "060f793a-95e0-4528-863e-c1e18b75f546",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce779bd4-743d-4500-b012-9cf59c89b000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22a37ac-07cc-416a-936e-1a4cd9d03cc8",
        "cursor": {
          "ref": "17c008f4-affe-40e1-b0b1-28910af8a6b5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cebdaecf-83db-4968-b560-180765402e88"
        },
        "item": {
          "id": "d22a37ac-07cc-416a-936e-1a4cd9d03cc8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8f478c46-7d9a-47cb-b6b5-1b319de07d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2394b1-6fd5-45dc-af66-4e4ec52f09eb",
        "cursor": {
          "ref": "7242cf46-d3c8-4093-83ef-badf1fa3aa06",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d7f703a4-e9cf-47af-a579-e46b93bbd645"
        },
        "item": {
          "id": "0f2394b1-6fd5-45dc-af66-4e4ec52f09eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc0696c2-e87e-44a6-ac8c-b8fcc5044a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9a348-b120-4b07-8b47-14cd6c00c685",
        "cursor": {
          "ref": "e3f3d4bd-5b6c-42c6-a348-3e62465e78a4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b6b9c18-f63f-454c-9f37-b97139578096"
        },
        "item": {
          "id": "83d9a348-b120-4b07-8b47-14cd6c00c685",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "de88b9de-f836-4d1d-ac2d-b5693c05d790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dcbe93-3971-4c85-a764-a94829967836",
        "cursor": {
          "ref": "d8471f26-7d5b-4b5b-9fd9-5cf8c8e1ad8c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "07cb22a5-8e45-486d-afa1-d17f0a17458e"
        },
        "item": {
          "id": "c5dcbe93-3971-4c85-a764-a94829967836",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d859f887-abc0-441c-abfb-86df9760a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbefb895-1f9e-44b2-aa94-8850ea019fd4",
        "cursor": {
          "ref": "392158af-0854-4021-8bee-d3eb7137862d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d47b6963-9268-4a35-9240-3cc664bdc701"
        },
        "item": {
          "id": "cbefb895-1f9e-44b2-aa94-8850ea019fd4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "870ee510-0ae2-4150-810e-ed0da9c31423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f9613a-6961-4cd4-be97-b790bce5cc38",
        "cursor": {
          "ref": "1358354f-5e7d-4e05-b9dc-b436895761f9",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "98c7c35b-169c-44f7-9eec-28a7a950f093"
        },
        "item": {
          "id": "f7f9613a-6961-4cd4-be97-b790bce5cc38",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db8c03a9-9bd3-4c26-8281-45ccaed824f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9335b35a-6c68-4982-b99c-1fb2bca6e50a",
        "cursor": {
          "ref": "1cdbca8b-88f3-4eb8-8876-782ed05855de",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6c5a33a6-209b-4161-82bb-9dce5201e2a9"
        },
        "item": {
          "id": "9335b35a-6c68-4982-b99c-1fb2bca6e50a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "da289cca-036b-4a09-91ff-bc16ea42af41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e099b2-89e2-4114-a339-cea8738650f4",
        "cursor": {
          "ref": "c1e1ea23-bc6b-447b-9907-304c6f8e4ef3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f48a80cc-f50c-470a-a725-436be4fd879d"
        },
        "item": {
          "id": "86e099b2-89e2-4114-a339-cea8738650f4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8dcf6bca-64de-4bdd-a66c-9eaeb7a4df75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d933a9-2e00-4d88-8a31-e45cc7e26ae9",
        "cursor": {
          "ref": "9b13e2a4-95cd-4f16-8426-d3f087a5e81d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da607971-f930-4a49-a38c-8cdb3f2998ed"
        },
        "item": {
          "id": "77d933a9-2e00-4d88-8a31-e45cc7e26ae9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a54a6263-cb73-4511-8e22-04d314d2fe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3446c6f-ad5c-4e24-b8eb-e82a6415ff43",
        "cursor": {
          "ref": "ab95b0c4-feee-48e4-b597-421d2c192810",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2e6e9794-1425-46a9-a3f2-c8b0b08124e9"
        },
        "item": {
          "id": "e3446c6f-ad5c-4e24-b8eb-e82a6415ff43",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "020f88ff-fd7f-4ace-8ee8-98b060757810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de20372b-1334-47ff-a3b8-75a11bb71a5e",
        "cursor": {
          "ref": "a5acd559-3992-495f-968d-34181a4b2e13",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7decb0f7-cdc7-4b23-af5c-d754834a4ee2"
        },
        "item": {
          "id": "de20372b-1334-47ff-a3b8-75a11bb71a5e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "031c71ec-9a8b-42c5-86d9-18f1fa9d1fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b91b12-c325-4fea-ac0a-02a1e1797a37",
        "cursor": {
          "ref": "1feccbf2-7ddc-4425-bf50-7159c6547c47",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3838cccc-af64-45a0-91ac-e0e4d703918f"
        },
        "item": {
          "id": "29b91b12-c325-4fea-ac0a-02a1e1797a37",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6dc371f4-1789-40c4-a846-13d6e8bd926d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3040c182-6177-48ee-8063-4a17b4cad500",
        "cursor": {
          "ref": "c2db4314-a77e-4c43-96ee-d58eb0a20a6a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fdf5a34c-f51f-46b5-ac5c-f9383b0a5878"
        },
        "item": {
          "id": "3040c182-6177-48ee-8063-4a17b4cad500",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8052c6b0-48e6-45c1-8bb7-ac980c5634a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079e022f-ad93-4b43-8b60-cb934113bc31",
        "cursor": {
          "ref": "118f13a2-c2c6-4cb0-a87f-48e1af7f278f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d2a54aec-e0dd-4402-9b90-ad5cc58e1a08"
        },
        "item": {
          "id": "079e022f-ad93-4b43-8b60-cb934113bc31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1efb957c-195d-4882-bb29-6fc005abb4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364f5e7b-724e-42af-9f5f-cacf7f9242fd",
        "cursor": {
          "ref": "fc6bd830-f3ee-4280-a21f-53125145e35f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e11bc7c7-d560-4c1d-9665-3fd9f8523012"
        },
        "item": {
          "id": "364f5e7b-724e-42af-9f5f-cacf7f9242fd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fde80426-4631-4db9-9b2d-147e4aeb65ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df145a-c9d3-4f4b-ad71-5016105f31b4",
        "cursor": {
          "ref": "b8938c81-75be-498f-8c51-ea9aff8dbbbf",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "246d862f-2ab3-4abe-8192-e9341425019e"
        },
        "item": {
          "id": "d8df145a-c9d3-4f4b-ad71-5016105f31b4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8eee121a-03cf-4c3c-9b7e-ede34b2aadce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450b4a7c-fe75-48f9-a011-06d1b7406735",
        "cursor": {
          "ref": "17becd76-6006-42af-936f-2a80bbcef2ef",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "da82dfc8-9e49-4bd7-8beb-c8838d3ec9eb"
        },
        "item": {
          "id": "450b4a7c-fe75-48f9-a011-06d1b7406735",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ca65bad9-f739-4d8d-b285-0d9a067f5bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2266d2fd-64d0-4123-bd07-fb6d429728d7",
        "cursor": {
          "ref": "01300250-b2a1-4620-be22-aa0b0cfd0f74",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e59e304a-d5c0-4abe-8b61-e830312e5e76"
        },
        "item": {
          "id": "2266d2fd-64d0-4123-bd07-fb6d429728d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "41c24ad3-086a-457f-ba28-9fb46cd77146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7d022-bc56-4194-a911-7dd51a229af9",
        "cursor": {
          "ref": "c0a87599-db2d-4de4-9462-eb2c3c2cf0c7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "607ea016-d9bc-45be-a36b-34c784a88d51"
        },
        "item": {
          "id": "5cd7d022-bc56-4194-a911-7dd51a229af9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2a02f023-f69f-4c97-be31-c049aab5827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2857a442-f569-45f2-8716-84ec8ed31f91",
        "cursor": {
          "ref": "8113d416-ad74-4ad9-972d-41548d634c97",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0ba89f1d-f682-4928-83c2-180065a2e3fe"
        },
        "item": {
          "id": "2857a442-f569-45f2-8716-84ec8ed31f91",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "35475359-49ba-4212-91be-68449353aaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d792f4-7a77-47f4-9184-e4d07041aa29",
        "cursor": {
          "ref": "676c6faf-2378-46c9-80e9-72d0850e9a57",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "816428fe-4a17-41bb-9981-06868e9b99cf"
        },
        "item": {
          "id": "91d792f4-7a77-47f4-9184-e4d07041aa29",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c46799b-4fd9-4f40-a107-9719f8e40a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b77965-0be6-410a-b40c-e28171f724b5",
        "cursor": {
          "ref": "e52440aa-620c-4fe7-ba10-2c2890f28701",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8393a6dc-5fc7-4fec-ba67-c275e18e989f"
        },
        "item": {
          "id": "d8b77965-0be6-410a-b40c-e28171f724b5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b50feb0f-1e58-4754-87aa-d499d5116884",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e85e9a-6def-4648-837f-59c775ce2ff4",
        "cursor": {
          "ref": "2041083f-0856-4129-a8e1-afb94300883b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f13573c3-2d12-4219-a236-9209f4a95050"
        },
        "item": {
          "id": "23e85e9a-6def-4648-837f-59c775ce2ff4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a38d264a-6978-4a33-9be3-d360e54e4b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b42fc-8154-47dd-b7b2-6229e53c23f5",
        "cursor": {
          "ref": "e36b8b62-a24e-42cb-b305-7ac11e88ce02",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e2658dbe-1183-41f6-9483-7d5887e4e2e6"
        },
        "item": {
          "id": "565b42fc-8154-47dd-b7b2-6229e53c23f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "39c65a06-8942-42a5-8977-6e8a6c3c01fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2f3949-c5a9-4429-98d8-81edda99207c",
        "cursor": {
          "ref": "4940336c-a14c-4eb0-a8fb-1ed09cd13c31",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aa5e3725-fa72-449d-9d20-1c29a23e0654"
        },
        "item": {
          "id": "7a2f3949-c5a9-4429-98d8-81edda99207c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a80183d6-872f-45ed-bd75-bacea97fee9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f046f0bc-f51b-454a-99c7-d33eb4be1217",
        "cursor": {
          "ref": "892904e6-4250-499c-8f3a-f08d805549f5",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d2dc313c-02c5-4b0b-8faf-e827e2d922da"
        },
        "item": {
          "id": "f046f0bc-f51b-454a-99c7-d33eb4be1217",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5432dfc4-855d-4b0e-ae8e-6b36ada30e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb2e567-135b-4a29-a5bc-786f7e940739",
        "cursor": {
          "ref": "9ff436f5-09a7-4078-9552-d60e70b1d167",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2142d1c9-4549-414d-9dab-8dc5bb623594"
        },
        "item": {
          "id": "4bb2e567-135b-4a29-a5bc-786f7e940739",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df39ce17-820a-4a2b-aff5-e08424af0836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02e1a6e-89ab-4473-ab28-bb0bedf93f34",
        "cursor": {
          "ref": "78d055fb-d553-44f2-b76f-5d49a0571bf4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b451f103-0e92-4f01-be6f-87f67ae2ceb2"
        },
        "item": {
          "id": "d02e1a6e-89ab-4473-ab28-bb0bedf93f34",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3f4aa243-6ba3-486f-9f72-21416a96895c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01df236-32da-4279-8a96-823712abc1df",
        "cursor": {
          "ref": "c23eb2c1-3b7c-4cb7-b2b0-f8a9983763e4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "59f33e9d-5aa2-4893-85c7-181bf7983b28"
        },
        "item": {
          "id": "b01df236-32da-4279-8a96-823712abc1df",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e29dd6e-a31a-44a9-8d05-a2766547fb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e712282e-2d4b-4b1d-9c38-0a7f8d4a9f22",
        "cursor": {
          "ref": "1d78f8f6-8b3d-4fd7-956f-58a76896e172",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d105ca57-5282-4bde-b790-0903fced4fed"
        },
        "item": {
          "id": "e712282e-2d4b-4b1d-9c38-0a7f8d4a9f22",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8bb3544f-1423-422e-87ce-0a07d3de7dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b8cab2-2ebf-4a41-b6aa-17f496ac9585",
        "cursor": {
          "ref": "6a7e9bdd-048c-4a47-ba94-ef129295c059",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ddbb5277-fb05-4925-bb20-e27ef9e6075c"
        },
        "item": {
          "id": "f7b8cab2-2ebf-4a41-b6aa-17f496ac9585",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "35a4fc54-2aed-4eac-be8d-367f4c718fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e216f5c9-67ae-4047-b1cd-7de1729e3652",
        "cursor": {
          "ref": "4e40ab12-101f-4f2f-9503-c4b7b8723894",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "edd75d46-8fec-47d5-b94f-9f0113d5779a"
        },
        "item": {
          "id": "e216f5c9-67ae-4047-b1cd-7de1729e3652",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a205c891-b695-40a7-8d9b-559becf7313e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dddfd84-4c46-45d5-a049-4f2a8cf0fece",
        "cursor": {
          "ref": "6fde4886-31fc-44db-a167-32c017ed0f33",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b44a7234-6b4f-435e-8fb2-75b38f4e8f25"
        },
        "item": {
          "id": "2dddfd84-4c46-45d5-a049-4f2a8cf0fece",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "78b94bdf-9b43-4818-b346-96f480101614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d570fccb-e622-4731-a626-cd1dc8c569b9",
        "cursor": {
          "ref": "eddf28ae-7004-4397-9f6c-4ff36a53b53a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6066fa25-5306-4788-8af9-195f7b00abf4"
        },
        "item": {
          "id": "d570fccb-e622-4731-a626-cd1dc8c569b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f2006751-297a-4a3d-b57d-fbcddc94691d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162e4c37-987a-4e3e-8d0e-4351780a8cef",
        "cursor": {
          "ref": "ee039716-f062-4829-882c-f38d3562a8fe",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e179a10d-efaf-485d-924a-051798636751"
        },
        "item": {
          "id": "162e4c37-987a-4e3e-8d0e-4351780a8cef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5807ff9f-63fb-4807-be03-56573bffd1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f6b266-8c3c-4f22-8b80-42fa23f0be51",
        "cursor": {
          "ref": "362ae93d-d374-4fde-95f4-8dea8849e74e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4213e985-bed8-4011-922f-b9a488a64dc2"
        },
        "item": {
          "id": "09f6b266-8c3c-4f22-8b80-42fa23f0be51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a3cd5a51-0949-414f-9653-89d4c7de95e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c19e158-3941-4583-9009-b00782fa9769",
        "cursor": {
          "ref": "d3916dd1-5eb9-413c-b64c-1d39f10e0139",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f6e7e974-628f-41e0-a549-2687ff51f456"
        },
        "item": {
          "id": "2c19e158-3941-4583-9009-b00782fa9769",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0f8b8ead-6606-4de5-9864-4a017c909570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e2cd74-ae5e-4098-abc4-a3c9e3f2632f",
        "cursor": {
          "ref": "903b6dc6-5c96-4018-a51a-d791c0ace3b1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0f60dc50-dddd-441a-bc85-f35048c2fb27"
        },
        "item": {
          "id": "98e2cd74-ae5e-4098-abc4-a3c9e3f2632f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b007679-f62c-4a79-bf52-57dc243a9634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a916e9c6-6449-432d-a2e6-d330f9ef0b35",
        "cursor": {
          "ref": "10fec634-efd7-4488-905f-af28ecd10df0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b7e02c99-f8f6-485c-970d-ff508bfcbe37"
        },
        "item": {
          "id": "a916e9c6-6449-432d-a2e6-d330f9ef0b35",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "46a06646-b573-4ab3-8791-9bf45358cde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf88e771-6182-447f-9403-01adc3b004ea",
        "cursor": {
          "ref": "361110e9-e3fd-4d01-a626-d6098c1c35ea",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "10827a7f-fed5-4383-9e52-511bc18e473b"
        },
        "item": {
          "id": "cf88e771-6182-447f-9403-01adc3b004ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e3a1b014-d1b4-4f71-a353-b70ca1e363cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71971a5-cd01-4634-b14a-070980873615",
        "cursor": {
          "ref": "5ffc8d9e-5208-42a3-bd3f-6ca814549b98",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8116f212-d62f-482e-85ca-ed99c74cf2a4"
        },
        "item": {
          "id": "b71971a5-cd01-4634-b14a-070980873615",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "87374be6-1c48-4625-b0b1-ac9c5c76f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec241c30-93d7-479f-bec3-4bf26b63f35d",
        "cursor": {
          "ref": "d90fcc0d-14e9-4748-8750-0587e793d17e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c6f5907e-bde5-4b72-9d5d-d4f16716a99c"
        },
        "item": {
          "id": "ec241c30-93d7-479f-bec3-4bf26b63f35d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4815db61-d97b-4e55-93ef-3b3e4bde7e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1f9152-2ec9-483c-aa59-d3bf38da736c",
        "cursor": {
          "ref": "fa24d99d-e5fe-44fa-bfa8-e1ae197c8fd5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9020ca17-c1bd-4f1e-9755-4d4e3be7e456"
        },
        "item": {
          "id": "5b1f9152-2ec9-483c-aa59-d3bf38da736c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a3041b48-6788-4d62-b255-697f40e83104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f556543-0b1d-4aba-989a-80c693b3f1be",
        "cursor": {
          "ref": "7ebe57cc-7d41-450d-a32e-d14ec6da4062",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "debf721c-98ce-4ad4-9093-fc7738139ed1"
        },
        "item": {
          "id": "1f556543-0b1d-4aba-989a-80c693b3f1be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e31f08cd-e02f-4303-ad23-f9346d856770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac9b08-0768-4bc4-8a8e-cff67262a334",
        "cursor": {
          "ref": "6598d023-6528-4507-8746-2536a0c4ca4e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ad8eb12d-cfd7-4b23-ab76-c1c69057af25"
        },
        "item": {
          "id": "f8ac9b08-0768-4bc4-8a8e-cff67262a334",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "048b4ac8-4b8d-4f8d-b0d3-3cd1afa5c194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e1dc1e-2887-4b02-9969-3fb33f9b0e37",
        "cursor": {
          "ref": "05c957e2-88ba-456b-a674-b1179e9778d7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "48bc9336-ecd8-4f89-9183-af0baa0cd236"
        },
        "item": {
          "id": "e9e1dc1e-2887-4b02-9969-3fb33f9b0e37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1b1da8f7-b8cd-413d-9fe4-25fcbd4234b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e40539-24e3-4411-9ce2-dada038e7dad",
        "cursor": {
          "ref": "b9ed22dc-1cfc-4c08-af02-b8e1a417abe2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "95007375-bed5-48c8-a3a5-f27b5c1e2126"
        },
        "item": {
          "id": "31e40539-24e3-4411-9ce2-dada038e7dad",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0846beab-cef1-4ef5-baf7-7303e250450d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63df9df5-6e50-4e5d-b928-565dc7355f0b",
        "cursor": {
          "ref": "2ac80251-cf9a-4493-afe6-7209e1087d7e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b56fe581-3378-4b2d-bb70-ceb50b41c1d6"
        },
        "item": {
          "id": "63df9df5-6e50-4e5d-b928-565dc7355f0b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9834b63c-9efd-47c6-bbec-b502235784e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84aced03-a903-4d80-ad5e-6fc3e8b1fd8a",
        "cursor": {
          "ref": "f3928b76-b809-4766-b0dc-ae03ec270e05",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "87b64bba-3ca1-4ba8-8976-3e6c5e5919c7"
        },
        "item": {
          "id": "84aced03-a903-4d80-ad5e-6fc3e8b1fd8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4386466b-c0b2-463b-966f-3017a0d5c753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dfab53-cbc4-4d69-8372-81e6d17899a0",
        "cursor": {
          "ref": "889d54cf-6d00-45a6-8209-ae8cbf47be22",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "54bded31-fc79-40d3-ba92-0de51839bc9b"
        },
        "item": {
          "id": "90dfab53-cbc4-4d69-8372-81e6d17899a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a0a29e11-fa26-4b2f-8a03-97ab5cac555f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a157be83-ef3a-4186-a775-e17eabb50d6d",
        "cursor": {
          "ref": "46a88da1-27b3-4b16-b0d7-2d600ca86f0e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1fd7e638-9390-4df9-bbda-4d6d300f8a6d"
        },
        "item": {
          "id": "a157be83-ef3a-4186-a775-e17eabb50d6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a7ac4e8-ea1d-46eb-8410-c5f815f6fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8418bad8-b94e-4281-a9bc-90354583746b",
        "cursor": {
          "ref": "e15b307a-e1d0-474e-9843-71d7af28dd57",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aacbcae2-c5b4-47ac-b0ee-2a0ee0e59e87"
        },
        "item": {
          "id": "8418bad8-b94e-4281-a9bc-90354583746b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f4c2c70-8298-4422-8dba-6ce99363a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e3c5ac-f3d2-422c-8b98-0f4ec12e9e65",
        "cursor": {
          "ref": "2c489469-d27e-40d0-be0b-26ddfa993102",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a68116fa-86a9-4cdc-8d1b-8a5c814b131c"
        },
        "item": {
          "id": "53e3c5ac-f3d2-422c-8b98-0f4ec12e9e65",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60d031e5-e2fd-4ca2-9710-fe0e5e04f8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35344806-e187-4917-a0d1-f84de99389bf",
        "cursor": {
          "ref": "31610a46-b1ff-41fb-8211-76ade7b0e524",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27e67375-42a1-43f5-8594-119d6dfda6cc"
        },
        "item": {
          "id": "35344806-e187-4917-a0d1-f84de99389bf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4ed7157c-b7b9-4c37-aae7-6f65a8ce5a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98380cd1-9539-4b01-897d-56a7e3373af5",
        "cursor": {
          "ref": "b3ca802f-9965-4942-917b-bdc05d39fab5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3f8148cb-e404-411b-b381-4016947246ee"
        },
        "item": {
          "id": "98380cd1-9539-4b01-897d-56a7e3373af5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b08a4cd9-548f-4f78-ad2a-a55eb52c5786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3d36cc-3d66-4a65-978d-028751152002",
        "cursor": {
          "ref": "fcb52b32-1622-4a41-942a-1d60ead269ba",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e5d65ad0-edd5-4e10-88b1-3664bc9bdc80"
        },
        "item": {
          "id": "bd3d36cc-3d66-4a65-978d-028751152002",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1a3a988b-1650-4f24-b55e-a9c7f10774df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f7cb5a-8229-476f-b67d-958e25cbe853",
        "cursor": {
          "ref": "5cfb58eb-1d9a-4296-9fa0-ca48b2651c43",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dca90537-97c9-421c-85e3-e68da354e4ab"
        },
        "item": {
          "id": "31f7cb5a-8229-476f-b67d-958e25cbe853",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "60ee6892-ba2a-42b7-8fb2-6b4d8e3ab2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1319a7-0bbc-4903-80b7-c0e19ebac2e8",
        "cursor": {
          "ref": "01ac6bb4-467d-4a5f-aff8-8009dc555e43",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5e81d9b0-2a39-4f69-8bbb-6bc9e852ae1a"
        },
        "item": {
          "id": "bc1319a7-0bbc-4903-80b7-c0e19ebac2e8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c04a8f62-775b-4a23-b28c-00f8b436720f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbb156e-07a9-4016-8b5b-7e1266a75cae",
        "cursor": {
          "ref": "fb61f8bb-a475-46ef-9f19-a627396ce08e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "52330ff8-34c8-48ab-89b9-15d5e3bfcd55"
        },
        "item": {
          "id": "5fbb156e-07a9-4016-8b5b-7e1266a75cae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8f9b5ad9-eb7e-45de-9b06-8f840e643334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ef6fcc-1ed1-4acd-85f1-ded574c9ea92",
        "cursor": {
          "ref": "1e393f77-9f03-40f8-bd91-832b068d763d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d64ed796-d6bc-4c29-be20-313d61b0763e"
        },
        "item": {
          "id": "07ef6fcc-1ed1-4acd-85f1-ded574c9ea92",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0748fc26-a283-42bd-bb21-b7e2cd580bf3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebb1a3b-7cac-4ec2-a7ae-4188547488af",
        "cursor": {
          "ref": "ed9cfb3c-f126-4a4c-925e-d74e9f85849d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d6956a2-1483-489f-b49d-2ff0656c75e0"
        },
        "item": {
          "id": "2ebb1a3b-7cac-4ec2-a7ae-4188547488af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f49d1f4d-b087-492e-a038-812ba22983ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddd049c-a4fd-4a22-a277-f7f1a89d0986",
        "cursor": {
          "ref": "39771f78-f232-4443-b166-e0d55b7c557c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f5a860d-e362-4148-aadf-a913eaa44a50"
        },
        "item": {
          "id": "8ddd049c-a4fd-4a22-a277-f7f1a89d0986",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4d27ae2d-b4a4-4cfa-833e-25499b57e4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64fe942-6bc9-4e5e-be50-8f03d85baab5",
        "cursor": {
          "ref": "93b91759-3b93-4943-b2fa-c270a3dd0580",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9773661e-ec49-43b2-af24-2185b1526a0d"
        },
        "item": {
          "id": "d64fe942-6bc9-4e5e-be50-8f03d85baab5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fde6e947-555c-4e49-a5d0-647d85b2bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca20131-a27e-4004-8f20-82a1e34fe76b",
        "cursor": {
          "ref": "c3480ee7-470e-4f47-a1b8-cc8e41029522",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ff89f44d-ea6e-40a2-b5cb-e70cb8d57750"
        },
        "item": {
          "id": "9ca20131-a27e-4004-8f20-82a1e34fe76b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d96c8535-2c39-49dd-8f6e-d34f84d79f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a156ce0-fe82-433e-a87b-2eeb9184e4c4",
        "cursor": {
          "ref": "860fda1d-99fa-4e1c-aba2-1d25937d7ccb",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "37943550-69ba-4947-8b6f-867b063587a2"
        },
        "item": {
          "id": "9a156ce0-fe82-433e-a87b-2eeb9184e4c4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "63c6484a-41ab-4abb-9281-ba880c96bd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3c7196-f75a-4891-9700-a20002b50898",
        "cursor": {
          "ref": "fe72e86d-1001-46a0-bec8-655d30b9e6bc",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c98287a8-6a1e-46a9-aee3-61c40f3c6361"
        },
        "item": {
          "id": "9b3c7196-f75a-4891-9700-a20002b50898",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7af2fb00-01d0-4fb9-a6da-37dcd28599ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5dbf7a-ea7c-4dbe-94a4-a28bf9d9c043",
        "cursor": {
          "ref": "56b6b48a-d01b-416c-bf30-9d4664d6b19a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3e22336a-191c-417a-8999-3f4c680b9a4e"
        },
        "item": {
          "id": "eb5dbf7a-ea7c-4dbe-94a4-a28bf9d9c043",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "14f415b6-8843-403e-92eb-061c676e343d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31356f9-01a4-4b32-93fe-2eb5327da59e",
        "cursor": {
          "ref": "47bb8b68-9974-42f4-8710-b87ce7d2ad41",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "33f13d49-0fdb-4f00-9b39-47d0ebb148d4"
        },
        "item": {
          "id": "a31356f9-01a4-4b32-93fe-2eb5327da59e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "25314f60-df81-43ff-bf24-ee1ce5c0f891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec4701e-bf7f-48f2-969d-2c14ce22b598",
        "cursor": {
          "ref": "cddf8078-5fd0-4345-b5fd-fd6c0c4a4087",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8f23dfc4-4767-4793-ad68-85eb7e4ed260"
        },
        "item": {
          "id": "8ec4701e-bf7f-48f2-969d-2c14ce22b598",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ac6d9d2d-b9e8-429b-a049-b27d23b66ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95b2c55-d172-481b-83c5-bb5042d00193",
        "cursor": {
          "ref": "c3b6744e-8ccc-4890-a304-478b87de99dc",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ac3353f8-a9ab-4661-85d6-f0fddae443ed"
        },
        "item": {
          "id": "f95b2c55-d172-481b-83c5-bb5042d00193",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "21a07528-9833-4cab-b8f5-03d3018b559d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93890aa-6423-4406-b261-9ff7a249238e",
        "cursor": {
          "ref": "c24ad065-6383-485e-9726-f67d5b24d954",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "55f3fde7-b7be-4831-be03-d63bd4661eb5"
        },
        "item": {
          "id": "f93890aa-6423-4406-b261-9ff7a249238e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9ae96a86-e5ff-4aa8-99da-78935393515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a044d037-b362-47dc-abb3-5d771297d924",
        "cursor": {
          "ref": "413a4e9d-80ab-428c-8d97-5db3ebf72013",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0906145f-5382-4288-bbd0-e336af51915f"
        },
        "item": {
          "id": "a044d037-b362-47dc-abb3-5d771297d924",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b58f7632-344c-4fe5-a137-fc108d0d5529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c893ee5-1a1f-488d-a8df-ea2b4083ec7a",
        "cursor": {
          "ref": "8286b6cc-3fad-4ce6-982a-b85ef126221d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40f6d741-4ff4-4360-a9f5-76ebf6453cf9"
        },
        "item": {
          "id": "1c893ee5-1a1f-488d-a8df-ea2b4083ec7a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a04d209-de3e-46d9-b215-a98436bbf5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8657aaa3-ae91-4206-bd18-49e5f582dac7",
        "cursor": {
          "ref": "e4c7451d-5251-4ff2-ab71-5a4a31210e4e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bfb0041d-d130-44bb-9b88-1df4e951c354"
        },
        "item": {
          "id": "8657aaa3-ae91-4206-bd18-49e5f582dac7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ceff4f12-3475-4439-b8e2-1f85e7df175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5acde25-bf79-4b49-9bc7-a7628581332f",
        "cursor": {
          "ref": "ddf9bdd7-0ec6-4d6d-ab4a-dd96adab4186",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "63c8a996-1112-419e-bf93-28ff321a0044"
        },
        "item": {
          "id": "c5acde25-bf79-4b49-9bc7-a7628581332f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "75ac92da-1790-4c8e-b383-67eadc7961e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb5a978-761d-4cf8-ad92-2bc88f07ed90",
        "cursor": {
          "ref": "24718672-6328-44da-8a6e-9582b0b443db",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73530732-f10b-49c1-8d84-654c760a1d86"
        },
        "item": {
          "id": "6bb5a978-761d-4cf8-ad92-2bc88f07ed90",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "35c90eec-c65b-4973-95e7-d8c635b8fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aded2a22-d9fe-46b9-ab2c-b8f387b7a607",
        "cursor": {
          "ref": "d9bdbfd2-e4bf-4319-9372-88409aac2794",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0601d180-bd5b-4ce1-af2a-1710817232d7"
        },
        "item": {
          "id": "aded2a22-d9fe-46b9-ab2c-b8f387b7a607",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "67ed3141-c77b-418f-b06c-5f136988630e",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "9c1a6fc0-f556-4406-bc54-0da85121ec19",
        "cursor": {
          "ref": "704b26f2-a38e-49b9-9c77-c5ef951a5730",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c1e12298-87ad-4f7b-bdb4-54329ad15fe8"
        },
        "item": {
          "id": "9c1a6fc0-f556-4406-bc54-0da85121ec19",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4d723466-4855-4e66-9ad0-511f733b076b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79555c1-73d8-4300-bead-b0a9f88d0c76",
        "cursor": {
          "ref": "9ee8b9f7-7787-4e84-8755-6867f2513e03",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fe42de63-4566-4737-ab7c-8d18ae6480b5"
        },
        "item": {
          "id": "d79555c1-73d8-4300-bead-b0a9f88d0c76",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f0bbb6cf-7528-46d8-9f52-94c61fb15d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff386dd-0b8e-4ffd-bced-6e2d122468ec",
        "cursor": {
          "ref": "2af22b58-b6ac-49b9-9409-e5ebed0adef7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f1b71448-5ed3-4f77-9a9b-5ab349079412"
        },
        "item": {
          "id": "8ff386dd-0b8e-4ffd-bced-6e2d122468ec",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5ab761e4-328e-44a0-b5d5-d1a100edd454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240fc08b-a93c-4142-ba85-1fce6ce1c97b",
        "cursor": {
          "ref": "e22f0a2b-1ab2-4a48-acf0-a1f2d6728b65",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "373d80af-c074-4af0-b902-2544949bfca5"
        },
        "item": {
          "id": "240fc08b-a93c-4142-ba85-1fce6ce1c97b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1b288b51-c63a-4aa6-b56b-3fb94deeff78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6437e3f-1b2b-4552-a9ae-86be044b61e1",
        "cursor": {
          "ref": "336ec4bf-6293-4467-a973-998a4eda9e00",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7af90d74-f192-432e-9c4a-96bc761b1bce"
        },
        "item": {
          "id": "d6437e3f-1b2b-4552-a9ae-86be044b61e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "698125e2-4601-41e6-9f98-89dbe7dfedff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bc9377-06f2-4ede-bcbc-9ee6606913f7",
        "cursor": {
          "ref": "ea46903f-9bf1-4831-b718-0901ec75da55",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7eca4a3b-6193-43c4-b71b-0404fc9082e5"
        },
        "item": {
          "id": "b8bc9377-06f2-4ede-bcbc-9ee6606913f7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "da61f0cc-5289-4759-bd4b-41bfde2a286f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c211d6-e34c-4cf5-b8a9-7b8b526e396f",
        "cursor": {
          "ref": "14b668e2-acee-4800-8545-e308f6aa8be6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "989dd793-d3b2-47f2-8dae-d2ea5e1417ba"
        },
        "item": {
          "id": "50c211d6-e34c-4cf5-b8a9-7b8b526e396f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b18adb44-2335-4d0c-870c-c8cb8d49d18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63d3af2-f452-45b9-9cb5-76234db77f6e",
        "cursor": {
          "ref": "745cb78f-abfc-4800-a442-3d1d172ba71c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dc0339e0-e28c-4121-9077-98f7b7921275"
        },
        "item": {
          "id": "c63d3af2-f452-45b9-9cb5-76234db77f6e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "024dd945-e27b-4e88-8e78-854ab0a15085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf325820-afa5-4419-86b4-dafcb08714d3",
        "cursor": {
          "ref": "3059b27f-6461-4077-940f-be629d77efd3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bcc48d50-38f6-40a0-9d4f-0e5125ce288c"
        },
        "item": {
          "id": "cf325820-afa5-4419-86b4-dafcb08714d3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b16dc058-a146-4042-a0c6-309e3322b21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe2cf0-fb1e-4a45-87c9-4441af824a91",
        "cursor": {
          "ref": "5485a890-0cfd-46e9-8679-88750b625c5f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7c1aaab1-90f0-4f8e-8967-c1c7a6584679"
        },
        "item": {
          "id": "3cfe2cf0-fb1e-4a45-87c9-4441af824a91",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e42de425-9b44-4b1e-a8c4-5d6059305451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e4d90f-f424-4741-b6a7-1275acda58d9",
        "cursor": {
          "ref": "bbbd012e-a1c3-4f38-9f80-cecd7b92e076",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3014eb61-8363-462e-b02c-23f9d2304ea7"
        },
        "item": {
          "id": "31e4d90f-f424-4741-b6a7-1275acda58d9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "feb2f3a4-c1ec-4b12-9bf0-a396ed00e257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7b141-32dd-400e-89a4-3083b8518a96",
        "cursor": {
          "ref": "98d3f794-b086-4f02-b9c8-0c48fbc598d9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "04262468-8fa7-4244-90a7-7a7dc9af3836"
        },
        "item": {
          "id": "17e7b141-32dd-400e-89a4-3083b8518a96",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "efd45ca7-604d-4360-a5a3-66f1fca66213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7db6690-a0ed-4ab6-8a28-cfd3aa098fda",
        "cursor": {
          "ref": "cc7a193f-59f9-4464-ace3-0677db1596f6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "694caf37-08fe-468c-b012-ba60eb2ffc0f"
        },
        "item": {
          "id": "b7db6690-a0ed-4ab6-8a28-cfd3aa098fda",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "82d53b51-e755-465f-b109-e0731765f637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b58e7c1-e4c5-437a-a2dd-897b7b7f05fb",
        "cursor": {
          "ref": "8b74cf90-855f-4c0f-90a1-f70f2d03f84f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "207cdc3d-35f0-4ef8-8e85-9a3da357d46f"
        },
        "item": {
          "id": "2b58e7c1-e4c5-437a-a2dd-897b7b7f05fb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "01a6fa6e-164e-490f-8ac8-15e0b09b7fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b05ad2-50c3-4fa6-a594-33681abb8822",
        "cursor": {
          "ref": "41f8301c-1300-4223-a29c-ca4762510591",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "63b8d410-a143-44d4-8858-28db7e0a66e2"
        },
        "item": {
          "id": "f0b05ad2-50c3-4fa6-a594-33681abb8822",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "78220cf2-fc80-4fd1-96d3-09c42dd78215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e5fa4e-1d8d-436d-8aa8-6aadbe985580",
        "cursor": {
          "ref": "9012183a-85dc-4701-81d3-0a0028070339",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "53311f13-6baf-448a-901b-41c9512471d8"
        },
        "item": {
          "id": "e1e5fa4e-1d8d-436d-8aa8-6aadbe985580",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "695cc2e2-4c45-4a4d-a067-2062fca2a2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd0657f-beaf-4559-a513-0d02be2af7a9",
        "cursor": {
          "ref": "a3820fd5-38bb-4fef-86ca-bf898af40d34",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd113caa-4d9c-4a13-81f1-c2d7f549ca2a"
        },
        "item": {
          "id": "6dd0657f-beaf-4559-a513-0d02be2af7a9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "db9f7ba9-e85a-450e-bac8-61d2790a0607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398e4a5c-fa7e-4d5a-a6f3-242b009d162d",
        "cursor": {
          "ref": "efe18be2-8d79-45d0-8c02-4430532f3230",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e3759274-b898-4999-9e51-f9ead1659d94"
        },
        "item": {
          "id": "398e4a5c-fa7e-4d5a-a6f3-242b009d162d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7c586703-4b80-4011-873b-0cc36455f453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ed06d1-f4a6-4937-81c4-a265e47c262e",
        "cursor": {
          "ref": "7b33bee5-6ce7-401b-84a8-a996e8d99f80",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3df9bc1c-fef6-4bf7-8077-322190a6fd80"
        },
        "item": {
          "id": "14ed06d1-f4a6-4937-81c4-a265e47c262e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "553b4fbf-f900-4751-beaf-fa705ebe52e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb3b536-3b35-4ca1-b5e7-493c279eaaf4",
        "cursor": {
          "ref": "f840a15e-e43c-4162-9927-e024613dd9c6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "842e9daf-06af-449a-9839-8ee0ff9b4916"
        },
        "item": {
          "id": "7bb3b536-3b35-4ca1-b5e7-493c279eaaf4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "677cc367-148d-428a-8ec2-374acf96401a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e806e-1338-4aa1-85ca-5a2871a3f408",
        "cursor": {
          "ref": "6f802d39-e70a-48df-b03e-0db55fcdb38e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4dd9b6cd-294c-419b-8974-11f5bf1199bb"
        },
        "item": {
          "id": "cd3e806e-1338-4aa1-85ca-5a2871a3f408",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2a453de7-e05d-4f5f-8880-fde3eb00cefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45654e45-f858-42a6-8663-c688ff4dba13",
        "cursor": {
          "ref": "962393af-81c5-442f-9060-a5fc73951b4b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "613b2e19-258e-4ce6-ac54-fc431d53f503"
        },
        "item": {
          "id": "45654e45-f858-42a6-8663-c688ff4dba13",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1a1e5273-d1bb-4396-91d1-299e79563008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe0432-9951-4272-9793-e37d56933ba3",
        "cursor": {
          "ref": "ee1d4fa2-905d-41c2-aff5-ae6921066bc1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "969f42ed-48c7-417d-a52d-b862f058d740"
        },
        "item": {
          "id": "aafe0432-9951-4272-9793-e37d56933ba3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c15616da-315d-4c67-a8a0-cf151f4fed52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f38b53d-b733-4bcb-974b-8d87499a1982",
        "cursor": {
          "ref": "c7959b51-8bf9-46a2-8928-bd15ad2deb10",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cc6036ad-da14-4eb4-ac8b-8ee302f93b3e"
        },
        "item": {
          "id": "8f38b53d-b733-4bcb-974b-8d87499a1982",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "57e10f80-1929-4f11-962c-9169ff378631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ea6ef-4ac7-4891-9e8d-e721b07e4f55",
        "cursor": {
          "ref": "74afc54c-7632-4222-967b-136a7838d709",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "12f9d849-9e69-435a-8e9a-975833c7d983"
        },
        "item": {
          "id": "c69ea6ef-4ac7-4891-9e8d-e721b07e4f55",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f409514f-85f5-444e-843f-06bba3d73b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46feaead-a52b-42a8-be43-209b51b6f5ef",
        "cursor": {
          "ref": "36f7a8ba-4e10-4946-a096-26184f2847c6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ecb03026-6eb3-4493-8f62-9a7a8daf6d9c"
        },
        "item": {
          "id": "46feaead-a52b-42a8-be43-209b51b6f5ef",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "67245a1d-b7de-4e2b-838e-521cb8cb1048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f709c1e-8908-4d2a-a687-4861422d7a8f",
        "cursor": {
          "ref": "578c6662-81a1-4459-afbb-92f12e9eec70",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a8630011-09a1-4cb3-837a-780c55a68791"
        },
        "item": {
          "id": "7f709c1e-8908-4d2a-a687-4861422d7a8f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dda64296-c364-4d01-8f0b-5b4ac0b03d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76d168b-273c-4a8c-aefe-fad56702d3b1",
        "cursor": {
          "ref": "d530b2b2-fe63-43c0-9734-ccebea8559a5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "774617c3-e4cf-4866-94a1-dc5ef8a86f53"
        },
        "item": {
          "id": "a76d168b-273c-4a8c-aefe-fad56702d3b1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "85ebc7e5-2dd0-438b-ac08-19277e6d752e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83fff77-4d70-4a5b-b727-3a19c493907e",
        "cursor": {
          "ref": "181aff34-dd93-42e7-9f6c-13ac13e8de99",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c3109f0f-9fc1-465d-b151-5a595c37614e"
        },
        "item": {
          "id": "b83fff77-4d70-4a5b-b727-3a19c493907e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "41b80952-43e4-4454-a37a-da08815a6da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7eb26e-2374-49d0-a7cf-389b3ae06eed",
        "cursor": {
          "ref": "a362afb5-ed23-4867-893b-b2ec5f5221a4",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d8d1fd01-1e37-4bfa-a4b4-7aadb7049b9f"
        },
        "item": {
          "id": "0d7eb26e-2374-49d0-a7cf-389b3ae06eed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a3de8c34-c289-461f-a47e-2359d7c7eefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3d9ec4-4bdc-457c-b0a9-8d6cc34421d8",
        "cursor": {
          "ref": "e202240a-4f34-4cf5-9909-bca21a57fa84",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7ffc8ba9-699f-45af-8b1a-60a18a132dbf"
        },
        "item": {
          "id": "6f3d9ec4-4bdc-457c-b0a9-8d6cc34421d8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ae44521-223f-4cf8-bb71-f4e07a42d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767f5f1b-6806-4d08-a661-60fdc2139a50",
        "cursor": {
          "ref": "111dd88e-a936-4c48-b9f0-e3cf52d6bcde",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c6c532c9-8310-4be4-a680-de76852c9003"
        },
        "item": {
          "id": "767f5f1b-6806-4d08-a661-60fdc2139a50",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5654c0dc-7f1a-41d8-835b-f80099d4b53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5e301b-cf93-479c-85ff-863f8ae9763b",
        "cursor": {
          "ref": "af09b9fd-55af-48d1-9772-00f1e22f529f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "67dbbd03-351c-48f3-8480-327e1815ae80"
        },
        "item": {
          "id": "6c5e301b-cf93-479c-85ff-863f8ae9763b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e90c3cef-ce0f-43c0-8ffb-3f6a4dd9a896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69863ca6-cc36-4e69-aeea-8ad2f81aed42",
        "cursor": {
          "ref": "998d553a-7926-45dd-a7fe-f21269315dd6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "174d59e1-93e0-48b1-9956-997f6b791d64"
        },
        "item": {
          "id": "69863ca6-cc36-4e69-aeea-8ad2f81aed42",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f6657e54-8b5e-4b71-a8b4-dd0b01577b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4096b1c-e7d9-467a-a304-fb766a2f077f",
        "cursor": {
          "ref": "e2e0a491-9fd1-49f6-bd08-3124a93a70d0",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "87bb72b2-516b-458e-bb64-07323ac1ba25"
        },
        "item": {
          "id": "a4096b1c-e7d9-467a-a304-fb766a2f077f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b1184c72-04c9-4c79-9fb7-8af8a008a7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cc7d57-ab7a-4de3-8b40-0fdbbdb30eec",
        "cursor": {
          "ref": "6e4905b7-f20b-4f8c-a232-5712a510c35f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4b1c01af-7e0f-46df-a560-9533d2afd98f"
        },
        "item": {
          "id": "e2cc7d57-ab7a-4de3-8b40-0fdbbdb30eec",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d8609067-7146-49f6-b03b-57c7143f735f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333d2326-c733-4a16-a98a-30b9c1aad304",
        "cursor": {
          "ref": "d8eea1c4-33f5-412c-86ba-bd7895e06cfe",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "178a225b-4dfa-47f2-b7d6-70010a924c4c"
        },
        "item": {
          "id": "333d2326-c733-4a16-a98a-30b9c1aad304",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2dffdcfb-0f66-44dc-ab7e-eedf13956570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb11ab7-b5c0-4575-a22e-a72daf2d0f35",
        "cursor": {
          "ref": "fa8606bf-efb6-4c9b-99d9-b114f595c090",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b56b0162-3c73-4b17-aade-b7e14f3e0db4"
        },
        "item": {
          "id": "6fb11ab7-b5c0-4575-a22e-a72daf2d0f35",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "72497711-1ef8-4620-9650-c0b890a1c890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bbb06e-4e6c-41ba-a432-54d29a07deeb",
        "cursor": {
          "ref": "cadce254-5a53-477c-9dbc-19d167e2a94b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ad104b3f-8119-48c6-83dd-6ae40597eb57"
        },
        "item": {
          "id": "f6bbb06e-4e6c-41ba-a432-54d29a07deeb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f0ef86e2-2a4d-4f54-97ef-096aba2efbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202d922a-cc72-4209-ab83-7d0930782dcf",
        "cursor": {
          "ref": "45d1e567-ef8c-49c5-9ada-6cc3e5c28749",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e18dc537-bc32-4580-bbc7-efdd6fb9a611"
        },
        "item": {
          "id": "202d922a-cc72-4209-ab83-7d0930782dcf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0956ff90-8fc9-41ec-94e9-9a14a3207051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f941555c-3a88-4d83-8d46-dd3efb508e65",
        "cursor": {
          "ref": "f00778a3-87c1-4640-81b9-974ead51f832",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77d7abfc-f137-4bd1-92b1-cd92ae369d32"
        },
        "item": {
          "id": "f941555c-3a88-4d83-8d46-dd3efb508e65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4c9a04e7-e7fb-4147-8f6d-401d372289fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceb0c4c-410b-4c89-9dd4-b5640cbeeb33",
        "cursor": {
          "ref": "8c8daefb-f104-4474-b8f4-f0a95a56523d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9685abec-1ac9-4128-83a3-9d598d690cd5"
        },
        "item": {
          "id": "cceb0c4c-410b-4c89-9dd4-b5640cbeeb33",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7d575a3e-ff86-4d1e-ad4b-6a4991ad5fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fdfe44-fdcd-4aa2-b2fe-20e01b4feaf1",
        "cursor": {
          "ref": "3b85d40b-afc6-4dd4-b041-2fe7dc371840",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "98b66afc-dfab-4caa-b030-d612f47b0747"
        },
        "item": {
          "id": "c8fdfe44-fdcd-4aa2-b2fe-20e01b4feaf1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a7d534c0-b755-4ce9-8c29-09562997a27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad4372e-1a1e-4232-8d04-0bc3001ad823",
        "cursor": {
          "ref": "3dc94d92-e42b-47b6-9cd1-7bd631c49a85",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5ca3f67d-da00-456a-8d2a-72491a868e8d"
        },
        "item": {
          "id": "dad4372e-1a1e-4232-8d04-0bc3001ad823",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "345819f8-72ee-4c0b-b1c2-d55c35d7ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e134477f-4eb0-45e7-b5f6-a8cdfe1c4a77",
        "cursor": {
          "ref": "d58f085e-2ce1-49aa-9002-4168058d80f7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "af273a13-938c-43d0-b40d-220bb9ca51ef"
        },
        "item": {
          "id": "e134477f-4eb0-45e7-b5f6-a8cdfe1c4a77",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8efca0b3-91d1-4a60-aa0b-9ff895b3d947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71be533-1423-4429-96db-47d060aab44d",
        "cursor": {
          "ref": "89634736-07a8-467f-986e-479ade5134fe",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1c41d283-aaad-4903-ba3d-2c72ea236f9c"
        },
        "item": {
          "id": "d71be533-1423-4429-96db-47d060aab44d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2f57c5bc-3486-4a09-ba2e-8030275b992a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874d9cd1-49db-4ec2-98b5-b4eaf6019f91",
        "cursor": {
          "ref": "0ae201cd-3415-4612-bff9-1eaf62e9765a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0cd836a1-a82d-4d6a-bcbb-b6f2d1c26e8f"
        },
        "item": {
          "id": "874d9cd1-49db-4ec2-98b5-b4eaf6019f91",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3b8e93b8-eaa6-4f67-8af4-29b788ef5b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41157024-c112-4adb-9d53-2f001616e97a",
        "cursor": {
          "ref": "e117863a-1b33-4d5b-a42c-0a6daf6461ef",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8d5c4736-9cad-46dd-9f6d-64ebbf37ca03"
        },
        "item": {
          "id": "41157024-c112-4adb-9d53-2f001616e97a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "44c48d97-230b-4527-a7e3-0b1625ba7942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca14e33-029f-4578-a9f3-c8d972f7aae5",
        "cursor": {
          "ref": "182adccc-e5e4-473d-98a0-f935aad58405",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "91cc1e29-4aba-4da8-95d0-902e38c03e58"
        },
        "item": {
          "id": "4ca14e33-029f-4578-a9f3-c8d972f7aae5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80040eaf-2b6a-4acc-ac1e-0f3bc1503da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5758ce-3560-434e-8855-675ad4157e9e",
        "cursor": {
          "ref": "8fa83bbb-49ed-4167-b3f8-ce18dc62f2d5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c2901e36-ae9a-4a57-9b76-cdf154305648"
        },
        "item": {
          "id": "4a5758ce-3560-434e-8855-675ad4157e9e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "17db71c6-e51a-4c2f-9ecb-eb20123c795d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dbbe15-2534-49f7-a4f3-e48c796efd0c",
        "cursor": {
          "ref": "34b8f6a1-fc7c-476d-b631-2c8e82be5422",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d1f9552-785a-4ea4-96d1-15684f2da844"
        },
        "item": {
          "id": "58dbbe15-2534-49f7-a4f3-e48c796efd0c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "59dd4265-66e9-4338-bea7-6f5e109ed247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9070109f-33fc-440a-a2c0-4946cb72963b",
        "cursor": {
          "ref": "63765764-9dae-48c5-9976-1f2c477e4128",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "46d89105-5aa1-40ca-abe0-ef8934e79702"
        },
        "item": {
          "id": "9070109f-33fc-440a-a2c0-4946cb72963b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c7c57a0b-08e4-4f50-ad3c-745cb6ab09b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d0a509-5d6b-4d1d-b113-18cf070d7a7f",
        "cursor": {
          "ref": "0a5d8dd4-8bac-46d7-8677-daaca0a4e8e8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b7d66fef-4f59-4a3b-806c-2732a404d9c4"
        },
        "item": {
          "id": "42d0a509-5d6b-4d1d-b113-18cf070d7a7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "22384e26-39ca-4f36-a86d-b5d0624306d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70cff8e-9b78-4409-af65-2d812758991a",
        "cursor": {
          "ref": "c83ca707-d559-43b5-810f-5e69771caaf5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "897eaeb1-6f4b-484d-8e66-303a2dc38ac9"
        },
        "item": {
          "id": "d70cff8e-9b78-4409-af65-2d812758991a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "57ea33c3-86b9-4dbc-92d1-b60afed8851e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d4eaa5-774e-44a3-bdf6-ff813c90ee80",
        "cursor": {
          "ref": "9b3d8ab2-a064-4724-9276-04bcdcef0006",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c6a0f983-8e56-4443-8d7a-a1f68eb03e28"
        },
        "item": {
          "id": "71d4eaa5-774e-44a3-bdf6-ff813c90ee80",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b467597d-19ec-4e77-9993-465e3400538c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c56ae7-9aae-49f1-af6a-7e621e7a090e",
        "cursor": {
          "ref": "6e29db58-fc9c-42d3-8fae-bbbf51dea4dc",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c46efa47-7ba5-48e9-a859-f15c48778624"
        },
        "item": {
          "id": "f0c56ae7-9aae-49f1-af6a-7e621e7a090e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19c91d59-fef2-49f2-a6e1-3f596e75a1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b0f03e-ba01-49bd-815e-5efebd945ccd",
        "cursor": {
          "ref": "5efeb806-4735-4906-89b4-2907606658b4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "eb49bf0d-4df9-411c-9865-37eddd1a9451"
        },
        "item": {
          "id": "31b0f03e-ba01-49bd-815e-5efebd945ccd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "512ede85-e6cf-4b85-94b2-4482caa110fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bb95d5-3c1b-436b-9626-3211ac75ceb2",
        "cursor": {
          "ref": "4985a94d-1994-4563-9cb2-ad8b8535f7c3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5fed3681-a0c5-4d0f-b5a9-b7a7fa0fb1b3"
        },
        "item": {
          "id": "46bb95d5-3c1b-436b-9626-3211ac75ceb2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8b822a4d-23f6-4399-bca8-424bdc773315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fc103b-b5bd-4478-b01e-28e9795b46c5",
        "cursor": {
          "ref": "184537a4-0ae8-47e8-ba75-422730fab7c0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b036b234-5d1d-4a57-8526-25fa95aa6728"
        },
        "item": {
          "id": "28fc103b-b5bd-4478-b01e-28e9795b46c5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "51667536-c06f-4bdb-8c7c-6daf58e87f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a208e-48d4-4b83-b5e5-2c90ded94caa",
        "cursor": {
          "ref": "80403921-082c-4ae0-a781-d497cc8b7781",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fb10af26-0501-4d7e-9615-dd41cf589559"
        },
        "item": {
          "id": "d64a208e-48d4-4b83-b5e5-2c90ded94caa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9a87aa48-92fc-4524-b4a6-d4080fcc9e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f08d1db-24a0-43fa-993e-d2facadfc249",
        "cursor": {
          "ref": "db5d76f8-3231-4abc-ab09-2fb349c2af8a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "265c4686-30a8-44d9-ae36-3c04df452f5e"
        },
        "item": {
          "id": "8f08d1db-24a0-43fa-993e-d2facadfc249",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "091b6d5d-6646-435e-8c72-e1504b00775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe7795f-5380-4c30-976f-90b25d69f187",
        "cursor": {
          "ref": "464cc1d8-845f-4972-99fc-22e430be558c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ab55a94c-a771-4b58-b2eb-5aefd14f8c70"
        },
        "item": {
          "id": "6fe7795f-5380-4c30-976f-90b25d69f187",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0bcc2fdd-c88e-44fd-9d03-40f02088ac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef806dd8-2886-4d84-bea4-67335dbd7ed6",
        "cursor": {
          "ref": "39b640dd-f191-4cfa-afab-ab661728d391",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "75d959e5-e617-410d-b900-e30785fb12b8"
        },
        "item": {
          "id": "ef806dd8-2886-4d84-bea4-67335dbd7ed6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fe696695-3f14-4074-bfee-a36b0c70e74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b234d8-51a9-4fb1-8634-17614f63b6c8",
        "cursor": {
          "ref": "1e765191-76a3-49e6-822a-7447f0676bdd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2d16d705-79e7-4618-8f6f-99de5b9b1bf8"
        },
        "item": {
          "id": "75b234d8-51a9-4fb1-8634-17614f63b6c8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0de121d1-8960-4cc9-8baa-733722ac8567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295ea8e0-dff1-4eca-be6f-28a2e9704199",
        "cursor": {
          "ref": "c66d3fc8-0c29-47a9-9b81-c292462aa0cb",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3d4a8907-461c-4651-bc02-d77f7b535354"
        },
        "item": {
          "id": "295ea8e0-dff1-4eca-be6f-28a2e9704199",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7a0a87b7-5f48-4cf0-84bc-c3e389a4d3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e681c29-e3c6-4516-84cf-70e56eb2e2c7",
        "cursor": {
          "ref": "64e8ab8e-2741-4ee1-94f9-1ea6f14ea6d1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8e7bf675-e667-4bda-98b3-22af8b17c514"
        },
        "item": {
          "id": "3e681c29-e3c6-4516-84cf-70e56eb2e2c7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "06733139-8fb8-4210-a42c-81937879e2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f8956c-44c2-454f-bfcc-89f0cc50303a",
        "cursor": {
          "ref": "fa1694d2-b7e3-4614-9bfd-41f316741f47",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8b76fc97-c4ee-49ff-9d3d-c465a1d96bf9"
        },
        "item": {
          "id": "32f8956c-44c2-454f-bfcc-89f0cc50303a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d1057e6f-22ee-4524-8b75-7c03fd4b114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6335a5-32cc-4601-8024-af982d644e4b",
        "cursor": {
          "ref": "46e5c2e9-11bb-4d78-bd6f-ddb97036aeeb",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8b149380-61aa-4732-90f2-8d42dbbb73df"
        },
        "item": {
          "id": "9d6335a5-32cc-4601-8024-af982d644e4b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "38305d46-7ba6-48d6-a7d4-44770c7e8579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d25c5d8-ffe2-48fc-939b-a34c12bf290b",
        "cursor": {
          "ref": "51d6c9b0-3a28-4cb3-a951-2a94acca4bd5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "00d06a0b-dbc2-4c5f-97d0-fef847f1f686"
        },
        "item": {
          "id": "1d25c5d8-ffe2-48fc-939b-a34c12bf290b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b2768c9a-792c-46aa-a0ac-fcf0bd3cfffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3bc528-e377-4f0d-a6b0-5692b7cfb529",
        "cursor": {
          "ref": "23fc1a3e-0c0b-42d1-97cc-a0a05579f077",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "808006a7-2dd8-440d-922f-592ee5ffe201"
        },
        "item": {
          "id": "1d3bc528-e377-4f0d-a6b0-5692b7cfb529",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7e167566-ee60-4877-a524-ed449b065133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c65ea50-0f67-4476-88a2-6f30d4e7aafa",
        "cursor": {
          "ref": "a0708978-b10d-4d68-9973-bfa1b48a00c2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a16c0f13-a126-414c-a53f-1660725efda1"
        },
        "item": {
          "id": "6c65ea50-0f67-4476-88a2-6f30d4e7aafa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "94f8957e-431f-4e96-a02a-daf856195c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfa0f54-7e18-451f-aa53-43fc42bedd67",
        "cursor": {
          "ref": "189e194e-09f0-4030-93e2-39aa80ba1172",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6d86cd9e-cd0b-488f-a2b6-2577115793bc"
        },
        "item": {
          "id": "9dfa0f54-7e18-451f-aa53-43fc42bedd67",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d6cf8567-233e-457f-a96a-87192455b544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f839b5-b66f-4ef5-ac66-dc4bf74065f3",
        "cursor": {
          "ref": "44fb69d4-b47c-4b77-ab19-43d4e08e0364",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2c7cc3d6-94c1-442e-9daa-c1dde0bc0b14"
        },
        "item": {
          "id": "32f839b5-b66f-4ef5-ac66-dc4bf74065f3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dc0eee6f-c41c-4b4d-babe-7da451d95f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c057b6fc-cc01-4352-ac8a-dec3585d275c",
        "cursor": {
          "ref": "52af820a-8360-4717-b9f4-ce86be6d1357",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4449b3a5-6739-47c4-a2f8-1af175d24121"
        },
        "item": {
          "id": "c057b6fc-cc01-4352-ac8a-dec3585d275c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80a07d27-5e7b-4b84-9850-724b882c7c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28beff8-8344-498d-865d-aef0ea7350ec",
        "cursor": {
          "ref": "2b97679e-77a9-4466-afd6-d2085c847be1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "128ab417-6058-46f6-8f3d-2e5b515e7c32"
        },
        "item": {
          "id": "a28beff8-8344-498d-865d-aef0ea7350ec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "48e01cb8-bdf4-4aff-b61f-5c21b79d05ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf61cf2-ece4-49d8-80e6-73944ad06bd1",
        "cursor": {
          "ref": "c3fca837-ccfa-4ce4-8d74-b84a23561b4f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f183edfb-31da-42c0-9948-24a669ea6938"
        },
        "item": {
          "id": "6cf61cf2-ece4-49d8-80e6-73944ad06bd1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "33d15a52-a757-4262-965d-6fcf3501b1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b510cdcc-fa58-45c8-9e57-ecb3acea6e4a",
        "cursor": {
          "ref": "34b15c24-537d-4da6-aa8e-e80515276f84",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7eeb83ed-7b53-43a3-bc7f-8ba81b453c0c"
        },
        "item": {
          "id": "b510cdcc-fa58-45c8-9e57-ecb3acea6e4a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "289d5611-81d3-4165-b870-c4c3e51a7702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4775b92-e4f5-4fe4-bdd6-01c311b8ca02",
        "cursor": {
          "ref": "76ca9685-e689-44bd-a7fd-7f56916ea12f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f2467a3d-30c8-4f56-984e-3ef1b60e2593"
        },
        "item": {
          "id": "c4775b92-e4f5-4fe4-bdd6-01c311b8ca02",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "711b0485-1db7-43b0-9c77-0b54738cad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b86c146-18e1-4073-862f-0ccefa8b0726",
        "cursor": {
          "ref": "f6b13234-a5b5-4b25-8181-39cd75f63ca0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dcb0f639-6862-4169-aff8-d79edcdecc7b"
        },
        "item": {
          "id": "5b86c146-18e1-4073-862f-0ccefa8b0726",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "54d42eae-fe71-4179-aacc-1a67a7e4b8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ce5c66-f644-4e84-9466-30bee2669cd1",
        "cursor": {
          "ref": "9ca39c61-3607-4650-bbda-93fa8d303ff3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "52587a85-95f0-44aa-b8ae-1d2ddff453d4"
        },
        "item": {
          "id": "92ce5c66-f644-4e84-9466-30bee2669cd1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "94297930-7b4f-4e7b-a9d8-5ebd7e8ba7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc8970d-b442-4560-be9f-f202ebeed81c",
        "cursor": {
          "ref": "c69e30d8-b19a-4c7e-8508-e6e49e2adcb7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "56fde02d-62d2-434e-8207-a0c658689d8c"
        },
        "item": {
          "id": "0dc8970d-b442-4560-be9f-f202ebeed81c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bce60992-c324-4edb-abca-f62bf145b71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65700d3e-5f39-4c6c-9b21-ad7a2cf5d08a",
        "cursor": {
          "ref": "d124df6f-34ea-4af6-8690-13d3c6bbd4cc",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ba63c441-805a-4038-87cc-331334d426bb"
        },
        "item": {
          "id": "65700d3e-5f39-4c6c-9b21-ad7a2cf5d08a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c5a0b5a1-9c24-4f95-a726-616b934fcdab",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8036acb8-fef7-4384-9a82-21397b3562dd",
        "cursor": {
          "ref": "25fc328d-2f2f-4da3-ab71-2bbcad2f3937",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "229265fb-027f-4ea1-83a9-ddd3077cbfd8"
        },
        "item": {
          "id": "8036acb8-fef7-4384-9a82-21397b3562dd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "62469cd6-24c3-47d5-9108-f34c2a26eac5",
          "status": "OK",
          "code": 200,
          "responseTime": 3095,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba6e75e-1bf8-4a7e-b731-ac935a5b537d",
        "cursor": {
          "ref": "7bba395e-f4b2-4884-b3bd-29e450d705d6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "75884899-1e22-4c9f-93a8-3f68b8cf8aae"
        },
        "item": {
          "id": "bba6e75e-1bf8-4a7e-b731-ac935a5b537d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f1266f0b-a887-4bde-bc8c-9bd2307bf8f0",
          "status": "OK",
          "code": 200,
          "responseTime": 3010,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41572c9a-b1d4-4fb5-95de-3f947e64c694",
        "cursor": {
          "ref": "c2051265-7225-4a73-bfee-230d8c41d92c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aed3168d-1ac6-43eb-8f3e-43c46404c4c3"
        },
        "item": {
          "id": "41572c9a-b1d4-4fb5-95de-3f947e64c694",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "429e9c01-1e39-43a4-9ae8-4d24d4434177",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41572c9a-b1d4-4fb5-95de-3f947e64c694",
        "cursor": {
          "ref": "c2051265-7225-4a73-bfee-230d8c41d92c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aed3168d-1ac6-43eb-8f3e-43c46404c4c3"
        },
        "item": {
          "id": "41572c9a-b1d4-4fb5-95de-3f947e64c694",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "429e9c01-1e39-43a4-9ae8-4d24d4434177",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e1ca2e-ca4c-47ed-a9ed-f27d32da99ad",
        "cursor": {
          "ref": "b01ad631-5b7c-44c7-9f83-82a06d195494",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "49b7e0d2-7971-4a40-ac26-8050ef5648be"
        },
        "item": {
          "id": "83e1ca2e-ca4c-47ed-a9ed-f27d32da99ad",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "370df751-1ce9-4f54-9b87-e1882ec91261",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939581c6-ced6-4e84-acce-60c8b4bc27c1",
        "cursor": {
          "ref": "9b58dd61-a18a-4cb8-91c7-672abd56e033",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "dadb1779-3b5f-4d10-8074-b512f5d19eb7"
        },
        "item": {
          "id": "939581c6-ced6-4e84-acce-60c8b4bc27c1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1c708efe-5643-48ad-95f9-e1a44fdb1096",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}