{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b4f1e3c0-944d-4f66-b364-9e90127ea3b1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62ed09f4-7ab0-4fb7-9896-92fa88f2550b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d67878b-ebca-435a-baf9-49727e7fca83",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46d64e58-76f0-40af-a3cd-0e7cd9f679e4"
                }
              }
            ]
          },
          {
            "id": "222a7ddd-a8a2-4ee6-b172-0c3f881310df",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b2ce9c5-e68a-4291-ad56-148f39688b3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb98a039-aa8b-4929-b45f-01b83818f3fa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "172e9881-91b4-43d5-8102-b70d88d94fce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bae4bcff-f35f-482b-84a0-08f29d068259",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8f1a12d-e99a-4471-b094-2d5cd8ca3246",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6d61a5a-e5c9-4527-a5cd-be33e391c281",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90f22c5e-40c4-429c-a00d-49288c8b7544"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6683bd9-e9bc-40da-bcff-4c4386f0f6dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff96025c-2674-4682-8b61-54c7b6614461"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2434cce-5020-452b-92c6-eead42d5c6bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38d4f45f-f2c5-4cd3-9334-968dcd574526"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c617286d-0013-4ba0-92c6-cafe6b17295a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "617ef6df-f786-4d59-8a1b-2f24eb4dda01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1316ed4-ba8d-4706-a14e-15b23d572f96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "047fdb76-4a7a-4ab0-9fac-7db5d6e521e2"
            }
          }
        ]
      },
      {
        "id": "d56a8f83-33e2-4444-a074-ccc4e13a2439",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "24fc18e6-022f-490e-b0b0-4367d0c4449b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "891fd749-7ae4-4b96-9b13-6ef8ab45f477",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82efe727-69d0-4370-a675-de4a11e033cb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623555e8-c1c0-499b-94a6-f9cf56f89338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88e4ceff-9f78-4f24-93d2-4b3baabb337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5747ed60-ea7b-49f6-b8b1-c4784161302b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428bd1fb-25a3-4d86-8c9a-73f6df7ed5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f212b354-bec9-4fa0-bd64-3d7b977a9d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23451be-af37-4eb9-a94c-e22aa640cdb1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cb64e1-cbd4-484d-a479-c49aa5c74215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ee8efa6-e6f7-4aca-9191-482539010898"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea29828a-9b7a-4062-b488-7be99942fdc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a5cdd06-17ad-407e-9e6f-2c5299fa4f16",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bd5dfa-2a33-4db0-8a97-7029cacf13d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "339eca3e-22a0-45f0-95d3-607f4f79cd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa0c58f-a360-4efc-b710-d309a0145a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8f98dc-0ae3-47a2-bbfb-f4d0d1556479"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a3837d97-4963-4540-af79-52419d63b675",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4148ad69-c53c-4368-85a2-ef440be33b0c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a82bb7ca-93c5-47c5-95fb-0d1b31cbabcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ac4815b4-add6-43a9-be7d-5ef397bf27db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c0a4906-4c0c-46a9-bcbc-2dcca56d0ecd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "491552ed-c695-431a-b96c-576b0780d15b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78cd5fa0-b8ef-4d60-93b1-136ba1e7df7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e30ed062-b653-43a9-9ebf-4a47bf0d5808"
            }
          }
        ]
      },
      {
        "id": "fa29e905-42ce-46f7-b79f-002d4a14552a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "af331bf8-3d4b-4104-b12e-420df45781d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "855ecccd-28f3-44ae-8e93-2c348b992b0c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f2214152-1a2b-4296-b944-08b3e701f392",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43ca650-97c1-4c17-9115-9765291f6a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783d75e8-6031-4a55-b7eb-7f505add36a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a78ddc-bd3f-47aa-98e8-afe7dfd5cc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffd57662-e507-475a-835f-b5399c1a01ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cd0aae-efdd-4200-99b6-6dc2e3822981",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e151084d-a8f6-427c-a363-ebd08865ef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233d9424-7873-4943-bfcf-7ecf3efaede7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced76575-dabf-4b3e-8e3a-000e0a0bd7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1a8d89a-8187-4ce7-b060-f05523469543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a8429e-f41b-465d-a2c6-1e834ac12b3c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38119ba5-5a7c-4f88-a0b4-7e95f76c168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec411b1-586e-4554-98e1-38cb7eb80a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60f7a5b-4781-4801-987c-a60c21932c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0260d3d-1fb3-42f5-aab7-2ab036f3d431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9809847b-6db6-4dcd-b961-cb80df780d96",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f746302f-e281-49fb-84e0-96c934fdce59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04127b5e-e1e9-4d97-b309-08042472d375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6a0a27-ab8d-416d-8635-7709bf184fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4907639-d90d-4402-9c36-307027d6a2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b724a55-c7f0-4112-b005-bd14c1184752",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05de848c-ec63-4ae5-abdd-18fe672024af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a122ee-a620-4c1c-89e7-755b5ea6ce35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40df02e1-496c-42b6-bd55-e296a9fcb406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34238cd9-001c-4fa9-abec-5f18c1cc9bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41472350-e4ab-4771-b505-1058e1a6754d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b79bc4d-d8a1-49f7-8964-4c49962a0d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0862798e-44ca-4513-8153-f7113b1b2a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c300326a-e4b6-477e-b37b-9dd24349678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e738a2b7-71a8-43b3-87e4-6ae6e8af9072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b69461-653f-4026-a157-d92e401e7f9d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a7004f-d342-4fd8-a38a-f3116a09f713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b61188c-f8f6-4717-8776-6c7dd0bfa4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9146e7d-3ae1-4be3-b2a9-3d51caeddcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6ceadf-3026-43ce-b29c-f3f97b802975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c75ce-a63e-4779-bca1-cdf70ffd98ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c47149-cc2b-418c-9e5f-682344f9103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d836d7-0ead-47cd-b0b3-8d0de39e5345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9ace6a-da30-4ffb-af9c-3663c503e674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58966a43-c393-4343-a2e8-03d04277ce0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea8aefe-5408-475b-b366-6c6e46c3c5b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b870a5-1439-4320-b516-48d2c9c909d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a90de3-1c19-4656-9fb9-20d38c5395f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32796ae9-c264-4ad0-a1db-e2d80ccf0385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c4454b-0a03-4cdc-bedb-6a0409a6785d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268c3740-bfb4-442f-b2c3-8f91ff9cf631",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6238a33-2baa-498a-b131-0b6f4de93e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781a82c2-473e-4425-adc3-55e2c6c54b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d2724-46aa-4842-821d-39c016597ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6359c9c-1d9d-4fa1-b045-236c63209d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a246203-e40c-4dc5-b532-c0fd611e58c0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd36634b-42b6-483e-8e51-0dbefe91e24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe93d2e-74fd-4365-9f8d-4710f4b6824d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55495912-85d2-44c3-8fd6-29360598d479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf98ead4-9c5d-41f5-8d68-a13def74685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14805b5-dcb7-47a6-b9c2-3d0a73d38397",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b8071e-2ba2-4821-b24d-b5b71ff55016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b32914-a7b7-42b3-b7cb-bf2a8b93984d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e82bcc-cb0d-4e4d-b37f-b90b220e3d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbac8b56-e8b7-4194-ae73-d94457aa1198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea90a9a-35ca-41c4-a2bd-dbf3fbb2430f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9b16b4-0a5c-4064-b0e1-bc4b95b7f9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f1edd5-5126-4e28-9ea4-f4ea61e554b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1aa191-6719-43fd-9080-7f0cafbc6193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f33868a8-423e-4e6f-b160-b75cf6acd846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4f0aed-7c29-4e0d-a08a-464807f4c627",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3c7f5e-80e3-400c-a4ca-aba8e6ee9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a262190-2215-4e4a-ab11-ca9be508b747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec8d474-f303-49b7-a6a2-d0e8c7af0587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02cf73b4-87d3-4bb0-a1be-0837c7d0b1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd4fb11-394e-4e86-9ca1-333e71994cd9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f122a6-54bb-4013-a8c8-edf64f0ac6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f1f2f1-41e7-493e-8697-6090fdefb0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a937f944-05d9-4ce9-9f02-4274e97d2b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47fb183e-12f8-4ae8-9001-7e02db98d3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe1b0d0-385f-4704-95dd-6d42ec8c701a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8455423d-0bb3-4a04-8f66-00dbb7f4f496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47bab2f-e444-4dbb-a2ac-add933358309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625cb8db-9802-4677-bd4d-0e94f66715bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "774d984c-3730-43c6-b78d-5a795ffd038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b28f5a-1d7f-49d3-8366-c4ce85ecba99",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b683c1f4-78f6-4159-b479-2721b13201ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58d452c-a069-4c88-ac7d-079762e1f365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb33c9fe-c074-4017-abca-36d1131954a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b84ee3f-8aa3-41c0-9e89-11b4aa31fbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715c5044-162b-4839-9e5a-4db5e667c9cb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b470c2-390a-475d-a418-c1b419ed5099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606508a4-48bc-493f-a56f-40073fe28141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ccf76b-6dc7-488f-b874-40c2b63eca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29eb4909-286b-4805-b64a-84f0e0c86bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72e47f0-f5fe-446f-a96e-e58efb14bd94",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a84b531-8fde-4a19-943b-6bb9251c3a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1a23b3-3145-42ea-83a9-563c7687b791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f43908-0fa0-4dac-acf4-f79e6a755d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4abd5a2f-d21b-4a97-bbb1-de0386eb1904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cdf2a0-c4c6-4bdd-bd59-9baf7ba52a18",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3460924a-864b-4d63-9c17-7b88e4a96d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63719082-1f0d-418b-b579-e78f7a6b63cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b4f93c-2eb7-4d61-b1dd-7cbd52a64958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb8e2f0-7324-4a8d-bc96-8db2302dd43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621e4e93-ccd6-4616-875c-2041f3c31b7f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b838399-db62-48fe-8a6d-195de0472052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aa8fab-f7e9-473c-b24e-787861a04e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00169c7b-cd21-427b-b3be-c0d01d0a88c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8c4d41-d5b7-46b3-8b99-8cd3315b2934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8a4e63-9612-405d-97de-88cac95bd670",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8944fe1c-b4a8-4699-aef5-7bede4ecdd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea27fbc-b504-4b13-9a8d-03fe40b29d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f329d9b9-619d-4b41-a684-2b353add402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9389a99-4df0-4ce1-847d-28f4fbe5f636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38e84a-cbd1-493d-b9d4-5257f66ff068",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8420aedc-9beb-4210-8f82-dd7af485f9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa957c8b-5be0-49c5-9ef5-6608db34a606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f428bf5-246a-403b-b7fb-e726f3381ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6397e9-2442-4902-a5fa-eb8663e7c1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ed84c2-627c-4db0-9fdb-548600a6de36",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d94c63-028f-4b80-b455-7143b4e2d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2f109f-08cd-468a-810b-fd3319d33cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f184e82-ac1e-46d6-aff0-5a4bb622028d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "775dc2b0-60e0-46ac-a1c5-139549aa8c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1da50d-d491-49bf-a8b5-e4baadc959d0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e0c187-ba11-43c8-a6c0-712a513bc9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b010942-f08f-4ae6-9a1c-e209f96f6706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92de694-01fe-484e-a98c-c5c297937326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7591cb6a-bc6e-460c-9d48-1c516466ca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fbf8e4-9d86-4c27-9797-0c50d8a89ed2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53170af2-9e24-4d36-b518-75490d77c2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd36a6d6-8aba-42bc-b9b9-c2a77155e380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487e2b51-85ab-4f6b-9011-dabaf1cd8413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4091ee65-2cb8-4467-a0b9-2b28e0b3e408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68877ce-d0fa-46a5-82e6-5059168cd176",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cd6b3f-4181-4380-b4e7-03436c7794a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787a171c-5047-4393-b12f-81f8180c6006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bee6ae9-381a-4f0a-ae3a-a7c46a35e6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b27788-7c2e-426d-bce2-9de45c999492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8513c80-5af3-4834-bc1d-beb3add98ff5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdbb8bb-a80b-4874-a8a5-8ed6082528e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63e8f03-5dc1-4bbd-9e73-50ffab294d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7399e3c9-bf3b-42e2-8367-0376d05a843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2859a080-dbe1-4c4b-beff-79c5ec060245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60529318-14cc-4b0d-a64e-c2d3002ba2be",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e590d-3e1a-4f83-be13-34796528682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243d6e01-1db5-4c1a-a245-5917b8992e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16ca85b-ead8-4fb9-b155-c79414afca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dbde7c-c86c-4dc8-a8c2-6ef38ab5add0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea85b08-81e5-45d6-b8e3-f1207d0dfe84",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eecb48f-b540-4521-9f5d-a296ecd56fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8146bc6d-91ad-4c65-ae48-a8e486459105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9741089b-2756-4433-b480-f76e0623297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bc36f5-5e98-4d9e-b55a-d1e25a81df45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d35fcfd-fb02-4382-a6b9-ab8a121e11c9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2610c3b-0e70-4b7c-b5c9-9968a6f8037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be3611b-ac01-465b-baa6-d8ffd89b372f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3b98b0-09da-4a4e-bcc4-577a89e98f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cfb903-41a7-4128-a202-beb4da2d390f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c3dfb-2885-40f3-aaaa-6c716e5458f1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba3c37d-7588-4ecd-bae7-cf2b6936ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9120203-c2ac-4b30-bb0c-90af6fe01627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26db0861-f80a-4749-83c2-47272872f85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d49aa7-937f-4d5f-be2a-2781b272b5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503255a3-951b-4b9d-ad44-241019d1d4c2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842ee5a0-320c-4037-b666-36e44b70e901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ebbaf7-2ace-4ff4-8ce9-e378632ee9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14d26c5-79aa-4bb8-9d23-cde001322790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "423aeedb-7a8b-4a36-ad64-2ca52425eaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa226ab-e5d8-4ed4-9f02-5ca92e6f7a22",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937e1c63-716c-42f0-9e09-bc33b1973d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfe8913-7728-4167-b5e6-c9bc9609b7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a849b17-b78f-4422-8d30-d5bfd60a0b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4365f37e-dd01-4098-a298-8d306e4e5475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a42c5ce-7fee-4e13-b6a1-8d42f54bf1be",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d8de1c-659f-4bf8-81a8-e87a624b131a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca8409d-e303-4c35-8fb6-8bc9af41d661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b535fc83-f952-46d8-a482-5549c24e82aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "746469b4-24f2-4ee4-9e0a-7d823157a3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9015013-3e98-4e5c-9db1-eb6575e7dd8e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ef97c7-e39a-40b8-8128-e5adfa2d82d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d47c9334-d1cc-40e1-ad40-7362297a286e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aaa87b-21d4-4859-bd81-7d0fbda4ee31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e787d3ea-d87c-47ce-9a41-067d4172f9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970faa9f-a633-43ae-aa43-623a3379527a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7add605-a676-41da-be37-49fd51249157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3492301-03d4-4fcc-b384-418d39202080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9b8843-abaf-4236-b064-7e35138a8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e80791-d97d-468e-bf0f-aea4cae7d0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca30d84-67ed-4a34-8947-1f4263e41ed8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776e165e-80a9-4e7c-ab8d-4643597ca759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6516c2-5c04-44a8-8c78-5294f63f75b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87280c72-250d-411f-9ef8-aa6bfa70ffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fc85c8-2166-41f1-a5b0-c15b64ede277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10deeea0-14a0-491a-ab01-077e313f5090",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a23f93c-3215-434e-8995-02356ab7b49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a7f778-d068-42e6-a9ca-1d330ac79296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fffa88-dbe8-42d2-a743-946029aef43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c18fd3-021a-402a-aadf-136277e5f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b62323-4dc4-4da0-9034-f2d78baa96bd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9213a543-f301-4f73-b44a-a035218e3615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3461706-fde9-4996-93c4-347997590c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7499ba8c-b15b-4a4a-bf75-6281a9c2314c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "413de373-9696-4c02-b8c3-ff7d58a0dbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79cb013-5220-43f0-b65e-fe44261e9708",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43adf6-02b1-4008-9c37-1244b6803797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39fe2b2-8d0e-4252-8772-55f9379d6e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48da1c1-f5a0-42e5-8fa0-fc08939c0886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "274a4198-94ab-4d6c-bb01-24e0726da0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b383d06e-bcef-4ba8-9a29-afbc80ec33bd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256b2773-1de0-49cf-9349-5eac543ffaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbf6f17-c918-45cb-94ee-4da3665b5307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb7ee32-f470-4b0b-9eea-1073742e8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "437f691a-7d16-4a64-b0aa-b64b309f1545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f421258-0faa-4f37-99eb-eac5cc1ca854",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ca369c-df1d-4db6-b003-09c270ddd8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d286e0-26a3-4c86-8f0c-ef63b1614242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889e9ead-28d2-4cd9-980e-d3ebc053a1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8795fdbc-a238-4cd9-8dcf-94dc315dac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26488557-3196-4f9a-9bda-1a38def6bfbe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8477efa-0fa0-428e-be03-6acf5bb2da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab7de50-b169-46cc-b98a-ddbf26078036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462e05a9-bec3-4fc0-81b0-98bd69d89df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92c7ae3-75b2-46ca-9f16-4c3c5153581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a37e3e9-d30a-4515-89ab-287d62be5faf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac552cc-e5c9-4b82-bb00-ead95781cbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b25992-7a15-426a-a2d1-09f25414bab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec703a8-dc56-49b0-9451-1c4025aee3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f10bd27-ac2b-4dc1-a486-f72c335386ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ff25a4-e1e7-4d24-931a-35c60ab73af6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9ff27f-79a1-4ca3-bcdf-3470f04ac65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab22ee2-622c-41a8-8456-3cd05a675551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a9c46b-8a8c-4256-91b2-764a21fd3046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "770ec7ad-ac4c-4e6f-a718-2fa0c69ef68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e293d45-9b75-4cc5-a4fa-fc3a8de152fd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e35ee9e-65b1-4556-897c-71fec2696f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeb4a50-ad37-4e72-9557-401749905b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b42f79-76f0-48c2-9dfd-5281d72fd21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67cec61e-595d-4f2d-8bac-5e567287446f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6db8d18-578e-49d0-9bf6-bbe3fe26d226",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f26786-361e-4a04-87e3-35f39fc294c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953d1407-d0c4-4f33-91b0-67689b29541d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647ba537-b3eb-440b-9972-451219e3d4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8766882-fb17-4f4a-a771-c1c53db71931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffa9da0-77b5-470c-9e45-5a72ae2428a8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625d74bd-eaa6-4c82-8203-d445673f2c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5b9336-d520-42f2-8fd5-4fdb9296552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a371381-c7b6-40b6-b89a-7325e9460953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1008d8-4c6b-402c-ba27-e4f585900b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d56d79d-acc3-411f-925d-aa63c67ba470",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd63d2a-03f2-4784-96ee-28206b06680c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015846df-1c2b-4104-a55e-6614f47bb550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b97c86-bf5c-4754-ad1f-f1339e723c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88d78b29-e527-41c4-bd39-bf34d34f8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fd7f02-d894-4742-87b7-c100a49b87eb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e08ad3-8e57-4303-8c6a-2ffdc5e853da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56552016-33f6-49d4-bd93-6133fe607b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d4b811-ef08-4a25-ac21-0039e3fd479e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5983650a-e1bf-493b-a88f-b3c6400af484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd8b559-bb9b-4a2a-8495-f3b85a7078a5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c08c8f-fb6d-4239-bd84-0531959694f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6c5fe2-933e-44be-abfd-91615bef8a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec9aa7f-9375-4f42-a261-3c6a1c5ed070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33700122-975e-4d6e-b3ea-0b1c2ecda9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e388358e-5089-4ef8-af3b-1e931bf50d72",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eaa999-cb0a-408f-9bd2-8b88da2e06b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120fdacb-7399-4e22-a70c-da80f65c4eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35b7afb-5dbe-4c22-b58d-cee233958424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2032d54-f8c8-4b16-8d62-b9387f58ab39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698cf600-4f09-4682-a1d9-2cb4bc8445f0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d8f5d7-d9fe-48d0-a58d-1aa064f26931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaced9f-c1dc-46ef-b37b-03225432f985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c085772-01e3-4db8-8b56-d15071269603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b1a385-e3ed-4e89-b869-b4c69ed5d850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fa4665-6ff9-4c07-956a-34251f79d3d0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dfac2d-462b-4a04-9648-f6a841e189c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12e2c84-89fb-4afc-8fbc-3e94491fdd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5099fe-9a2f-45ec-8ab7-7990f35e7c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "913b60d8-942d-42d6-a3a8-5762dba7b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af11a50-c7bb-4a0d-a658-b3948779a1de",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2146170-2556-4f96-943e-14b63d33c3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d9c358-3e7a-4c02-8a3b-fc54eb2cd230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108afae9-a27f-4dce-8af0-f7260f6cd272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1e676fb5-96ae-4fd6-b527-14429e8e984d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27d2c70-1c12-48d7-b1b8-c33a791465c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca5509f-da1c-43df-b903-3268b70ababa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026a9f70-9437-47d6-9a8d-b65c5ae637dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b641d28a-d3e2-45a4-b786-e8ae21a7072f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08ced7ab-a6d1-4436-809a-e0947da6b86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c155f3a5-6f5e-4743-896f-38c8993f0bf8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde48007-952c-485e-86ca-203ecc64dace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3fd10f-0f93-4882-aecc-9320a6e2696b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2775a1c4-73c1-4e85-b325-9131648049c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebf53db-ca40-468b-a13b-60404ae95a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea2836b-41cd-4c20-89e7-9364e038905b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b10801-9cba-43da-9a63-f5fcbd0d27fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda635d5-08cf-49bc-b93f-90b168114e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113ef438-7acf-4b77-8f84-d71a0ae794f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3772994b-ca9a-4a87-83dc-2e81b3f92f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05e2648-3c3d-423d-9a37-4b175c3df6ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d26bf7b-82be-4070-aa3a-6f85a046a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d56ad0-1067-4b24-b685-106349b76f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c29d3e3-9a3f-4df6-9d97-c25797709ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad781425-9eb4-43c5-9328-0ac14aa71cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ece634a-5752-48ad-a210-870fcdd774f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff11c04-ee08-4a7a-beb2-92f54698cb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35dd1b3-005a-40ff-bc92-1f47ef8994de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70dd870-f6b2-4f93-97d5-69b322bd5d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d815c2fe-3107-45b7-b0b2-9f16ca033cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586bb05f-597a-4f7c-9011-3622ee8fa70e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec4e26c-80ce-457b-bdca-603870ea8fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3026801-2d0e-4ae1-afe8-bcd8931d60c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e607224c-1853-4d44-a146-c6166c71bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf93461-0d67-4bc4-afa8-06e841fd8fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9630c4-df4d-44d6-bb35-deec93649864",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242d2ea2-c090-47fc-9f39-d4d4061d23bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0f9c7a-e93d-4283-a343-5134ba23abac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd7871a-6d55-4d97-8333-09ba7b9c1769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "281929a7-84c3-4ec3-b046-a76f67237021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898f4757-ea33-4815-b7c6-030cc990acb6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a7fc75-3a54-4b5f-b798-68ea549e5eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff33bc00-8b17-41d3-822a-e7e89b530da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0af551-0e03-44e4-a304-1f6dc63303b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5ba7e5-c904-420c-b0fc-266e1332cd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98848d9b-a272-47f0-ab10-6191fd98ca0b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86bd4f-3dc4-4556-8f11-c17917b1d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245ba97d-569d-46d4-a119-a170ff13226e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ccebb0-8668-4ed2-919d-129a887e2805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "223c5da7-e4b0-4052-802a-b17d654d7218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc19c27-94eb-471c-99cc-8467174ea892",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54dca05-f67f-40ad-9ce8-44ee1224f60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dba3765-cf12-4674-a04a-fc9cfe5475ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff2eeac-5ded-4d3b-acd5-43e6d1894132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d773d565-0d62-4cac-a750-8ecfa5c4d4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61601332-e9f8-46e1-8004-ec2f49db8b70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4207cd2-7285-487b-8ad3-e40240905e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e656a687-e0dc-4f76-98a6-4cef83dd1200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1774ef-fc09-403a-87d2-d4b2348af150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad058b05-b8f9-4b1c-aa24-1a0c56ee9b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8b977d-fb63-4ab0-b9cd-674ce3795251",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e771a6-66fb-47d1-841d-d45ba7f1f05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0797d06d-f4ec-4594-8100-00e8fef3a7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1b3e0f-3e3a-4285-8c23-1e015805aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd01653f-4e4c-4333-884b-752113917acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f1855a-e786-4194-97b6-cdf845d25b1a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1efeae8-80c6-4e49-aadf-37e281bcb043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dbbc3c-accd-431d-a42a-9d83a292d9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f33cb9-2af8-4944-900f-bf7d526b6f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b33064-0fe0-48a6-8468-f3d592a065f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa5c8e7-5db8-4bed-91d7-afdedbb39467",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be060e0e-13a5-452b-a701-2e1624f33276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620da874-96ff-4ca4-b779-d93f708647c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caa8162-bd99-48e1-a71c-fd1d306c35b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42951c0e-3fc8-429b-9a1d-08792feb5135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4abdae-af93-4cd4-baed-4a1b32cbf811",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e605ec0-6ed8-4068-8f5f-6da25b96617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11079748-4649-4f78-9681-b84fb8e7063e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460be412-39df-4540-a31c-de535266e939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7b0586-0323-4901-bf1e-cb9729eb70c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bde6fbe-fa88-4c73-9a38-f39f5a472b78",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e155f-e305-4cbe-b1b0-297aed2519a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e3648c-a93f-4650-9379-0ccd3490f79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b243f73-22ad-4751-b961-9bdf3d9f66af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ccc0f5-02b9-4e90-8d55-4aa8be3677cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed072551-cc74-450f-8063-6d1b223aef5c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f7c2ba-d93a-4ac3-91da-46ed2d6b5289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60db5bd7-a2dd-4d3a-b738-c1939cc63112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4789ba1-dc04-44ea-940f-46e2655b1864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a4bcd1-b5e9-487f-ace4-66424c857967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f606e25d-f149-4517-862c-b5f00d19fd65",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5639f62b-bd87-4d95-a09c-65ca2010efaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963b00af-919c-4e5d-8e3f-7f9c536b8f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa495f28-cf19-46d9-897c-520d75a93b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6171d682-ad3e-4111-b507-54c89979d7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c802ee7a-835b-4abe-9d0a-d4c61bdef114",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbfde32-b9e5-4158-a6c7-a589cf6d644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1019f2fa-0447-483c-9d28-d6e531baeb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d801db-1130-4a85-b32b-8df29a707a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e531f88a-89b2-41f6-ac57-099bf878a0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76026575-33fd-4f0b-ae92-b941d5e9c6e2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6007f992-1ddd-4880-a6c1-535abe1407dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927ef040-3bf8-4882-8b16-e8a5e1b86f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef0f88-203d-4a4b-9b07-fef600d125cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "226efcb0-0e11-4da0-a55b-a05cce77e7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35227db5-f60e-4007-a385-5504157d6e8b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f217a68c-d48d-4dc5-8162-f2eee41529a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b19b575-e4a7-4aab-a16e-20d9db95358f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7008c9d6-9c27-4976-9143-fc837712f422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70572fa7-4bc5-4f17-9e2a-980effc55048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0887a8e-9afe-4b01-b0f2-4285c7fbad6d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9ba8a8-cb25-4655-adcd-92a10e116d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c42ae1-f9c7-48bb-83ce-ec9423826cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2c18b8-cd58-4e70-94d0-2bc31fc152ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f7a2b3-f1d8-48ce-9b28-ade7703b769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd406a6-9766-4b01-8503-94bdc4fed934",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad6e48e-bf21-4bf9-8af6-ef84a5ca1c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9828c115-b6da-4321-a0c2-b9563f5b62d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897a1a17-6ebc-49f0-9d61-141aad30c1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98568d3-88ce-42bd-8bed-0bc0442659da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195b4e72-8dc2-45e3-90bf-ce74a7af3cd3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c5368f-3f91-4a37-9049-f99a4235bb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5a3238-d992-4173-a5e4-6962c10086c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4182cb18-0ff3-41c8-b087-6c844a299cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a24d5407-2a26-48be-9424-7e94297eeace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0835e26f-fb22-40a4-9aa6-0cfc9ec5b304",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea0782b-23b4-4212-a6da-2ac8a7741f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1be827-bcaa-4b79-a5d0-646e566283c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded1afff-4394-4cf6-b815-7c5b26c48885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d90f4a-3914-4da5-9e24-9230d09d45ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1ce835-bebb-45bf-9a88-a4d856a68246",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231eddd8-1592-481f-a584-9127f56dcc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15f0a37-b161-4aa5-be80-21c352b3f7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325675bd-503e-4c15-8562-456e31108f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93cb542-9a14-473f-b28f-ea50a9ff7e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b629853a-423f-448c-92c6-b2de8f5f2ac7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bb01ff-8dd5-435c-aa2f-2ba06b7818a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08bedb3-2e23-4d81-a2d2-2aafc9501a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bda55b5-ae37-4d02-ad60-e2e5b5834c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71349b88-35bf-4299-8c91-e950d15deab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d0f49e-7432-4c6b-97d2-6f94ada03118",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b04be-530f-4b93-9e63-6b050a9f84f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765ea772-7049-45fe-9952-a518dd42204c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b431655-1ae8-476c-8197-40e361570b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3dd36-6f2a-4ce1-91fd-ef4ecc1b776f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7cc98-746e-4961-a80a-9e53c66707f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66997ef5-bba7-4368-9fb9-6fee83cdc5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666b9307-8f09-4150-9e16-824dd78268c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c3094d-d61d-4fd1-90c2-1a5b3c82e120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9796358-4ab8-4f87-a664-a05a43330545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f73e077-9265-420a-9507-fbec7f224832",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd311b0-e065-4610-8803-f1cd9fa455d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577ef7b4-6f66-42d0-ad63-1ccfaf409bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f54d9-cca6-4851-ae8a-3393b8424d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e17a745-3ed7-49c5-9ff0-cbeafea9e7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f305056f-d439-47e8-bd88-909ba2a5b316",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47ef94-9ada-4e7a-b709-5f0eb3d25bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e536f791-a9f0-467e-b55d-b149533336fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81070bb-9fcb-4a23-9f90-f683077c930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83428119-9a72-47a1-b79a-c2d9d3e917aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491db066-efcc-4910-9cad-2055db4b08fd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e303cab5-2f24-4718-8bc4-8ce458fbf23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c276c66a-64ad-471c-a839-ac171c0223d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d501743-d99e-4b0e-903f-141d83a572a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f343ab6-9849-4010-85ba-a5782a4e7a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b4924f-9435-4efe-be58-af48994f77c2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d04346c-b53e-42fe-9552-8ac5869b7b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c5f9be-54ab-4ec1-922f-e53f185f69fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b35e25-5826-4010-b330-89b506716962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70208e85-2816-44c7-b33a-9000620320b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74af7b9-ded0-4bf9-a5b8-9d0591aa398e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16c55d0-ad20-4048-b055-4760aacc86cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31ce50c-22dd-44b2-9438-ed7e17c10e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e59395-e3bc-492e-a8b0-fb88382258be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "334f10fb-5a29-41f8-93e6-b21b010fdc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1798ab-a517-4918-98c8-017bf7e22714",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3e7eac-9b8c-4bba-b5f8-3a410f2eb61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee9efe6-8743-45f7-b0cf-488ecb861455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1da292-84c9-466c-845f-e5be36fcd5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44f57307-89f0-4a68-ac6c-79cdae410bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2e95ee-4d3c-44e9-8b91-9172ab55a72e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aedd54-265e-40b0-8ca0-a0977353f8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34a249eb-ee65-4afa-9d0c-b61e54303870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14493e4-ad39-4c59-a923-8223ab210ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2229ee6d-7b8c-4b10-9f1d-7a1013c836c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e72f2135-e201-47e5-adf0-ae120636ca64",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be51e714-a7f2-4c78-ab8f-af82373f80eb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e500b1-57be-40c7-8d23-fc394a14e8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b845e15-883d-4fef-b152-97e301b542c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffc278e-e974-4323-90f4-6afa05b5e47c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ffb4d51-a151-49f5-ac0f-51d95c18e7f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1252180b-717e-4202-8d28-a7d31df74fd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb25f80f-545b-44e6-be49-7bdbbf1a42cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "103cb7cb-3a71-4c55-8fc7-c513575531a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee9b4c5e-1609-49e1-ac9b-7f1675bde01a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "319eef8a-2db2-4182-8645-c3d7025a97ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9144151d-eaf1-4478-87ba-be7a17b6199c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c255c47e-27f5-44ea-806e-2729595b399f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ba2635c-f93e-4ad6-810b-5e64dfbc8ba4"
                }
              }
            ]
          },
          {
            "id": "44f75cf5-9909-4817-9f54-9076d7c570bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58d0a4f0-ed47-4e0d-b9c6-72dc40fa968b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f430e14-cb35-46a7-ad92-3afc676ab239",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0316d517-391a-4daa-b370-5c5d200c9a2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42e0b96e-d847-426f-a399-2ade5164f01c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0740a27-e1b1-4a45-9d59-de9e6d6e098c"
                    }
                  }
                ]
              },
              {
                "id": "a6a8cd7b-76f7-4cf0-9e31-110a9001e02e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f377d87-9501-48fc-b7cc-059ebb77d70e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50971fe9-3592-4108-afa5-1066c805f69f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e02c33c-e3c3-4f58-a625-be22de50fb8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d62717a-d693-4609-8bca-7a3cc987740b"
                    }
                  }
                ]
              },
              {
                "id": "7592b693-96e8-4c9b-9af0-82d5f6890b52",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "278f9cc3-8f27-40bc-94ea-e8fdbbda2654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c6cdc6-d80b-48ca-a16c-40d00f3d7051"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "312d9e1c-ea9d-40b1-9db0-c581481c5c41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cbb4757-6f0d-4dad-a21d-178a7e32aef3"
                    }
                  }
                ]
              },
              {
                "id": "54974b94-a738-46d7-bfb2-845d5025d2c6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1113f11d-5760-42bf-946e-ba90c70dbaaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e812bdb7-96a7-4470-a0c8-7a5a488ff4a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2103a8d-2cd2-4a2b-8684-1c0430cb44ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f39b3be6-ec4f-4a17-8c40-7aa51b3aa150"
                    }
                  }
                ]
              },
              {
                "id": "c349d7d7-aeca-4623-9450-388083c810a0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71221c95-897f-4904-a159-095f275d514c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df151676-5468-46e9-a41d-84384f0b35da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9274d41a-1167-4c85-8b82-a3692cdc1b8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "96a83949-67d9-4155-a75b-20ec1143beea"
                    }
                  }
                ]
              },
              {
                "id": "a751c89c-b63f-4230-b522-eed5403ef025",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c291db56-5684-44e7-9e77-9844e9641cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b158afff-2f31-47e4-a205-a8bf6166b10a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c2bd45d-9b69-471e-a594-0eb2e6d6b6a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b902b1d-3251-4d62-a696-a035171a2bca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "418f6cfc-d8e6-4c73-9b60-d76aaa37fd5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "115db23b-53ed-4631-94d8-b5551c8d4e4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d722df5-84dc-4b26-9465-1516c12f50b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87cd8129-2da5-4933-8837-91e51cfeac7a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27641d7e-9307-4611-acca-8ed956687b6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "91d539e9-3dfc-4647-90d0-65c98a75218a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc5231a8-fdf3-49d1-9bf2-8bf04ec0e68a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e48ae795-6a7c-4f3f-ad30-8a9f61816a3c"
            }
          }
        ]
      },
      {
        "id": "e3c26e08-9a00-4abb-b47c-16c6d6731161",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "706ebdc9-69c2-4d5a-acc1-cd6520a33f2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3191b909-134a-41f2-8b92-473c487e67af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3f7abc2-184c-445d-8470-20632c46de76",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fede49-b6bb-4f7f-8cbe-39bfdb8f0607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e0de71-8f3a-47bd-bc9c-b4eafeec02fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e9d480-6513-4b06-a95b-8ca5fb5813e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27b8c84-56de-4880-b84f-3b6849104f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0bcb67-28cc-470e-b449-0ae8a1b6b4e8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967acfaa-85ee-4bc6-b6e5-11b4142cf952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132a06cf-24f0-4b08-8167-54c39f8fceba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f887f9-489b-4441-8bb9-5fea3d67115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fc20c2-d25a-48ec-9a15-50238d8aced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90298c3c-4c81-4b4b-b0bf-7589a3e57b55",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1fc530-1b9f-49d7-a414-ca8d12344d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc7e111-5abb-462c-8249-07b2631b7837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb4fd6b-66eb-4516-94ad-9c78dd5dbf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5294ccae-f457-4ff3-876d-f9b894add0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e245ec8c-a02c-4f6d-bd5d-291e4c4b090b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7346fb-b06a-4cc9-81f6-4bd66e768653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f20a45-e99f-4789-a812-d7b3a20b1122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e30ffa-a0a6-4eb4-b16b-a795d08be9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e2f449-8f03-4e22-99e8-c7a74d800bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a57e8b3-afbd-41be-8aeb-f667fb67fe4a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35405865-b9e9-44e4-9e5a-9f032d74755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55df0b90-aa12-488a-aa59-e1f2c8303481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025adf07-3b4e-45aa-81df-60a72b6c06e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18cded28-fa9b-423a-82ec-1e71ab407d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e3873c-041f-4a6f-819a-f8e6082ff2ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c79e45-93ce-4090-a36b-adb5b4b17ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be64412-4624-4f43-8ce5-f6c5c15c7580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2949a84-fbb8-4198-aea3-7fc0d90046f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c1d2db-ba4a-466f-b46e-0db49f564f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3522ffa3-3d1d-4714-98e7-f54e2d171f03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cd961f-992f-4143-b6f6-84d985cbde0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778db2cd-c054-425d-9ee7-5b7c175569da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce87f69-47f5-42f4-8ec6-f688442ed741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dba6077-7939-4e70-b913-18b8efe425da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d369043-3d24-4dca-84a8-b0aebef23ee6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdffa41a-e9c4-4a61-b4cc-0b117b36e19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a06847-3dd7-4094-b025-6b10fb522368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ba67c7-2d51-43da-9e96-f656eacbf285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3628b9ec-24bf-4e3f-9133-bb41146737de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106f367e-282e-407f-aee5-52cb72b83c12",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6882fe9-54af-4f10-a25f-3e9d43453011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e4cc84-c973-4ab7-b2b6-cb3c2c102384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c72ca-7f02-4fcb-b382-a9ee96520a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60969b36-227f-4ce0-861c-02454049b7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee89968-f453-4b9d-b950-44717871f373",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc78de2-e80c-487f-9591-9af70425fc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2d26ba-5320-4b71-bd13-acca149a638d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242ca747-51ca-4edd-ab00-3892cf054f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66673dc2-547b-408d-b785-dc9be53064d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085d182a-3e8c-4190-bc3b-4aa02264d5cf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3a9a4d-c956-4dcd-a813-7ee1ec539594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7832692-c6f6-4920-88b5-dab8ac0dd468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d105731-34e4-4374-8a0d-631f8b8ce642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07e6f710-c86b-4bb9-92df-a024d9c1dcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a8128e-f353-49eb-aea7-064f3d6d7d3c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d614e4-9032-4cdd-a27e-548e3f5ad269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f911f6-42b2-425e-80d2-97c3cd475579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a626d741-70c0-4b00-8572-e9522b53d430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54e50a31-2619-49d7-becd-83d4d3193e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cec4011-6a43-49ba-811d-713cfcd7be09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6c824f-73d5-4ca5-9bca-d38d6da6fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c508a18-3485-44b6-a90a-2461419cfcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f967ff22-1f8d-426a-8fa9-6e204da49c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e30b309-80bb-49af-b340-0a8b46a52791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd09e68-e348-4a80-9a02-5491543a52d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c090c8d-0830-4456-989d-b46a200517bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83206c8-3ce2-4605-b22f-afac0cfb5de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88864921-60f7-44fc-9d3e-79989c9d64a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bce0286-559e-4b35-a491-e4638a8ed4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b08cb0-1eab-4de7-b96d-a0ef85556d4b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d620e8-79b2-4a14-ae9c-a2762218c765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f77bb3-ea1b-4511-9f8e-7bb549828eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3991bb30-5463-4a01-b167-97c94f785c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5458ece4-32ed-4f8a-afb3-8a4b46ef5763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b04859a-77b5-47ff-ac2a-d09ee787720a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5589090-80e9-413e-b684-57ac69b75428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46486c6-aee5-42c8-baeb-a3aa5aad662a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cb054a-7b44-46b0-b3f0-5117b68960ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3c1445-c015-4df4-b157-028791866d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af3ef1d-c3ea-4421-b365-0afc2d34d0a0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc6b93-5e3f-453f-8d9b-115a92ce0302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c68db6a-a0e3-4b1c-b690-51481089c181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21c2256-63bc-4be5-9036-9ca5bec439e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4971a0f9-2523-4f29-8b8d-f348c0aad137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8901e95f-bbbf-4d2b-933a-727a6816692d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422b6547-479d-44ac-9be2-7dfc1caa3638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b40f91-3460-4519-bbb9-bc21c38b7331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bd5fdc-321c-42b9-bdc5-c831d8fb040d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "102e6e3d-19cd-4d1d-968f-51a1035842c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfc897a-7d3e-42cc-8b58-4669cc0ebe97",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d5aa30-b089-485b-9cd0-53310f59435b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ace222b-6e74-4acc-8729-153efa970883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c39472-aa3d-4044-a294-e5675d89e478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10b5e51-8e7f-46e1-b1c8-839b03fadf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9939bb1-e8a5-4d47-97e4-defbf2ea9484",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210fb70e-6dae-4193-b5c3-4b2f589419d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c173c4a1-c7d7-49cd-8353-6ee99709943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faa6e54-652d-408a-8a0e-b134567ac7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b7d3be-a3c2-499d-a74b-660ab86d9592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6891b2d0-fe16-47d4-a65e-5be62e30ca96",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4382f8bc-3985-4871-907c-8d85be62cab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe9795a-6097-4123-b7ce-4674931d9878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250f2b6d-1ba1-4825-a466-23615b0eb7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e415bd-ccb6-49e4-a08d-cad1d345becb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3374a20-c82a-4a7e-9069-150c7a1e675b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f995f483-ce81-40b8-a7c4-791548887ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ecb7be-bf02-4ce6-884e-0bd746005406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1993747-ea63-4846-bb62-d21a274ad14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db57f40-0467-4d60-b2f8-dc7303ebf58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84d46ce-5aae-4c13-8f78-498cc202a4aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23b5327-bb50-4e65-b7ef-ccfd0defd0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd38621-a7cb-4f8c-bd0d-d7c916d5cb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577a56ba-5347-442f-885a-df2adebc8771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00fbdef-0966-44b3-84ca-8a62ded01416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b57463-a565-486d-8f55-c8b2118c9f81",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aeb4c65-23e3-4b27-a19e-8b2e35b217b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5deb4b-ce23-4093-be1f-1d37698fe72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0247cc7e-f4e3-40c0-9535-1a6ba88bf9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b925fd-0ca1-49ae-96d6-98d49aefc777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831a8d1f-d490-4b95-8ff5-267e72aa139e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa177f04-adc3-49c3-bd33-6ac87c5ce3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a992e9-7424-4dc0-87a3-7bf592ecb750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5caa14-7975-4d2a-93e8-387cc318fe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03511b70-610f-41d9-bc9b-d4df400942b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abea5bb-5e2c-42e0-846a-22cd605760e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640309f7-b3ec-493d-ba3f-7b4b7b0758cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea535dc3-408a-459b-8b44-512aa77be97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1b7c06-6e41-45f3-bd26-843a5754e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0228291e-c600-4262-97f5-14cfffb476b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09429ee-7916-463b-944d-340b9df9701c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378af27a-8bfd-4f33-bf58-85e535a45b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ae0747-fc03-43eb-a640-6ac038aef6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49a8c5a-3c22-4844-b8dc-d07296334f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41451d5-1775-4365-b313-9a252819228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fb1e7d-a3ef-4ed2-9593-d793e1442ec0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9975cad3-6a3b-4ad8-a88d-7f30954dac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafd1d96-392d-4094-93a2-a2c7c69da972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0211e403-a605-421c-9221-9659263f3161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b73249-7da1-4669-bbab-c535362160fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4987a6-3a48-433a-8898-e99ac63d2a8d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce541d8-efce-4cce-b8d4-5d0a90f0466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1c78d7-3d92-4d8d-9ae0-c4827fe5c43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ff9d9e-4f84-4d91-ae33-67c0b6205bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b790d10-b52c-4b43-addb-11b79187ad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61fac4a-f0e9-445e-beaa-34a3080d0675",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a636504c-bf33-477c-8233-f1d8f13b0bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b07d52-9e92-4433-8b01-49e33e8ac99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dd2df9-31ae-40da-9af3-41a2b943ad09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fb0122-8c4f-4a01-87e6-b5607f361e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0d4a6d-08db-4f34-8830-1f93b11555c3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070e4148-7f4c-4627-ba38-b963aa6bc019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cb4277-0549-4684-9d48-1f19fbb2bd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e01f8-2b9c-4eee-a739-c20f60a4e97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db263bc5-4231-4483-839b-ad483a69b285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780652cf-0b07-434f-83b8-6fd2b55b5945",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ab0432-60fb-467e-8916-88ceb1e13418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba68aaf-432a-4e45-8d5e-5e0de5b37eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03628097-5150-449c-97b4-d34f2fb4bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2549fbc2-eb5e-4ef1-9d72-555f39630ea5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "082e88af-0cc5-463a-91f1-06ddb83be28a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6922c59c-cf1b-4eac-9eff-2ba78882b59f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dff099-0c0b-40e9-8b12-9e74478bcc97",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a87a7ac-bb54-4d28-b36f-7b712cac3569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd17a962-775c-47a2-9482-679425856528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcef2df0-8206-4ad5-a7e9-b67aa859899f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6659eee-7e35-4790-917f-40eb84a24913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12795650-a390-4fe6-b51d-c656e014878e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e88916-1ec9-4f95-b941-363a2ed611bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05d9df93-4bed-4218-9574-945a88e16141"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12a9d4ae-81ec-499e-921d-6b960d6967b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bc7780c-facc-4de7-862b-c1239d9eb62e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "230cd401-6189-4a17-945b-039b7776d40a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec627135-8e3b-48d0-b4c4-bbd0af5ad0e4"
            }
          }
        ]
      },
      {
        "id": "14e6f525-97ec-43fb-9d9f-52f8d621e4a6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "38a11706-feb3-4ba8-bb03-dc91b8585957",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec4f513b-7dc7-47b7-b5cb-a48d1e7c8d7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dbe6552a-27b5-4620-98a7-db995944712c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d5baf0-c7b5-44be-baf0-68bfcec20b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c0767a-0bac-435c-b942-d83f056ef083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163ce31e-df3a-4a1f-bfd3-447f9bd4b788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "224ca286-5517-4ed5-bdc9-93a079558e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e9052b-4f29-47cd-b89b-84383befd699",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ed62ef-9e06-4c15-9432-053869deb868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a357088-cea5-4291-a4b7-d92ecad3caf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62508a5f-a0fd-4838-b281-0ec9d8300430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff95e38-0f7a-4f31-af56-6fc7e0a4bde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0c050a-d566-42a6-90c7-5d1f70ccb3e7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc73d5d-9039-450d-88ff-46b49f1f8a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c933edee-6896-48cf-841f-f6d45a258315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132432e0-e8f6-4008-84d1-9661ab8aea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "094181b2-e993-4902-8e44-5be0fa5dae9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5388a8cc-a024-48a7-aceb-3298c3165c7b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497a95df-e223-48cd-b162-28b324cab57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc866c3-9b74-4760-81a9-74b669a9ed72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b478f71-e667-4561-bd49-0eaaa9ba202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "939371eb-a1c4-4b5c-affa-c9b753d56b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a0111d-9399-4573-89be-9d2dc2fd7943",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09976377-098b-42f0-986a-83ebac5a130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c41e34-c90e-44cb-8d2f-6cb270b19f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25f94d5-5635-49e6-913f-b6cb63bc3478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "047869df-9cd3-4794-9a21-246e760ed3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e20cf4-62db-458a-a90e-214323ee6aab",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8882ee-d512-4f4c-9f53-7c2aa87b86b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009f2683-2cf4-40ae-9662-aedb19d85c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349ac270-422c-4918-8878-50abb06bbbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a30283b9-fb5c-41a5-b6b6-1bcee668ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70299c90-b0ab-48b8-82aa-e89c9ba8da80",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d515e5-7a72-4047-9e81-8e31d2ac2e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c43bd4-ae9d-4315-acff-7bc245095eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94bd0e3-5eba-4d6d-ae10-d6355095a644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eafb579d-7172-4193-83d5-933e279dac71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a374e0-4589-4d0c-bcb4-0866f85b95be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f0c2a0-2b91-4094-b4a6-7c893bd0a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f2a1db-c95e-4a2f-be38-1cfbdd2c6690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7e8139-19ac-49c1-96aa-daf78f672d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9246266f-c16d-456a-8dd7-21e6e15e41b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a09a9c-f633-4ee2-b112-3b9075ebfc6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f498604d-1efd-41eb-9c9b-da8c098a44f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e1f154-55af-45e7-a95c-77c196c08ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461f348b-8155-4a24-9c71-d6ac82346e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da93c68-67b6-44ce-aab4-b66e6fa951bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66819b38-6b5d-4e04-a969-c8feac8e6a00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577fdc4e-c7a1-4fe4-8ee8-95c99808d9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b040aad2-a0db-4cf2-98e9-e0ab0ac51a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1b311b-7599-4943-9de8-08c84744a080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc4f228-2068-4359-83d7-3a56d9347d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d38358-82db-4e04-a506-1e6e5f13ecc0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac6239c-1bbc-47a0-b063-e01721d63f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847dd90b-8858-411e-9a88-dcfb67a84b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050e746d-8693-468a-a573-87b417551be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3b6fe6-9d85-4747-bb43-0a09d2caaa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3403e9-a3f5-4e47-9e64-aa897f38bec4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fbf6a4-15d4-48b7-8261-9765ef5d7ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312251a2-dc7a-42b7-9596-fdfd139aa69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221a2fc-dc2d-492c-b484-6fc159e28fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1dab9c-cd1f-4a86-af9e-3b7331e8e552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ecd6eb-9c60-48ed-babf-0f9fc42936a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e01f637-6a3d-4daa-88b3-16a077c67425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cca7002-1bc3-4583-b14f-c085349f1272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebcf2fa-94fb-4a71-aa39-fa8c9e8cbc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f19102-b5d7-40df-b9b7-e3a0243142e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50460d4-0962-439e-8d2c-849255458192",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cac7cb-0ab7-4552-8a18-679d68286ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b66a62-97b6-464e-a913-e68f5e4a4dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcce5af-e6de-4968-a77e-1210960f4b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "358c1a0c-8195-4a87-9e3e-43c68abb552f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c3f939-1a8b-4bcf-a39c-a04c0d3d506a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6864ec-e590-4366-8ddf-fa75dea2b26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4122f18-724a-42bf-a61f-183952d2b423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8d50ef-da2f-4ba1-8334-49230e316e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e553f701-54d7-4480-a3bf-e40fd3029bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82842d1a-366f-418f-9afe-90f582d783b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f82a6a3-62ac-4053-8c64-4ccf3da31d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e499affb-dcd0-4ab6-bf55-895b00f67556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfdfb83-fbc2-48a4-af23-1fc96a666eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a81102-8570-4674-a0e3-6e4237f41a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3bc2d6-a87c-4803-ade1-ef3c10457b53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee17ccc-e3fd-4a97-8b5a-96777eabb45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb821cc-c886-42f6-9412-aa4922124779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503d456f-fb87-4633-9449-afaa4e6dabc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b991f499-7a4a-453c-9b83-885249e15d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83505c67-812c-4cf4-998e-3e44482cd676",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3767c143-be8c-4f98-826c-29a52a7930b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ab6dd6-773d-48cf-8e5a-9563e06d173f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18af736-c789-43df-8881-b63615481708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fb822d-c591-4188-b5f1-337545616644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee90647-1300-42b5-b00b-8ea3815b62aa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ede8927-ea7c-472b-b8dd-8b73d31d6149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27bcc49-3659-4139-b615-58e2699a0e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd93f5-b127-4f8d-bedb-120f0184dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f970c4-1163-481e-a3f9-841fffcda7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b054a-f928-4868-aad9-dbfe41c1c439",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09eb46a-75d0-47be-a39e-12cc8ca79e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f33e4c2-456d-4d4b-8f45-870e0ed2a6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac067cb0-67be-4a11-a58c-6ebf67e5221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5ef522-3f12-41e4-b69d-d575fced9eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f1d01e-41e9-4739-80ab-4b07c25809ac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89cdf1e-3931-451a-9bbc-3a0d85aff2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221368e4-0334-406a-b71e-d5e2aa6ef19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cf337e-b45b-4018-beca-28e5e15b6864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12344c05-22ee-4525-afcc-01a29bf3d314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a83bfc4-e4a4-479e-90ab-c4eceeb98c51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca94441-f00d-43ed-a24f-834f8461710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f9c97d-d06a-4dff-8fa0-c740353f4b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a8fdf-d11f-4354-bbd8-2b1e02cc10ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e3040b-7b7a-4090-be75-af787a8d3c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3a2d26-6ff5-42c7-8078-0154879762e3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b2baf9-8464-4591-a5cd-ab95fb83f274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4bed62-3b87-45ee-a761-849ba72cd607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89238828-6aeb-40bb-bb2a-27e6c7f679b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af4483c7-3a47-4e4a-b866-5f9a4ab0b678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187a5e07-117a-41ba-b5ba-8d12673699e4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a188c5-44ea-4cab-ab58-4a877cbf0825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384ab63c-a467-4044-a803-0c2ed55f5a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6520b0b5-42d9-403a-82b1-2a9d3bbd5fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99833eae-665d-4d89-9f5a-f450c76b3f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b7557d-e06a-48d6-a645-3b91c8b30fec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e911f46b-05dc-40ea-b3bb-b0dd174a20bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d07071b-721d-47a9-9e95-28a1bcbb054b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f818726e-7724-4dfc-9dc2-c6585218fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "411f853d-ec13-40fa-b9af-8e27d6e18e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f20b48-779e-429b-a981-561a8f671a4c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f596f4d-93ed-419b-99ff-58e3fe022f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748fb477-ff3d-47fb-86a6-b7b640f309e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae03fa2-c1cc-42fb-835c-e7b3afec4329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a6a76f-af8d-4d0a-bc55-dfff942e373c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f5a53e-0668-400c-a859-7656a5542ec4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d25c1-6193-4f89-95fc-42729647a14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556eef82-0646-4d9a-856a-bd55fa2f6c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb7005f-314d-4cb9-8466-e4eb23122e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9adeb85-ea3b-4caa-8cd4-1d9ab03d7c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ee9502-9225-4d86-a8b0-0e1f4822eb47",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294cca47-f3da-4e10-941e-e46bf12c954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377822dc-9cee-4164-ad5b-b3d9bc7abc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ddad73-be26-4faa-9843-2f8bb7d6cb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f13d8fe-98ea-43b8-944e-9480bca77a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ef0236-4746-4ba0-b724-00b8494f15eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc2377c-c41d-426c-9dc9-433c835c70e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cca26b-c947-44da-9935-6d3bed7b2894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da55121-0309-4d03-802c-3405e608a6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57057a03-6076-47b8-989d-3a7a10ce9a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cda6c9-a0af-447b-aa2b-d88bbcd5a57b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f61178d-847d-4839-8b11-d5bd99f68857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd946cf2-4585-49a4-afdf-9e4e9ddb1afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996c9fde-7f2a-4d7c-b89e-596c51d322df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc652e1-a2ee-47de-9001-f8c1fc81342e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27751103-270f-4f35-9cee-fb12f38b91f6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9148fea0-82d6-41ab-9cff-ab952053feb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a921f4f-f4d4-46e2-8805-4cee42854782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006a9e97-bc30-4b84-94de-515ca058d832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ca9d59-d6ac-4e30-8e54-3c92b4b664e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317a1389-f507-4609-83fa-5753392dd920",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad966bf-398f-4964-a3d5-1b07f62b3e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b17d91-b78c-4392-8d0d-ca11333ecd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae52637a-fbad-46b7-b238-8926e490499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03866e9-ddab-4912-b4da-5a7701f2c5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d54aebf-cf25-4e0d-b760-36ad4546b8b7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ec2e16-ddeb-44b5-baaa-9bdb7572e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8783bd4-38c1-4684-9e35-1faad11a3182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e211f14-f10d-4457-9e5d-2b4ae93786d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4291b978-43e2-4974-ad3c-b340e35105eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc8aac2-7010-454b-bc25-cfb093157117",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f24916d-0307-496a-a77e-cf5cbe0eda08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02854e0f-08e3-4166-9108-621224b30a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f51d0c-1fd6-4f58-84fb-471366d7cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9f80fe-17ac-4f3a-b97d-eca0ebc90734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17c2083-9703-4930-941a-cda69c55738f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d1ffa8-9b1b-4036-94a1-f3a8fcb33d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0084438d-5a43-4ce9-bf21-37b6b6b3fe74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e203bb22-a57e-4347-86df-9c7e2a814d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5439de98-90c3-4023-9cd2-f861cfc9b0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c87097-928b-401f-841c-18083386b51e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8fe2cb-e043-46e8-8e9a-92b59988ff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36272ab8-234c-40ed-82f9-0eaf00e0db99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5b50b7-7b2b-4bcc-8da6-18308ce6bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96137d0b-7eb6-422f-ae7f-fcfa75cef54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6741c13-ac12-4e37-8f2b-3ea1e2df0b01",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f25d7b3-7ea1-46b4-b442-e15abf40bb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694c580a-eb6a-48bc-84e4-2af6318352be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05e6db5-3948-42e8-8323-9c4ab2001306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b60201-1513-43c0-8b54-457cc69a774a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43650706-372c-4ac2-9c62-bf45441009a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4086a29f-9a8b-4fbe-b895-aa5e02a28b13",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02117c28-a0c1-4730-84f9-86275ccc90fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76f9f91f-e040-4fed-99c4-7a82ab66c341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f455abf-da01-4ca1-a8f3-0ffff10d30dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66250555-26c9-478e-bc4d-16364014ad69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015cbc40-ae47-42b5-bac1-0de2aa5b17e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52a97c83-ed57-43d8-9ac0-6f0a14e1a319"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0494f786-4d0f-4493-94ab-cf651f1c297f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e0103d0-540f-4265-86ea-b063a226fba0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb875216-4368-406f-ac30-79c0506dc016",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "098b94be-5752-4cc3-8299-040033ab15f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "726f43a6-83f5-4aea-bac8-3a26b53b6368",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0844e2a-4c14-4f5f-9705-356500d75ada"
            }
          }
        ]
      },
      {
        "id": "d7879814-c858-4734-ac2b-ec7c8e37e6e7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ace8aa0b-117e-426e-9865-05fb2563329b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5242f9e-d315-4943-b209-d4c487abcd2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bdb7259-3343-4f91-b3b0-52d8cda87aea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eaa239-1864-4511-8450-a8954d97e455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a572fd5a-b121-4c80-9457-c93130773de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7fb00c-a902-42b6-a409-4bd09f04844f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e37e5f-38a7-47f1-8459-9241ad5978db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de76b659-85af-43dd-af69-49de8b6e7d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94612d84-432d-4149-bcbf-cbab52c901f4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474ee774-ca86-4111-8402-f2f31c0eaa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865efa09-b642-4877-90d9-e941a6549462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856b3de6-8dff-4b83-83ea-b4b019cd4fc9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7554316b-9979-48bc-aa4c-90cc4673dd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cd832c-dabe-4abf-b478-37b59680da4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ae4a72-e3cd-40b7-9daf-2ad447b5841b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad922953-6fd9-4789-8750-2d3461482788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63628b69-3904-435d-bee7-984163fa4d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07049439-f12c-4154-9292-30757e1f2d0f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2224125-1265-4ac4-89db-3c0363a379f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a6239-206d-494f-9837-424fc54d11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85956b4f-0591-4e8b-9d34-837196b0ab75",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ed9f36-783d-4b91-81d3-b33d71643c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6a560b-1840-45f2-8b2b-ebc9f1d5f361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43878d8-2936-49d6-ba2a-c9ff85f2ed7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2be522-1808-4b72-bc2e-8eb46629d003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082123b7-d6f6-4f5e-991c-6b163e30e2e5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e64b3ac-4aab-4ca8-80ee-6dc7dcf603dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52a65f5-7626-4413-ac72-e01aa1419a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c6ea86-c647-45b3-b882-1e8d0abf42d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e139ab3-30ba-46fb-9eb3-851657bceff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98880dd7-7416-4754-8859-db2a514916b2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393a111d-02dc-4c81-a1da-3bd8f77d5580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6fa62b-e287-495f-bde7-ea4f09db1021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b9dbab-b844-46bc-a1ec-3b0891b2c976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ac9ce5-d55f-4f93-a9e4-8bd1c73a3e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf86791c-4eb8-4635-a8a6-e3b067cd8c6c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e635a19-ce9b-47b6-b89f-0131aa18e3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54145a1-46cf-4325-abec-0f094e5e591b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f656b679-e211-4354-ab04-8c4f748034ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b31aa2-cb8e-436d-b217-2f63077abbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5210da-e20a-4bc2-a4b2-16e4d1ba2593",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff57cf5-3485-4c16-a9b1-d98d26b69eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41b3071-8bfe-43bb-82d4-878d004bd886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc7781b-dd24-4f47-b6a5-f00db590ab4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c213db0d-602f-42e5-af30-d1a25dd89cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7edbc2-2f5d-4c7b-b47e-b60f952f09a1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a7923c-709d-4b2d-bcea-4847c6859f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4493f1f3-6fdc-442d-bdf3-5796eee770d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de25d80-325d-4d07-befe-c7d2710b939b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bf23a9-71ae-444b-90f4-14e5ca6ab05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a947d8c-97c9-45b8-a259-596dc12eda8f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec10def9-c9b4-4b18-aca2-ee5adac50357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7ecb27-d364-475d-bfc5-608f3395b76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772b5186-1e16-493a-b132-0e7427a8c0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0e5d9c-43cb-40db-917e-776a94c1d53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7e301a-9c12-4cc6-848c-491b6db3dfa0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5383666-86c4-40cc-87f2-22e1a059c025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae25e0b-4a00-4e5f-8f72-b36646b737bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262442da-54e1-4ceb-9bbd-14d8f30bb18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c4100e-4f4c-4d11-96fd-d7d8cd9b443b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806e3dc5-441b-46e8-9376-ed26b4bd05a5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892544b5-9b40-4bb1-a1cd-bde70848840a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2eae28-73fa-4c02-b761-623af27a87a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fe4934-54f9-478c-904f-5e8f46e07b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e7149f-d725-493a-b2ac-d0d1cd791ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76bdd45-fd1e-4f81-846b-c6da146bbc74",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996a2c6a-bfcf-47a8-9037-d4c2fe4b66c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31932ab6-a4c7-4a46-96d5-5d73928a90ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f892671-3818-4b3f-aa0b-565a828b4a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8878ec-9fdc-4d46-aba5-1b85fed89117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef573a9a-af76-43f0-a0e1-1e6f1d1dd5e3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc9564-b1d7-460e-9407-318019c7e2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7b51d7-cdb3-4cd2-a384-9e1e9d82e3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379826cb-330f-44ed-9b0d-a2be9307cb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5343768-68d6-4cc7-880d-49b7b2c26251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46546216-7a8e-4afe-8ee1-af32061fb75f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29401a93-dc49-4bdb-821c-add281253aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a46577-8ad4-400b-8927-d209840723fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c07777-9b85-454a-82f5-5a5a014bd6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadb4941-d68d-4de6-80bd-664aab848f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e0f8b7-30ba-4e70-83f9-fec3a5728db8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcf3c8a-9f6c-4ebc-b12f-16f4d72272c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5586fcb1-56f8-40ff-b26b-9e5a79076b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b449af-afa6-4a9a-81a6-6427d1e074db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f20b31a-a7c3-4064-83b1-f43f3838e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7627d07d-a538-48dc-916e-af0bcf64bc20",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e50fce-bec9-45c1-bf67-6ffaa2d761fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4385b24c-f9dc-4633-8389-761673eef57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25001d8d-b93e-4a33-9cf5-f3f0e398e9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca17f347-242b-486a-9f9b-e06d74e5108d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05da4ba6-c6ac-4e9d-a427-b26e2473bd2c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7099e80e-15f8-417f-9e6c-887c890d9e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8531be49-c57d-44df-8e8f-dea05504decc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85f8496-c257-49f0-a2a8-1e4c26a5fe80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957e9a03-6064-4047-be4a-1f543a9add58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c49cf1e-dab5-431d-815a-813ba7711465",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e9b185-2d78-4234-aee0-77dceccb95f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd5c099-0a26-4309-a0f4-ce7ecef41c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fd7f93-8787-4cde-8973-3e4dce7310df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3618463e-099a-4ac1-8943-9c50af110d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f8067a-a2e8-47c6-8e1b-47d9bbed4958",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32060ac-c03b-4216-88de-bffac6471956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fc2055-ef51-4379-8c82-7cec7ec3f5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6580c8-2430-491a-8e7c-34efd4d655e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c86218e-d009-4676-978e-ab330386b151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da28dbfa-3145-474b-a1c0-3bfd67e54920",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3582a83d-cc5a-4d7b-8900-b9c44f2f6bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c221fe-a1f7-41e8-8c21-f71a2ee6c6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299770e3-2c48-419e-a72b-a2675b6c7113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3c5847-9633-4bf7-a16c-369ec292693a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e970126c-8338-4604-ae76-c41019645f15",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61e1815-a127-46d7-b5db-a6ef3678d51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd684b5-f096-4735-a973-ab45b7a83113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900b5d74-ef5a-4d91-a1ca-f5acc9896ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc8c617-09a9-4595-b886-ab964dd38bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c56283b-b601-4a4d-8056-c1fce8031d0c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dd450f-b393-472b-b8e1-856fcc5b2c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef7e169-24c3-4075-9a6f-0f4ca369c228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa50d90f-24ac-4e22-aaff-dcd52ad80e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af1005e-9624-44ff-bce4-33e4a2cc0670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1dcc2e-6965-4e90-9af0-7b3ed2272886",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae899e61-a91d-4980-b638-54787c9594c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69267cb-d08e-4603-a244-be2ee23951fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f79a8a-b01f-4c8c-84b3-565852bafb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685291f1-8286-4bcf-aae9-ecafca4a364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23db76e6-54ca-42ae-9326-ae17ec1d97c6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f49ef6-5321-4a84-9b48-10bbc43d63d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31829578-eec0-49aa-8dbd-85b4fcb07189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7cf4ab-01ce-4bfb-9e72-98c8e3036a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7164940a-af84-4d95-b5b1-5cae9ad775af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fa16db-fbb5-4a89-b729-df21c560976c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf4c900-3d07-4548-8bce-70c73f728c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a3cf1d-1880-4e92-9c12-e4117b824b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767bd8f-3cd4-45fb-b800-a943f8656c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aa3425-83e5-4a14-8561-cb537958d741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2387fb-be24-4ffb-831e-8974466d3f75",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f039e8b-ba01-40e9-8325-64edf6154ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9183139-ed93-4e30-a28c-5379f9baae40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b484de5c-c724-4ff0-ab97-65ee8abaac67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c12a631-fd26-4a63-981d-4faf1ceaced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b6238c-04c7-4b61-b6a8-86f1bb8447c2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862df219-3022-45ab-9e04-a6aebd516a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a99fb5-0f8a-46c1-8b63-f9076b80c517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a4412e-c4ea-4ecf-830c-dadb7ca01f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dbea5b-7b94-48be-b8c2-1529ef2357cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e467788-e28a-4569-8dd6-646c3b02dbc5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3133a83e-d440-4640-a7bb-42dac8f8d5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e44171-d4ec-432f-b64b-bd7c809256af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ded0ea8-d138-4868-b48a-612896a03aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cc4872-6bc4-414b-b687-53ad6f972dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481e3802-e2cd-4cb2-aecf-e952d1461f76",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1802373-fac9-468c-b797-ca71ef810f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71aa57c-24f0-4c1f-bc45-2999e2e4145d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302ce36-4f06-4ffc-8799-0b7fa0931d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e233ef-1c37-4d02-920a-90b6473253fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc419b-121b-4844-b36a-ae8f8f11447d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d0f7eb-1962-476d-9dbd-5908c43ec128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b684cea-835f-4a1a-aa15-1bb354431dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24c463-48e5-4c06-848b-420c73eac08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17dc1a5-5009-49cb-a4ea-41bf4a74b1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6b0546-d73f-4139-80a1-97ed83bf1510",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3764228-e29f-4cba-b463-417e5c54f23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e97abff-58b9-42b3-b995-b7049a6263ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258fd3d3-0606-4ee6-80a1-67d5a097542f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3ec959-3e06-47a0-99da-fc9e47eda64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f60132a-7e96-4bd4-8a0c-c7135cd42897",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7162420-8333-4d39-9665-c1a41c1e68da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd7fb6e-8b42-4f0a-8ad2-dedf96369ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5058665a-4bc3-4788-a808-e608fff8530c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978b5847-ffd3-4ac4-ab65-f65b168f974b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd15f81-f120-4be7-84a8-90e4028beeb8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684979d1-8242-42bf-88b2-09a4a96824ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70268b70-7941-4b85-8eaa-60e8407fa52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12e4ba4-5c29-4235-9b6b-d43d685a7c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee3d027-dd02-45ff-9c97-903b5a3967b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb849554-bd30-48d3-840d-6ca6d891fc42",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe948f9a-4eff-44dd-9ba3-07dafae55b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410c0c9b-db1b-4053-a1af-f5a556c7e189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da03a843-649a-4d1e-bb0d-315f1d790176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca6f13c-88ed-4594-b38b-83fc83914f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a8b7de-da96-4d2c-9432-0dda00f0add3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a47c63-34a7-44fc-a0f8-4e55e2a2bd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa00199-8e39-423c-8960-d7ef64eb61fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4fc317-9e47-47ab-923d-599fe6779366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a741c4-340f-433a-81ea-c99075e4379e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd93055-8db4-48b0-846f-f0c2939b6c16",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9adfe14-b6e8-406c-9782-7896cef3cb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051a31a3-1ca8-4ac7-9463-0ee43efca692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330271d9-5be1-429b-b683-26750fff2091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c896b6-9ef0-4e7d-9ce3-520831ac867c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365c4e00-23aa-44ba-ba9e-e6194396a70d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae0b200-6b9f-4f3f-9628-67bf4953f255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acd51be-5efc-4e17-99dd-584d2ccfa5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ae7300-f9ca-4479-9457-72f64bc3fad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c6b4a2-73d1-474b-bd14-181214d207f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd30b809-3c54-4b28-8037-6ed0a8d59078",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4154797d-1867-4ed5-864f-b9f9956b96bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0bb33d-0fa6-44a7-b448-cd783e9f94d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e8e0ae-7527-4047-94e5-70a0cb5b4683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea4f801-7bb6-4008-a79e-96ee6a70cf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d5c8cc-5fa2-4fa9-9051-85bdee2abdf8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3513cf56-cd83-42ec-a168-8372f52ef0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143ca843-4a35-4cb3-beea-5acb4fb03a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545ae411-3396-43a2-beab-734adbc4ec72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96f55ba-a922-4e1e-8c80-fa1354222b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e5df40-1b23-45af-bfd9-ac799318f58f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68051b42-c150-487d-8555-a087c13e0cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24a8947-6099-4590-8f21-33fe48a1a0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477e26c8-0ae2-47ee-b725-86b4bd47f53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dede483-a898-4fd3-b41a-0fbb3f83d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc258d0f-27fa-4b34-8faa-36ed73bfad03",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d395a50-7bc5-4fea-9dea-2ec12be1c6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc3fa11-030e-4f14-9370-8f2798aec37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45156a2b-bd3f-49a9-8a42-1d4727a23add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1794b578-7e70-4f75-9e9d-3afae0b3c9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1d55f5-4058-4018-a735-ba0185cff2c4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ad37ea-52e0-4e86-a42a-0e5e198e2608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3ba0be-b7e2-4c12-88ab-04e394ebdc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25718239-48e1-4377-96a0-8709dae9fd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a4867-709b-4701-90c6-2cd844ebd8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203d99a3-94f4-462f-a45f-82cc6f34f171",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cc90c1-3958-4517-be6d-d28e3923eb59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767b7b5a-9521-4c7f-8f8b-fa5eac97f03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c92d8-1805-4dc7-b8c4-f53a4df5dbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fbc2a3-da28-454e-a3f2-bd82feea9ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef66951-4cc1-4921-bdaf-6bb61789e720",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764ed34e-e5af-466c-9047-f7fc47cd2a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff99deb8-8b5b-4fcd-a092-e6019a41122f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa063b00-63c4-419a-a242-7fb40212b6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d05c43-4f53-430b-ac50-fcbc9ae128ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5f4b79-5cb7-4ea6-a057-27eaa20018f6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587c4c3e-dfa1-4aad-956d-adf7cf1f043c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdca73ec-a1c8-4161-92d7-3a0e6f847cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8007ee6-b7a5-4f79-b359-7ffbf62e80a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93a52de-5fed-481c-9368-8086cfba1113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fc9be1-a7d8-4b93-b39d-1a986e868ffb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c72b4fe-7368-440f-866c-b23e6ccaabbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c2c383-adec-419b-9f17-724444342a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64203a7-7d64-4bde-90b0-2bf94a700469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2ed3aa-b069-4859-b4d2-d3ed7a88944b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a6fb39-1d95-41b6-b020-d1c0f786d3b4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c58b846-3bd1-4e69-9a41-96039603c942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4215ffc-8a4d-4b82-a9d4-9e1a4bc64991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0698175-29a8-49de-a331-24b021a1cd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2b5242-13cb-4ad7-8daa-49c1c95f7e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07dd922-1dd2-429f-9620-f9c9026e3fc8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e762398-4b15-4ca5-89e4-deb47a574dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4240d43d-570e-4cc8-ae82-e2fe9a7e3049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3f5c2e-ecbc-46d4-a5a9-d084baf4d7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55af7940-20ac-4060-a15b-9c41d1dcc4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687c5554-2be1-4477-b3eb-73b4eeb68b1b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b211c5-3de9-4df0-b5c5-6b3361d85592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44adb92d-bb8e-4a88-9703-f87fd6e7be6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce7bbed-5016-4e34-84ec-c89e2bb3d01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95a8696-32e2-456f-9e62-1d47da801d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1467c20b-5127-4b66-9ed0-b9ac49c89bec",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10841dfa-7366-4966-b3f2-0a3b65e98392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c10ae8-cc71-4263-9dc3-dd66175662ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee63fa6-c8fb-4391-8f13-15571c0cf83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6250e26-43de-4708-88b2-2bed5b6dc1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6adb98-0add-470a-af8e-c9e6361bacbf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31d3e7f-cbbc-48d7-8e8f-2548b373d75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfbdabb-0ee6-4800-9ee6-83e4aa0aac2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64624a09-4ac3-4f83-8cf1-ed8748e0f9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06af5381-6fa7-4e5e-9674-08c147312ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da28aa30-6f4f-43b4-9354-bab551708297",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fb99f8-3c7b-431c-908c-5c2ce9a47524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf52205b-fdc5-4812-a2e7-9df78dbc86f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ec64a2-e3b8-487b-892e-8a8f2ce1832a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bb7449-58dd-4cb0-9278-46a51e646cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73471f82-0fd8-4cae-a81c-a5cd981d5f61",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74a0fd0-63e2-4fff-9045-bcc645e79dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5e6a8d-5e9f-4748-8ff3-060391157606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62803bb8-b58e-4453-b0f1-46b18c4071f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a7e4b2-32be-4a88-a190-a3a9787daf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f8ded7-23c8-4caf-842f-53aa8ab01288",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374c23fc-5827-4357-b6ab-a1957f1daae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2ba3db-90d6-4e29-a66b-c798d116ca9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c68f743-a36a-4585-9fed-043b923cdd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00d06d1-1a95-4809-9a3b-47865d6be4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85939d5e-e711-415e-9316-06951b833ede",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0f66d0-8a9d-4c63-99ba-c499cd8cbc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f036f80b-cb04-4c62-9558-8a4d50d3e947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a1bf39-6e02-44e9-99c8-d0c7d12e124f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d03a5c-c8e2-467f-bf11-2bdcbefa5d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aa2995-f964-49ff-a8b6-f50421e3542c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e419316-0103-4919-9417-5973a54e6277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bf84e3-880f-4c1b-a811-6cec5c0cf296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8301a75-c81a-4a66-8d93-a32afda7a958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5829bb36-0e21-442e-90b5-90f6c99d8661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d35287-1548-4a01-bfb1-9d8bea5a67ca",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cf6e81-5de8-426e-920b-5dc3a6a6dab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974c200d-4de6-4cc8-b972-0b120797bc63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8fffe0-6211-4581-9f70-da416a5d64fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96697197-8af0-4c56-b4ad-bf922d5ab201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1de8b3-ce0d-4d9f-b77d-929cda8ea59c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f07ffd-4e14-4111-92cf-ef739f732cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01773c10-4253-4c6f-ba71-e0730c9f699a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1138d49-6deb-400c-a0da-ee31bb34ea1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edcee4a-ffa5-4b96-bf45-32539f0e1b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8551ddbb-5919-44fe-9560-e87419eb5a26",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e18d4-41be-49a8-b448-b503fd050eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcb63c6-75eb-405d-a0af-b3ec51c2e639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3268365-1853-4bac-8e51-2558e6fdba37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c86e2ae-f14b-4cb8-9091-f5187ef9fad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b254778d-10de-4fbf-8a3c-49777a90a1ef",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988b2f19-693a-4451-b1bf-848972efbdde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794929e9-2280-493f-9f5e-602b68df5272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d3e2d0-a3a3-494f-ad71-975ec4babdd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559da55b-8a60-4b32-8898-694f7eef96eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126134ea-0f19-4d47-8910-a153bc5b7ef3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e98a356-a524-4a2e-b12e-8d43f6f0ba96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddbd369c-d5cd-4b26-ab5e-c7faa925710e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee2f23e-3bd3-4ab5-8fad-5e417640844d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b881d5-f6ca-4a14-8654-5a26eae11663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf45f822-bb6a-40b5-ab69-943481b72c0f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dbcba2-c077-4880-a340-516dd9f6a15c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b76cd0-8a9a-4da7-b427-d9658da3de62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d02ec2a-a516-4cc9-a936-7e0fb1e318dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1805230d-f9fd-4ec0-baae-ed00e8e9e7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc50cf29-3c43-4885-9856-0a26ba988db3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53bb319-5903-40ce-a22b-317d64d17efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abebae82-7b03-4c40-a510-d1eee61c23e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8325ec-3ade-48cd-9600-113907f39bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90709815-da7c-498d-b906-6905a9762b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b76488-c29c-48ac-b081-a564d05d57be",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4299cca-1784-44ff-b147-9a57d3a7a972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a019a251-8fdb-4267-9775-ef08c1c7df97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8337dfaa-e5b3-47db-b0f5-d6b8fad18642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999b9218-b52c-414b-9b0b-9451e059d3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fe058f-b34f-4725-ac3e-084aceb1bc33",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3444045b-e15a-4ac0-8c0b-68fdf7c8c2c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa0ac81-fbdd-449e-83de-27bcea2920f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227ca825-31ae-47fe-b7c8-b7f408977413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece08469-d6e5-4975-afac-90333015dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1973ee42-1c8f-40df-af8f-30dfa41e8907",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ec47fc-568b-4496-bec9-b8fad1b4bc28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe59909-37b0-4817-b030-79fc48b6dce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c43a41-4658-4654-83ee-4b0e6bef4b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f4b73c-279a-4570-89c9-49e7a3f3e2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4e5da2-7300-4832-84ca-a82781714ace",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af77e4e-7e76-4649-8180-61090d5fa08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7099fe-ee6e-4eff-9570-31f117f6ebd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185945b0-ce95-421c-935a-8b6164b2894d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae799635-d9de-4e88-8bc5-ae8a7a24f4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3933e7-9158-4d0b-b85e-baf96461ca94",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ab5cce-f728-4b14-a3ad-1c8330cd7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c36e9f-aefe-4dd6-89fb-c08f2f441aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f535f1-0702-4526-bc2a-69e68e74f974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88783995-0c69-4971-94f1-576661f2767c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49646b4c-acb9-4ee3-aa6b-f6eb0dd5047e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d9f9a2-b0b8-4496-8734-cf1362b3811f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e070ba3e-74d5-4c26-aaec-55189f257819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0700d5a-bb19-40ca-8c1b-5b4167f08aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65413c90-228e-4feb-a125-3b52dfb3349a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194be5fc-3b5c-4412-bb94-f9682f880fe3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b0207f-d8b9-40b0-b231-3477fd6d1012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733505a1-f64b-4d50-9f1c-1db5dd88cc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565dfd70-970a-4daa-b749-19299581b72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb841db-5a43-4304-9c41-8e0c117dfe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb44969-3dec-4ede-b403-909c408c1dd0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0b0c7c-9224-47fe-80da-c3a9ab76f285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f7c79d-07dd-4a19-99ba-343494b1976b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c90bb4-15bb-49b8-b57a-8e57cd17d712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339cd56a-0595-4cdf-8ca5-181559f355c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02f9341-8e40-45f1-a79f-bfd8ba673dd1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f16112-005f-46e1-ac1c-a6d88a7505a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67de5cb1-66ec-4b82-a723-bbb26bb7d134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5aa012-614c-4793-9a1b-8836d02d90d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cd9e95-a48c-4980-83fc-064b4f4ded96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46578d2a-4f37-4c1b-a258-147836b44602",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00384e90-c7da-4bd1-88cc-b6f1133e1403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b912a859-bc82-4a0c-bfb7-7ced068a9f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaff8ead-b7a5-44a0-a9d1-8d38ac3a4d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a3d8f9-8183-4b0f-92da-fbfea2383aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40627445-a0f0-4c22-bccd-8cc7d42ff529",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02ba64-aa38-4330-bec8-b05bf9ea557e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6365d21e-6c0f-49b5-8c4b-32fe190d3bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a808cc-192e-42ae-82ee-cbdc55d00374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf30c670-7d1f-4995-afda-2f36864b70b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccf34c6-5506-4295-93db-4baa905bf9bc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d10702-5fca-4282-b278-3f039a2fd424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83969745-588c-4979-819e-dfebc0f77f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6b38f6-96e1-4336-b866-02abe7bc3c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25219e62-9942-4be0-9092-5331812c2a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0d1ae5-3f8e-48df-a4db-ee62dbe19d06",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04917a9-4845-4bcd-9c96-6336ea093c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31142b6f-ecc7-49f1-96c6-360abe5312c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa7023a-976b-40ce-ba5d-33669232c4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de59c5d-a9bc-4b43-b399-2b30c749be9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbead2f-09f2-439f-a263-94791ceca60c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa62611-309a-4c12-858c-7f9b50451e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5129274-6cf1-47dd-b4be-2393c389901c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb9b145-ec87-422d-84e8-ff85c978b5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9354bf-48a6-4f80-a93a-6f58298472e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b586a5-eaf2-448f-81b9-65dffcca7db9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c487a7b-836c-4f38-b988-a8771af2da98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82033590-55a9-4ebc-ac70-b230b82ddf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b685b25-3ef2-480a-aae9-6656e1dc236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6247aabe-cbc7-470e-bd58-aa85c0986998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e24459-6902-4885-a34f-37103e1a948f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b898e412-b667-4cd8-8f7b-0d50fa5efe75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b1cf91-8513-41d8-a672-58ff8865a2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f576a57-f0a7-46dd-99f0-09e70ad45c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a548478d-c9b0-4be1-8f77-93f2c1ab05d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d880dbd4-7642-4f40-9d1c-c6276d8734c3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc446420-0529-41bc-a075-583776470967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c114b6d0-7169-4bb9-b5c9-87b03889dbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53e1401-b7d4-4c22-a9a6-069a5c76ca84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa177bc-e122-4ada-a99a-bfbe9e0957f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4684cfe9-dd9b-440d-9b28-6abe73111d41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab01a92f-8016-43bd-a851-4f57e01bd08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ca6905-9a09-4f32-8f28-4b224ca46e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697183ba-ae0c-4127-ae0b-7f20eef36e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4894da-4319-4cf2-8ef4-821b40aee2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bfc0d4-e68f-4e9c-a57e-46aa7419ed24",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6247851f-9e9a-44cd-ba7c-c9a41d3cabc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1553029-5d53-4b46-86b3-5f31e8da5b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d0d4ae-9830-41d7-9961-6298249cf4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc75fe8-6ed7-4871-81dc-9cf374faf102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab1f28c-5e9b-40a5-829f-2db3831dfa59",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc63ed55-ce55-4d12-bc0a-fa9657c21b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a58ebb0-8928-4af7-97d2-4bb72f982e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18005917-1ea2-4703-910a-4b6e22b06343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9e996b-a48f-44c3-87e8-a8b5e1b2bcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243fd1f8-bbf1-4be5-a4a7-9fffb28db2c7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83454efd-7e12-4069-8a92-0d4e647f6b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19f431d-d1c5-4af5-9f03-400cd83c2435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525d4fe3-b1e6-47a4-b815-ee09ed4fb99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e9bae6-b35a-4e9b-aa44-52c28629a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a38e26-f190-4f79-bd1d-43c8c0873022",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701b7267-228f-413a-b12f-5e6c390b3141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f338cd19-dc3b-477f-85a5-9f637a4e0b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d1325b-555f-4382-b55a-20d658b7c2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb9341d-f2e0-4a3a-bdbc-4bb935172036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a759168-72db-445a-b718-f2588d310066",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200c68f7-2caa-47ad-9857-f8605815ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3656dd-0b8a-480d-a385-19fd45d14c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230bbfa4-fd2a-4f35-94b3-d497d4abdc96",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1311bd4f-9f95-474f-bacd-7e493b4e67e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147e71c5-0ba2-43bb-b028-afbfbe124c80",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd499b8-dcec-494f-91d4-ebe8b3eee3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacd0327-4d55-44ca-b2ba-3c44d1402258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d80566-b54c-48ec-b877-b781a262065e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e5df80-3f79-4ddc-a049-9a56c5d73852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0457fd-b64f-4b7c-886c-48e14dd30bcc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bb62c5-6dd4-47e8-bf29-6fb25a4fc2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4950f436-f812-4b91-8c80-0a2ea3719722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39331bdb-a827-43a6-a29f-ba8cd71cb49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b04c506-301a-4a3e-85c7-5adf2f616662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba65278-c8cd-4d62-a828-e791db94ed18",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd812a-1038-45e3-a08d-0bc755d0628d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8ecf68-d41e-440f-82f0-aa5b67e4c105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c86c47-5dee-408f-938a-5226052c6fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ff58db-1e01-48e8-9ffb-67194b045109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fbe6e6-c766-4cfd-b995-4000521b1497",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0793596a-48b8-4391-b0a4-229a24ffc95c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa0c2e6-2033-49e1-a50d-785b5c080fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41a0f0a-001e-4848-be4f-fc13483ea7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0b22fe-aaa5-4713-93aa-d04a7bb5ac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41de8e0-460d-4a50-9100-4a72d046a776",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e89e6c-0650-4c5f-8279-579b9ce23555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca21da5a-a62e-4bb8-98d0-4bc2624d0da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e8ec94-8d9a-4cf4-84a2-73aa452cf1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4799ee6-04d1-4b81-bef6-a209b91b37da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abba6cb-c7af-4058-8f7a-00d01b7dffec",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81871824-c604-4ed4-85c7-14130af3f9f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57ab01c-3f91-4474-9516-7295c3512828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5956ff-e31d-4173-a16e-b9ea11292335",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd968ad1-782b-4a8c-9b7a-67a447ce9d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816da2cd-8659-4865-b221-655efcc11599",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c21dc3-2769-4709-be51-15237dc925f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0685a08-b730-43d8-a0a6-564eec84d4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b821a3-28a2-4113-9c87-3a4fbb33b2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b989264-6967-4a3e-be31-bd4c4ba42736"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0a29c3-d0ca-40ce-ac49-83fa03e0ceb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef74130-ba03-4e10-b9af-42c34f955f89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "113a81b2-b1f2-458a-b72f-d3302820abb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3829a518-4fb9-4e21-8599-6f66f328db34"
                    }
                  }
                ]
              },
              {
                "id": "b89eced6-3208-47d1-aa0f-5f1592d8e95e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4171fc5b-193e-49a2-88bb-452790a4c596",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19e5516-c206-4dc9-9d29-b0a73fa4cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9a1cab1a-cdc8-4579-851e-d968cf819f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd26c33-5e34-47bb-ad8a-2ab3593a68b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a51fcfea-57bf-4545-9a49-202984ce727a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab6b88ec-983b-441d-a99d-82af0d68fc71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36832960-efac-4c6c-9706-4e7af84a4881"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b7cb973-8b75-46e0-92c4-6c05d4585c03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35ec5de6-8f75-4929-bc14-e14b218a0d1e"
                    }
                  }
                ]
              },
              {
                "id": "a57ffc35-f82d-4281-90d8-f946acc02c24",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bcd00a5f-cdf4-402e-a582-27bbad1ace6d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c806527a-2d21-4e30-bc2e-35acb2c5381c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f4ee5d86-6cb9-4a60-a6e1-3ced7c4dc1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f145bd-42fb-4e76-bd50-894321013d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a925ff73-45ad-4114-a66a-f4991916cbc5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8fa26fb7-44bb-47ca-952f-7327820e9762",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe9ea1a2-1854-4992-a2fc-d167a3adeff3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f09cdd6a-2e96-42b1-91ac-5ed418dfa8ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26d55e72-90af-48b8-9323-9ff79747e53b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2d9a89e-10c2-4b44-8439-3c2e50bdacf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b0d1d80-424b-4b83-a1e3-ae22d755452a"
                    }
                  }
                ]
              },
              {
                "id": "745e61d9-3e46-4bbf-9bd0-a50e64973c38",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8ca0b81-5229-422a-b705-5865f7d7abf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6940ef6a-d472-4a9b-9a4d-cfc0e8cdf02f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02302769-73a2-486d-a755-318fec6bc810",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c16d998-2b6a-4689-b0f9-c72f5a39147c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96b54181-fea7-432e-9a96-64efac76ecc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4ee0c429-92d4-4fe6-b9ed-bc3edf95defe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8496d51e-6133-45c3-ad83-1f46efac12df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37b3deb6-e0ec-4b93-b326-71a4e798e246"
            }
          }
        ]
      },
      {
        "id": "73ff1a46-cfff-41fb-a998-0c8690f404a9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4412c0a8-7430-48ad-b617-e7aa8cf313f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e4f41ef-3db5-4767-a2cf-134906998dcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6f6a06b-8d66-4e09-80ee-b373b73957da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735d800a-40c3-4d9b-9baa-71b3de258571",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "708a1e60-013a-4e0b-984a-d097a85c2ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2087a14a-f1c3-42af-8be3-dba80b2ec1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68d98f26-b933-4fd0-b2f9-b3ab8e4f464d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "931f8a92-5d7b-472b-bc02-831cde360266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd0a88e2-592c-4743-8271-f6a368b67ea2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50819357-6aff-4e87-b296-2a0209e055b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc2a10e1-4fad-49ab-a55a-37f91a1399aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99a3ab39-fa94-4d75-8e39-0e417bc09ccd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "392c18f3-2bb0-4d24-a533-02b44984989a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce00d46e-d2e4-4d92-8082-57a8e27342c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71661509-8c8e-4e6b-8e64-e53d35f1c3a8"
            }
          }
        ]
      },
      {
        "id": "20a6a51a-74ff-479a-aec1-10f7b465a7d1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00aad7ee-0c3b-4d77-80a7-680a5720580f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "419534f4-c84b-499e-8230-70e7500fa7b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cd62ced-3a93-4d47-b45e-7cde1f7843b3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc44c0eb-6ce1-4a3e-a469-a2e44b3992d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e78d3071-7e40-4ab8-857c-78abac278514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089dda1d-fb16-46e0-ab3b-0a97b9c628fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a16d077a-b88c-480a-9faf-6b078fcf8636"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ec1126c-2ecc-4833-b920-ab9ff32beab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "deeacf02-d274-4ac1-98ee-d2c81cfbc347"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec787e9d-9d01-4d4a-8402-4f67f3075afa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80ee32b7-8c74-490b-a4b1-042dfcbbfb4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "679ca863-70d5-4126-9d2a-119b4fbc79a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2bc6128-fb5f-4588-ab8f-b4f8365eb92c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d434367-2a39-4617-82e7-f28765732425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d994c889-b351-4e77-aa47-af2729f189d9"
            }
          }
        ]
      },
      {
        "id": "39ff621d-d843-4071-9d10-d1808560427c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "139c2022-e623-4994-9aba-1fcd8575484d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1211eea8-4793-4a78-bfb5-979d588b3789",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dfc66b9-05a7-4937-90a1-1ff998308a1b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db920ca5-a780-4986-9e86-52de5f7de441",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ddedba-8623-4a1b-842e-e4bbbd5da29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb58706-2046-4301-863b-edf90666d67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a583e447-6820-4433-840f-570f8e6ee4a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a62443-ebdb-48cb-b7b4-c0ea7f6686bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d4d18d-3b5e-4e01-b3bb-bb0d5542de35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10cbf9f6-2e19-4b4c-a8b8-6a3f4643bfe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b3ac61d-4cdd-4e2b-9adc-934ac9761623"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca5099b6-d0e1-4a50-bec3-5599cf955836",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e27f009-7cdf-4b3b-8aa8-0d36f9e3c915"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "873440fb-59e6-4d05-a57c-ae8802dfdc0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b41c1c46-883c-47b1-bade-ec27cfcb506d"
            }
          }
        ]
      },
      {
        "id": "92e99e09-6a7a-4e8f-a290-39477f43e5d6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a59452e5-e38c-4ef8-98c7-d8f7ae0f905a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce166a50-74bc-4ac0-b5fd-fcefcbda0ce2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dd499469-728b-4a4a-b9f9-f387768b266b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce5896a9-78ec-4cbb-b00f-5578fed19b81",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9146829-4289-49b0-a718-2174bc6dbbd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 329.70422535211264,
      "responseMin": 17,
      "responseMax": 7651,
      "responseSd": 917.2010069582598,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694046749408,
      "completed": 1694046858434
    },
    "executions": [
      {
        "id": "62ed09f4-7ab0-4fb7-9896-92fa88f2550b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e477f52d-ca51-4ccd-913e-cf3773fca0bc",
          "httpRequestId": "25f4ec7c-b133-4253-bc0f-603ae720e1bb"
        },
        "item": {
          "id": "62ed09f4-7ab0-4fb7-9896-92fa88f2550b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b620f90d-0177-4336-a521-bb8a6b66d04c",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "222a7ddd-a8a2-4ee6-b172-0c3f881310df",
        "cursor": {
          "ref": "bc4dd8bd-243c-4c2d-826f-471fac87202f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "56074c10-d34e-47c7-a17e-d1ee3afe0c87"
        },
        "item": {
          "id": "222a7ddd-a8a2-4ee6-b172-0c3f881310df",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5d4690f5-353c-49c3-822f-bfd667251f76",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "a8f1a12d-e99a-4471-b094-2d5cd8ca3246",
        "cursor": {
          "ref": "6c6d1398-d733-48d7-bb9b-c0b9d9886678",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2138a826-fd04-4a2e-bf2a-70138fc8aa1a"
        },
        "item": {
          "id": "a8f1a12d-e99a-4471-b094-2d5cd8ca3246",
          "name": "did_json"
        },
        "response": {
          "id": "83211f07-e790-4f8d-aa3a-b4bcc5f06ebc",
          "status": "OK",
          "code": 200,
          "responseTime": 1476,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82efe727-69d0-4370-a675-de4a11e033cb",
        "cursor": {
          "ref": "5cf3c707-4e4c-4295-b803-506c1a0911bc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f985983a-659d-40a5-966d-da8520e47826"
        },
        "item": {
          "id": "82efe727-69d0-4370-a675-de4a11e033cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "d44c3e99-b608-4f24-984d-6fa811f93733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82efe727-69d0-4370-a675-de4a11e033cb",
        "cursor": {
          "ref": "5cf3c707-4e4c-4295-b803-506c1a0911bc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f985983a-659d-40a5-966d-da8520e47826"
        },
        "item": {
          "id": "82efe727-69d0-4370-a675-de4a11e033cb",
          "name": "did:invalid"
        },
        "response": {
          "id": "d44c3e99-b608-4f24-984d-6fa811f93733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5747ed60-ea7b-49f6-b8b1-c4784161302b",
        "cursor": {
          "ref": "6cecfb9f-6696-463c-b68f-6c5984b2ad89",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c8106379-9f34-4511-b55d-798991d29b3f"
        },
        "item": {
          "id": "5747ed60-ea7b-49f6-b8b1-c4784161302b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "59120846-62e8-4a74-b6ed-b4836e621f95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 415,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23451be-af37-4eb9-a94c-e22aa640cdb1",
        "cursor": {
          "ref": "f7fe3958-c08c-420b-aa10-2bffa8d0c522",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9eb5c34d-88be-439e-b919-26ca66532fbd"
        },
        "item": {
          "id": "d23451be-af37-4eb9-a94c-e22aa640cdb1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5af3fa06-4f8b-4e5b-a111-936154e024b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 260,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5cdd06-17ad-407e-9e6f-2c5299fa4f16",
        "cursor": {
          "ref": "8e2bb86e-6b54-45a1-a09f-f305f525583b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bc18fbc7-98d9-4a8f-9016-9c2e2723e7fc"
        },
        "item": {
          "id": "7a5cdd06-17ad-407e-9e6f-2c5299fa4f16",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8fa2e87b-f41c-4156-9354-f7420cccef62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148ad69-c53c-4368-85a2-ef440be33b0c",
        "cursor": {
          "ref": "8fcdf41f-ac29-4166-ac32-ebb6ff31801f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e69991dd-7389-4ea9-9de8-ae177821e846"
        },
        "item": {
          "id": "4148ad69-c53c-4368-85a2-ef440be33b0c",
          "name": "identifiers"
        },
        "response": {
          "id": "3e774da6-eaf3-44a9-b401-0b16cbd27cb5",
          "status": "OK",
          "code": 200,
          "responseTime": 1225,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2214152-1a2b-4296-b944-08b3e701f392",
        "cursor": {
          "ref": "b3a18411-0fa1-42cd-890d-0619fdc6b27a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6baded50-59e6-48e5-83ab-adbcd75df299"
        },
        "item": {
          "id": "f2214152-1a2b-4296-b944-08b3e701f392",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f3a4b489-39b2-45eb-ac40-dc52a934141e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cd0aae-efdd-4200-99b6-6dc2e3822981",
        "cursor": {
          "ref": "e6567db7-c57d-4008-b47e-99da9944ece3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "35f6ed8d-c281-4728-9eee-2b8e19c3a432"
        },
        "item": {
          "id": "82cd0aae-efdd-4200-99b6-6dc2e3822981",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6394c66d-8b00-48d9-9a38-56cf52003e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a8429e-f41b-465d-a2c6-1e834ac12b3c",
        "cursor": {
          "ref": "7a5d6a5e-73fe-4855-9c7c-7f4df072a910",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1091fd5d-16d6-4c11-a16f-beffe5364938"
        },
        "item": {
          "id": "f4a8429e-f41b-465d-a2c6-1e834ac12b3c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "75d7362c-fb95-4bbf-a1cc-5a1a1ee2e6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9809847b-6db6-4dcd-b961-cb80df780d96",
        "cursor": {
          "ref": "6b85f012-27a4-4f52-a20b-e6bc99c87d14",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d18d1570-b122-49d6-a400-c18a28fd8103"
        },
        "item": {
          "id": "9809847b-6db6-4dcd-b961-cb80df780d96",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e57022fc-d7f0-44bb-b6ee-0b779769af05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b724a55-c7f0-4112-b005-bd14c1184752",
        "cursor": {
          "ref": "abf57a1d-31f0-4715-893b-99ca8909fedc",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "76d577f2-05fa-4b7e-8a3a-838179859731"
        },
        "item": {
          "id": "5b724a55-c7f0-4112-b005-bd14c1184752",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2ca39309-cda5-4978-b62f-7f0376645415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41472350-e4ab-4771-b505-1058e1a6754d",
        "cursor": {
          "ref": "60392987-8f52-4453-9b2c-626b7185f217",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "93c85caf-684b-4b09-ac94-fe67b87cd9d3"
        },
        "item": {
          "id": "41472350-e4ab-4771-b505-1058e1a6754d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9e888a1f-ba3c-4a9c-8eb6-40e1745d921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b69461-653f-4026-a157-d92e401e7f9d",
        "cursor": {
          "ref": "f022b8ac-e162-41a5-aad4-b2d07a3f1783",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bc76ebdf-aeb6-43f7-afe2-b75bc0a96a11"
        },
        "item": {
          "id": "d7b69461-653f-4026-a157-d92e401e7f9d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75cb85d3-b456-43ed-8de5-34808de923f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c75ce-a63e-4779-bca1-cdf70ffd98ec",
        "cursor": {
          "ref": "f5f21015-13d0-4248-987e-373aa65b8ed1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0005789a-d865-401c-a832-e93eee6f43cb"
        },
        "item": {
          "id": "1f6c75ce-a63e-4779-bca1-cdf70ffd98ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a94283cb-3a78-47c1-99f3-054f12baed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea8aefe-5408-475b-b366-6c6e46c3c5b4",
        "cursor": {
          "ref": "6ebf0682-3615-474f-9078-f92ca0396e3a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b4dba6ab-7519-4de1-a0d6-29dd841c732e"
        },
        "item": {
          "id": "aea8aefe-5408-475b-b366-6c6e46c3c5b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a4ab74e6-2522-42ed-b270-87d843dfcbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268c3740-bfb4-442f-b2c3-8f91ff9cf631",
        "cursor": {
          "ref": "55da9d48-d337-4e18-9a75-8ce5fb08a4d5",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2fc2abd6-7c83-4705-8d29-2e87c8dab6bf"
        },
        "item": {
          "id": "268c3740-bfb4-442f-b2c3-8f91ff9cf631",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a6e3d3d9-7055-4f9b-bee0-ea46c94fe30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a246203-e40c-4dc5-b532-c0fd611e58c0",
        "cursor": {
          "ref": "fd2c686a-3076-4b87-91a5-762ccf344695",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ff78315a-c99b-4fec-9d97-aa06279fd09d"
        },
        "item": {
          "id": "8a246203-e40c-4dc5-b532-c0fd611e58c0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d1221c77-e220-46d6-a6eb-263fd67fbd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14805b5-dcb7-47a6-b9c2-3d0a73d38397",
        "cursor": {
          "ref": "05dfcf99-9db9-491e-82d4-ea83521202ac",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c693512-2b64-4824-8586-6fbbf807f9b6"
        },
        "item": {
          "id": "e14805b5-dcb7-47a6-b9c2-3d0a73d38397",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "170f29fb-6a93-4091-a2d3-d5ceae48b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea90a9a-35ca-41c4-a2bd-dbf3fbb2430f",
        "cursor": {
          "ref": "8b6a6b41-b2c5-4b99-8ad3-2d1693bf4d23",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c353a05d-3cd2-4eae-9123-16cd688e2888"
        },
        "item": {
          "id": "aea90a9a-35ca-41c4-a2bd-dbf3fbb2430f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "41c28d69-3333-441f-aa24-4ed51a9f6f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4f0aed-7c29-4e0d-a08a-464807f4c627",
        "cursor": {
          "ref": "cfecf6df-549b-4159-8036-2e42a3ab6b0e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "daa4a502-9de6-46f9-a3ef-2e107ddb17fa"
        },
        "item": {
          "id": "3c4f0aed-7c29-4e0d-a08a-464807f4c627",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8a663154-b387-4126-a6f8-0f3d8d419b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4fb11-394e-4e86-9ca1-333e71994cd9",
        "cursor": {
          "ref": "fc1e4f9d-ed79-467c-8eba-6c9b3c30e7f3",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6b06a18f-9db4-48e2-9ee1-38f8cdbe57c5"
        },
        "item": {
          "id": "fbd4fb11-394e-4e86-9ca1-333e71994cd9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3bb655ad-7d65-46ee-bf6c-9a50b079264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe1b0d0-385f-4704-95dd-6d42ec8c701a",
        "cursor": {
          "ref": "f830b27f-c54d-4ace-9dfc-006e2310fbbd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "888dc42b-1110-4752-b917-a8c68609c59c"
        },
        "item": {
          "id": "ebe1b0d0-385f-4704-95dd-6d42ec8c701a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e42b7655-5439-4a36-8220-11cd3a5ed925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b28f5a-1d7f-49d3-8366-c4ce85ecba99",
        "cursor": {
          "ref": "50430588-5cee-4bf1-a7f8-f942a517de83",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fb17887c-5ccf-48ce-8136-00a2aeeb7e65"
        },
        "item": {
          "id": "79b28f5a-1d7f-49d3-8366-c4ce85ecba99",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "65e31880-349d-40b0-a695-e34b7504304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715c5044-162b-4839-9e5a-4db5e667c9cb",
        "cursor": {
          "ref": "d98485ec-e53c-442c-87b8-9528c8c1362d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "89e021c4-9073-4e4d-b839-c4abcaf5e94f"
        },
        "item": {
          "id": "715c5044-162b-4839-9e5a-4db5e667c9cb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f07bf15-d71d-4e0f-a797-2294964ab5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72e47f0-f5fe-446f-a96e-e58efb14bd94",
        "cursor": {
          "ref": "e53fcd68-3f45-43d6-97f9-91524784e775",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fedab46f-07cf-464d-808d-0131bd5c126b"
        },
        "item": {
          "id": "f72e47f0-f5fe-446f-a96e-e58efb14bd94",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dbbffb79-2b7b-434c-82b3-bc315a19c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cdf2a0-c4c6-4bdd-bd59-9baf7ba52a18",
        "cursor": {
          "ref": "e1912705-354c-481f-9ed4-521178a8ce3b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "26e0038a-bdd7-47ba-a6ce-f8ae47669352"
        },
        "item": {
          "id": "a0cdf2a0-c4c6-4bdd-bd59-9baf7ba52a18",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "272f20fe-adba-46e2-b171-e61dee4e140a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621e4e93-ccd6-4616-875c-2041f3c31b7f",
        "cursor": {
          "ref": "54264cf9-c2b1-447f-af72-7f6c1f0b7dc1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7da794c9-5137-4193-be69-3f7532bb2516"
        },
        "item": {
          "id": "621e4e93-ccd6-4616-875c-2041f3c31b7f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f23880f8-7e8f-4c64-b4d2-82a51b9e7259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8a4e63-9612-405d-97de-88cac95bd670",
        "cursor": {
          "ref": "64019e2a-8690-41b8-a361-5bf289bbe81d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "01772462-dea8-436c-83f9-9e50e06503d5"
        },
        "item": {
          "id": "5e8a4e63-9612-405d-97de-88cac95bd670",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "33db4751-fdc1-400a-af5d-de1bcc5cb956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38e84a-cbd1-493d-b9d4-5257f66ff068",
        "cursor": {
          "ref": "a2347d33-1630-473e-915b-2e4111ccba87",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d431ad8b-85a5-44d9-aba0-9fe34d16a586"
        },
        "item": {
          "id": "8e38e84a-cbd1-493d-b9d4-5257f66ff068",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "65c3c2c0-5438-49bf-93d9-0697ad0f65b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ed84c2-627c-4db0-9fdb-548600a6de36",
        "cursor": {
          "ref": "905cb8dd-d60b-4633-b978-b865d7ced09b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7dbecb5b-daca-44a5-815c-9512051f31c5"
        },
        "item": {
          "id": "04ed84c2-627c-4db0-9fdb-548600a6de36",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "89eca600-fee9-43af-a944-4ef4a72f68eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1da50d-d491-49bf-a8b5-e4baadc959d0",
        "cursor": {
          "ref": "ebd8f931-e7fa-4e8d-a30b-1d1306d3bb18",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5aac213e-90c2-45df-81f3-25e3be0e2318"
        },
        "item": {
          "id": "cf1da50d-d491-49bf-a8b5-e4baadc959d0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cc7a4aa0-897e-400c-96df-d5bb99d0f595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fbf8e4-9d86-4c27-9797-0c50d8a89ed2",
        "cursor": {
          "ref": "54f60521-7762-4653-9861-bf9693ec2448",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b9d30a38-36f2-442d-a46d-c007f490699e"
        },
        "item": {
          "id": "f7fbf8e4-9d86-4c27-9797-0c50d8a89ed2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3ed8a4f1-03ea-4058-9f7b-ce517176da08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68877ce-d0fa-46a5-82e6-5059168cd176",
        "cursor": {
          "ref": "26005cd5-6887-4a41-ab3e-1504b8e928df",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a76d1c06-1e70-417c-98fe-51612971bb7c"
        },
        "item": {
          "id": "b68877ce-d0fa-46a5-82e6-5059168cd176",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f322fac8-b94c-48ee-bb39-e9964303a896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8513c80-5af3-4834-bc1d-beb3add98ff5",
        "cursor": {
          "ref": "b09c1873-2cdf-4bed-8f4c-7f114e8c4064",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "44ddde11-0006-4a19-a44d-2c816dc1a3ba"
        },
        "item": {
          "id": "e8513c80-5af3-4834-bc1d-beb3add98ff5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f7411f02-db6a-4e21-bee7-0fa0527a4998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60529318-14cc-4b0d-a64e-c2d3002ba2be",
        "cursor": {
          "ref": "0004e5d8-b323-403b-b2db-1908dc511bdb",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fc6053e0-6a34-47f7-85fe-bbeab5e35bbc"
        },
        "item": {
          "id": "60529318-14cc-4b0d-a64e-c2d3002ba2be",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "51e84a21-f884-48f7-bad6-69f9d30fca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea85b08-81e5-45d6-b8e3-f1207d0dfe84",
        "cursor": {
          "ref": "a728fff1-b855-4179-8c87-cbabf8031e76",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ecc5a0cf-8665-442f-90a3-d7a5f218593e"
        },
        "item": {
          "id": "7ea85b08-81e5-45d6-b8e3-f1207d0dfe84",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "01d676fb-a970-4662-92d8-2f8cee35869b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d35fcfd-fb02-4382-a6b9-ab8a121e11c9",
        "cursor": {
          "ref": "05c04e59-7c10-4356-bae2-608bffea5fe8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2ca62cf4-359f-4bd0-947f-6fdf8b86bfbd"
        },
        "item": {
          "id": "3d35fcfd-fb02-4382-a6b9-ab8a121e11c9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "af0308d9-0934-4b49-9efb-502a4e992174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c3dfb-2885-40f3-aaaa-6c716e5458f1",
        "cursor": {
          "ref": "1bc03338-fe80-4a79-8be9-de26d131daa1",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d122baa4-038b-48bd-953e-50e360b7eb3a"
        },
        "item": {
          "id": "931c3dfb-2885-40f3-aaaa-6c716e5458f1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0362c979-b7a1-4ca4-b6d2-1a3c170ace4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503255a3-951b-4b9d-ad44-241019d1d4c2",
        "cursor": {
          "ref": "98da25d4-d53c-45f4-a3ed-6fc4db5cc273",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7867870c-671e-4f33-89c5-95cc0c1970b4"
        },
        "item": {
          "id": "503255a3-951b-4b9d-ad44-241019d1d4c2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "60cd9a0d-1cd1-4c84-8ea4-5d1bf9b42938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa226ab-e5d8-4ed4-9f02-5ca92e6f7a22",
        "cursor": {
          "ref": "fbba7ea0-643a-4400-b0a2-61c940d4fa68",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9b05769a-4f80-4cb2-802a-0c9c6b2fce79"
        },
        "item": {
          "id": "9fa226ab-e5d8-4ed4-9f02-5ca92e6f7a22",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "949ee180-68c4-404d-8008-dffd8f06647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a42c5ce-7fee-4e13-b6a1-8d42f54bf1be",
        "cursor": {
          "ref": "22c45d33-f900-467b-a7f2-49a5cf4f8d00",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5607918a-1b34-48ef-8f9e-c049306ebfe4"
        },
        "item": {
          "id": "9a42c5ce-7fee-4e13-b6a1-8d42f54bf1be",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a3daa704-615e-4884-9500-f1aad61e91bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9015013-3e98-4e5c-9db1-eb6575e7dd8e",
        "cursor": {
          "ref": "f35e77cd-f447-4dae-941d-27c6b5a0796a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "51f71833-84f8-4248-b838-4f2998a78b2b"
        },
        "item": {
          "id": "e9015013-3e98-4e5c-9db1-eb6575e7dd8e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "19f5adcb-eed9-4f10-bf43-9a076c53e82d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 613,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970faa9f-a633-43ae-aa43-623a3379527a",
        "cursor": {
          "ref": "042e18a0-9dbc-4354-9b3b-9b4eb0826204",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "28d2b4a4-38b3-48de-b33a-186799acfd0b"
        },
        "item": {
          "id": "970faa9f-a633-43ae-aa43-623a3379527a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c4ba1083-3d27-40c1-8034-083d1957b6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca30d84-67ed-4a34-8947-1f4263e41ed8",
        "cursor": {
          "ref": "89580ec2-82b0-4672-bdc8-fd80deb6a899",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e05e1978-3660-4deb-a1fd-9e6a352c4d2f"
        },
        "item": {
          "id": "0ca30d84-67ed-4a34-8947-1f4263e41ed8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f071786d-1a22-4e85-a2e5-6c8589f81529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10deeea0-14a0-491a-ab01-077e313f5090",
        "cursor": {
          "ref": "9d9cb594-9cbe-49b3-994e-290bfe1131db",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c9834201-4b9f-4260-aac6-dc07f0362cb4"
        },
        "item": {
          "id": "10deeea0-14a0-491a-ab01-077e313f5090",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "57e88598-e357-41ce-abb3-f3f7d9281312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b62323-4dc4-4da0-9034-f2d78baa96bd",
        "cursor": {
          "ref": "6c186fc7-6c76-4f72-8eee-cf16c286ae60",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7ac74343-edf7-4435-8f06-f7dabbc429db"
        },
        "item": {
          "id": "76b62323-4dc4-4da0-9034-f2d78baa96bd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2741cfcf-5031-4555-ad33-4b675ccb803d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79cb013-5220-43f0-b65e-fe44261e9708",
        "cursor": {
          "ref": "f91a23a9-cb7a-4f2c-9a96-b55faf82e77e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "83d7dda0-ab4d-40e3-8531-2a4e33df6255"
        },
        "item": {
          "id": "b79cb013-5220-43f0-b65e-fe44261e9708",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "958d9f4d-3ac8-4876-b69d-f66c6571ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b383d06e-bcef-4ba8-9a29-afbc80ec33bd",
        "cursor": {
          "ref": "1fefa7a4-35b3-4e82-965c-aae70e1d30ea",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "543da25f-6a24-4076-8fae-bd1ce1059c8b"
        },
        "item": {
          "id": "b383d06e-bcef-4ba8-9a29-afbc80ec33bd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "04d1bb6b-0d36-43db-b27e-29f96330c330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f421258-0faa-4f37-99eb-eac5cc1ca854",
        "cursor": {
          "ref": "70e7b946-5f90-4d41-99c1-8fae3b5fcdf7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3cc254ff-dbf3-40b3-9571-1afbaaf5df44"
        },
        "item": {
          "id": "1f421258-0faa-4f37-99eb-eac5cc1ca854",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e8c021fb-94af-40b7-9b8a-16644bdd5168",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 583,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26488557-3196-4f9a-9bda-1a38def6bfbe",
        "cursor": {
          "ref": "52812fad-377d-47b0-8861-de2546a2a053",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3260288c-3704-4207-90c9-96cbb2c9f35c"
        },
        "item": {
          "id": "26488557-3196-4f9a-9bda-1a38def6bfbe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b015cfd-544d-4e5e-95d1-e982df3f541d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a37e3e9-d30a-4515-89ab-287d62be5faf",
        "cursor": {
          "ref": "3849abfb-3576-45ca-8a01-3cb58725792c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5158d4d0-d1db-43f5-bb9b-e287cf156ec2"
        },
        "item": {
          "id": "6a37e3e9-d30a-4515-89ab-287d62be5faf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9aacddfe-64f0-4366-afe8-b479253289d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ff25a4-e1e7-4d24-931a-35c60ab73af6",
        "cursor": {
          "ref": "25be99d4-90f0-4794-8e53-dea5b6edc33e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "56723439-eced-4c5d-80f6-1d44fd54b985"
        },
        "item": {
          "id": "08ff25a4-e1e7-4d24-931a-35c60ab73af6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "12d5408e-8cf7-45ac-9b87-0123ac3da50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e293d45-9b75-4cc5-a4fa-fc3a8de152fd",
        "cursor": {
          "ref": "3e1cd1a0-5439-4d34-8981-8b88b495948e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6f217a76-3281-440b-ae79-a61dc1549a19"
        },
        "item": {
          "id": "5e293d45-9b75-4cc5-a4fa-fc3a8de152fd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01c75fc7-a896-46c4-ae95-d38cb16ccbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6db8d18-578e-49d0-9bf6-bbe3fe26d226",
        "cursor": {
          "ref": "2578a449-ff1b-429a-90ba-583560e5b390",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "928661e3-a16e-4fd1-81f5-7e549c10b5c9"
        },
        "item": {
          "id": "f6db8d18-578e-49d0-9bf6-bbe3fe26d226",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "64119efb-fe80-46a8-b8ab-2b5a5aa66059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffa9da0-77b5-470c-9e45-5a72ae2428a8",
        "cursor": {
          "ref": "2926ad12-8419-4c17-8b34-bac14ced2dbc",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b4386672-b253-4d0c-adba-1393f9a33f98"
        },
        "item": {
          "id": "8ffa9da0-77b5-470c-9e45-5a72ae2428a8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7a0856c3-c196-4de3-ae96-36951ab2264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d56d79d-acc3-411f-925d-aa63c67ba470",
        "cursor": {
          "ref": "bb2c209a-8a52-401c-8fc7-1637f3933843",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1473e2d8-a381-4023-917c-186ed97e19bd"
        },
        "item": {
          "id": "5d56d79d-acc3-411f-925d-aa63c67ba470",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4f741ee4-7804-4b2f-ba12-e5e910d4180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fd7f02-d894-4742-87b7-c100a49b87eb",
        "cursor": {
          "ref": "7d8f4e0f-9d67-4a3f-b0bd-df23c644fdeb",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1aa2dae6-eeb2-4a62-83ba-b22dd177bd60"
        },
        "item": {
          "id": "d7fd7f02-d894-4742-87b7-c100a49b87eb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1808943b-7944-49fe-ba9c-75184c5323cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd8b559-bb9b-4a2a-8495-f3b85a7078a5",
        "cursor": {
          "ref": "c5f85f19-5d66-42bb-b025-3b20a96aa050",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8932eee2-4532-4ed4-8191-fdc993229db0"
        },
        "item": {
          "id": "3dd8b559-bb9b-4a2a-8495-f3b85a7078a5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "443836d1-7e3b-4332-bd97-e2943b577e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e388358e-5089-4ef8-af3b-1e931bf50d72",
        "cursor": {
          "ref": "e09e82bc-65b4-4c70-a213-f8c8ae27dc93",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1c5497d1-8ff5-4235-9a2a-56bc77f92c3f"
        },
        "item": {
          "id": "e388358e-5089-4ef8-af3b-1e931bf50d72",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "07780c5c-6238-4f7d-ba13-799cd597445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698cf600-4f09-4682-a1d9-2cb4bc8445f0",
        "cursor": {
          "ref": "ddae527a-a9b8-49b2-8700-afb2597c4d68",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f80bd8d2-8bf2-47fa-a275-66b2fbcdc1ab"
        },
        "item": {
          "id": "698cf600-4f09-4682-a1d9-2cb4bc8445f0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e13a631-1242-4606-8c62-fa4661188446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fa4665-6ff9-4c07-956a-34251f79d3d0",
        "cursor": {
          "ref": "0af9bf50-6a70-4c31-9680-5cc9272ea014",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "447d3cbc-e68c-4900-8e4f-15c6a2c7bc52"
        },
        "item": {
          "id": "11fa4665-6ff9-4c07-956a-34251f79d3d0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a687efe3-e855-49af-81ff-1576fee8de44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af11a50-c7bb-4a0d-a658-b3948779a1de",
        "cursor": {
          "ref": "5d760b51-6b8f-4ac5-9774-740d7c5304c6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "af816546-aa3b-470b-aed2-589ead23d0e2"
        },
        "item": {
          "id": "6af11a50-c7bb-4a0d-a658-b3948779a1de",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7befcabb-e49a-494d-99fc-3147e3ca604d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27d2c70-1c12-48d7-b1b8-c33a791465c8",
        "cursor": {
          "ref": "68186e5f-b9be-4231-9403-5d889a00556a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b5b2a09c-02b8-4d7e-a1a0-f698c353676a"
        },
        "item": {
          "id": "b27d2c70-1c12-48d7-b1b8-c33a791465c8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "521a0fbb-f5dd-424b-8449-fce9840c1a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155f3a5-6f5e-4743-896f-38c8993f0bf8",
        "cursor": {
          "ref": "b9b66544-7436-4ec6-bd69-84604c31f602",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "10faabc0-7bd8-42cb-b60e-764b98e912b0"
        },
        "item": {
          "id": "c155f3a5-6f5e-4743-896f-38c8993f0bf8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3939d8ac-03df-4193-8bf2-6a0ec263b84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea2836b-41cd-4c20-89e7-9364e038905b",
        "cursor": {
          "ref": "c571c284-afb4-4df7-8f53-a78a1cbb93fc",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "25a63c14-8bd5-4a74-955e-6eabeaf08fe3"
        },
        "item": {
          "id": "4ea2836b-41cd-4c20-89e7-9364e038905b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f9e17a87-8bc0-43c2-82ba-12fa914d2a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05e2648-3c3d-423d-9a37-4b175c3df6ea",
        "cursor": {
          "ref": "6a9b82d1-a8b9-4e3d-88b7-600ea0706deb",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22ef5e2f-d0fa-401b-a4db-39b551976ad6"
        },
        "item": {
          "id": "e05e2648-3c3d-423d-9a37-4b175c3df6ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2819f2dc-b884-45b2-be62-3012fae318c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ece634a-5752-48ad-a210-870fcdd774f0",
        "cursor": {
          "ref": "e3edfc62-835c-48b7-96fd-01066b35f449",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4fbb8442-da42-4275-9f92-2590182e7810"
        },
        "item": {
          "id": "6ece634a-5752-48ad-a210-870fcdd774f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "96e9f2a5-dfd3-4eec-b2cc-3c7e5cf1f75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586bb05f-597a-4f7c-9011-3622ee8fa70e",
        "cursor": {
          "ref": "03643288-b5c2-47d8-a963-69aa2a0dfc11",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91bfaa73-5cec-4891-8016-2ff363b64098"
        },
        "item": {
          "id": "586bb05f-597a-4f7c-9011-3622ee8fa70e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "303c7dae-384f-4ade-8290-427e03e7aeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9630c4-df4d-44d6-bb35-deec93649864",
        "cursor": {
          "ref": "2842a721-63ca-44ce-af41-0fa54d7d7d67",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "99d6179a-464b-4574-a9b5-23e3205b6cfd"
        },
        "item": {
          "id": "5e9630c4-df4d-44d6-bb35-deec93649864",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ddfcc795-442b-48f1-b898-777069f1f7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898f4757-ea33-4815-b7c6-030cc990acb6",
        "cursor": {
          "ref": "3d688655-ebc8-4884-8081-00c4b261ac29",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aec4e06f-1b22-430e-8b3b-18083c72f6cf"
        },
        "item": {
          "id": "898f4757-ea33-4815-b7c6-030cc990acb6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "10024dba-6d2a-4d07-ad52-04ce863e7361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98848d9b-a272-47f0-ab10-6191fd98ca0b",
        "cursor": {
          "ref": "825c2e49-0cec-444b-b621-32fae9750e63",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b1fe9b9a-99ec-45ad-8f93-74c8e5c7f204"
        },
        "item": {
          "id": "98848d9b-a272-47f0-ab10-6191fd98ca0b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dd36f096-3c7d-4e0f-bc2e-28265056eb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc19c27-94eb-471c-99cc-8467174ea892",
        "cursor": {
          "ref": "fd999dd4-92ba-4746-88a1-edbbb770c3d9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4705b93-5516-4330-a0ce-6999fe27598e"
        },
        "item": {
          "id": "7bc19c27-94eb-471c-99cc-8467174ea892",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0b4e3279-ca88-424c-a7b6-bdb276079f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61601332-e9f8-46e1-8004-ec2f49db8b70",
        "cursor": {
          "ref": "5e45a9fa-a14a-4d02-82fa-b888d6f09d19",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "afe78d37-e305-4d52-97ad-b947369f71cf"
        },
        "item": {
          "id": "61601332-e9f8-46e1-8004-ec2f49db8b70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "64465595-3813-4fdd-b0e2-f7275fa4f946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b977d-fb63-4ab0-b9cd-674ce3795251",
        "cursor": {
          "ref": "4f36d2b2-8c51-4d6d-8e58-d8c45b1fb55f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "30e6d5c8-b6e9-4923-8414-ecb75eee2557"
        },
        "item": {
          "id": "2c8b977d-fb63-4ab0-b9cd-674ce3795251",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81c4232a-8835-4d5e-b986-781b5baf7e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f1855a-e786-4194-97b6-cdf845d25b1a",
        "cursor": {
          "ref": "a5bbbb95-b366-427b-a2a8-70863b7650f4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "65174a05-d29d-4cad-a01f-4e80d9d4ee82"
        },
        "item": {
          "id": "49f1855a-e786-4194-97b6-cdf845d25b1a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a4cda599-89af-494b-a86f-f3ac3c28a9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa5c8e7-5db8-4bed-91d7-afdedbb39467",
        "cursor": {
          "ref": "2aa7f8f0-e524-4710-a663-6dec33d62196",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "57cc3f7a-0c4e-4f25-a036-a215194c8f4b"
        },
        "item": {
          "id": "4aa5c8e7-5db8-4bed-91d7-afdedbb39467",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "87d8bf93-2512-4f3a-b958-9c75345ae6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4abdae-af93-4cd4-baed-4a1b32cbf811",
        "cursor": {
          "ref": "9da613bd-75d5-4858-b8c6-569285a23fcc",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d4eb5b6c-b416-42b6-b9aa-7a9f5331d1fd"
        },
        "item": {
          "id": "ad4abdae-af93-4cd4-baed-4a1b32cbf811",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "66b2f788-5d42-45ba-bd1b-c587d5f3e631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bde6fbe-fa88-4c73-9a38-f39f5a472b78",
        "cursor": {
          "ref": "8d35fe6e-4178-43ee-b4f2-3660648cfcf2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d68bcbfc-d65d-4750-b808-3f966de5f932"
        },
        "item": {
          "id": "3bde6fbe-fa88-4c73-9a38-f39f5a472b78",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "60a197db-39ef-43fe-9348-4f8ca2b455de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed072551-cc74-450f-8063-6d1b223aef5c",
        "cursor": {
          "ref": "8c3c7ff3-45f9-4034-b9f5-b0c3317024c7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a78ff710-a481-4200-8692-41f92baf1ab0"
        },
        "item": {
          "id": "ed072551-cc74-450f-8063-6d1b223aef5c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7952f961-1db6-4051-b407-9f7ec35239a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f606e25d-f149-4517-862c-b5f00d19fd65",
        "cursor": {
          "ref": "5fd86f12-3602-4ebf-8593-3ea321dd442c",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e2fd6bb1-2c7d-4556-b551-c718d6186b5c"
        },
        "item": {
          "id": "f606e25d-f149-4517-862c-b5f00d19fd65",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "188dfdb4-5a1a-4e88-b32d-8da9ad9b860d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c802ee7a-835b-4abe-9d0a-d4c61bdef114",
        "cursor": {
          "ref": "53613a93-68d5-4438-924e-1052bd61566b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c46759b6-5049-49a4-8db6-25a190afa2e2"
        },
        "item": {
          "id": "c802ee7a-835b-4abe-9d0a-d4c61bdef114",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6508f427-fa28-4892-83b9-5d996421a8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76026575-33fd-4f0b-ae92-b941d5e9c6e2",
        "cursor": {
          "ref": "756da8ea-207f-405e-90d5-6f386a21e9b3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3d9d555d-dae0-44a5-842d-98780711a7de"
        },
        "item": {
          "id": "76026575-33fd-4f0b-ae92-b941d5e9c6e2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "70062c9a-de29-49e6-8a79-e44110e6f427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35227db5-f60e-4007-a385-5504157d6e8b",
        "cursor": {
          "ref": "aebcfd10-01e6-4f29-974f-5961038c5e12",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7d0ad809-cfb5-4355-a38f-ae46ce7a8e6d"
        },
        "item": {
          "id": "35227db5-f60e-4007-a385-5504157d6e8b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f1d909d-4354-44b5-b70c-aea4196e0c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0887a8e-9afe-4b01-b0f2-4285c7fbad6d",
        "cursor": {
          "ref": "92b6cd02-9a99-4afb-891d-59fe9406ed7d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "952670e2-9dde-4e1a-8ff3-cee653fbfdca"
        },
        "item": {
          "id": "b0887a8e-9afe-4b01-b0f2-4285c7fbad6d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a495a693-a8b6-4e25-89ce-9cf3a6169132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd406a6-9766-4b01-8503-94bdc4fed934",
        "cursor": {
          "ref": "e20e8451-e45f-47b1-9171-cc4a91382856",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a1512235-b7dc-47af-b2d9-5c1203073f87"
        },
        "item": {
          "id": "1bd406a6-9766-4b01-8503-94bdc4fed934",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "052f47c1-fe11-476c-8fb3-419b296cd23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195b4e72-8dc2-45e3-90bf-ce74a7af3cd3",
        "cursor": {
          "ref": "7eab2352-a472-4f9e-8a33-2ddf6185b48d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3ece9a46-a640-459c-9329-4025da92fc94"
        },
        "item": {
          "id": "195b4e72-8dc2-45e3-90bf-ce74a7af3cd3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cc316822-3c40-43e6-8482-0f24cc544100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0835e26f-fb22-40a4-9aa6-0cfc9ec5b304",
        "cursor": {
          "ref": "28fd1103-6769-4da1-ab6d-6827ac2447be",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "55294b63-f301-4714-a453-ab4f80851ac9"
        },
        "item": {
          "id": "0835e26f-fb22-40a4-9aa6-0cfc9ec5b304",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a7b681d-1214-4a1e-82c5-b890ae320373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1ce835-bebb-45bf-9a88-a4d856a68246",
        "cursor": {
          "ref": "8c3a4e96-5cf9-451c-9975-47822caf16cf",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cad09da1-11a1-4495-962f-cfb36b0346bc"
        },
        "item": {
          "id": "3d1ce835-bebb-45bf-9a88-a4d856a68246",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "91ed764c-240a-4854-bfac-483af261623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629853a-423f-448c-92c6-b2de8f5f2ac7",
        "cursor": {
          "ref": "df943259-78f1-4e7c-ae4e-acd3b176d77e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cfc2c4dd-dd71-4f1e-b8ef-ca23d49a077e"
        },
        "item": {
          "id": "b629853a-423f-448c-92c6-b2de8f5f2ac7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "72b55a29-75dd-4ba2-a4bf-6982eb469a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d0f49e-7432-4c6b-97d2-6f94ada03118",
        "cursor": {
          "ref": "73ea5185-484c-4c94-a7a9-7561fa465487",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bd8d1142-9ef7-462b-a8eb-06e39f99c98f"
        },
        "item": {
          "id": "44d0f49e-7432-4c6b-97d2-6f94ada03118",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "19a88e2c-41ca-42ed-8bcb-80576a4683ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7cc98-746e-4961-a80a-9e53c66707f8",
        "cursor": {
          "ref": "1fda2787-a632-439e-91df-f2fa576f1514",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b9e8e103-a734-484f-8457-7fba541350d5"
        },
        "item": {
          "id": "71c7cc98-746e-4961-a80a-9e53c66707f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "82cc0e23-5887-449f-a5e0-c907341ca1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f73e077-9265-420a-9507-fbec7f224832",
        "cursor": {
          "ref": "57d02d44-9eda-4d31-8096-57ec0cad9c02",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d00f75e7-0221-44fe-9e11-7b7b73dcb2e3"
        },
        "item": {
          "id": "6f73e077-9265-420a-9507-fbec7f224832",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6e82d897-a6fa-4fc4-9d20-83d3bfd2817e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f305056f-d439-47e8-bd88-909ba2a5b316",
        "cursor": {
          "ref": "69547005-bf68-4d75-9421-1cf0c3bb5794",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "302b20ae-ffa3-4755-a0a2-444b7503519f"
        },
        "item": {
          "id": "f305056f-d439-47e8-bd88-909ba2a5b316",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6a164be3-c45f-487b-bc5f-90e225673318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491db066-efcc-4910-9cad-2055db4b08fd",
        "cursor": {
          "ref": "fee60694-64af-49f5-afc6-f631f6aac1a8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3dbaaaf0-ba59-4b6a-9b65-2b3c6bcfb92b"
        },
        "item": {
          "id": "491db066-efcc-4910-9cad-2055db4b08fd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4b4e8bd7-210d-460a-9612-dde8cc7f2738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b4924f-9435-4efe-be58-af48994f77c2",
        "cursor": {
          "ref": "cde8f924-46e5-4cbe-9b6e-569830db2ec2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d7b7d3cc-56db-4a4b-a626-e5d3660fb058"
        },
        "item": {
          "id": "43b4924f-9435-4efe-be58-af48994f77c2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "783b8d4e-2e8c-4014-aa9c-52f239ba32db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74af7b9-ded0-4bf9-a5b8-9d0591aa398e",
        "cursor": {
          "ref": "35229b1c-1753-44c2-9e44-455214cd2ff8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f04c18c5-2732-4ab3-9859-24b898bb63e6"
        },
        "item": {
          "id": "d74af7b9-ded0-4bf9-a5b8-9d0591aa398e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "35ef73c6-cb66-40f1-ac3d-be0664df9c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1798ab-a517-4918-98c8-017bf7e22714",
        "cursor": {
          "ref": "adb0becc-2c84-4644-ad91-b3a50c072b24",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f5a7936-f2a7-4ecd-85d2-7a69f32c18d4"
        },
        "item": {
          "id": "2e1798ab-a517-4918-98c8-017bf7e22714",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "772d9eae-9f2a-459a-aeb0-65669ef909c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2e95ee-4d3c-44e9-8b91-9172ab55a72e",
        "cursor": {
          "ref": "2271618b-7104-4b88-85e1-63f24d00543a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "90707ecd-994f-41e4-b278-a05be8d3275a"
        },
        "item": {
          "id": "9b2e95ee-4d3c-44e9-8b91-9172ab55a72e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "679a51a1-4c47-42ce-b273-a81ce8682389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be51e714-a7f2-4c78-ab8f-af82373f80eb",
        "cursor": {
          "ref": "02b70502-5919-4d60-803e-daff70cf91a3",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8f459130-330a-4d24-b507-83fa99a3790c"
        },
        "item": {
          "id": "be51e714-a7f2-4c78-ab8f-af82373f80eb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b44e9c06-1a59-4ea0-9125-f1f73558d887",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d0a4f0-ed47-4e0d-b9c6-72dc40fa968b",
        "cursor": {
          "ref": "8a6e5e92-b806-44eb-af26-14d121d3cb4f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7d0b831a-1e04-419c-b081-1d7a6edf4033"
        },
        "item": {
          "id": "58d0a4f0-ed47-4e0d-b9c6-72dc40fa968b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b5e5d0d-16be-43fd-87c6-9b95ca35e181",
          "status": "Created",
          "code": 201,
          "responseTime": 7651,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a8cd7b-76f7-4cf0-9e31-110a9001e02e",
        "cursor": {
          "ref": "b6121f33-4c4c-4022-b5d5-ab8752b9b609",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1e24fff8-409d-4e63-90ae-e6a040f503d0"
        },
        "item": {
          "id": "a6a8cd7b-76f7-4cf0-9e31-110a9001e02e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e6942f15-45a0-43f6-a48e-e35991a91b75",
          "status": "Created",
          "code": 201,
          "responseTime": 7365,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7592b693-96e8-4c9b-9af0-82d5f6890b52",
        "cursor": {
          "ref": "a4e255c5-8296-4caf-9dee-6cfd8a41cb9f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ac1ec357-3b84-4b99-9564-8f4a68c00173"
        },
        "item": {
          "id": "7592b693-96e8-4c9b-9af0-82d5f6890b52",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1cb6b043-d5aa-4506-8355-45202f95effe",
          "status": "Created",
          "code": 201,
          "responseTime": 6788,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54974b94-a738-46d7-bfb2-845d5025d2c6",
        "cursor": {
          "ref": "cbfcc29c-4ffe-4eeb-99d2-2cf99d5c9271",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "230e6206-1ada-4659-8e14-443cebcd0c14"
        },
        "item": {
          "id": "54974b94-a738-46d7-bfb2-845d5025d2c6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd2493c7-52ce-4f5b-a2ba-dcac633bd1f0",
          "status": "Created",
          "code": 201,
          "responseTime": 6948,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c349d7d7-aeca-4623-9450-388083c810a0",
        "cursor": {
          "ref": "00af1a98-cfd0-4292-a630-796a966f1dc4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "41762ad0-f496-45fc-a093-804c9bfe6c8c"
        },
        "item": {
          "id": "c349d7d7-aeca-4623-9450-388083c810a0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20a0fa49-c86d-4770-a7c4-027d44fdb49e",
          "status": "Created",
          "code": 201,
          "responseTime": 6262,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a751c89c-b63f-4230-b522-eed5403ef025",
        "cursor": {
          "ref": "f5ac91bb-6780-4f03-8e9b-b30e0a20a4b2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fcdb18e5-cd15-41ae-8c10-e3c6342caa97"
        },
        "item": {
          "id": "a751c89c-b63f-4230-b522-eed5403ef025",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0b3f9ff2-a734-4d74-8a3b-2e1c2e8cd7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d3f7abc2-184c-445d-8470-20632c46de76",
        "cursor": {
          "ref": "10407b6c-3cf6-48a5-8636-98e3bf61f730",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4b0536c8-da06-4464-b713-b8b505b79354"
        },
        "item": {
          "id": "d3f7abc2-184c-445d-8470-20632c46de76",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0f48c56c-94f3-46a6-a94b-298aeed1c86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0bcb67-28cc-470e-b449-0ae8a1b6b4e8",
        "cursor": {
          "ref": "2261f432-6678-4053-91b0-61bf6424222b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fdc7fbf0-e918-40f5-bed5-b00eaaa12c00"
        },
        "item": {
          "id": "8c0bcb67-28cc-470e-b449-0ae8a1b6b4e8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4c84313a-1849-4926-8934-104656db8564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90298c3c-4c81-4b4b-b0bf-7589a3e57b55",
        "cursor": {
          "ref": "d0e6aca3-0575-488f-b1bd-c35a685a6944",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "11ed0e26-6e90-459b-bd25-c80d6abb4c5f"
        },
        "item": {
          "id": "90298c3c-4c81-4b4b-b0bf-7589a3e57b55",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e2b1f4e-58f9-40da-a0b7-2b5b96a4ff43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e245ec8c-a02c-4f6d-bd5d-291e4c4b090b",
        "cursor": {
          "ref": "d8d763d1-ab1b-4f07-b615-c946c660abc1",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eb35b2fa-f239-400f-9df0-76a3532b9a18"
        },
        "item": {
          "id": "e245ec8c-a02c-4f6d-bd5d-291e4c4b090b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc7c27ce-69da-4518-9c57-b7616ffe7b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a57e8b3-afbd-41be-8aeb-f667fb67fe4a",
        "cursor": {
          "ref": "b8ae8ff5-887d-4dbc-87ab-638c193b9418",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "914a99ad-9db7-4f44-99f9-abfe673ca660"
        },
        "item": {
          "id": "6a57e8b3-afbd-41be-8aeb-f667fb67fe4a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2a15e741-cb16-48f8-a9d5-ca7795df47f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e3873c-041f-4a6f-819a-f8e6082ff2ee",
        "cursor": {
          "ref": "1ff9c5fc-1295-493a-87f9-73350cddf9d5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2e5ddb09-9724-4d0f-b59f-db130f6024d2"
        },
        "item": {
          "id": "e9e3873c-041f-4a6f-819a-f8e6082ff2ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4f53bd96-d2ee-4e7e-a641-e54ce68689c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3522ffa3-3d1d-4714-98e7-f54e2d171f03",
        "cursor": {
          "ref": "243dd644-83b9-45d6-9219-ac87f1ed9245",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3dcac9ff-e46c-4713-b362-542ee20b9220"
        },
        "item": {
          "id": "3522ffa3-3d1d-4714-98e7-f54e2d171f03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5d790900-20f1-448d-91e1-5f88398045f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d369043-3d24-4dca-84a8-b0aebef23ee6",
        "cursor": {
          "ref": "06215980-b52d-468c-b722-0d0e2c19ee92",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d3467941-ffa8-4f84-a62c-3fb00e689fe1"
        },
        "item": {
          "id": "0d369043-3d24-4dca-84a8-b0aebef23ee6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b9d43af-9112-4db0-88ec-3e2b11628744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106f367e-282e-407f-aee5-52cb72b83c12",
        "cursor": {
          "ref": "99759bca-effc-484a-8628-717cc6fdc68a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b0e165df-8e96-4857-b909-e86500bca46b"
        },
        "item": {
          "id": "106f367e-282e-407f-aee5-52cb72b83c12",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "86f34d1f-fa0b-4074-8080-f77854c74736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee89968-f453-4b9d-b950-44717871f373",
        "cursor": {
          "ref": "62a761b7-99de-4d59-b11c-595d8d8e2aaf",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0663efe4-bc79-457b-aa26-1c09f11a0da8"
        },
        "item": {
          "id": "5ee89968-f453-4b9d-b950-44717871f373",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "09b43aab-15a1-4763-936f-ad7526a74238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085d182a-3e8c-4190-bc3b-4aa02264d5cf",
        "cursor": {
          "ref": "f40bfa4c-90a0-46b2-a2c1-26b4575e9bb2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0deeea73-5f99-4d19-aaf4-63e03a8e0d65"
        },
        "item": {
          "id": "085d182a-3e8c-4190-bc3b-4aa02264d5cf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d8df83c4-1df3-4a91-9dcf-22617638c207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a8128e-f353-49eb-aea7-064f3d6d7d3c",
        "cursor": {
          "ref": "5a8301bb-b542-4ab7-96ae-f0144860f98d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "679d6cdc-32a0-4396-bc67-fe21abcfee0e"
        },
        "item": {
          "id": "35a8128e-f353-49eb-aea7-064f3d6d7d3c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "99ad68d8-3067-4d51-bf13-a337258eb78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec4011-6a43-49ba-811d-713cfcd7be09",
        "cursor": {
          "ref": "0caff5f8-b6ef-4211-8b14-346b11bad84b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3ced1d38-b063-4bd2-b26a-1f088fa5dce1"
        },
        "item": {
          "id": "8cec4011-6a43-49ba-811d-713cfcd7be09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d59e0674-6f30-4bf7-a343-56ac781ec9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd09e68-e348-4a80-9a02-5491543a52d0",
        "cursor": {
          "ref": "068e5a07-cef7-4578-b585-792db4196fe2",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "01d41f38-0ad0-430b-ab9f-5dac2cc05f3c"
        },
        "item": {
          "id": "0cd09e68-e348-4a80-9a02-5491543a52d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b30a0889-0abf-4f98-9cf6-374f4e200df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b08cb0-1eab-4de7-b96d-a0ef85556d4b",
        "cursor": {
          "ref": "54d8ae3d-6eeb-4597-9a5e-b4460b3a4853",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "418bc325-1ad1-4c7c-b845-2ab1c62623fc"
        },
        "item": {
          "id": "d5b08cb0-1eab-4de7-b96d-a0ef85556d4b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a60ad23-4cbf-4544-b797-7135840ebc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b04859a-77b5-47ff-ac2a-d09ee787720a",
        "cursor": {
          "ref": "ee0b1644-6090-4d7f-9185-f520ee9c528a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1ed393dc-38dc-42a2-809a-0adb45f370ff"
        },
        "item": {
          "id": "9b04859a-77b5-47ff-ac2a-d09ee787720a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4531459c-73b6-4b2c-b4bb-fc1e013f874c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af3ef1d-c3ea-4421-b365-0afc2d34d0a0",
        "cursor": {
          "ref": "9636924f-025a-448c-b468-aae9a5fde34f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aadd6e5b-3053-4a66-a9f2-bc0df99eb2dc"
        },
        "item": {
          "id": "0af3ef1d-c3ea-4421-b365-0afc2d34d0a0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7dbb9ece-cada-437c-9277-728afe9a8c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8901e95f-bbbf-4d2b-933a-727a6816692d",
        "cursor": {
          "ref": "61145cc9-5636-4622-bd34-b5cf2e24591f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57923f74-50b0-43b6-9d2d-2698a0764627"
        },
        "item": {
          "id": "8901e95f-bbbf-4d2b-933a-727a6816692d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d349cbcc-1a28-4965-a7be-95aefccedecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc897a-7d3e-42cc-8b58-4669cc0ebe97",
        "cursor": {
          "ref": "878c1b95-29a9-4acd-abf4-3691bab5e379",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3805399b-fa27-4604-8bcd-d1ea07781b3a"
        },
        "item": {
          "id": "dcfc897a-7d3e-42cc-8b58-4669cc0ebe97",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "482cb72e-837c-4efc-86d0-b5d132ef23cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9939bb1-e8a5-4d47-97e4-defbf2ea9484",
        "cursor": {
          "ref": "d448d501-d41c-4da4-bfb8-216318299f62",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4ee2e4af-f8ee-4cce-820b-ced611d0da84"
        },
        "item": {
          "id": "b9939bb1-e8a5-4d47-97e4-defbf2ea9484",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "308ae05e-0c1f-4c4b-ab07-4ab1ecec2ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6891b2d0-fe16-47d4-a65e-5be62e30ca96",
        "cursor": {
          "ref": "6ff70cff-5f8a-4976-883f-8967c2a22bef",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "495762c7-9619-431a-802d-c806377f9c5d"
        },
        "item": {
          "id": "6891b2d0-fe16-47d4-a65e-5be62e30ca96",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c5ea5821-5a20-42c2-9fab-60b98a507b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3374a20-c82a-4a7e-9069-150c7a1e675b",
        "cursor": {
          "ref": "f4e07797-6e87-4c6e-b7b6-ad38bc279572",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d85d9393-39ed-4f10-81a7-4430290a5f5d"
        },
        "item": {
          "id": "b3374a20-c82a-4a7e-9069-150c7a1e675b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f3442efd-eeef-4d51-ba2b-4363890cfb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84d46ce-5aae-4c13-8f78-498cc202a4aa",
        "cursor": {
          "ref": "45f35cce-fec7-4d5b-9cf7-29e996a9d6f4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d0b9bf93-79c3-4748-8d9d-441280aaf6ed"
        },
        "item": {
          "id": "d84d46ce-5aae-4c13-8f78-498cc202a4aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "09070f79-1dbe-4ad3-a9bd-d4f4588c2fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b57463-a565-486d-8f55-c8b2118c9f81",
        "cursor": {
          "ref": "108e9936-621c-4138-b7f6-c7ccb9e25322",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b297cf4b-9649-4b5f-8d85-e27d941066ea"
        },
        "item": {
          "id": "99b57463-a565-486d-8f55-c8b2118c9f81",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3bd7ade-46f4-4f50-a169-838425d3665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831a8d1f-d490-4b95-8ff5-267e72aa139e",
        "cursor": {
          "ref": "c1b141be-80ce-4ca6-b13d-7922b847ca10",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ec7a824-08be-4b57-8d75-dae6dc8fd3b5"
        },
        "item": {
          "id": "831a8d1f-d490-4b95-8ff5-267e72aa139e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c9fa382f-f118-4056-81d2-f6f95987c779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abea5bb-5e2c-42e0-846a-22cd605760e6",
        "cursor": {
          "ref": "85d9ed13-59f1-48be-b577-85e85d2c00d6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4bc16f0e-a3c6-4f45-b663-5db503ef324e"
        },
        "item": {
          "id": "2abea5bb-5e2c-42e0-846a-22cd605760e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "303e286a-0817-401e-a8c1-11bcc5df85c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09429ee-7916-463b-944d-340b9df9701c",
        "cursor": {
          "ref": "dacb0fd2-952a-4ef6-ba64-43011ce5bbd0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "71047c01-963c-43e9-98a6-fc10e54f709c"
        },
        "item": {
          "id": "f09429ee-7916-463b-944d-340b9df9701c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6eb818b4-2fee-4d59-b2e6-78f48a60e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fb1e7d-a3ef-4ed2-9593-d793e1442ec0",
        "cursor": {
          "ref": "ca037948-ed7b-481f-bd8e-4e6c2251589f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6849d058-f916-4418-bcc7-61c55d0df649"
        },
        "item": {
          "id": "88fb1e7d-a3ef-4ed2-9593-d793e1442ec0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3f874620-118f-418f-989a-3230bd67c4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4987a6-3a48-433a-8898-e99ac63d2a8d",
        "cursor": {
          "ref": "ff4526a7-bf3f-47de-81ee-2d581edc0d70",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "89562471-3e06-4f04-901c-bd00a92863bb"
        },
        "item": {
          "id": "ed4987a6-3a48-433a-8898-e99ac63d2a8d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fbaa1da6-5789-4e02-8e59-ec466b02ce19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61fac4a-f0e9-445e-beaa-34a3080d0675",
        "cursor": {
          "ref": "b23a9cb7-c3bc-40c3-b892-98b1f5ca2915",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4491e8f0-00b5-4403-a600-acb658132eee"
        },
        "item": {
          "id": "d61fac4a-f0e9-445e-beaa-34a3080d0675",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f0dcac8f-da02-4a39-8609-2376fb7320ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0d4a6d-08db-4f34-8830-1f93b11555c3",
        "cursor": {
          "ref": "0ed9458f-e98b-4063-a45a-f42e9872978d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b7b4649b-9745-4af6-a82a-32ed3d87a7cd"
        },
        "item": {
          "id": "4c0d4a6d-08db-4f34-8830-1f93b11555c3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "92a6ff0a-805a-4d2d-9489-29453bb49405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780652cf-0b07-434f-83b8-6fd2b55b5945",
        "cursor": {
          "ref": "4d611715-a11e-4a81-94c2-39593f8f1fe7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "192349ca-bae0-4331-9f16-7cf19e63b5f1"
        },
        "item": {
          "id": "780652cf-0b07-434f-83b8-6fd2b55b5945",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c5cbeb68-fcbd-420a-a2cb-9b8be4bc6b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6922c59c-cf1b-4eac-9eff-2ba78882b59f",
        "cursor": {
          "ref": "5313d94c-4bc0-4d52-9a22-f5c14e4682b4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bd04ac21-2d72-4b6a-ad23-b337ab9a76cd"
        },
        "item": {
          "id": "6922c59c-cf1b-4eac-9eff-2ba78882b59f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "574c336c-d110-48d1-a7f1-3c820855ff72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe6552a-27b5-4620-98a7-db995944712c",
        "cursor": {
          "ref": "5af0bb9d-4fe3-4644-b038-0b6733b43e93",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ae03c343-d66a-49a5-b88f-308960d90d23"
        },
        "item": {
          "id": "dbe6552a-27b5-4620-98a7-db995944712c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e84aedb0-6964-4812-9d96-7a2500ae5cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e9052b-4f29-47cd-b89b-84383befd699",
        "cursor": {
          "ref": "ee43ebfc-1fda-41f6-a3a0-dcde4034eb6c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c65f2151-c331-44da-9302-f5fe34ed9a88"
        },
        "item": {
          "id": "b3e9052b-4f29-47cd-b89b-84383befd699",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "caf2c45d-e2b1-49d6-a8a5-82082b252584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0c050a-d566-42a6-90c7-5d1f70ccb3e7",
        "cursor": {
          "ref": "ca3303b9-ade5-4565-bf26-a31420671c6a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6b9e435f-d939-4e63-8de3-cb1a183884a5"
        },
        "item": {
          "id": "ec0c050a-d566-42a6-90c7-5d1f70ccb3e7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a3c43cca-3a3c-4dab-906a-a21f13d02291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5388a8cc-a024-48a7-aceb-3298c3165c7b",
        "cursor": {
          "ref": "fb51d4dd-2da7-4f37-b1cf-33cb5c6b34ff",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "468cef7b-3462-4bb6-9c9d-04540cc18e9c"
        },
        "item": {
          "id": "5388a8cc-a024-48a7-aceb-3298c3165c7b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c8fbf6ef-f8a2-4ee0-8d58-9ca0836b7ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a0111d-9399-4573-89be-9d2dc2fd7943",
        "cursor": {
          "ref": "d3cb0a47-55fa-4996-ba93-95517a70998c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2bb99a63-09c2-4ac5-b10f-ee73c1a08b42"
        },
        "item": {
          "id": "82a0111d-9399-4573-89be-9d2dc2fd7943",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9f81c6e5-15a6-49d7-9cd6-ad1d0d9fafd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e20cf4-62db-458a-a90e-214323ee6aab",
        "cursor": {
          "ref": "314063f5-641a-412b-8a24-35e118f2d690",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "433c0c42-074b-4a00-8b40-5818a583cfa9"
        },
        "item": {
          "id": "06e20cf4-62db-458a-a90e-214323ee6aab",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "04e12fb3-b582-4508-927e-a785852e1d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70299c90-b0ab-48b8-82aa-e89c9ba8da80",
        "cursor": {
          "ref": "90805d1f-6207-4183-a724-6e77c4559a3e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cbe3d208-61f4-4da3-a10e-92b9460aba7b"
        },
        "item": {
          "id": "70299c90-b0ab-48b8-82aa-e89c9ba8da80",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bb0b284a-09ef-481a-86a7-8de40f2a1b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a374e0-4589-4d0c-bcb4-0866f85b95be",
        "cursor": {
          "ref": "b57af7a0-e56b-4a7c-95bf-46dccc12b665",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2a4faa4a-c3c9-454e-aad9-189646f16bd7"
        },
        "item": {
          "id": "40a374e0-4589-4d0c-bcb4-0866f85b95be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6ce2b5aa-f37c-477a-a583-b3f3f0685119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a09a9c-f633-4ee2-b112-3b9075ebfc6b",
        "cursor": {
          "ref": "92d42d65-b017-4d38-84c4-3e278e59f698",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "59cfe037-a0c0-460e-870f-998f68bfb597"
        },
        "item": {
          "id": "a8a09a9c-f633-4ee2-b112-3b9075ebfc6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "822e02a1-515b-4bc5-ab03-52d7a18a67ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66819b38-6b5d-4e04-a969-c8feac8e6a00",
        "cursor": {
          "ref": "957a7cdf-6c20-4ef6-b5ae-dd931de527ed",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e5624f6d-a9e3-44bd-b6c1-47b58b98de5e"
        },
        "item": {
          "id": "66819b38-6b5d-4e04-a969-c8feac8e6a00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5048d6e8-b426-45a0-bb4a-f086a32208c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d38358-82db-4e04-a506-1e6e5f13ecc0",
        "cursor": {
          "ref": "b292233a-b0db-452c-8f7a-bda43826d178",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a1c20b64-3818-4d5d-b107-87b75daf0e28"
        },
        "item": {
          "id": "39d38358-82db-4e04-a506-1e6e5f13ecc0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "995ba260-05bb-428b-a692-2e0be8efaa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3403e9-a3f5-4e47-9e64-aa897f38bec4",
        "cursor": {
          "ref": "42419287-6a39-4da8-b078-5a35cbcbf2a1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fcac3bdb-9ba1-4906-a171-4db27413025a"
        },
        "item": {
          "id": "cd3403e9-a3f5-4e47-9e64-aa897f38bec4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cac9d630-5d9c-41ab-a480-fe84f499192c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ecd6eb-9c60-48ed-babf-0f9fc42936a5",
        "cursor": {
          "ref": "32e96ec8-3797-463e-9b2a-8a8ae2bc8df1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "234b0f7c-c29f-4e2b-99aa-395c120eda1d"
        },
        "item": {
          "id": "02ecd6eb-9c60-48ed-babf-0f9fc42936a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "421ee4a1-250f-46aa-99f9-7f40344a15fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50460d4-0962-439e-8d2c-849255458192",
        "cursor": {
          "ref": "548dc0a5-6771-496f-8685-f4bcb3f91129",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7e2cf8fd-a880-43b0-aa4b-85b36e2b2167"
        },
        "item": {
          "id": "a50460d4-0962-439e-8d2c-849255458192",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fdf0234d-00aa-4786-a57f-fd9bda70f580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c3f939-1a8b-4bcf-a39c-a04c0d3d506a",
        "cursor": {
          "ref": "28b23176-5256-4567-b3bb-dc18aa50edec",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4ab6ac10-4e28-467e-9791-809b2b3b3e5b"
        },
        "item": {
          "id": "61c3f939-1a8b-4bcf-a39c-a04c0d3d506a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "524e2cf9-356b-45dc-83f0-1345bc01c829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82842d1a-366f-418f-9afe-90f582d783b8",
        "cursor": {
          "ref": "672aaa5c-9afb-4178-ac1c-54ec59f80408",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7eedccb0-9486-43d0-a5d7-8655cc91aaa6"
        },
        "item": {
          "id": "82842d1a-366f-418f-9afe-90f582d783b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddb4c15a-3698-46f1-b75a-8647521529b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3bc2d6-a87c-4803-ade1-ef3c10457b53",
        "cursor": {
          "ref": "0c01e515-d5b6-4c0e-a0e1-b7d01e8896a7",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "95e189e2-df06-4f66-8826-8c96f5666071"
        },
        "item": {
          "id": "9c3bc2d6-a87c-4803-ade1-ef3c10457b53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2dd556b1-26c1-4db7-8f91-db3a112d954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83505c67-812c-4cf4-998e-3e44482cd676",
        "cursor": {
          "ref": "7300b9b8-6b3d-4a56-9d42-861ead319403",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "de7a6021-74de-4f37-8b05-46d44d6823c0"
        },
        "item": {
          "id": "83505c67-812c-4cf4-998e-3e44482cd676",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e16e3282-a4d6-4a1b-b28e-609ec3c14003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee90647-1300-42b5-b00b-8ea3815b62aa",
        "cursor": {
          "ref": "183a527c-6fb9-4979-86c8-00c929d5364e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cfe5b959-24e6-4e9e-af07-e94977b85c4c"
        },
        "item": {
          "id": "eee90647-1300-42b5-b00b-8ea3815b62aa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce740a09-4f16-4403-9d4e-d2ee46e155e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b054a-f928-4868-aad9-dbfe41c1c439",
        "cursor": {
          "ref": "cfc434f3-18f1-4fbc-b6a3-5380e8cf7cda",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "932df3ea-66db-4439-a36d-d3cc0711d954"
        },
        "item": {
          "id": "035b054a-f928-4868-aad9-dbfe41c1c439",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "33580682-9a9b-4b98-98dd-b34c97577644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f1d01e-41e9-4739-80ab-4b07c25809ac",
        "cursor": {
          "ref": "5178753c-3f4e-4450-a071-99ec7c1c6db5",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f43de88-3d5d-4632-b861-878d1050fe5f"
        },
        "item": {
          "id": "a4f1d01e-41e9-4739-80ab-4b07c25809ac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f9edc18-0032-49d6-9230-33af20104d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a83bfc4-e4a4-479e-90ab-c4eceeb98c51",
        "cursor": {
          "ref": "bd5e372b-5df4-4ceb-b94c-41ef526f81ec",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a623b188-8d2a-41f4-9cd2-375262c8dbdb"
        },
        "item": {
          "id": "7a83bfc4-e4a4-479e-90ab-c4eceeb98c51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c4ec89b-f610-493f-b6ed-5ca86d25b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a2d26-6ff5-42c7-8078-0154879762e3",
        "cursor": {
          "ref": "279603f2-d762-4b85-985b-5e8ff92593c3",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0c38f186-273d-4c49-b5c0-c727b15c9160"
        },
        "item": {
          "id": "db3a2d26-6ff5-42c7-8078-0154879762e3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23292303-d80a-4287-9ff7-0e24123c0458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187a5e07-117a-41ba-b5ba-8d12673699e4",
        "cursor": {
          "ref": "1e7fc6f8-719f-4dbb-9b85-5665a6952c49",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6f4ce34c-848e-4f45-8944-45424841b16c"
        },
        "item": {
          "id": "187a5e07-117a-41ba-b5ba-8d12673699e4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a4b4eefe-8b6b-4274-935e-d8f260cb463c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b7557d-e06a-48d6-a645-3b91c8b30fec",
        "cursor": {
          "ref": "3b50fe0b-2526-4e93-8bf2-c9262c1d22b7",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "53cb8405-279d-472d-baeb-39c8b08a7bf2"
        },
        "item": {
          "id": "c0b7557d-e06a-48d6-a645-3b91c8b30fec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "14b7b517-981c-45bd-8962-69cc678f698f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f20b48-779e-429b-a981-561a8f671a4c",
        "cursor": {
          "ref": "c32d83ae-01bd-4c85-8e42-4e9169314e25",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "34220969-0256-478a-8acb-c3b5741d33e8"
        },
        "item": {
          "id": "41f20b48-779e-429b-a981-561a8f671a4c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ac6b8996-b19e-462c-99e0-935763776f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f5a53e-0668-400c-a859-7656a5542ec4",
        "cursor": {
          "ref": "95c0fd03-734f-4f03-9774-f16647615250",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f5f20b0a-e1dc-4643-8ff5-29b07807a6f6"
        },
        "item": {
          "id": "27f5a53e-0668-400c-a859-7656a5542ec4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3eeee087-219a-4909-9f85-a4cd483be235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee9502-9225-4d86-a8b0-0e1f4822eb47",
        "cursor": {
          "ref": "eaa0197e-8628-4c4b-b89f-c36283d987ab",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "24c05ee4-3f5e-401f-9e7a-53becebc1a89"
        },
        "item": {
          "id": "15ee9502-9225-4d86-a8b0-0e1f4822eb47",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "df33358e-25a3-4aba-81d7-bb89be4a1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ef0236-4746-4ba0-b724-00b8494f15eb",
        "cursor": {
          "ref": "918cdd95-c1b4-45cd-81b8-667a88bd1d16",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0ddaa59c-fd2e-44f3-8e5f-57883486fa24"
        },
        "item": {
          "id": "a0ef0236-4746-4ba0-b724-00b8494f15eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e08ce62c-063b-4b69-abc6-76b5ef05a35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cda6c9-a0af-447b-aa2b-d88bbcd5a57b",
        "cursor": {
          "ref": "16782956-2e77-412c-b0e8-ae16cafaf6af",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e988525b-1ff8-4078-a13a-b4d15e00224b"
        },
        "item": {
          "id": "a3cda6c9-a0af-447b-aa2b-d88bbcd5a57b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "badac4b1-553e-4299-8178-a452128ce091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27751103-270f-4f35-9cee-fb12f38b91f6",
        "cursor": {
          "ref": "6cad2937-7afc-4880-a14d-717de00d2211",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a7abcbfc-3c83-4e54-9c86-4b5ae89d9972"
        },
        "item": {
          "id": "27751103-270f-4f35-9cee-fb12f38b91f6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7c64b97d-2b7f-4450-aaee-e743215f8e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317a1389-f507-4609-83fa-5753392dd920",
        "cursor": {
          "ref": "a6176076-1aed-405f-a3d1-e0198933ca67",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "75fab56d-0d6d-4b42-8d7f-632701fe3d04"
        },
        "item": {
          "id": "317a1389-f507-4609-83fa-5753392dd920",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "81488455-53e9-4d40-9cdd-364cb43f4eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d54aebf-cf25-4e0d-b760-36ad4546b8b7",
        "cursor": {
          "ref": "2908fa61-21b0-47b3-8f6d-3cb02cf03146",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b1c058c-6105-4ce7-86e9-ebe0f1ad0334"
        },
        "item": {
          "id": "4d54aebf-cf25-4e0d-b760-36ad4546b8b7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5ee7ed6d-afb2-4ebf-930f-ea1f291ab53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc8aac2-7010-454b-bc25-cfb093157117",
        "cursor": {
          "ref": "22be03d6-a954-4635-9427-684d4a5b769f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b72af849-4b3a-4b2c-b82b-ad03283e017a"
        },
        "item": {
          "id": "6dc8aac2-7010-454b-bc25-cfb093157117",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1142d300-a292-4fa7-97e7-869b7033b84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17c2083-9703-4930-941a-cda69c55738f",
        "cursor": {
          "ref": "a920d990-f125-48b4-b4cc-e0967fdec752",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d8661a05-fd5a-4896-ba50-422faa27eaf2"
        },
        "item": {
          "id": "c17c2083-9703-4930-941a-cda69c55738f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6f7108fe-626b-4c9a-ba42-a3a4bd07ab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c87097-928b-401f-841c-18083386b51e",
        "cursor": {
          "ref": "b76c1437-9f9c-4cb3-94bc-57a890ac5726",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4750c1a6-6486-49b3-bfcf-b592d2af6f31"
        },
        "item": {
          "id": "f8c87097-928b-401f-841c-18083386b51e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3d97900e-c7a6-4451-b12b-6a31aceb29b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6741c13-ac12-4e37-8f2b-3ea1e2df0b01",
        "cursor": {
          "ref": "2a32d9d9-d1cd-472e-84b2-b643ab92f8d0",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "db6caa37-6f43-4590-9106-66cc6e00529d"
        },
        "item": {
          "id": "d6741c13-ac12-4e37-8f2b-3ea1e2df0b01",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b5110bea-29bc-4290-83db-152ca8d631dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4086a29f-9a8b-4fbe-b895-aa5e02a28b13",
        "cursor": {
          "ref": "57475aa7-35c3-4d5d-aba4-b067530f8d00",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "23d5cf6c-310d-4912-99ee-3f2e7758ee53"
        },
        "item": {
          "id": "4086a29f-9a8b-4fbe-b895-aa5e02a28b13",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "65dba40c-cac2-4a54-9002-dad626935e13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdb7259-3343-4f91-b3b0-52d8cda87aea",
        "cursor": {
          "ref": "4aa200bd-ffb9-4652-8467-d620b9de8a21",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd8312ff-233c-4367-8792-6228a142febb"
        },
        "item": {
          "id": "9bdb7259-3343-4f91-b3b0-52d8cda87aea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "744c5c7f-8bcd-444a-a244-d5ae0562db2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7fb00c-a902-42b6-a409-4bd09f04844f",
        "cursor": {
          "ref": "3eeacd01-862d-4644-8fc5-2354c3c88058",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "94a80a17-135e-463d-9d59-a061b500d809"
        },
        "item": {
          "id": "2b7fb00c-a902-42b6-a409-4bd09f04844f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b82bb901-28ec-4978-a9db-c0d189bb48d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94612d84-432d-4149-bcbf-cbab52c901f4",
        "cursor": {
          "ref": "8df7dd41-9b22-4b9b-8908-4723048f6064",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7d2955fd-dd97-4bfe-8bb0-75ec0b8862e0"
        },
        "item": {
          "id": "94612d84-432d-4149-bcbf-cbab52c901f4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9f995dc9-ebc0-43db-95de-8e8bc61d7fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856b3de6-8dff-4b83-83ea-b4b019cd4fc9",
        "cursor": {
          "ref": "65dc4f61-9341-433d-9e2a-e8b3aea176bf",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e6484c23-2440-4a96-9be8-1e71b9086758"
        },
        "item": {
          "id": "856b3de6-8dff-4b83-83ea-b4b019cd4fc9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3249469e-67bc-43b3-8cc2-c890d2809c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ae4a72-e3cd-40b7-9daf-2ad447b5841b",
        "cursor": {
          "ref": "2c843708-18f5-4b77-97f0-b87e0d72d6f4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aff30d25-142a-4f86-afcd-34dc9e5a968d"
        },
        "item": {
          "id": "b5ae4a72-e3cd-40b7-9daf-2ad447b5841b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6f4c3b82-e5e9-4846-905d-69595f816273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07049439-f12c-4154-9292-30757e1f2d0f",
        "cursor": {
          "ref": "0cdb6ea7-6259-4d17-867e-60be3f825dc1",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "26006ae4-4120-4bb4-a250-2d3eff0ecddc"
        },
        "item": {
          "id": "07049439-f12c-4154-9292-30757e1f2d0f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3b2b0d76-64d3-479b-952c-939b5d8cf11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85956b4f-0591-4e8b-9d34-837196b0ab75",
        "cursor": {
          "ref": "54926536-4f1b-4c02-9113-fd6c5fab929d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c79a5f05-46c8-4d9f-affe-15a1d7de9950"
        },
        "item": {
          "id": "85956b4f-0591-4e8b-9d34-837196b0ab75",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a3e2f9eb-bf1f-470e-b101-b5825a0a22e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082123b7-d6f6-4f5e-991c-6b163e30e2e5",
        "cursor": {
          "ref": "2f336d27-c0b0-4407-b0d2-b25cd2542e7f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "60c9255b-fee5-4983-b687-cfd2f02fc994"
        },
        "item": {
          "id": "082123b7-d6f6-4f5e-991c-6b163e30e2e5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f123bc16-047d-468a-b99c-3e27f4c54d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98880dd7-7416-4754-8859-db2a514916b2",
        "cursor": {
          "ref": "84cac35c-f3b3-4850-b678-3002d5cfe799",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c5cb005-eea8-40a6-915f-a8f5f1822296"
        },
        "item": {
          "id": "98880dd7-7416-4754-8859-db2a514916b2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2ed3e417-9958-4396-8ae3-2b61e65b1fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf86791c-4eb8-4635-a8a6-e3b067cd8c6c",
        "cursor": {
          "ref": "bf5286ce-b44b-4f2c-9524-61c95d811289",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ec3df9c1-fc21-4880-9227-1e980c9470a6"
        },
        "item": {
          "id": "cf86791c-4eb8-4635-a8a6-e3b067cd8c6c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fbc97a87-afd8-4316-8f64-7946ee314795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5210da-e20a-4bc2-a4b2-16e4d1ba2593",
        "cursor": {
          "ref": "19b549d9-5e3a-46dd-afa1-6bebaf1d2c16",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5ecfebc7-c810-4a11-9469-56410f738e7e"
        },
        "item": {
          "id": "9a5210da-e20a-4bc2-a4b2-16e4d1ba2593",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "adb7b676-e0db-453d-b729-c4f2ca7a17ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7edbc2-2f5d-4c7b-b47e-b60f952f09a1",
        "cursor": {
          "ref": "90df90d1-a2d1-4a21-84b8-3437fd913cfa",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6de77025-aed5-4f7c-b7fd-fb2888a880c7"
        },
        "item": {
          "id": "6d7edbc2-2f5d-4c7b-b47e-b60f952f09a1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f5f248b4-5e37-4c04-af1a-e7259639186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a947d8c-97c9-45b8-a259-596dc12eda8f",
        "cursor": {
          "ref": "de96af47-2cac-4d0c-8f70-43f0246babd9",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5e598677-cb6e-4d55-a26a-594c32654ba6"
        },
        "item": {
          "id": "0a947d8c-97c9-45b8-a259-596dc12eda8f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "99645770-a3e5-4b84-8dd0-fe85f67f4bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7e301a-9c12-4cc6-848c-491b6db3dfa0",
        "cursor": {
          "ref": "63c42dca-c340-40ed-a6bc-a712c2645854",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "27c81fcd-af7e-49b5-a0b9-9be5281e4c31"
        },
        "item": {
          "id": "8e7e301a-9c12-4cc6-848c-491b6db3dfa0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6786f69b-ec51-42a2-9dc4-9694f7637959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806e3dc5-441b-46e8-9376-ed26b4bd05a5",
        "cursor": {
          "ref": "2b14f6bb-7178-415f-8847-fb2e9e768ce1",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8ca5c50a-2e96-4c2c-98c1-0d2bd6f7d493"
        },
        "item": {
          "id": "806e3dc5-441b-46e8-9376-ed26b4bd05a5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46fb3f2c-e7c8-4c90-9632-0c85d197361e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76bdd45-fd1e-4f81-846b-c6da146bbc74",
        "cursor": {
          "ref": "7ffbbefb-b0d5-4dcc-91b4-838417009dca",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "939f380b-5df7-4685-b151-154d84671c54"
        },
        "item": {
          "id": "e76bdd45-fd1e-4f81-846b-c6da146bbc74",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "99d29590-da3b-4b92-a4ff-dd9163a89235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef573a9a-af76-43f0-a0e1-1e6f1d1dd5e3",
        "cursor": {
          "ref": "5b72783d-2c0c-47dc-8dcd-feaa6193993d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73a961c5-4ca6-40cf-af78-355d3ed52472"
        },
        "item": {
          "id": "ef573a9a-af76-43f0-a0e1-1e6f1d1dd5e3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "89a02ffc-dabc-47c9-bf21-d18e334700c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46546216-7a8e-4afe-8ee1-af32061fb75f",
        "cursor": {
          "ref": "36dfd66c-2ff1-4af0-8597-c47030ee533e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46f586c1-febf-457f-8fb7-2931e6f9b6fe"
        },
        "item": {
          "id": "46546216-7a8e-4afe-8ee1-af32061fb75f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b381ed2e-162f-475f-9e13-33d46a378068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e0f8b7-30ba-4e70-83f9-fec3a5728db8",
        "cursor": {
          "ref": "af85a5b6-7a6f-4654-951f-ae98ecb89a1d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f91a2f3a-e7b0-4c15-ae4c-e22524b9f4e4"
        },
        "item": {
          "id": "52e0f8b7-30ba-4e70-83f9-fec3a5728db8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef8d826b-c5d9-4b8b-b46f-a7fb45670bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7627d07d-a538-48dc-916e-af0bcf64bc20",
        "cursor": {
          "ref": "f378ffab-7800-4f98-a7ec-50e931924067",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b78ad479-6d62-44d2-a738-2e0d23aed66e"
        },
        "item": {
          "id": "7627d07d-a538-48dc-916e-af0bcf64bc20",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "35270438-4742-4df6-b3e5-2c71108af4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05da4ba6-c6ac-4e9d-a427-b26e2473bd2c",
        "cursor": {
          "ref": "7e6a5559-44ae-4178-8255-4a4870568b12",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7b1d4c57-ceb0-4ad5-abc4-0bf137e0ff45"
        },
        "item": {
          "id": "05da4ba6-c6ac-4e9d-a427-b26e2473bd2c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fd0c68ab-47d0-4704-82b2-1f0ea9d1f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c49cf1e-dab5-431d-815a-813ba7711465",
        "cursor": {
          "ref": "da753ffd-d889-45db-95d1-1b40f8f3b869",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1a5d6bc5-bdfc-4292-9fb0-cdc579c4b5d4"
        },
        "item": {
          "id": "6c49cf1e-dab5-431d-815a-813ba7711465",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3b9753cd-d08a-4941-86ce-f7b5a16c2ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f8067a-a2e8-47c6-8e1b-47d9bbed4958",
        "cursor": {
          "ref": "f7497d1c-f198-4724-a9b3-c9094f92ccbd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b736e11d-e024-4626-972f-1f63a54bbec6"
        },
        "item": {
          "id": "b1f8067a-a2e8-47c6-8e1b-47d9bbed4958",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3edd48b7-c41e-40bd-8186-ee8e0a3ae070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da28dbfa-3145-474b-a1c0-3bfd67e54920",
        "cursor": {
          "ref": "2cac50f8-d963-4bb7-9599-8e10353c7d7e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ee7e81ee-2590-4c8f-8a7a-964a4c6d2979"
        },
        "item": {
          "id": "da28dbfa-3145-474b-a1c0-3bfd67e54920",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f948b667-2709-4d9b-9202-b1483d1ce975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e970126c-8338-4604-ae76-c41019645f15",
        "cursor": {
          "ref": "e5692c8f-39e0-4e34-90af-a4257203204f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "766f0069-d686-4b4b-92b9-cfe8c13a629d"
        },
        "item": {
          "id": "e970126c-8338-4604-ae76-c41019645f15",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2d49bab-80cc-4c39-bf28-1fbf5b70a4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c56283b-b601-4a4d-8056-c1fce8031d0c",
        "cursor": {
          "ref": "6bf2aa0c-647a-4e37-b7b3-0ad669835a73",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b264eae4-d5f9-40a9-8f01-fb5a1418b0a5"
        },
        "item": {
          "id": "4c56283b-b601-4a4d-8056-c1fce8031d0c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c602e074-e451-4d38-a11b-cb47e8c9855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1dcc2e-6965-4e90-9af0-7b3ed2272886",
        "cursor": {
          "ref": "42bcf38c-23e2-4e32-b90a-2078334e73d8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "96eb4860-b6e3-425c-8d58-fa3ddbc4f01d"
        },
        "item": {
          "id": "ec1dcc2e-6965-4e90-9af0-7b3ed2272886",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6cef4918-084b-407e-a6fd-be0567fce36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23db76e6-54ca-42ae-9326-ae17ec1d97c6",
        "cursor": {
          "ref": "87357c0b-ce23-4b60-bbdc-1a91db41dfa1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cd29bc72-bce5-4835-a3b6-29d5468c3005"
        },
        "item": {
          "id": "23db76e6-54ca-42ae-9326-ae17ec1d97c6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b04fa621-4bd3-4497-bd76-39a0de6d61ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fa16db-fbb5-4a89-b729-df21c560976c",
        "cursor": {
          "ref": "a3fddc96-fc1f-42da-a17d-ca02092c4a5b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "991120f0-6ff7-4a5d-8a25-19df3c713779"
        },
        "item": {
          "id": "81fa16db-fbb5-4a89-b729-df21c560976c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b121c1e0-05f9-4933-940f-2f5e148357ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2387fb-be24-4ffb-831e-8974466d3f75",
        "cursor": {
          "ref": "f507dbb0-ff4f-47d4-81b8-dfbe84a95d83",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "014888b6-2058-4128-bb00-a4ab87e76892"
        },
        "item": {
          "id": "ba2387fb-be24-4ffb-831e-8974466d3f75",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b0310365-7d6d-47ca-a85a-a65108597f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b6238c-04c7-4b61-b6a8-86f1bb8447c2",
        "cursor": {
          "ref": "acd59b15-fb7d-4438-b9ca-b76bb97db9d7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c5c80810-6bf8-4f99-b46a-19bd0a06a304"
        },
        "item": {
          "id": "e3b6238c-04c7-4b61-b6a8-86f1bb8447c2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b406c270-8560-402f-8d2c-e0084a542074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e467788-e28a-4569-8dd6-646c3b02dbc5",
        "cursor": {
          "ref": "4e945bcf-7a8f-4b8a-a5f7-b1120d00f59a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "50461330-d70a-425b-bb9a-f9b90c7c3af6"
        },
        "item": {
          "id": "0e467788-e28a-4569-8dd6-646c3b02dbc5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "284811f8-09c1-41c8-8b6a-32d76b8c1300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481e3802-e2cd-4cb2-aecf-e952d1461f76",
        "cursor": {
          "ref": "365f13e9-a561-439c-aca4-f514b42d6e05",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "87fcdc9a-5fc3-47e0-ba0e-e145d8e7c690"
        },
        "item": {
          "id": "481e3802-e2cd-4cb2-aecf-e952d1461f76",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "88276110-0875-4884-9f61-dee6faa48a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc419b-121b-4844-b36a-ae8f8f11447d",
        "cursor": {
          "ref": "783dc66f-b3cd-4a84-a997-2b5597071cb5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "15cabdd2-ff92-4a69-b5e2-57ebd45c3b5d"
        },
        "item": {
          "id": "70cc419b-121b-4844-b36a-ae8f8f11447d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6bef260c-0401-4c9d-ba74-b0a865772cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6b0546-d73f-4139-80a1-97ed83bf1510",
        "cursor": {
          "ref": "b59686ec-72e9-4937-8391-ae0c550dedc3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b725bafe-5d59-432a-994a-38384ab5460d"
        },
        "item": {
          "id": "ce6b0546-d73f-4139-80a1-97ed83bf1510",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6d70c2c5-62cd-4697-b8f6-228b74d32124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f60132a-7e96-4bd4-8a0c-c7135cd42897",
        "cursor": {
          "ref": "44d254a8-92be-4cd0-8bdf-8b554e87de55",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67fb4dab-aa8a-41d3-bd07-fa92daac73ac"
        },
        "item": {
          "id": "2f60132a-7e96-4bd4-8a0c-c7135cd42897",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fec65c0d-0e6d-40b9-8029-82bbf37e10af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd15f81-f120-4be7-84a8-90e4028beeb8",
        "cursor": {
          "ref": "c6a2afe2-439f-4a89-af45-8b13663b8d74",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "77b5a5de-f385-45f6-aa80-6c7fce1bdf06"
        },
        "item": {
          "id": "1dd15f81-f120-4be7-84a8-90e4028beeb8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b3786d8b-96fb-4715-ae27-ee2bf1bf91ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb849554-bd30-48d3-840d-6ca6d891fc42",
        "cursor": {
          "ref": "02b7c1c3-4b7f-4362-9f26-2e36dc3b5fba",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1078a678-c28b-412d-85be-8ae50adaede2"
        },
        "item": {
          "id": "fb849554-bd30-48d3-840d-6ca6d891fc42",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b3f50d96-3ba3-487f-a4ea-8ca227bf2cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a8b7de-da96-4d2c-9432-0dda00f0add3",
        "cursor": {
          "ref": "c81a869d-9475-4a0d-924d-317f821f0114",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8e2e78c5-b46c-4677-8079-4840b48c81d0"
        },
        "item": {
          "id": "87a8b7de-da96-4d2c-9432-0dda00f0add3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b72f8cbb-0584-4f8f-a7fe-7aee1d5e9972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd93055-8db4-48b0-846f-f0c2939b6c16",
        "cursor": {
          "ref": "b6e262ba-42d7-448d-baf7-d499b1ff8ee5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c4051d93-d4f6-4e25-b3f9-a5981e1ffa9a"
        },
        "item": {
          "id": "bbd93055-8db4-48b0-846f-f0c2939b6c16",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "11975856-7f94-4394-85b4-a54bf902b702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365c4e00-23aa-44ba-ba9e-e6194396a70d",
        "cursor": {
          "ref": "89857d5f-6849-47aa-a5dd-f69329fb4485",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a2fd86b8-dc00-4de6-9288-c1574e5b3ee7"
        },
        "item": {
          "id": "365c4e00-23aa-44ba-ba9e-e6194396a70d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b7650cc-5c92-4e8d-95bb-1b16e9c61a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd30b809-3c54-4b28-8037-6ed0a8d59078",
        "cursor": {
          "ref": "8a4db4e0-46cf-4101-8f3e-cad10b1a6098",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "54d2a423-065d-4f70-a0d4-7750596a3c16"
        },
        "item": {
          "id": "fd30b809-3c54-4b28-8037-6ed0a8d59078",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e7bf036c-148b-4f99-8d80-6eaa32b37f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d5c8cc-5fa2-4fa9-9051-85bdee2abdf8",
        "cursor": {
          "ref": "ebd7dfa0-e3f1-424f-a67d-2c2a741b9cd5",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "90566850-f278-44e3-880d-981b6cdb5acd"
        },
        "item": {
          "id": "58d5c8cc-5fa2-4fa9-9051-85bdee2abdf8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3b11b788-5b73-4597-91ef-c16591bcfe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e5df40-1b23-45af-bfd9-ac799318f58f",
        "cursor": {
          "ref": "e79627b5-9c8b-4992-9c6f-692749bf4ed7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "804ce390-c753-407e-acdd-01b75b8d3ede"
        },
        "item": {
          "id": "75e5df40-1b23-45af-bfd9-ac799318f58f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7643035c-2479-4dba-9386-6b92e03a340a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc258d0f-27fa-4b34-8faa-36ed73bfad03",
        "cursor": {
          "ref": "de046852-6069-41da-8bbd-7764f1b9884d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d0749a55-902c-45c6-969b-c1a6aeec1cf7"
        },
        "item": {
          "id": "cc258d0f-27fa-4b34-8faa-36ed73bfad03",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e15acfd7-ed5b-4fd9-b866-76186e2948b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1d55f5-4058-4018-a735-ba0185cff2c4",
        "cursor": {
          "ref": "00c9e6c1-dcb0-4c59-9c81-a4a14f3919e5",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "94eed018-ee8a-40ea-8819-2102d1eeb82a"
        },
        "item": {
          "id": "0d1d55f5-4058-4018-a735-ba0185cff2c4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e8a048cd-49f3-408a-b686-80114dee6a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203d99a3-94f4-462f-a45f-82cc6f34f171",
        "cursor": {
          "ref": "cbc657f4-d0d5-447e-860b-eced6fcfe695",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f820a0b5-3f88-4270-b848-489d75887975"
        },
        "item": {
          "id": "203d99a3-94f4-462f-a45f-82cc6f34f171",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6b7f27bd-43fa-4eed-98c1-b7c56048eacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef66951-4cc1-4921-bdaf-6bb61789e720",
        "cursor": {
          "ref": "6d049f97-f379-4d71-9413-6212d73581a9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0734a01d-b73c-4c92-824b-ee2afd6099ec"
        },
        "item": {
          "id": "4ef66951-4cc1-4921-bdaf-6bb61789e720",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f1eb655-dddb-4cd8-b86a-2c67a7ccf30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5f4b79-5cb7-4ea6-a057-27eaa20018f6",
        "cursor": {
          "ref": "1c734965-a2ca-4c61-9cdc-06c62bd95413",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "66d0d033-492a-4ee9-95a2-43ce63a3daf8"
        },
        "item": {
          "id": "be5f4b79-5cb7-4ea6-a057-27eaa20018f6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07005370-fce5-41ec-abe5-1674ab90b3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fc9be1-a7d8-4b93-b39d-1a986e868ffb",
        "cursor": {
          "ref": "5d1e63ea-3101-4189-9f12-912b3c6672f5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3f6bdd53-4a63-4a7f-a30c-2f74f319a867"
        },
        "item": {
          "id": "87fc9be1-a7d8-4b93-b39d-1a986e868ffb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "229a9375-967f-44d9-84cc-f8b3ba9f456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a6fb39-1d95-41b6-b020-d1c0f786d3b4",
        "cursor": {
          "ref": "dda9730a-f2fa-405e-b9d7-cef6e4df127a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d54c6122-79ed-4c7a-ad6c-b3055127384d"
        },
        "item": {
          "id": "d4a6fb39-1d95-41b6-b020-d1c0f786d3b4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a959d229-5408-4630-9e38-ebca2a8d4af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07dd922-1dd2-429f-9620-f9c9026e3fc8",
        "cursor": {
          "ref": "c5e8d34a-9640-4377-ad05-71c6b2f2e506",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d184b56c-0d1b-4a60-850a-5740022d2693"
        },
        "item": {
          "id": "f07dd922-1dd2-429f-9620-f9c9026e3fc8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b1c1b09e-b919-46d2-a9d0-12a430b67cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687c5554-2be1-4477-b3eb-73b4eeb68b1b",
        "cursor": {
          "ref": "a3990fb8-db1a-44d2-b5bc-b17d90c2d2bf",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "65e99aba-0a4b-4d30-9367-1bf83d00cd2f"
        },
        "item": {
          "id": "687c5554-2be1-4477-b3eb-73b4eeb68b1b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "284338fe-2142-499c-b41c-06b4d0f6652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1467c20b-5127-4b66-9ed0-b9ac49c89bec",
        "cursor": {
          "ref": "db003ee9-9d68-4e14-ba67-5d064c620047",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6be6de07-63f9-4501-8c3a-9e76ee33ffbe"
        },
        "item": {
          "id": "1467c20b-5127-4b66-9ed0-b9ac49c89bec",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d7554504-9a47-44fa-b4e0-ab14971b93e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6adb98-0add-470a-af8e-c9e6361bacbf",
        "cursor": {
          "ref": "0cb12faf-724b-4b39-817c-0efe907fc5ac",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a08f17de-bbff-4d6a-867a-3e04787eac1a"
        },
        "item": {
          "id": "bd6adb98-0add-470a-af8e-c9e6361bacbf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5e294bfa-00e0-4da8-8705-29fc5b79e43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da28aa30-6f4f-43b4-9354-bab551708297",
        "cursor": {
          "ref": "af5668f3-d965-4254-a0c7-de6d878d5f22",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6a5c48dc-f901-4bca-86a6-a063fa2e4da4"
        },
        "item": {
          "id": "da28aa30-6f4f-43b4-9354-bab551708297",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "771e6471-b2b0-4c37-8be7-cc25bde42338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73471f82-0fd8-4cae-a81c-a5cd981d5f61",
        "cursor": {
          "ref": "64f37ba3-b69d-4f1c-b811-654a3f91378d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "06a9fa40-4a04-4630-b198-4f9f47501e8c"
        },
        "item": {
          "id": "73471f82-0fd8-4cae-a81c-a5cd981d5f61",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9efde599-7788-4f39-92fc-dcde45795209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f8ded7-23c8-4caf-842f-53aa8ab01288",
        "cursor": {
          "ref": "31b8d9bd-e343-4bcc-a7ef-512b511b174b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9d1fd4fd-187b-4ef3-85ef-cc78532bf20f"
        },
        "item": {
          "id": "f0f8ded7-23c8-4caf-842f-53aa8ab01288",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4b249232-afbb-4cf1-b93e-e5ab63888758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85939d5e-e711-415e-9316-06951b833ede",
        "cursor": {
          "ref": "2460f322-6d9c-4f01-b400-c506a80e9c35",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1ed5fbbb-a920-4b98-baec-89dc1f13c8eb"
        },
        "item": {
          "id": "85939d5e-e711-415e-9316-06951b833ede",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9d4882fd-a196-4ddb-92bd-2fd05ee6b65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aa2995-f964-49ff-a8b6-f50421e3542c",
        "cursor": {
          "ref": "45707483-6665-44f4-9f40-a88301f52031",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "643578c4-9f98-4827-b04e-6d68026a93d4"
        },
        "item": {
          "id": "06aa2995-f964-49ff-a8b6-f50421e3542c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "211422ec-bd64-4d96-bdf1-c05d1bbd94a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d35287-1548-4a01-bfb1-9d8bea5a67ca",
        "cursor": {
          "ref": "6d3f4671-9aa8-433f-9537-b66e10979312",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e218b225-c846-4782-9d78-c9729ccf1759"
        },
        "item": {
          "id": "52d35287-1548-4a01-bfb1-9d8bea5a67ca",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "35a85bd6-8d83-4404-9fa2-eacfabf86c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1de8b3-ce0d-4d9f-b77d-929cda8ea59c",
        "cursor": {
          "ref": "798e8919-6cfd-4289-8ebe-e2c4cb9183a9",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c49f36df-7986-471a-b186-480c4d3b5b27"
        },
        "item": {
          "id": "ef1de8b3-ce0d-4d9f-b77d-929cda8ea59c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6aa86ab8-a8a9-4a82-b8d1-622c97d760d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8551ddbb-5919-44fe-9560-e87419eb5a26",
        "cursor": {
          "ref": "1ca484c4-cba8-48b6-8998-c05eca929153",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1a451190-df31-45ca-b430-858d9425036e"
        },
        "item": {
          "id": "8551ddbb-5919-44fe-9560-e87419eb5a26",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b3c6e7f9-ba57-40c2-b56a-c2f72e2d12d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b254778d-10de-4fbf-8a3c-49777a90a1ef",
        "cursor": {
          "ref": "7e5527ad-3df4-4998-b8d4-1d38531169cb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "34709ac5-09c3-4e61-8246-3f96fdc3f5a9"
        },
        "item": {
          "id": "b254778d-10de-4fbf-8a3c-49777a90a1ef",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4d3f10f1-70df-4e42-b9a0-73bfbf99bb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126134ea-0f19-4d47-8910-a153bc5b7ef3",
        "cursor": {
          "ref": "20b13a5b-2c88-4043-9a66-54569813e3d3",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a8b246c1-c5de-4d65-a377-bb2a50bf79a5"
        },
        "item": {
          "id": "126134ea-0f19-4d47-8910-a153bc5b7ef3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "301e87d8-da81-4e87-9ecc-c15b1f12766b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45f822-bb6a-40b5-ab69-943481b72c0f",
        "cursor": {
          "ref": "b493d602-eea7-49a4-990d-283615453f55",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5305b0eb-7347-42ab-9d29-0ba0fa698b7c"
        },
        "item": {
          "id": "bf45f822-bb6a-40b5-ab69-943481b72c0f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0122c64a-4fc7-4e1a-9267-04f65d5ee2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc50cf29-3c43-4885-9856-0a26ba988db3",
        "cursor": {
          "ref": "cfc062a2-2529-4aae-8cd6-6d7421264ce9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "91faba78-5ef2-4ee0-9333-2a9776def1c3"
        },
        "item": {
          "id": "dc50cf29-3c43-4885-9856-0a26ba988db3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7f0d3536-6681-44fa-9d79-56a12621a7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b76488-c29c-48ac-b081-a564d05d57be",
        "cursor": {
          "ref": "cf6ecf08-71fe-4dbc-a093-9319986b5efd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ba774925-6058-452f-adb1-d980989da87c"
        },
        "item": {
          "id": "e7b76488-c29c-48ac-b081-a564d05d57be",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b4c2e8ed-0ae9-4869-abab-b5102cd8bc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fe058f-b34f-4725-ac3e-084aceb1bc33",
        "cursor": {
          "ref": "ce4ac8cb-ef39-4964-a8ed-bbcd51ed5961",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "92946d13-a762-460d-9584-a400a4587fe5"
        },
        "item": {
          "id": "66fe058f-b34f-4725-ac3e-084aceb1bc33",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dece385f-41f6-49fe-b421-7da88835c60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1973ee42-1c8f-40df-af8f-30dfa41e8907",
        "cursor": {
          "ref": "804156f0-cce5-4877-af8c-93bad16cf566",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a7b0b1f8-1495-4d1d-ab68-8e674f471455"
        },
        "item": {
          "id": "1973ee42-1c8f-40df-af8f-30dfa41e8907",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d63108dd-ef94-4c57-a22e-f48e2da81051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4e5da2-7300-4832-84ca-a82781714ace",
        "cursor": {
          "ref": "8ab5f8a9-c9cd-4562-905b-a3ae5c8d10d3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ac060f8c-151a-4b1a-af43-2d9d34ca892c"
        },
        "item": {
          "id": "9f4e5da2-7300-4832-84ca-a82781714ace",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d26c3f2-40a2-47ba-a913-3e29e0ecdddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3933e7-9158-4d0b-b85e-baf96461ca94",
        "cursor": {
          "ref": "abd31bb8-ec5a-4637-a151-fa4c1e3e67aa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "070b86dd-7b5e-48b9-899f-63d9379325d7"
        },
        "item": {
          "id": "7d3933e7-9158-4d0b-b85e-baf96461ca94",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2d3af2a6-59cb-4510-8ceb-d40e26a5c2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49646b4c-acb9-4ee3-aa6b-f6eb0dd5047e",
        "cursor": {
          "ref": "2ba25b08-7a5b-4995-9fed-52b3a9009a5d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a452bdca-b892-49da-b452-c1f342b98a9b"
        },
        "item": {
          "id": "49646b4c-acb9-4ee3-aa6b-f6eb0dd5047e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5225cf03-e2fa-4ebf-aaa4-b41c6b1148dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194be5fc-3b5c-4412-bb94-f9682f880fe3",
        "cursor": {
          "ref": "2df4ce34-491c-4f43-a0eb-23ad097950df",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "48b04136-a6ee-4365-bc32-55bd84942c62"
        },
        "item": {
          "id": "194be5fc-3b5c-4412-bb94-f9682f880fe3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3ba9b866-15a3-4794-aff0-5b08d5b7bf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb44969-3dec-4ede-b403-909c408c1dd0",
        "cursor": {
          "ref": "aea6d9d2-85dc-4f1b-a4f1-41d419fb34bf",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "334c3ff9-1530-4121-a834-7918fa697f1f"
        },
        "item": {
          "id": "1bb44969-3dec-4ede-b403-909c408c1dd0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "992c8577-e5fc-418e-9b21-b03949239ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02f9341-8e40-45f1-a79f-bfd8ba673dd1",
        "cursor": {
          "ref": "3a227c7d-db13-45ad-8292-79c12d25a3ba",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "16e1144f-8e61-46ed-bccd-5959f0ea863f"
        },
        "item": {
          "id": "b02f9341-8e40-45f1-a79f-bfd8ba673dd1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0a3ff261-9029-4fbf-b70a-84bc8872b3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46578d2a-4f37-4c1b-a258-147836b44602",
        "cursor": {
          "ref": "68e4359b-e6c1-44e5-a653-2993dc2b9c5a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cb3df5a6-5733-4207-8c58-12a16f77e2c7"
        },
        "item": {
          "id": "46578d2a-4f37-4c1b-a258-147836b44602",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e15a0546-915a-43ba-9d74-6791d2eca0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40627445-a0f0-4c22-bccd-8cc7d42ff529",
        "cursor": {
          "ref": "766c51be-c82a-4d96-b8da-cadc5d482855",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fbba21f8-61ec-473b-8d27-0663f527cbf3"
        },
        "item": {
          "id": "40627445-a0f0-4c22-bccd-8cc7d42ff529",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "77ccaab6-885e-4f60-989b-46ca60cea846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccf34c6-5506-4295-93db-4baa905bf9bc",
        "cursor": {
          "ref": "f10f5834-d731-48e5-b70e-ad87fc04ab0c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2d4865df-49c9-463b-8c2f-9650c0b05a7c"
        },
        "item": {
          "id": "2ccf34c6-5506-4295-93db-4baa905bf9bc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8367b24a-6ef7-4749-b0a2-d4a49bd426ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0d1ae5-3f8e-48df-a4db-ee62dbe19d06",
        "cursor": {
          "ref": "3cb73bf6-b144-4b29-9a37-cc330e9d9ae7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8d77fec7-88cf-435a-a58c-c88ba0f4cbe6"
        },
        "item": {
          "id": "dd0d1ae5-3f8e-48df-a4db-ee62dbe19d06",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "aa024089-1e10-420c-8ba8-72226e296eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbead2f-09f2-439f-a263-94791ceca60c",
        "cursor": {
          "ref": "c3a5e7e8-fc1d-4e0e-b256-7d97358fda2c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0917a7e6-b370-42f4-bba7-d7fc961cf27d"
        },
        "item": {
          "id": "5dbead2f-09f2-439f-a263-94791ceca60c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f636ace4-c2d1-4834-b85c-5c9e32b9a675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b586a5-eaf2-448f-81b9-65dffcca7db9",
        "cursor": {
          "ref": "5d07cdc8-53ba-45cd-8959-23e6a5469bcd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ab44b5a7-ea69-4158-8336-0ca4b2e556e5"
        },
        "item": {
          "id": "54b586a5-eaf2-448f-81b9-65dffcca7db9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8c0a49f-5b59-4fb2-a8e1-33b6c540c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e24459-6902-4885-a34f-37103e1a948f",
        "cursor": {
          "ref": "9fa0b488-4353-49c4-8991-3947c9426d5f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c789a34e-9ae6-4469-8c41-f7acb75d15a3"
        },
        "item": {
          "id": "96e24459-6902-4885-a34f-37103e1a948f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "37135dec-e1d9-45af-976d-ef1043f2dad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d880dbd4-7642-4f40-9d1c-c6276d8734c3",
        "cursor": {
          "ref": "a3f73873-8b5d-4b78-9e81-e8aa9cfd7650",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3fceded4-d007-4f82-bcdd-cd362a3d1d84"
        },
        "item": {
          "id": "d880dbd4-7642-4f40-9d1c-c6276d8734c3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "74a70c9d-26e6-45af-b7f5-6f58c277b942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684cfe9-dd9b-440d-9b28-6abe73111d41",
        "cursor": {
          "ref": "cd642e25-1bcc-4f3a-b27c-17651b670048",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f3929b47-8f72-48dd-b8d8-7e267bff6d3a"
        },
        "item": {
          "id": "4684cfe9-dd9b-440d-9b28-6abe73111d41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "419f6b1a-1232-467d-8e06-314c8abf2524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bfc0d4-e68f-4e9c-a57e-46aa7419ed24",
        "cursor": {
          "ref": "e2fa68d6-81a7-4f66-bf39-6a37a556499c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "46c92257-fb92-4ad3-a8e5-50f7e9ae1098"
        },
        "item": {
          "id": "b6bfc0d4-e68f-4e9c-a57e-46aa7419ed24",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9c380b61-1d0e-4028-951b-cd5513830ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab1f28c-5e9b-40a5-829f-2db3831dfa59",
        "cursor": {
          "ref": "0dcb9f71-f10f-45f2-8740-1818c313531f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a251575a-d902-4ebd-af4b-5886f12c1d25"
        },
        "item": {
          "id": "bab1f28c-5e9b-40a5-829f-2db3831dfa59",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "09200711-3ee0-49f0-9d96-bfa089351a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243fd1f8-bbf1-4be5-a4a7-9fffb28db2c7",
        "cursor": {
          "ref": "47d7b38f-46f6-415d-b614-4a2b4251df97",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b70b86bb-5539-4ca4-9c0f-ca2c1a6dbc1e"
        },
        "item": {
          "id": "243fd1f8-bbf1-4be5-a4a7-9fffb28db2c7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dbfa66e7-10d9-4d3f-a200-61ef9ab5057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a38e26-f190-4f79-bd1d-43c8c0873022",
        "cursor": {
          "ref": "0ccd30fc-0e84-401f-ae07-76d0ba3703a4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6cdee35c-9cc1-4663-96d3-a4f176a5a572"
        },
        "item": {
          "id": "44a38e26-f190-4f79-bd1d-43c8c0873022",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f4a13da8-454d-4047-9706-d133cf35f74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a759168-72db-445a-b718-f2588d310066",
        "cursor": {
          "ref": "1de11a08-f035-4df1-9213-1d3804ebfdb5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4993d495-2e50-4a10-9dba-96fd3596f969"
        },
        "item": {
          "id": "0a759168-72db-445a-b718-f2588d310066",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0ff790bd-313b-4477-90c6-c7f9debf610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e71c5-0ba2-43bb-b028-afbfbe124c80",
        "cursor": {
          "ref": "490fb9ea-a27c-4f82-97df-29b10bcaaaf4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0fdc76d0-ae3e-4fd4-ae22-13f869ff5d7b"
        },
        "item": {
          "id": "147e71c5-0ba2-43bb-b028-afbfbe124c80",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95b85f26-2a2a-4e6b-bd02-aaa14ed9ec9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0457fd-b64f-4b7c-886c-48e14dd30bcc",
        "cursor": {
          "ref": "4468729e-89e5-4f42-8a50-c0fa7c80e69a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cecbb833-b800-4a8f-b780-733a83162a05"
        },
        "item": {
          "id": "cc0457fd-b64f-4b7c-886c-48e14dd30bcc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dd5b46d1-0bd9-4a00-8a6e-02b14a497f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba65278-c8cd-4d62-a828-e791db94ed18",
        "cursor": {
          "ref": "bd8110c8-e695-48c3-a021-494d21184e33",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b1584206-2bae-418d-bf8b-19e53dbe0d9b"
        },
        "item": {
          "id": "fba65278-c8cd-4d62-a828-e791db94ed18",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c2b45890-afe4-4c30-8e19-1774c0362df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fbe6e6-c766-4cfd-b995-4000521b1497",
        "cursor": {
          "ref": "646d81e4-fea6-4e42-b851-0867c7aaf257",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "31c9cb77-459a-4c00-bffc-47b227a8ea25"
        },
        "item": {
          "id": "33fbe6e6-c766-4cfd-b995-4000521b1497",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "692c5225-7aa6-4956-9682-8b32266cbf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41de8e0-460d-4a50-9100-4a72d046a776",
        "cursor": {
          "ref": "923f5804-06bf-423d-8b2a-c1a0c44145e3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4e4c385f-b32f-4419-9354-d2e156f45aaa"
        },
        "item": {
          "id": "c41de8e0-460d-4a50-9100-4a72d046a776",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fbb6171f-a591-463f-9768-bdd7b1f52b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abba6cb-c7af-4058-8f7a-00d01b7dffec",
        "cursor": {
          "ref": "4ecd8d85-ca2e-43b6-a21b-56b753e481ff",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "509e03f2-e8f4-4279-8053-de30dcce852b"
        },
        "item": {
          "id": "9abba6cb-c7af-4058-8f7a-00d01b7dffec",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2d862cca-3980-4d3b-942f-9003418a398b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816da2cd-8659-4865-b221-655efcc11599",
        "cursor": {
          "ref": "bc7b1f77-67da-4661-bb33-c3792023bbcf",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1cbd1f0d-f50f-4e67-9ab1-6e31c1164b5f"
        },
        "item": {
          "id": "816da2cd-8659-4865-b221-655efcc11599",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10b704a9-b5ca-4063-ac00-863670e37c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4171fc5b-193e-49a2-88bb-452790a4c596",
        "cursor": {
          "ref": "b64f03cd-3769-4a94-ab44-a3c2ce13e775",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "831e08d7-d530-48af-97da-45a1e9d715ce"
        },
        "item": {
          "id": "4171fc5b-193e-49a2-88bb-452790a4c596",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1f75e283-213e-41e8-877c-349086fff1c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd00a5f-cdf4-402e-a582-27bbad1ace6d",
        "cursor": {
          "ref": "815f7c19-8016-46df-9e88-c7e8bb83fe60",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "498ec84c-6388-4ccb-93a1-7b30ca07e201"
        },
        "item": {
          "id": "bcd00a5f-cdf4-402e-a582-27bbad1ace6d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4941cfe8-d156-48cf-998f-4de3417aded1",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9ea1a2-1854-4992-a2fc-d167a3adeff3",
        "cursor": {
          "ref": "911afe6b-e1bf-4c6d-b772-ca6265036ea3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0e81a52f-3c0b-4af4-8540-6a8b6872c0a1"
        },
        "item": {
          "id": "fe9ea1a2-1854-4992-a2fc-d167a3adeff3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7f88b647-3965-42dc-914c-6f3ac8be66b6",
          "status": "OK",
          "code": 200,
          "responseTime": 1551,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "745e61d9-3e46-4bbf-9bd0-a50e64973c38",
        "cursor": {
          "ref": "d8299b8a-81a7-4de6-8a78-52b1eb3a64f1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "955dc370-942f-48f3-92ab-947e9b254bb1"
        },
        "item": {
          "id": "745e61d9-3e46-4bbf-9bd0-a50e64973c38",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "07a072dd-9e80-4f9c-ba13-c12e86d40f9a",
          "status": "OK",
          "code": 200,
          "responseTime": 1627,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f6a06b-8d66-4e09-80ee-b373b73957da",
        "cursor": {
          "ref": "c167c3e8-1268-4fb3-b2b9-169af1072eaa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f5fc8a74-83ea-4000-ac4a-f43cc223e8e4"
        },
        "item": {
          "id": "a6f6a06b-8d66-4e09-80ee-b373b73957da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c5f5c8d3-3b96-4c69-ab8f-1047bcd7865d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f6a06b-8d66-4e09-80ee-b373b73957da",
        "cursor": {
          "ref": "c167c3e8-1268-4fb3-b2b9-169af1072eaa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f5fc8a74-83ea-4000-ac4a-f43cc223e8e4"
        },
        "item": {
          "id": "a6f6a06b-8d66-4e09-80ee-b373b73957da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c5f5c8d3-3b96-4c69-ab8f-1047bcd7865d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd62ced-3a93-4d47-b45e-7cde1f7843b3",
        "cursor": {
          "ref": "0e3706ed-b02d-4642-b3be-10334bafffd0",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9ef2ceb0-71c7-4379-9d7b-6f3bccdf4a8d"
        },
        "item": {
          "id": "6cd62ced-3a93-4d47-b45e-7cde1f7843b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8115be2d-0629-4e35-9431-d03417dce716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfc66b9-05a7-4937-90a1-1ff998308a1b",
        "cursor": {
          "ref": "79b7454a-9067-475f-a82c-dec94bc8f7ff",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d84d75ea-4d46-41d2-ab00-20043582f724"
        },
        "item": {
          "id": "7dfc66b9-05a7-4937-90a1-1ff998308a1b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5e631ed8-2654-4f67-ab67-614c08ed0e51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}