{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "161b5beb-92e1-4b4d-a560-3d40a2152665",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0a02271c-2363-4b7f-993b-756b086edd72",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e69271b5-acea-418c-9919-99f9d9ecd3bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c44b3d84-831b-411a-a4d9-bd785d503cab"
                }
              }
            ]
          },
          {
            "id": "dc83ad58-6d40-4462-b1d3-2c213b4a6616",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0840ccbc-c7df-4ce6-9abd-c54b0a38f88d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7984f353-8b90-4ac9-875a-e83cfbc5edbe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0e267860-d7ce-4cb2-b335-024d9845d33d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "13321dbb-4d14-423c-b574-30f603ea97e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a75d9d96-eda2-4932-88b9-8e50fd73ec9d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5720117-db8f-466b-9767-3b9b0efeb7d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb11c821-070f-407e-90f2-37b98925fc0b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3b368c9-a2ed-418d-879e-8c416e32cf08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fda27b00-089f-46b4-8ed6-3986ef175edc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4dfa094f-da9f-4b7c-b130-f265582ef16f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "306d6bc5-f816-4756-a6ad-2753048a16c9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c719140b-d2db-47a6-a39d-a9e3453afa15",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9006fcb5-87f1-425d-a279-18ffa1141abe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba341acf-5ffd-4c9d-a961-024f421fb0dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "034e1f19-a012-4006-b218-758eb2d17478"
            }
          }
        ]
      },
      {
        "id": "8813dedc-28b5-4850-bea6-e65bad9954e5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4022c210-be93-491a-afaf-de3a66e12642",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3633e682-08d0-4b6a-8833-1ea36c891f90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75a27a7f-6cdd-4be7-9d96-8312835a1cf0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82805e9-5dc7-44e2-8e68-68603fab821f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b8babb2-65fb-40a7-95fb-9360c3e76ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d7d2be-7d8e-4f11-bacb-da08b3b9ee89",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bf3c4c-da9f-4668-983a-bc389bbf81b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3248df94-90aa-471b-89e4-7d767ee0a7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d729ae67-0f72-4d4a-a9a5-59134fe61a59",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1092f1e-7f1b-497a-aef5-c9f3359d377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "831126d3-581e-4bf5-a875-4202773ca52d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5cbaee65-f3f6-4ab6-9b3a-7227c6100e4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33115def-1d92-4813-9510-c7cf83672ec3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed589c4-d559-4729-829e-f793861c1d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a455970b-546c-493e-b608-e7b09ad68592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffcee93-650b-4fb4-a0e6-8c2ac69e4c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24367f1b-99a3-4be0-ac5d-c7ca377960ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1576ba21-4b8d-4797-b157-5d6b2a593338",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7df4a2a-9c38-4bb1-bd06-dc765b7bfead",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fbf7aa2-c6ad-474b-bf7f-951a22ab9c0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7f6b00cc-c32f-473c-b57a-edce73bdf175"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b020093-f7f0-4b13-99ef-c193522bea1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7ab0671d-ea40-46e2-9f28-1fa636f21ca0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc81e058-a73f-4fa3-9fa4-2f5abc898e89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b2dcf98-b0c0-463d-a288-e2d7499f508e"
            }
          }
        ]
      },
      {
        "id": "380b0a80-ee40-4130-b199-13ba58044195",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "95bc7b3f-40a1-441d-8641-726be31f89f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4537e394-fe03-4c7a-9d19-340d25eed65c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fda7123f-4498-4c0a-9c46-590aa4c3566e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9de995-8aab-437a-bc0d-7467567e1534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367c2d7e-36e6-4d4e-b5cf-fd2d1e6c96c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a81333d-11da-4f5b-9af6-19d7e84e9ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "377e26f9-27ac-4e79-b435-709c5521c82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccec3d40-ea3f-49a0-91ea-72bccd036a90",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38a3aa0-6a6c-40d8-8b09-3c895ff24b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51223e3-6741-41ae-b80d-64d431a565c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9d82f8-478c-41f1-af77-1708d951b185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d80e73b6-6bf7-4b3c-9df4-1b24bd09a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614a2018-f8f9-4e60-b9a4-f2e1b94d596a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82d8ec2-450f-4810-a22d-c37cbac59ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0929029-0ff2-475d-8273-1eecf02daf75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d1432e-888a-4629-bb52-338ad0862d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e947e09c-1c99-43b3-a7fc-23d9defa2ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5e1d06-282d-4b50-b61e-15b526ebc127",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f38544e-ef7f-4260-8f0b-12b942985dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dd772b-cde6-41be-8a26-2aa628a93f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e9a6e6-a10c-4eaa-9bbc-21601cf67bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c109928a-156b-4902-bb7c-acca3a572e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592aca39-ac29-4fce-8382-06d49707651b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3940e893-eb2e-4635-bf3c-33ae9a9a4ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae10eb7-fb58-47b3-ae6f-1287764dc798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b241a2-48ec-493e-91f3-3a3a43be5e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebce6d07-963d-480b-a6f0-0e67b650809b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b917dcf1-2100-4b8f-96c3-99ebe8a8284f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55818915-ac6e-474f-84ef-2b3f036e9bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a489d8bc-bbfe-4b7f-ab96-4595827b7d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f92f0-ca76-45e9-9a4a-f1cc580ffcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af2ac5c-5a24-4fe4-9667-a8b206db36c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202ca92b-3727-4602-8256-546c043e7465",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e23d25c-1216-44b9-92f3-7a96f2f70102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea5a926-1d5f-47bb-8404-132ba4ac11ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fca4a3e-7edc-4a68-bfc5-1cf63fb40a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8596301-42db-4505-8fe3-81fe76883997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b4b278-d0b6-4ba8-91a6-d4caa8d3d044",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219fdfc1-047e-4b1a-9749-78c702d9d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d822d9bc-57cf-4fe6-ab33-c22ba7d1eeca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d85bb4-c672-4cee-8b2d-05cffa954d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e9f388-1807-43eb-b130-4d929514416f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d1a8d7-0d02-4490-806f-f24c9656ec7a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c56ddea-20b8-45ab-879e-5c3fd2505a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85526c3-e181-4327-aa94-a8f975c2395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8cfc7a-9891-4c37-a4a8-4658ee62d92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db2f36dd-6bb5-4e59-b94a-97563728e3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d684fa-3fba-42f8-bce7-ba8294c93e16",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dcda52-0281-4c1d-a7d5-56491d1eeed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c03e954-490e-4d9c-b22f-7a05ee45f83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2112cda6-def4-4efd-a4d3-002f808b4250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c98a281-624e-43d3-b2ca-e8ba88df1aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b3e416-8b74-4443-8d32-07941f17c9cc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ce47fc-d491-4eac-809c-d6215f960ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd89027-ee3f-4365-8ede-7ace9d226981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cdebd2-318d-41d1-b057-307bcc82ff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6473b72b-9996-4964-9578-6f905859ef07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c099df-0f70-45ec-ac81-c105e631cf47",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3e12d1-dcaf-4403-9b59-3887549aabbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a12f1e0-ad1d-40f6-8b1a-676c191d0920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb33b3-50bc-49cb-8bf9-b33a17990e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2319b9bb-3783-4426-b6da-d03e32725cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0efaa0-4cb6-422b-a32e-c7b27cf67d2f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34010cf3-a40a-48e9-a2b2-e4972820a651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d1d3af-7ee6-406f-b281-ccac3b91150e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b3dc69-498b-4a43-aee7-936ef20710b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f2a7573-5f1b-43d0-9f46-c798a2593d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3338a3-a0d2-4391-aaa5-a0a6dd9bdc0c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92295fc3-a188-400e-9365-b5e1daa142e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685823ce-963c-4d5a-9744-759772d68d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64b082a-8415-4dad-9e33-53bd69aa8ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4adc728-dbc7-4820-8be4-4d9225df5e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4082b7-bf96-463e-8343-e273a68c1d96",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ececa78b-b7c6-4f68-a795-b097eeb0223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06866d25-3903-4c33-8f5a-64adc09d4c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dc0073-87c9-465b-94b5-e13ddde74481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21fa2df-3ecc-4411-a34a-983df7611b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5729718-16ef-4a51-9f96-92f882223edc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92316f8c-93b2-4db3-88a8-391470554c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf819d8-9de9-479f-a616-2cb6945896b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb85b84-84c0-4a8f-9715-300eea52002e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a49a794-9d01-4a5c-bef4-77cb69e631bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98216536-87d6-4704-9624-ef8259616361",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3e4d6a-6f0b-498a-821d-cb9b743027f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae9f017-e299-40db-ad29-a2a5b5a12ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c889a27-aecc-40e9-8edf-0c655b5586a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "873a6302-4bff-4853-9b44-1d0833b1ab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc90181e-ce58-4c06-9cda-1e306806aa68",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae7847a-a70e-4fd9-8e5b-4fa5461de676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4125375-98e8-4dc6-8484-91b648887e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80a7ecd-4628-4e6a-9f38-4579deecb4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "946bfa96-9027-4381-aa05-f487fa1f8ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e97bf6-2c0c-449b-a231-2526b077c2fa",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418e2bdf-c8c4-47e8-a96b-2190f9ec878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739fcb03-c0bb-42e8-8e66-c1ccca39da9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110adb1f-73ac-44ee-8578-aa88068a3b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac6c17c-10f2-4c90-a6ed-e01e3e1a9458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e658f3-e993-47be-b12c-cc9831653fbe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12277d35-9ffc-44d8-8c95-659322604306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab289fe1-2432-43da-9d2a-fa531515f10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b466fe3d-6b2a-4443-ac0f-a94053c491fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20083aa9-9eee-4573-843b-ffc27137d5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b060daf-9095-419d-af78-8cea57c0dc5d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c267bfd5-714b-45b3-bb98-1e5a3b4afcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752d752e-1691-4bf4-a1a1-d30ca74503d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d2bc14-5d86-4fb8-852a-24f9760c05ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d053817-72a4-4ad9-8180-41b5e1040c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156da99c-fc6a-4e24-8f22-fa5a59e9fcd5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565d4577-787a-4afa-98a0-2742099ba9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9514e72d-f95e-43a4-a927-f7cd93a63f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf77ce3-db9e-4507-be72-024c98239781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f16dee0e-77f3-40fc-b0a9-21c2e60b2edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e51b7-f97f-4956-87df-3b2d123d4cd0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869f4a1-15ee-474a-bc2a-264119286707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5851bb23-6b96-4ab9-842f-326e482bb85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b57bbd8-9395-4b74-884f-c48a38779ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaafe4f-2e3a-43f0-8a3b-4cc38589ccb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031d67e7-060e-4a40-a864-351d8405537c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6595e11-d4af-43de-95ce-4f7282089abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d452bc8-dcb4-469c-8164-caf0f463cddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ff6c2b-bbee-4749-812d-a66280267bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3514c423-44da-4017-959b-95d7626c7c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f85d651-3ade-4555-89a9-e78c6e2a86d6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18180333-fc3a-4273-af87-ed0a88959b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48868cf9-402c-4349-9ad3-a0eed3ba9367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db93b94b-3a8f-4795-9bcb-0de95d7ddb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6b9a0c-b90e-4839-ba69-e14bc1260142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bddee40-4d9e-476b-97f3-8a782d3868aa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4852f240-628a-4331-8b1c-290fdb734347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc381079-c322-496a-9a46-e5b4fc097dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c40c50-5424-4fef-999d-f888b3a8363c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1e7302-9e59-472e-be3e-6e12c59ebafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d11a8-2e9e-4021-8fb9-df72f03e829d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6970698-3ab8-460c-9896-ae9e7389beae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e59c1b-a412-4e42-8db9-daf978ec5658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e38d7e-0adc-4269-895f-0ecb7f76e3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ea15ae-1025-42a2-9437-85fec221e37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3787ec2-89bf-438a-835d-dc6be05a2fbc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d73495e-82d1-4c2c-b2d5-1e27442aff75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579ebbb1-153c-4430-82d0-5addbbceafb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1de8faf-8dd1-4651-8ad7-9f2a625a7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3edeffb4-baf7-4b1a-9207-d5525de016e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5bd0e7-7ce4-4fc9-aada-e7e1d66a7da5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec20fa0e-1b1a-4cb0-bbfe-c67e32261a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b139967c-1c8a-43c7-b288-5fb954d71b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95577623-451e-4a04-949a-8d9fbd89e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f6f93d-3420-4e27-b221-39aacb16c2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad01a24-fe67-4287-b9ac-e2d4f877cdd8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024aada7-7151-4cfe-b303-fe05c6207b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11946ce6-9fb8-4f85-818e-aa8929bd7d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601ab094-cef6-491d-a108-62bb1171a798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6463975-2f16-45ab-b7c8-c433a49bc30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e77826-58ca-41ed-ae6f-6f5bc533472a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdec9db-482e-4ba0-8683-f279af053775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73915c3a-8683-415b-9b48-451d01ff8166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f6da6b-34ff-417d-928a-9e9c44c9887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28674a68-3059-490c-9d04-3b46097ef62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5baaab0-7b33-48ad-94f8-24709f5cb50d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ec0fc1-462f-4d35-b79b-aae7845f08d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a37a48-1192-4a49-a3c2-71b0a7458787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12002955-7e75-4426-9bf2-d27c9c8a94b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9307a59-8510-4cd5-b302-bf8a4e94d80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c070985d-0d83-4944-9ed0-a79c75653bdf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2ee15a-016f-4c8d-98e5-a38b335e2de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbeb965-6fcf-4eff-bd52-e8f0a74c231c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ad0723-c740-486e-974a-7ed5a6f1131a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68efd29b-9844-4018-b8e0-6df5c73fd4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f4ce20-56e7-4aea-a137-4b37a9259790",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64bfbbb-2d9b-4528-8a92-c75d984e3ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b410cb9d-251b-4729-a151-7a8fcf40d42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71238b3c-264b-4a1f-b7b5-f68a246477e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88375ba8-9c93-47fc-b50c-fed3a00a3c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191d12b1-3cbd-4888-aa09-84885c81cb79",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47a2204-73df-40c2-840a-98834fbdb093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597a7f7d-395f-4939-996c-da387b9fb1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5085265e-f34b-46e3-80a2-d25bb9fba9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e5111803-389f-45b7-abf1-b577fbfc9bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26537cd-b177-462e-9689-2be76db132cb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b303f7be-9f80-465f-a9f1-68a166f5b846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11b55955-2bf4-42b0-a22e-c7996354fc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb16b0d-2675-4cca-b9f8-ebaa0befd12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e54ed984-93ac-4755-ad36-28b7a40a59b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed495197-5469-410d-985b-ac3edb6e793f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac2625f-7607-47ab-b96d-8ca72bed2367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a9bef7-6290-473a-a9ce-98c61b77a29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f2d367-ce9e-43e1-b3f9-7d778966dbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5d94ef-5772-46c3-8463-d92854358cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aac4e00-351f-4985-87ee-bb3a32d42941",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faabce4b-b412-4b8d-a1da-35cc6a1ae6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ba22b0-3885-472d-9e61-fb3a4e262874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a42a47-418f-4368-b02b-eedce6c645e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "268023b1-97d6-4935-97d4-e37fe441cc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e7aed-bfbc-4511-8342-ca5870a705c6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44751c0b-3040-4999-affa-0c9795e773ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c0c3e9-ef60-4dc1-9641-45b10a5b625e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97700a4b-2417-4d28-af1c-2d6624104105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57bae0c3-a646-4f56-adca-ab22cefc74da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97ba572-7f93-47c7-a8e8-dad52ac659d5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0bf5e6-39d9-4e72-a3be-fd893a49741b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f942bb42-a9a3-4251-af09-08889f347aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f685ca28-2ba9-4464-8e66-8793c0f2307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ead72ac0-9bbc-43c5-95ca-0ab5596b084c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85241b5-ff17-47fe-9b50-207659d37761",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684b8f83-1020-4f37-ab77-7950145207af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d92728-3515-4c82-8e0e-169f1bed6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636ef87e-fa9b-48b7-bf64-824193c54c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de88bcb8-9ccf-4b99-adf5-ee3fda5af02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea686f04-5173-4411-9f17-07a613620e0d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4500ba33-4ca3-4b98-a7e2-80c10476ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af4bd69-12fe-4d17-9fc8-48aae9ca8615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c45adf-4557-4deb-b054-86fa44180624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4024e649-6dd3-4ba9-84ea-ef826442c573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbacc36-0f0a-4baa-99af-4567a5caa860",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69514a6-d9bc-45f6-94cb-732560329b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58de4af3-e676-47a2-9d17-48cc2e6a6dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304c44bd-5a6d-48f7-b42f-8ab4e502534c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6881f35d-6dc7-47ad-b7f1-aecf1d86e653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f12a4a-67e7-401d-bf3f-d07a00906456",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d99404b-8e52-406c-bd81-fc0d182ca807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022d78e7-e92b-47bf-819f-be8620c58960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2bddf3-7ec6-4edb-911f-d925253d9d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "597fe335-5462-4941-b4da-a4fe370728e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a05e880-f3bd-4687-8920-e9746929f8e2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530ba642-3703-464e-8b2a-472672c5fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087f3045-d9af-41d0-ab14-0576f1df9e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be6694c-93aa-4c58-81e0-36b74eca6e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ff1181-ec08-464b-aef5-43e006eebf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f776847c-eb52-4ab1-9405-2ab9891b5f7f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bed604b-4891-495b-9d95-481bc098180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d193cd-1428-4e1a-ac3b-974ea76e24a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08293b42-3615-40c2-b2fa-236d0e24329f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3b5a08-b4e9-4586-8961-54ed90436b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf8b58-1acd-4f05-986f-acd0acd7a6b5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778659b8-50ca-4908-89a1-dee8ed1698f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194ad5c6-6d20-435c-af85-461b602b18cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae933d12-5d06-4423-9cb8-ec98125cce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a8a138-daee-4f48-9211-fc06ee07cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4882c363-ef39-46f7-99aa-760d9a3b5f72",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003bf202-775b-42cb-a70c-77d2c3160597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2553d921-a2e9-4932-ae9d-06b96a06a540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da573732-27f0-4b81-90ae-6283b7c3aa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4717e7-cfc0-4b35-88e5-adeca78d9d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b8be6f-b785-4e32-bd79-62b326f8b2b4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a380649a-2672-4337-b45b-ea4fa82dd829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128e9114-839f-4854-a1e4-b7917b590a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13fba25-a668-42a5-ba45-fdb459a35a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff6a2f6-c2b9-4ee7-821b-4576f5389797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac87c16b-b857-4d72-871b-ee161f86accf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52646aa0-90a1-4307-8751-d259ee6d8907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4405b88f-fd1a-4502-ae5e-2725493236e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9c5db8-67f7-47b3-9b27-8266ca47b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9a9f32-d193-4033-bb7a-19ab9ed129e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0aa954-ce89-4b2d-95a0-03fe0f55a30c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d754ce-9673-4126-8a22-23d008b7eb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d7d926-e03a-47b3-8eb9-afee6984900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed940c1-aec4-4852-90c8-28acc7d031e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9d7b8a-92fb-4b73-b607-df6987abdc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d303f56e-494f-4487-accd-6306933d675e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325584b4-7667-45f1-8596-c889360b80b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3d2c3e-9b4e-4615-85ae-ceb7a7b443e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1886309e-e0c2-437e-844c-7219033a219e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6cf1a3-2e2f-456d-8a26-2ed71809b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42790ea6-781f-49ff-bc60-1136d4fe6b5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f475c36e-01ee-4967-8b80-efe5e02f3d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf49e78-2207-4933-9a38-2bfddbd2d9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c20d2a-c1eb-4f34-a985-5622d9555400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc77843-bf51-41d8-ae55-8c98992d04af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522d7d44-6024-4f9d-8912-0cf1dfb79aad",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc26950-db23-4713-a90b-935c58f97fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e7e75f-71b0-4975-8b13-17b110eff285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4bdff7-7160-46ee-898c-65f3059c7a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64fd594d-9a00-439e-af26-6870dc811986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e0ace-1618-4980-b3f8-d247894f8434",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c2ee1-6b2e-4f37-9443-725e87380126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e24064-b1ee-4ba3-b561-ad539540ac0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5d16c2-a1e5-473c-b34d-2078e0193216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08defe5e-005d-4e1b-847b-7f4a9293c472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5af745-a372-4e0b-8793-2d0354b3ffda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e67df56-8127-4dd8-b2a4-a4ec8196e033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd8a4e9-fa70-467a-8c8f-750e3f56eaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4058474e-a96e-4f38-8f5d-3d4b9d716f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4c86bf-f53d-4135-a6da-78e857f6c6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7324a7-9648-48d8-961e-dfad4c44b8cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f501071-90bc-452e-b379-8569c670bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8000b80-8cf9-443c-bf9f-7a146f7cf52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d4913d-4e44-4132-b8b9-aad29afb482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e89135b-0b6f-4098-9e5b-780a2d435bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf026aa-3a2f-4720-8347-61a273e198cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86542289-43f4-40c3-8a83-19e0389ae632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b67ef2f-0a7f-456a-a27e-773f27555ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab3cb1a-8ac9-4f1e-bd79-d8b8a6710104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e5b908-7602-4989-afba-0c963ac34655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfd93ab-2715-472d-a14f-d401de0468e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47bc45b-14d7-4072-90c2-5176234bfd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce77e078-f7f7-40b2-82b5-9c16b8390621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a2a4a6-212a-4bf7-bfb3-b7c82294607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "abed41fe-c50f-47ca-9f9f-2a27dc59243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a835b8-f4f9-48ef-af07-372162ff07f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d4bb9c-9205-4dd5-9d34-6c944385766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03357d86-2cb3-4550-aaec-6fce76728192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f92aa6-a8ec-4f61-82c3-cf0df87a7652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5617bc6b-e864-4b88-b03b-aeb41daace43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19803f6-035b-4764-9706-f1e9d58ef1b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418ef802-d183-49eb-b7a9-f767a6f8bcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab941de5-ab09-4fe6-aee8-545607487cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73175fec-9442-45b0-8942-4c9fef9291e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a57d9bd4-934a-44f3-9eab-8c1ba3fbca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7926bfce-8fce-4625-94ff-419967fe86bd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9e1a93-ae94-4f5d-9987-afcb49e26239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559f247a-066f-4327-a50e-1bcf8d4a4cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ff4e0-2f17-4d77-83d6-06c9c8989f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f356c46-3c36-4450-af7b-ef8f2224a104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd142c9-8549-4a1f-9238-d6a74027eb50",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7520543-c78d-4d58-8a1f-4ccad2e04d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb550088-f2c2-4dc6-9d75-0b7040734f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8579df2-d60b-4a1f-a910-065306bf441a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba0573d-215e-493e-8051-a946f57dac63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a73a84-de68-415f-a337-d2f844483d03",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ba1873-0a92-4af4-b1cf-e9d3fca27bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c99c1ed-d892-481d-954b-1466d63f55e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb17cbff-d153-4d2a-8aa0-7b169c65a9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db27388d-90ae-49d4-9fc0-2d4e03275548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a763c4-d2e4-4295-a7d5-b4bc36e42bef",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9848e8-6f33-44fc-8e97-a742a07644ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3f3ce4-a141-477e-8f15-cdff38543ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d55b10-e219-4fec-8d17-e5a734004a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "626e3230-8a7f-4af5-9567-ef56e562ea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047a28f0-ab0d-44a3-9ea4-f37b7e469ad0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5debfa58-f855-4e48-a807-6b718c5b1fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6434dd-7c80-495d-a1d4-34fe546f1578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db541b17-9b16-4ad8-bc1e-21738e28a28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e98e13eb-dde9-4ac4-a0c6-d5b78985b3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c01032c-9956-4a52-a23e-c30ae99f9813",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef19d2b7-fa27-48f7-abb0-59299128a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f721a5-3ae3-4534-aad7-3b27fa04709e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca49372c-3738-4f72-836d-5495d6cad477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e00aa669-9ba5-4282-a2b2-4f2888842d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f469b6-f20f-4e64-a4ce-160e83530769",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bf2be6-fe9e-4fb6-af9b-fe85492873fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a228ae2-2263-48c8-ae32-b8cc4dd15ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084e88bd-25f6-4f51-b3b9-6c0a2fecdb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bb92a9-eac1-47e8-9901-31565db788eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681ba436-48f3-438c-a84a-11089bda79dd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed766f3-e48a-41d4-836c-0a25ce29b867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42dc629-d19f-448f-b76c-2c23cb40175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9c227f-b315-41a6-b4e3-7cdbed3d3aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab433a5-8630-4841-aae7-ea1b3a6b2315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17d0a0d-d12d-4bec-9fc5-26096e1aa3b1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9481a6-8e00-4c80-8d63-9c9d4018c884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b978ecc-ca96-4bcf-9c3e-3a428a35b8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2602cc90-4c38-40f9-90c0-2fe715a90627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9309549b-563e-4faa-874f-0c396b9557bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd66346-36b2-421e-879b-b355f427c9a7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed7f88a-13a8-4a77-a88f-d21dcf920603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4caa1d05-c339-4f84-9427-33b32032f983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb12e0c-f38c-4889-963d-9b06e2ce8439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abc054a-fd56-45c5-a805-653d9d75922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb98b7e-5508-4307-aefb-e56476bd0ac6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba22c262-960b-4459-be37-7bfcd370bb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786cd91e-b990-4aa0-9e1f-d29b38365ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a0514-c581-4ed2-8aaf-5e3bc788a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "740c156d-90c3-427f-88d1-97b23f176f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238baa63-57a4-49d5-8b44-5092e13a5b8c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12275c0e-76e6-4e6d-a200-2da6120e7c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f9c513-b0d3-4fba-aff6-492ae9194c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343df1ad-d466-47ec-a36c-41b2ac39b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af3a6a9a-7a2e-4201-ac53-b04f0f506f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5001135-784e-44f1-8e82-a6fec92fec6c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586163ee-c0c6-4e3d-b535-dc4cbe4c18b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69228be0-1a63-4b55-a9c4-e44a6377d374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6c1a1e-f900-4dba-8ddd-3f01971e4594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a57a19-2b0e-48b3-9802-86e163e4d194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9d44f0-ac7e-4494-8e09-c2a6ab2c97a9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca8766c-b1c4-4b8e-8f7a-52222dc6f389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfd545a-b598-4d8c-821b-931ebca442ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e139edd5-c6e7-4f77-a3f8-8b9465cb0a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "458823d3-3429-44f8-ba12-b584ddbf9109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01271bec-df51-4498-8561-22aea6160f88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1996ff8d-e9ac-4ff1-9ccc-d2bcdd0630e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66f8096-c889-43f6-99d1-92e8643cb8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c968706-78f7-411f-97bf-a14e7e2afb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1837dc1e-6bf0-4f31-b1e3-ad4fbbfa3c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32fd318-c1b3-42c9-b147-89ad8fda09bc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65adbad9-b136-4a6a-9249-2e7d341d7dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62030c7-aa54-4662-931f-d29a2107b18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31741bef-0c7c-4ec2-9595-056795cb488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1305d966-38d0-4124-93eb-f34d63d29238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e93178-7999-4a87-8ae5-2fd65564f80f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b580dfb3-ecb0-42da-a111-2dd426107390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20df9120-66cd-4b3a-8ab8-7253e43f1cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb2fe40-e9f9-4037-89eb-32b1b120a55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a65081-715b-41fb-a5b2-ccb299943303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef304080-40b1-4695-862b-3e0aa7da0f40",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6fccba-c41f-40a1-b62a-68f87e8bcf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb407eab-953d-4259-8d2d-a9bd3bd2d25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a274fcad-4fe4-4aa3-b12f-d65e051067c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ad8527-b40d-4c8d-a236-bd25991c5ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d6ff9-008a-4ca5-ba26-79715e2318a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c53040-486b-49f9-a7d5-77abf54b20a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5a24fb-743f-46eb-a326-961d542ff263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e27079-28eb-4074-b1e5-d32ab6988808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97e2172b-3b01-43c9-a8d9-068347407768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f35f22-9c93-485a-abc9-c229854699e2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2a21b5-abcf-44d6-ac47-059dca22b382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee93b7a5-c659-4f28-a3c1-2c891ef40bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc74f50-59f6-4d29-9047-fb0866166a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcb5c1f-9a6b-4957-bb1b-804d390563f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6caf306-00ed-4f90-a453-799770638e3c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b3d58f-94ca-4379-83eb-e517396f9eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37af290e-188f-471e-82a4-deaf084f5333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f90f46-a29a-4e1e-882f-205adcc59614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff5d2c8-b94d-4de5-ac2b-78d8757661ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f4acc0-7af0-41a4-a301-564a27d9620e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7102f026-f4c0-47c7-af2f-3f61c686ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c669e78-59f0-4491-8f18-bf8735e615a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405723b6-778f-455e-bae6-6e775da83b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d256e106-3ad5-4dfc-bfd0-dd9395bb8457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c796d10-05c6-4f48-93d4-c6e59e7d79a2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f5d353-762e-4167-a067-bc8b26f401b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2afdc0-7aaa-4e82-b1ce-98d4f0c6f015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92e2a6b-2ec7-4df0-a816-1e018e204ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ccf04c-b2dc-4f2a-bfe9-b1c73c2a6ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fac5e17-0357-4b58-aaff-c485b8bcae84",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1348c699-97d7-4bb3-ab7a-414a0a937f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697883f0-666d-41f9-9acf-246714a6d839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecb8cf4-b720-4c27-b38d-b6bb6b00f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2532c395-620c-46a2-bc87-b69e511bf521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410f89e0-47f8-4572-8d9f-06dd13a2d29a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9830270-804f-4dbd-93a7-8ddefafc9e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc70919-d6f9-4b60-b9f2-7ad20d17a524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f898ef-fcaa-4937-9fa6-6fcdaca4bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "085c8b8c-e627-466d-9798-57ef9fbd171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d697a46d-824d-473e-a631-2c2c382314cc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66920cf-daa6-4b52-bfd4-05550e557e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d39af1-4e02-44c6-b338-8a1acb1fdeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9b542f-eb1e-49eb-bfe0-88c0030843b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b3fceb-6e44-421b-b4a7-d615bed18a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c410a08-bbc2-49b6-9aa4-439c991ad9a1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02b577e-3fc9-45ab-9abe-9e70c733f279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af101abf-8f95-471c-8d10-7e05536b07bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb377db6-8f46-45b0-8f99-165da34a1bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a592094-37f7-416f-a3fa-5e8da7d974d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e404834-5c62-469d-ab0b-3080bd01b240",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5907ac9-aec7-4034-8ec4-dc9b49dda048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055ea5e8-a754-4db9-a1a0-336fc980072f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a370915d-ad2e-4ef8-af04-ba0e3860b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de3b65a7-6822-4f4c-b5ff-e4c7638c6118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b499aec-cb73-4ab9-b3dc-11e928761c43",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dcc131-0c42-432c-b650-b4cfc911f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e38299-0556-4438-a69b-d0cd1528afcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce752d6b-7dd5-4137-9bcb-b9ebd1f1268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f665be-0171-4c02-8e71-ff43d2dac922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eec52e-497d-467e-be82-618161c44595",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628b9d46-15d3-4d99-a523-0c1b655526aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4e3dd-34d6-4ffb-b4f0-b423386febea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e2904b-3fb6-40c6-99f7-15f1e77d37b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf11824-4963-440b-8104-ffb3e477f380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a048a9-f12c-47eb-9dda-6cc3e7a3f962",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d590da96-9284-4b7a-b26a-bacdbd5ba020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "776e87cf-4ea2-4f41-96a8-4fbd4c74c848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597a782c-719d-4bcc-9114-ae2603e06ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65850035-a3d3-4f28-be39-13ae9915afee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "178cfa3d-3a99-4b6f-bd30-8996818a8b84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ee485d0-81de-4a23-b90a-6f0f3cfdfdd6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f410fb26-b0f4-4156-a686-078ce3cade91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3c17b91-3c0f-4f75-a434-58dc003ff464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec296182-5247-447f-aaa7-0c6e22677b24",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cabb181-773c-4f96-9b8d-1f9bf4f6537b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "610ee1bc-09f0-4062-9919-8b03b240b378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9771046f-f3e3-4a03-a212-23ed977b7038"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79de03e4-eb92-4222-b467-98b0cbfdae52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39f8c321-c0d6-4a01-bc78-b8f434e3d1d0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6449787a-2ca1-4595-8f7c-9e1f6d620891",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9ae95a6-5d15-4a95-bfc4-ca91ecedb4ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36efbcd3-6f80-4112-a5b5-fb1055a94a12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "767b74fd-3014-4d83-912f-7a2e27a6e9b3"
                }
              }
            ]
          },
          {
            "id": "48d4c9b1-07e1-4229-89f2-7829cbfd951a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e6a093b-4c43-483b-a61c-ac3d990b4b80",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cab9065-f803-47f8-8f12-b1903e372006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7aa7026a-70a4-49ef-aa23-7ed2f5fcf0c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aafae7e3-83de-480a-8e4e-bc79b17aec54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a514284-b47e-45d4-9e89-36b442c9898d"
                    }
                  }
                ]
              },
              {
                "id": "d8d51253-a3f9-4754-9aa0-0e3034a132ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a6a4605-5ab8-4f99-9659-1a887fced2a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ee27421-92a0-47f2-a96c-a51c1b7af037"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db4c3958-a75f-447a-993b-03d3f05d2224",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d3c5bff-ff3a-418f-9670-9331a1f26f8c"
                    }
                  }
                ]
              },
              {
                "id": "2992c25a-050a-41d3-b533-b178a17485c3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a10582-d495-44a4-b734-3ad4d162c666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a127d7de-50bd-469e-97c7-497dbb09be70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41efc6fd-aa9c-40b9-944f-2e159b7173a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44f5ae81-7b58-42d7-9034-ae54eaceeada"
                    }
                  }
                ]
              },
              {
                "id": "3c40159d-2099-49bb-b9b2-e4f659cc4142",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e86fce08-176a-498a-a43f-bb17a95b0818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f71bbdfd-e875-4c03-887f-f899a8b7bcce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94a74422-6304-4406-b4c6-4e227e85b761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "debb9670-4464-461e-a70e-48445fc1870c"
                    }
                  }
                ]
              },
              {
                "id": "b0cc2156-626e-4643-8e40-73a8ea1aa066",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "506c4fde-606b-4a8e-8896-0b933a7c7625",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fef4be4a-5972-4d75-9bd2-b66f1058fa7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d26d0b5-413e-49da-806f-0c46b0b6b686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "efdfcd77-44a1-4a99-a3b5-46038c764067"
                    }
                  }
                ]
              },
              {
                "id": "0d90c934-50b2-400b-8300-873184393621",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e955911f-f336-4699-ae6d-9a9635c72954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "620c1fc3-ee50-4450-bea4-5da46ce86e51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3a7641d-4f0f-42c8-83ea-b74c8a856512",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bc58100-5e6b-48b2-a3be-bc328c961f3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f638e456-cb86-459a-86f1-daf935b8adab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42daeea0-97a9-4ebe-9509-fc9065e86dd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "057bd7fd-3a28-45cf-bdbf-e79d6d211e21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0afb137-78fe-4872-8a00-2e370d03bc73"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f671c257-18c1-47cb-9962-3c99ccf99936",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25bc554c-68f1-402b-af02-7f9266d61e7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c41ef2c3-89a7-4ebc-b631-d244a497c071",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b3f0b6f-8a88-4c93-a1ee-16e64f0a5996"
            }
          }
        ]
      },
      {
        "id": "c60a103b-cf70-4225-b566-86cbef24125a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8d37ec57-f5a4-41ba-846a-33ef84082440",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21fc7612-5712-4e45-ae20-2add845eae4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d32dd413-d15c-442f-8852-26fcb80d68b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962bdde8-cb31-44b2-8c02-85983ee3469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8838a11-1e40-4a4c-b2da-cd77f821f4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1343ab3-0655-4535-b5b5-15ee008805c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "340faec5-806c-4e58-9ab9-d4cc27187446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e73f48-8042-4176-9b7f-f0eaf5c344ff",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf4d525-09cd-4324-8398-cedb3933f596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f859721c-67bf-465c-b7e2-1834aca92543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c66f41-3f61-46db-b886-bdf4368723d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f61938-26f0-47d8-a3f6-6040f77c89e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096ad9cb-d756-41d8-bca7-0e4fbe9da364",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3dbfa0-0b89-4a9a-a2ad-1e8d13241e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc745ce-1fb1-4716-95bf-e3ee63827079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233237b9-7650-415d-89ba-8b23e8c13a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52417a63-5b15-4400-8de2-b51d31cdf67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f8a7b4-91b9-4838-9ee6-e6eacc276aea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f4f7d5-075e-4744-a199-b963a09cb03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff17917-9efa-4699-a974-521e06d6124b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df9a2eb-250a-4deb-8d44-86f7df40ea71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccc454e-ad09-464e-8314-6aa0f6b8e5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20b6787-d63f-4624-b4ce-0e076f857e90",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378be55-1e8d-4e47-930c-d461671f237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d16829-c0b4-47b1-915c-cca648f7a560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231648e1-49ac-4fcf-a83a-e597d3e65c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b28af5b1-4fe7-4403-a947-9ffc3d1cc990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e00f2fd-e328-41f5-a221-a2ab01ad41a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ee1b1-7710-4c22-b260-d5aa4a8165a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a88c673-d797-4ab1-a9eb-5f4902f84ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3340e332-ae3d-4bf8-a001-90b85a6edbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "465fb4fc-9c74-4cd6-81b0-65203fd27e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dcb916-de28-44a6-bcc8-af57b5d2e963",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3a9ed6-d80e-4725-9f17-8a6fbed599e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be28dc61-be14-43c6-9b29-d425a74ddd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c1b9a4-2bdd-4230-bc36-4814a574412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa5c4e0-eba5-431c-a293-aa6a60bce0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3caf2ce-657f-4666-9745-11b5885c7cc7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c72a12-20c3-4f15-8c9f-145ea8705ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9477cd1c-5051-4f37-81fb-4e847e66a832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bb24d3-f35f-421d-bac1-de6d02cc9c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06ea473-c8db-4326-bf45-9abed0dd4886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5b06db-4ef6-4cc4-a162-b8a51f733d23",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d8cc87-4d52-4d38-a309-3e50b9f96540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86c9940-90be-45c5-8a50-c3251478edb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddba6685-0278-4e21-9108-ccb89a928cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0624976f-ab0d-4fa3-b508-8e17be0e292b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621f092-d05a-4b7f-b7ff-76d698f153b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d36e92-5e8f-4082-9739-77e2c6f344b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ff6413-6d8c-4372-ac17-24e06720803d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177cb88a-7d4e-4231-b221-f6dc7d85909a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b27cdf1-8116-4134-bae3-1ce2a81e663e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f7830f-e706-42c8-a768-498fa68c733f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d22338-5cd2-4282-84ac-cbcddf7f6f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2724f0-8694-41fe-a481-f5526df1fdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c0c922-0005-49d1-a44a-4ed2ff39dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9e78b2-a2ef-4e58-8711-187b9d8d610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df979636-6c53-4d7f-8602-6bc070abdfa5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560aa860-9f02-42f9-80a9-bfd64b885b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd3168c-7c6a-4115-b002-08d56d192ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa0bab5-fedc-4f7f-9a03-21308b902680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac1fd43-de6d-4a42-905f-a00e0cec6cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2639b9-516b-40fb-baf8-778b149c9f99",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a0cea-f8ac-4849-87b9-37cf0fc18680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f511e9-512e-4d1b-b2cd-dcdd63e7fc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a610360f-29f7-4e26-b3ac-a6f798d7598f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97051f22-c460-4fb6-89af-af3e34d316ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6444a5-f905-4d70-810d-31ae1575dbda",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c013f8-a581-4349-9a46-75dd3a554671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9013c8d-6e3e-4016-8c8f-13b89dd3b91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59962482-4d37-4351-8a7d-fc835b7bee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b4dabe-1ead-4690-b739-7a7d05d40d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f868f541-5b55-4dd5-a14c-48e8bc0d2b0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5cc2f1-bb76-4037-a20b-32df51517a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5885f19c-2d5f-471b-94e0-fae78995e11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24225984-1092-47f8-b9a8-87fc603eac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b223d404-3898-4a08-a69c-c65934f846bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdbd873-8d4d-4db8-9f63-7775d954d5c0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0dbe15-1b1e-46d6-a75e-a4de6d563e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f02c9e1-5aa5-44bd-a0b1-01f8a6b11be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470a56ad-caec-4a99-bacf-35bfe41d83bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1ad2c9-5ce4-4dc6-b277-2b5418962642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e46e830-cdc9-4060-9ed6-6a757f415d1a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df1deac-99f5-47fd-9d4d-ca41b42703ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c884048-ccf5-4aee-b560-b6bfbcc4e442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e6b71d-cf4e-48b2-95ba-8a2278360c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af142ec1-cf16-43eb-ba44-3a5a6045913e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9dc1a-f287-4998-92f6-cba195514e64",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd29731e-44d0-4106-a278-0bf922600465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b47c62-1467-425b-9da9-f555d961034b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d07fa0-f094-4354-bad9-0e294d0065a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbf926e-7f47-4334-b362-1d2924f2320c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2168e0-b523-4189-ae27-180a0470f4a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26451465-0312-4316-9281-661e94b5e531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19cae5b8-f814-48e9-96e0-758275c0a8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29906902-cf25-4d17-8670-0815e3303c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b5ba50-00f8-4853-b198-5096c27c4acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb53ce4-1d03-4ab9-9ce0-28d33d4b416e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60cd361-dcda-4a99-a82c-97c9b93fa49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e72a851-0626-4fbc-b16d-8eacd5f2b2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ca5487-6284-44d8-9397-1644d20bcc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "044b2593-f4ed-45e5-9de5-5fb0f6ea6f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454ff980-833b-445a-8789-c7f176091238",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5caa909-9e93-46f1-8022-5179e330e16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfa4e3f-a4c1-4f3b-9450-c2b61cd23c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0069d410-e489-440c-9dd4-75e4998d6d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "618de5b5-8c0e-414e-92ad-3df3edc5f10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2683fc8b-0680-4c2a-bf9b-dbf93520834a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064b893a-6e8b-4cd4-8153-583abf7e3125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a4b183-8ab2-450c-b8a0-6abc8f087ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ac5f67-89fc-4b75-89b4-748ed7471dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c2c2d2-5ed9-4507-a7fe-e62856e5651b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a90d994-4a1e-41b1-a8f1-028499457471",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ab2260-da96-46fe-9dfd-3707df0040a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0737fac-cf67-49fd-9a8b-7bfb2924b026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ec2b9e-851f-4a1e-aef8-60f03a5b4bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d123d9-0bcc-40ee-aaa3-414059412543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80f1efe-943d-49bd-93c0-a8dcef786cc0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2708fb7-60bb-4ab3-ae45-65b0006d47ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46924522-7d96-43b6-beb4-5ca731e48c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b14ccd4-344d-4e49-8fe0-3bbe35816028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34896f5d-a2d4-4073-98e0-545a9e82c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeb509a-75e4-48be-9182-9757ff2b67ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be5d167-27d6-40e7-909f-5ab3e89f740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3907d25d-70dc-45b0-874e-ba2f328de584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f153c7e-f5d3-43f3-8128-4e7dce053263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25dd6ec-f41d-497d-8c2e-102ba578f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5c46d2-0c18-4fbd-b1f5-52287d7c4bc2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6364a30d-d57d-4ac0-a7c5-d709abb8b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfd9654-f0c0-4eba-9d86-997ee51a5bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b78863-1ccd-4f0f-a887-9b80165808be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0137428d-8d11-4e08-b358-11492e92aa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee526f30-7b78-4ddf-8c6c-0e2b0aad9c83",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72645c8e-5bc9-40d6-a43f-3dfaa7725eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed3ec51-3600-4db2-bbf3-710a1ad67840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dcf929-3510-4fc1-8f08-6dd021eea459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63dacc4-130f-43dd-aca9-4de5b7815e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d185ac2-8ba5-4ba1-b093-530da089826c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fd294e-6cdc-48c1-a762-314518c2378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c26169-1a92-4918-89fc-a5099186535e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcb54cf-c3bc-446c-8c3b-61d9bc0d4c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30cb8de-1828-47f0-8f59-bf80c3e7d4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06b8e24-1c41-4d1f-a592-4d44331a1219",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7d68ef-8a99-4b59-a519-9203215b113e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f826d9-0e59-42be-b78c-9783ae9509ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d653da2c-d767-47f9-bf4b-810b05c8158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2cbd5d-6fe9-410d-8ded-39ce96939a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60875979-c3ba-43c5-9118-9ee1b6b516a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86bd94e-6ff1-43cf-ada9-951cfd924ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75550270-2dbf-415c-b9cf-de7d252be66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bfdd2d-09d4-4e36-a2a4-3865e0b3c910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3497f5bb-fdb4-47ef-b030-cbf3890468ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a043397-3798-4e4a-b6ed-5ccda9a52e3f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec2336-2c99-440d-ba25-7a93b6a7d9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590fa757-c13a-416d-8830-3c5111721221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc8675a-d170-42ec-9867-5ff581a428dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc9bf98-ee5d-4379-9948-9535d6d3e5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d761629f-b06f-490f-9c19-b02c1b3e6b91",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45327788-7f75-4dc3-9984-b58e89afd545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f59f54-65da-41d8-a579-087ddd126010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5f4617-5f43-460d-9138-b4518ea5c21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33ca92d-5e10-4be4-ab9d-b6d2a6e296fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ba5b0e0-bc71-4ddd-b947-cadd33ab9705",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1543962-ce6e-42de-b941-120c8eb239fc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a473b74b-a6bf-44cc-9c96-5b825b34e9d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b65cfe16-3190-430f-a699-d460f408fbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737d3ba9-3ff0-4f9a-b089-1cd64662039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f8ef4be-d5bb-40c7-be6f-cb58779a0e9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78201dbb-0d34-45fb-90d0-c58d266b8e5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7ff3b9-5c8a-432f-9f3f-e71d98b84a50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b03aba2-7586-45be-bd9e-359fbc2523fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b23d6f4-e562-484a-8f29-13ddee0d7da8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ac5c103-1fd1-492f-b5d8-73d9d3b88391",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0078ae44-553d-4a2c-bef7-22707fcb28e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a6dca66-31de-4a19-a813-515d366c59b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7623ab6-a40f-4f54-aef8-f80a315487f1"
            }
          }
        ]
      },
      {
        "id": "c38fdde4-e90c-453d-9262-2dd14e4e622d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "681df515-04ef-4988-bdff-99127da3be67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa438ce2-374b-495f-9e4e-6de857850620",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6e99545-de00-4cc5-94fc-03f6aa840008",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44a3d62-585a-4848-b441-5440c5424515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bfb355-16ca-4746-896a-d6e3459956d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c58b0b3-1560-440a-a586-25a6fb06f477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "97bad692-b8be-4124-8577-307cb61e9e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1808c8-f9ae-41ec-ab27-f4ae4433abec",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5233f8c1-b99d-45e2-9ad8-14f2873bff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e2ddd6-91f7-40d9-afe9-d4e90489391f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c255eba-344b-479f-9df7-a591a9a511e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2de55d47-6b26-4a48-81fb-664c332132cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968f375a-a034-4f23-8156-b02576712564",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7ad77d-c3e4-4771-9e82-733c43aaaafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74244983-ca60-413f-9028-ce0d4b1553be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e726cf90-f2e6-4d14-9f47-398e6598d425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6e6899-e34e-47d0-bcd1-5774cfdfd5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06f4cea-ff0c-4c40-9d7a-48f6b9d13b1b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c75011-f7d4-458f-87c9-993e835de714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746d9bff-29c8-4c3c-b9e3-a437c413b17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4195b6d-7d43-4f28-bceb-2bf6240f0b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa743f56-57a3-4c50-b88f-40f71c44645e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccc6981-1d76-4328-bc90-b72ea8550507",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86313abb-4619-43ee-83ae-96d814e49487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fe72ea-c1b6-4c62-a9d5-b05219568d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e9913b-c5ac-41fa-9d7a-891df9467ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2b5eea-ee31-4d6c-b708-fb93ff548790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4cf9de-cb77-4e39-8d11-e4c691faff59",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc210a20-a449-48e9-af5e-ba9dafe3e7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f7fcc8-4ebd-4043-b715-d323a896afcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6d4bf-9f24-4550-ad94-81c0a98632fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba987f8-3ccf-44b9-b8db-a6ca0950e651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fb4407-4d25-4105-a093-08963a09d7e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c9a376-79c6-431c-b012-21abba6afa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6784280-10f1-46c7-97f4-7744aa9c2137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5262cfc-9637-4a5b-bb97-76888b8e1b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "276e7412-9863-475f-806c-0d0dd4ff1d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dd7fe6-f434-4498-a1ce-cec27dc29188",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd07a6a-7136-47c0-a5d8-98b51f506685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb68fb2-d7c0-48ed-9d01-a3ba88659fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b243ce8-cbd1-451a-860d-b99caa2c6428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0941ab0e-df60-4673-9c6e-6c5636e1921e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec53fce-eea5-4712-a0bc-a3ebcfb1b835",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fb20e8-9cac-4a5b-a766-fe5487b6bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b45f00-34d4-4270-bc8a-5150f8a7dfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e50aad-4430-4dd7-aa99-ddcf398ba289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ec9408-a7ef-4dd8-ba82-b260cff306f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cb3438-779a-4185-83e8-5d60cd10b26b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66ea462-89c1-4571-afc4-d88e0c0cb1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab53fd1-b9b7-4bbe-b0d8-dc29164bef37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819956d4-3e8d-4ac5-8296-519bf9676052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e283c0-25f1-48a6-a87c-03e0e2721669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac441b40-025a-49f4-a2d8-e7fae966e642",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af812a52-ed3f-4afe-87e7-b1003293a16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21671adb-e749-44f8-9edb-2d78ab3beed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d205955-9127-4be7-94f2-6c916d3113bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24574681-7c92-488d-9a67-3e4a28a038af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a84ccd-c031-4c71-a456-961abbf1166b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4569d5a-da3d-40ca-b0f7-752ecf29f82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c71015-e66b-42d9-80bb-c03ef52e7d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98283f7-9d98-4b9b-ac2a-3f0f8af04fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7400737-b8f9-4b19-b547-eb33efe74426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc1405d-1da3-4ca4-84ab-6c9bf4fe2c30",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26398e7-60e5-472a-987c-83a87c65bffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29c9f2c-71a2-4e5a-b5f0-6c76c5252458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a66465a-2bb6-4284-a24b-d59a7336e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d1a311-2076-4e44-99ae-577708570ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8b386f-586e-464c-8fe0-14560debb135",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3926f0b6-7da9-4bff-8075-ff0e52eaab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd436ec-e91c-4e84-9c3e-ded92a832000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1453f3e1-810c-4f71-b999-ca039e5e2caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "92510cc8-ecad-44f3-8517-9598d811cf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8ad7bc-754d-414a-846d-73e9491d4848",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e4719b-877b-458b-9183-80749fd27689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63319ea-11a2-494f-8c3d-5c4b04120f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641cff1f-9bd8-43b5-92c4-bcff9ed4cf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc895da7-a46e-44f0-890e-f18c81635802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff3bf93-cf21-461a-ace8-2beeb6d34924",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e796362-7d45-4b25-85bd-93b27a4eae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af80de04-c9e0-4dab-9d1e-0968e3b29dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4537597e-25e9-4126-9f70-7f38eac716da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cedd0323-5e70-49d1-9bd1-b281846d7163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4221055b-18e8-469d-b16d-ee6480a97fea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5986a1-70f4-44b1-bdc6-a401c784f2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77746a0-f51d-4242-aba4-e37c83a600d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b527f5f3-ca18-4a97-99b8-2a3ef07e0b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "41382bee-6120-40bf-9cf8-4f6b4ef516c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1b090c-f31d-48cd-bbdc-0be7f597ea60",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a91ab7f-0291-4cfd-a570-632298dab4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a935224-2e04-4298-acae-75d80afed442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d9264e-d376-4820-8f28-46595daa0870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae69a20-0c73-4fa8-83c1-5cfca89b7233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22439de-43e2-499c-b115-a0f767c57cfc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deac7f6-bea0-4902-80e0-ff5e7d56780c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13b72cf-a815-45c9-8804-97f27c581906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0178a637-60c0-44ac-961a-529e7f36128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7edae75c-8371-465c-9e8e-5722b27ba6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ce8a1f-0d92-488f-8820-bc01b15e5089",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77773cc6-e33e-40e7-aa0f-0a0acaab0715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d5be0f-643a-46a5-9c06-33ec8089d600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75177008-cc29-4504-a456-0768d41b0d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e7b9ac-67e2-498a-a240-c5999ddbbc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516c3a9e-5488-4824-beb6-3a097d70ccd5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988c336a-f11b-4002-b043-cf2a91b9df6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2c255d-973d-4c81-9d9c-6a4411bfad68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca17d888-9c13-4572-8d84-2e985d4d3aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82645b4-362d-42da-bad1-fb6989aac139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238ff267-a76b-4299-ac98-9e1b1f5566ed",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8278e9f-406d-4d7f-8744-9b5b538877c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92c493b-9466-4966-9187-362885cf306b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68302c7f-5ac2-4830-a1c4-05e82ac5ed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe0d973-aca7-45b1-9cd0-195476d30ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703863bc-a477-4f24-935d-541980317619",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87768e12-03ea-4f96-96ef-d926ba0fe663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0839c796-5520-4934-94af-4295df100ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d235b342-2b78-4422-9367-e4c5490005f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2b29ae-0caf-4cd3-a6a5-94fb6b5f341c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6fbd87-7ca5-46fe-b9f1-be90375050d0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4e3519-1ccc-4c2c-89aa-3c9575a277eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9970a6b5-fbe5-445d-94ac-88c4c2b81d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d35e8-d24a-496b-9246-adb5ba681e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0adfa0c-d5ba-4918-bc46-80fe9a68474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d2baf8-93ca-409b-ab8c-1e220fdb7fb2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c6d744-bce0-4712-b561-556339624fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10950fe9-b049-4ba7-90b6-9a9992f5fb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e66fba-52e2-414e-82f2-646322efd125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12fa75f2-d98d-420d-81fc-8c41ae9db6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0507094a-37bb-4af7-9c73-263e9f7ef893",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ab343c-200a-47a7-8de6-bc5e5e75947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e914726-dfc0-4b1e-a19c-6ca7c28efe33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bbae92-829f-4a0d-b951-9be6a813cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f3ca49-8086-4368-a1c3-e7dd031f59da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438c64a3-715d-4522-9129-11b5496d436b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dafbeb-40af-47ec-a5d3-512f5f361f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c3db52-8e37-4d34-a9ff-e2d4cf90a8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd13e04-c9da-45e2-915e-3af7aff7fbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2bda8c-09d1-48ea-b19d-cfc23eced3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69001544-be74-4e37-b22a-2fd07cc7533d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d651ad4-a6ab-4b3e-b6d9-b871fea7fc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae54a31-b425-4727-bbdd-845aa5b8ee4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c3c978-04dc-4e63-8fc8-6b83ff6ca145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f91352dc-9b22-4b92-a824-f0376316b017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d061bdca-e89c-48ab-b4ce-d3a46d067cef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37afb3b-7161-47b3-9e7d-fc6bf89e2fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40c3f4a-9d56-4b30-9fa9-96a4971cc9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3beef79-c82f-4e1f-8d07-dddeff3ccf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e394336b-cfa6-4d9f-95ec-1383d0cd8409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca002afe-c90d-49ed-a32c-bf967c15f6e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc31516-05bb-49e5-942b-4e875fda86f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10501fd-03e5-4ee0-a057-d23084f54985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668a2c8-55d6-44d7-828c-3d57698c45f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5626f3c-ff33-4485-b36e-17ace11dc9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964696ba-4603-4613-bae5-bfe90ff3dfa5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e560799-403b-4863-9488-a6c91fb64e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198f34d2-c221-4598-8794-103891b31b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f6c756-dbe3-4beb-9f1d-6a2b1b359f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a10cff2f-071c-4a10-becc-ee6b8c067fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c510b3a0-ef34-4fb7-acfa-fa9824a68e9c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f685681-878b-4559-b1ea-ceee12814fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e590e41-2b9c-4e19-afd0-e2f4d98930f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea9f14e-614a-4580-aa2a-fa7ae5eb9915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe74dc6-b1d8-49c9-bde2-767cf0997c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f42736-92cb-4317-9572-d4738c417337",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea90bff-c7f1-4203-96ee-48b99b401070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d682c827-2e54-41b4-8ee5-0a732f473125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b43b3a-e46b-4852-ad60-9d1b8619e339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "945ad9bc-00b5-4b96-a98e-2fa2ebc3b33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d08b289-4968-42f7-80da-43f628bc5c38",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f1513f-cc37-4025-be05-52b097078d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4054b74-62df-49a1-9124-c8ccad475bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696b06b9-a6f7-478c-8c14-478c248dce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb82c0b7-5052-4144-9665-8debe243af97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813e2135-2868-49d4-9a59-f075cc317545",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d37e6-4218-4048-8f3f-fede39936865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f906faf-bf4a-46a8-a3ee-d90a029f1f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb5d48c-fb5a-4ddf-aaf6-f84f667e1843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ffb44d-45f5-42d5-8b0f-65eaaa414a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d3213-4a5d-444f-9319-e8039195d558",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080fecdc-18d7-4c0a-9838-d9116daab94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d805fd8c-c956-4b3a-8ddc-1636110cd33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5051ffe7-944f-489c-9719-7f2be9d96c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33548a32-f7cf-47d4-9a4c-27accd326910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55114e7-8c72-4d25-a979-9f3aaad82133",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d95144-729a-48a2-a0f0-2b35798eeee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38ac058-7c73-4fb6-9d08-ca86c09dd3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba0d99e-8c36-49f0-ab29-b7a738bbda59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec6cc5f-b9e2-4ca9-8d71-24c23248d9e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7846c90a-9a50-493a-aba0-d29444dad3b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebda9fb8-7bf1-4b1d-86ef-4d60563ebedf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925981a6-7b28-47c8-8ce1-9c2299ef3e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "696f634c-bc5d-447d-9fe5-1a7d8cb4ba63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18886559-3cdd-4e49-8d27-8836291d3bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05b5a708-82a5-41a7-802a-f2d408831a9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3448e9d-9084-4b5f-9b09-953956b67d7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33c3152e-155a-494c-bc33-589fc8e9dbc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c74756-8d18-4c1b-96d5-29cdd7d3f02f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b0cf7e-f2eb-4032-8334-43ca560a52c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f83bef0-0846-4380-ae66-473a10fb5466",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "135a9da3-c314-4b17-919b-cfa8714e6cff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85711ba8-afeb-41b0-9347-2bd01e4cacf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6afe802-e1f5-4113-98b9-a088239b7648"
            }
          }
        ]
      },
      {
        "id": "148861ee-8648-4b24-9cf7-a96845e0d351",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "234a38e3-237c-4b63-b382-a1a71eb09fc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c0451e0-56a2-4f68-8736-02ac88dd730d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b25bb74-eb7b-4cde-a84b-97f894774944",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa58515-8c5e-42a9-bff2-64681c807b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbea6d7-ec54-4fbe-aa49-3191ed1558cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94501b0-f59b-4b5f-8d49-04eb7c7097bb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d939a093-ebd1-44d2-80ab-5e6648f67be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da9fcc4-6202-4f4f-bfff-a35fdeb28d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0acb5c4-de96-4039-a182-afe9ef1c9499",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93b0110-f80d-4885-af0e-7fa99e631c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2896d4-f9b6-42fe-ad9e-e1352e447389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ad6f47-82bc-4335-9a19-243c44d2f4ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11367a27-d407-4f09-9084-c2827c5534b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be44b334-ffb5-4ed8-95a6-c77f87532fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a8e03c-2c88-414d-9b8c-842614f4be54",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b2d19c-74c1-4632-bcc8-4a9479e32b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92ccfca-86c1-4dc4-a42f-9acbd1f25773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30024aaa-5977-4dc0-ab89-f6190c87e90e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91cde77-f4f6-40de-a2c7-f3aca2bbdf2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d14249-2745-49d4-a4a2-7fe59544e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8537055-9090-4916-95f6-3ef1183df340",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a817c367-ca68-40c4-9de5-d18256124b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d539f9c-dd00-4723-9516-ed4cb8134572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bbb545-4227-415e-a87d-54abf81c494f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d542dd-283e-45da-b4b8-ecf92c136dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046f4fd0-bb5b-4f3a-800d-445fe42ca6d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c63304-bdb6-4981-8908-a11796e08caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311b419c-582d-45bf-b23a-8b19ea242411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c20676-affb-4f61-9dff-1905efba24e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4071b5e6-3977-4905-96ff-0e1d005c0e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689f7231-ee36-4c7a-a715-222aca45d621",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029cb422-eebe-478f-b02f-e5834b7b7014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e9d3e0-c049-49b8-b16c-b8020d043de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2021a3fc-3c3c-47dd-88bc-af1907917fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671a2429-858e-45dc-8da8-20473d25aff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32922703-b8c7-4843-9a76-06c7b36dfd7d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5531de6-6f03-40ae-a9a7-8afc84b7c39f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc43172-a200-4a6c-a37a-feb9dbfb83eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8588e7c3-95f4-407b-abc0-0a8ca4b8bba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e84626-1916-424f-a1bf-a3b4aef984f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1860127-7603-4a7e-909d-c35090bcbe9b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82812f5-ac81-4c1a-8f61-2d920e34910c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41704d89-e394-452a-844f-e7419b48958e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae5625-1bec-4865-94b2-efbcac067eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7fb855-c508-4d4d-b06f-47ef6782b24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb877a80-587d-4f51-9ce8-9a19f953654d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e35e94-b354-4c81-b6be-40589e40834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831dc584-d377-4a43-8a0c-cdb8ce313d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590ceb34-4386-45e2-b43d-d0c807a97dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1d1a9e-3793-462c-8bf2-aea5df9bce15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cd0cac-7586-4512-980f-f183364749be",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c95098b-d9af-4203-93dc-581a5efdc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1199220c-2ae3-4cff-847c-09528c636ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c104c5d-d107-4668-9005-6d2f36d29388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aef367-1f16-45af-bc1a-0abbf368a121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ae50f9-3a2a-4093-a185-e48dcb0cf894",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c708c54-ba4a-452d-9ac1-c45abfd5d87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eef2cfb-0368-4c29-8825-f9d55546e2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046dd54d-6b5e-4168-8f73-7a1b275604c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af55935-4e47-40f2-acbf-26805ebd4eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e7707c-adfd-4f85-bddd-e6342376996c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6526ae9c-1a06-4cf5-9775-454b2c3ea61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12afd823-3391-4638-a324-5e234e0c04bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96294ed-2ab5-43f6-bf9f-77f859008c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36c984b-547a-47ef-a344-9d54e4344027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fd3cbe-7b8a-473d-8b7b-28164bd18998",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681b75e-bdb3-48ad-8481-1eb323717090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8109e6dd-3a5b-48c4-93d0-651cc2d39d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730748d9-889b-40b8-be5e-e76bcc462c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74b2b18-55d5-4305-8adc-fae3cab42eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a0d6bf-7c4a-4da3-b388-29897d552b40",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2b2ade-ffde-42a9-8bd9-0f979bb06070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66813ba-0edc-46c7-a258-c53e5989c631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d0b47c-4e52-4547-a3a5-4d0ec20ddb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d02cdd0-4cb6-48e7-a3a8-1195499663cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd658fdd-3ea3-4fb0-a051-d91a40dc0188",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e65c615-7472-47de-b629-1e6be696ca4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1601e0c8-8e26-4c52-bc57-fb2bd3802657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ec24bb-d926-4a98-8758-44d973b66c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b07475-a6ba-4050-b32c-14b85cb058aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce17383f-53e8-44c9-b173-90c519c99712",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b768b1b-8fad-41af-9453-8d9164ea90cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd77a81-6adc-4a29-85fa-320c8ae9bcf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0da3b6-365a-4464-b2b0-3c832df5574d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4286d3eb-90ea-462e-bac6-f56183fd6917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad6a20e-62bf-479c-91ca-2d38471b5002",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280f82d3-edfc-40f8-b1b5-56bb91825f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac76d70-2dde-4228-90de-3c59bcda82d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72178cac-880e-4cbe-8266-561f01718038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979003f4-434d-4f9e-a15f-6b26afad2119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd5de7d-09db-477f-97fa-dc4a32cad2f4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec48b85c-40be-4e54-8cd8-303a2988f70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457d5c81-fcb2-4f9b-a260-2e3be8cfe404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f454bad-1dc6-4aa9-9d01-28f54e35f37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fac98c2-8342-46cc-a076-98aae308805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab59295-3602-4f21-811a-ef003636b206",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d9cad-7f22-45b9-b132-45cb3a75831b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718b76a4-7272-455c-b8ad-f942d136bb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738f8ef4-4c69-4130-89e3-a7ddb3886acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16ef51b-724a-4e24-8884-6df886220a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38132632-b0ff-4bf2-bbf7-c98757d78e21",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fc040e-3aff-48a1-aed5-7ae5fe07668a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2faa6a9-af06-49c5-b952-60a4fb5a93a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75171e19-e2db-47e9-a568-ec06777893d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5dd3d4-d5ef-42ab-b293-6a3a1f7b48eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f36223-9eba-4892-ad05-28fe29ca3891",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1bfbd2-fe9f-4991-b5ef-8d0286eb1536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893e4455-e4e2-42fd-b196-e35d9500c5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44f7501-cd68-49dd-882d-74c491572cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf45e852-b99e-4146-8904-f0aa300a9c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a933ef-1f14-4328-82c2-34857ea4b86e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d91919-f375-44d4-bc5e-b3e833a4746d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8db713-ad5c-4fbd-baf9-c53b4e7d8e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de114725-2e62-4808-bcb1-2bc9a266b209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14eab87-a54a-4d04-ab63-4694b3b22088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d0f8a4-187d-4916-8f1c-c9fcf520b689",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8198beb1-6017-4afb-9048-c3c9983912bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f63208cc-ad93-41d7-b600-df026b6e213d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17112776-8a10-4ad6-922c-7dfefb9510fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cca52a5-4d5e-4e2f-8932-10bc6d4237ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6663672-901b-458c-80fd-baac8e4016e9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b65f10e-22c4-4f40-9b6c-c5a92e8de1e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70bce074-076f-4887-bb39-0c1652f6582a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977d317c-535d-4303-b152-601f7525c615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e6035a-ba2e-45b4-bdab-8071df225ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a29221-dafa-4b41-9a3a-2916b7fb5bb2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4449a1-7909-49e7-b2a9-b20e534a6c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e867737f-73ad-4203-92bb-5ff9ecf389b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62781b9b-826e-45b0-8ba5-4e57d2681342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9f973e-891e-4d66-8436-75094f6137e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e74b7b-dd75-4cce-b1a7-d05e4843ab36",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d198034e-c3c8-4816-8334-c4e20fcc38ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52527165-1679-4e11-8a68-1451ae04dadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1b3c12-e1f4-4727-8b54-6104e50db54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f5e400-ae1f-4352-a766-a8c524e3f2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fa8396-d3d3-4df8-9e4e-4766ee299bb9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0b1266-4f64-4f88-83a8-d9436ab4f7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d71c8c8-052e-426e-857a-620681880e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a750a82-db0d-40cd-a204-cc1bae63dcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a3261d-586c-4cb3-9ea4-b9927cd8e840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dde790-0896-430c-ad19-92c9e92207dc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dde6dfc-9ec6-400d-bafa-8676f2cb8a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1580c090-7d25-4360-822c-d81975721c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6d48c6-a1d6-410f-b106-0e4c0ef17cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88a8698-369a-4ce5-b1b9-f6cce672c321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deacfd8-e9f1-4ca4-89ea-ef48db0d694f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f5718e-3844-4a21-8efb-b168f66c6399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935c6b8c-0659-4c8b-bf65-3fbd33065dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2721d175-e0fb-4401-9cea-044fe8bcabc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9cd663-51bd-4889-8d19-34ddb60fbc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fa21e3-c82c-4d7c-9e43-6ccce29dfe79",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fac46e6-58f6-4c0f-9870-8085161ba6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63b4d61-64b2-482f-a231-8f1875cb439b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c0635-9b0c-42f4-ba54-cdcf0c27b17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daf4bd7-0a5f-445d-ae84-c58f1dd35421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aed5f5b-7d05-4dd1-8969-ad07158d3297",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a5e55-d662-4cd9-8ed7-e74fdf312fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb0e61a-58eb-4db0-9e60-7e3fbf3fe4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbde6c2-9d63-4799-bdd1-c70267246c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a186e6-1dff-44ce-b142-94dc378dd467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328b45c6-a01a-4ccc-b9df-2023a5e66d8c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8548b20b-1aa9-4b9e-84ef-13fcf94ae4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95830242-e168-4398-a6dd-476a119edba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef91ff0e-d7d2-4b22-bbc0-315627d6808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76641f26-d0dd-4440-bb56-825a21515603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd558b87-7096-41a6-afaa-e9ccc87b3a13",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abb5f66-1a89-4a31-8a5c-00ee7a7191bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456e9b20-3c5c-4b0f-af40-7825cc709bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3e6b91-1f29-4df1-9333-150ace975ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1452672c-de7f-45e8-a88d-f74a797b8463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abddcc8b-45e7-40eb-b515-e48331ff7ab2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b72c74-aaba-417d-98a4-c5dd06c63fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734590b0-c378-4f6d-ac35-eab19f9a0250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e0b5b6-65eb-4bcc-b30e-5927c9b9e2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0286ad0-8609-48ef-a1b5-08fe90c90fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6f8ead-e0b6-4ccb-94e8-2055c9fb4aaf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3c9668-e6b9-4c1d-b221-dddd12fb5717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20838929-f8cb-4cb6-9c2e-e75fce2d0df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f4fa3c-e9fd-4641-83e0-24a97b24f241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b12ac9-a2cd-4ff8-aa03-98553447248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97def43c-7763-4fab-8e52-ed128b17e426",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5f4114-bcfd-4612-8dec-b626ec09a99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33316986-9a41-48ee-b559-659bd2cb06c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fc5eb8-e5e7-491c-b1a0-1e6634d65208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fba372-415b-4d75-bb4c-4a3afce91516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11297b5b-cf48-4177-a413-eac0219ede6b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7af5ea-3a68-4e2f-b952-e805cf3d186a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f344797f-f5bc-447e-982d-9175c30656d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748a234f-b782-42e8-aa6e-b6d20a581646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56a7bf0-00ff-4115-a457-a09710e3a425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b958c726-1195-44f8-a829-e292c067e199",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c958baa5-be58-4d11-9dbc-da8d1a79efe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f15b4bf-b494-44dc-b7b0-f524402ccd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385bba65-1955-43e6-89e5-ffebdececc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311810d9-9ba2-460a-a6cc-8dadcc6093e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e19a8d-490e-4e10-83f4-a9f14aca710b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfa65a8-8e6f-4cd4-a252-3af16c33a269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6455a37c-f748-431f-b616-9ede88fd7b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbcdb1a-851a-4699-8849-fd5c8f2b214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf34ae3-9a63-4783-b20d-989c354de43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf24d9f0-3be1-44f7-ad60-023ba70bb3b5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b83fa45-076f-4bb7-a85c-00f6755ccf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97547b3-34c8-4edb-8214-17ceb89552b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf542b0d-19ea-4639-bafe-39a8db74d54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75335db0-f493-4497-8bb0-3c281e1d4db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e082fed-03ce-4860-895a-19b73e0f3396",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb264a17-6903-4c85-b454-52011d7cae91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202879a0-f199-4cd3-92f4-42add9bce43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2879f06d-b4ce-42c6-8516-2eb7e3b27c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32102c51-2ebe-4d95-9d0b-b1626809059d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0003edca-e4fd-4616-9c7a-2f509a1e469f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33690c1-2461-49f2-b60a-f7fb2711facd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8676c302-442a-4352-9b8f-d41f1a48e619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8046b099-655f-4a87-8f60-de9953b10aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175043a7-b9e8-42e3-93ff-bbb0a4877f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb164963-a28b-45c8-b8b9-e72d87cb6189",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8353b334-3388-4ff8-9b25-607e442aa3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d343eda-29a2-437f-a25e-8236763573c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f508fbe-9da6-412d-95d4-680f4f948a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420a8a1d-0f99-40ed-8897-fec5bdf4840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018c0a4e-682c-439a-bb0e-5e8188598513",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44417874-5032-4068-b834-117f64324df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481445ef-b9b6-488b-9671-791d0a52407d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ce51fb-92cd-461c-9ccb-6f4f8e558fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd65c0e-712d-4da5-bd7e-b8de9feeea09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688366b9-4c3c-46ae-9250-2c6560d7ff58",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ded6ca8-82a6-4f14-a07f-a6e42b47b90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa20594-9c5a-46c7-9bf7-3cfe5e1da7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb721a7-e334-423b-bfdc-c0d77f4e2ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f91ae8-74d7-4606-8fb6-869d8eeae80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69c0ad4-5a30-46dc-a276-0068c99b3e46",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1de85b7-4b6d-42a8-af91-a1aa671d245f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1139bac1-17eb-4bd7-95f9-2aa835411844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b937c03-9c0f-4bbc-b992-819cf5f52619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19684ff-3a66-42e0-9125-9fda9dcc73e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e774d58f-a3c5-4144-a12f-a2f4eba1533d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc19d462-0a67-489c-8acd-0b7450c8b9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181daa48-a19d-4197-9381-c861d646c31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc263bea-182b-4369-8133-af9b0ac7b501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da53efea-6db6-4d48-8ac6-9c4ad3d14208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820fecfa-6d51-48dc-b05f-876b9c0670bb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3a77cf-6872-4118-8d95-4448d0608b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b8c570-681f-4d0d-b85c-ded478af1aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bfec00-e23c-42a0-90c9-261f5704bc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d51085-a1da-40d8-98d7-2b7c1ce84c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bce1a6d-b3c2-40ae-ab84-26ff50148488",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96905e68-68f4-435a-bffe-ea8aa0f57398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ab0113-00f4-495a-8341-6bda5289cc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472793f4-e845-4d66-b892-cfa5fe9e3e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252068d3-d7f1-462f-ac07-12602730695f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec54dbde-e173-4b8b-9c0c-364607cc33ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff603e05-29c9-4e18-80d1-4a7d3daf1039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ed4297-2228-4a83-970f-d42b0a682f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c45b7c-99b9-48c1-9eb6-8f60c8ca13de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a6632e-0581-4b8d-b795-0e77aaadd074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b74174-1c5d-4f09-8420-417b8856cb25",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f085c1-b189-43ba-9a9a-0bef15081f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d62477-92ea-4fae-a4b2-730e2a5f9654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa4ef71-ffed-49ac-87cf-9cf810d32ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4b839c-6cfa-4aa0-907b-05a92d45041c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f415b27-8468-4d20-8b9c-31420759de20",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac85abd-60db-4215-b478-0c4f7923bb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84de7927-e764-4a22-8326-01ac440846b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b6d269-4b64-40a2-8c7e-c7e59ab1e6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fa6492-c128-4309-81ce-a75f8bc2579f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae047dee-b886-4411-964d-89ed8d0f8142",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458423f5-f6ed-412d-9913-3fae458a9781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e571f906-a15e-4a24-862a-f74d665be7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e30dde7-0356-49e5-bf99-e4f3e38183b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f85bc35-7dda-4215-af55-b01cfec2b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4c1d49-5391-44b4-a64f-556e34053fca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023654cb-8992-443d-b5a0-a9ffc96af534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e943702-9451-4dbe-86fa-bca577189f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b481d72-e00e-4809-bf9c-a5d28f56c15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babf9d5a-5888-405f-b08d-bd8234750e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81bac7d-696d-44dd-ae8b-d7f2101125fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4360900-65cb-44cb-b723-36c1b19b858d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00983b9e-1278-4d77-8130-1daa1758c929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f14e1b1-166c-4bc9-81b2-d623238dae34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2657bf8b-7275-4599-aa29-2290ed9c39c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5e208e-c42d-4713-b0f6-b2b8da09274c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0dcd69-6123-49ce-aec3-4b5c0b7ce11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7eb081-41b5-47d3-8f5f-6de70ded344b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ff75a6-c1bb-4702-953c-48696a6053c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828c26be-53b6-4444-b599-b9b39928c91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e338dc-d6c4-46cf-beb2-75409b9e8e67",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d94d29-47d5-4d66-b611-95c94737b375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a09a3ad-0eb1-4163-bdfc-fed08cb0b72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96db0bb-42db-473a-814d-099b0040ca46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f537ed-1cb6-4a51-901f-d101198586ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5177ea-8a8f-4d75-aa70-e1a8f4cbc2d0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11064757-c53e-474b-acf6-5c6900c05fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10202734-6098-49b8-ad93-b659493d2db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e91a5b6-61b8-4e61-804b-188574c8f283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd68ac65-03d0-457b-8bb1-961c7bd26ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5aea49-4765-4840-8b69-e4a3e957f66c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2942092-32b9-4544-a2f1-bb58aa4afe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cb69f1-3c04-4a3b-bc77-dd1852aa8eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b202b2-54b6-47bd-aa3d-2a09bd3a05d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b4fb04-7175-4f71-b152-f9354de67d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cace2c-b0fa-4fc4-838b-0a893654c86e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79340b77-6b98-4b21-883d-9bdca2bf24e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb1432e-85dd-4842-a203-58cca53a2b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0de079-3d30-4d49-9f2d-a8ee8952f901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78379447-f5ca-463d-8197-db0419e1b175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f0ba47-4d83-4ab8-ac53-de78ee1a6b59",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3244bd81-7a23-4f38-951f-32f89794c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e736638-6ee1-40b9-94bf-ac02c779703a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e9a944-8e13-485e-be27-fde1be75427f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2d60e9-6508-4aa6-88a8-81274f412da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fca00d-56d1-4d4e-bc1d-c9fdbb8c2535",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aa6518-9d95-420e-8fc0-8f77f6936129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af12dd13-3244-4c75-a85b-1465fe4a610e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdde93c-2c94-4c25-871d-6ee71c96e822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bd3da4-9eed-41fa-8f3b-5a062f4dcfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35589cd2-9020-47ba-978c-2d9375eefac3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b45438-b772-4d38-b824-01b8db3aa8f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f74e53e-2d1e-4977-9bca-4ac71761bc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688c5060-859f-41ac-a522-d54882496950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ce17a6-6829-4881-bcde-40ba1d41fac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a276e86-a799-427f-a1d6-93ee5b327a43",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754eeb79-76e9-4c9e-a578-03ce1a3a5298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7aa44ae-b3a6-4fb5-bd8c-9132f4859315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b05fb6f-9d5b-4fa7-bea2-5f6bf34f6d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3e60c4-f6b2-45f9-bd7a-cecfda61232d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f206fbdf-d101-4789-bb53-db4a6f3c8144",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daccae4f-73aa-4b02-adf2-1091470ee543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7673f9b-3149-486f-9a37-9e772f7cdb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d752a709-bff6-41fc-92de-444a8ab25a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfc5ed6-f45d-49a1-a848-b49f8c3fb41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99605bb-eb7b-410b-9a26-aeb7a0a7768a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05791ad-1ecb-49f5-a279-632d268b8c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f2668a-664b-4f16-9210-7f23f2cc025d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3f2add-90cd-43cf-aa07-935206a88434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9442d3-7335-4534-80dc-15144c8fc345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c50d11-67ae-4329-81ff-6deff78e42c7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fd2c4e-0fcb-4eeb-972f-1f54457d4a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a670aa-5d80-4f82-a852-54fd9b1c964c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad02c5a-c836-4fdb-8fa0-2d004c7e268c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055e0d20-0b1e-4010-828d-64ff6aea1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3225f9-54d7-4814-a696-54cd8633d7ab",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6266ac3c-982c-4689-bd92-d8eabcb3d046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d030462a-d95c-46ee-ac3f-c0cf3073d814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc558ee9-4311-430a-9740-32ab44b03e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e457207f-babf-4c3a-86e4-e5bdc1c2f953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0a13bf-2f73-47d7-bb80-0125db949736",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06953b75-78f0-456e-b828-3ba797bf6a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d84ecdd-ab63-48dc-939c-a57c187fae9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec1299-d776-4172-9d1b-de14855690ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036aebed-8048-46b9-bea6-dc010b52e95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04205e3b-f967-481a-b3c9-26ad91587d54",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d1ebbf-a43e-45de-937d-a50bb3db8f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3944e810-9e8e-4147-8bc9-6c4bb36dd81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7532942-5bed-40db-9475-f3e3ea59ee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0830b28e-b275-4a4b-b972-18a2bc7f95fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877b2529-e9d8-455f-9582-baa8a740cc84",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e33e48-5990-45d3-8eab-a72d8448f220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219bffef-9f50-44f3-9d90-b2924b06d9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d91617-6e95-4972-8216-d542db5f6304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2092e7ad-d25d-4f52-b6f3-a59c804e8c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98409e52-24bf-4e1b-bd43-dab43f4cc7ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7e45e4-3033-4308-90c1-ffc6733e418a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ee10b6-155e-422f-a871-af5d2a7324d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe16a5-060b-4308-a047-6aedfeadf90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca96b06-3444-48a0-a152-61e42c1ab409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69433887-74d9-4107-929a-c33d9cf6e432",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d103779-163e-4bc1-9060-e3440ce9705d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d3529f-5db7-41ff-bc0a-be0e03ccf9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11596d9b-bfd9-478b-a496-93f832fc6a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f28991-e9ae-48a5-a089-fbedd73f0a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21be8c4d-e86b-4a08-8f2c-71578b560a25",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce8dd77-aec3-4862-bd53-241428ef6494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16eee5c3-8718-4ac6-aa3b-7d222059e4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1f556a-c38d-4c40-9af0-53848d349080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0391c20-6480-4bd7-8f9d-c725eb708ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990f0612-5efe-483e-9199-c54f7de11d7d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548a4c4d-8365-4806-9194-1e6da034c601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c5e27e-5e37-4909-ae08-42e8ab84a208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2919729b-1505-40b4-beb7-c0b670782ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393be6fe-788e-4587-8597-ce753d300699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a722d1-b50d-4932-a651-9ee72b5f7e42",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38013b21-1246-4a55-9876-25d8530bc869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bccdad8c-d7d9-4213-a16f-6c767db610bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457dd439-e34b-4d69-9a18-99f22e2da76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2487b0e9-ca68-4584-b0ef-126b9067bbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c64a5-2306-4e99-989d-764e47579008",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1fce3a-a780-4f4a-a6bc-39caa0dc7b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67f2303-2544-455a-a8c6-3a8ea3f35a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491ca733-7d78-46d3-a530-105478f90dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a897a1-152b-4168-802f-ff1f614bcb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18359790-670f-4cad-bde3-6d43148843c3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531e39e4-c236-473e-9978-4695d5181ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6565d0-066f-482a-8148-faca9252307e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb6bc63-0e87-4305-b14d-63c8927f806c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0e3a6a-a20b-4180-a004-1a7ed7df91d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcc960e-f157-4329-a218-d8396bd884dd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e590a4-c259-482d-998d-97bab7640c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60c1978-659f-4e4d-82d7-d34f7bb2f6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f451083-1426-47f4-beb2-bef0f59a41f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49c177f-1ca5-48a3-9571-e8b532f04e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b075060-3fe7-45ad-b021-9e9fe3c76f05",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9d1eaa-f01f-4e83-8b90-596a872b3bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e075c5-2c06-4799-a93f-f8029ae2f7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8cbfd6-acd7-4a9d-af84-5b85d0bc0932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef790729-5af1-4415-a00d-f67c2ed6de01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6dbbf0-0c0e-40e8-b9b8-161866d6ad80",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9750084f-1408-4e0c-b497-244449d80595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42e9da6-ee92-4617-bd2a-8d25c7ffdb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c4efdc-d0f9-4bbd-97c5-f5eda74c639a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4017f695-c6a7-4123-a2cd-c6f399087fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edccfee9-0766-4164-9f1c-0f3697b0a3ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2f6b2c-b486-4fe1-921a-e9a5ea80dfb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c4e96f-068e-4d57-b609-80ebd09706d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76cff9f-681c-4bce-b8e1-932fdbe446b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf208c3-f65b-427d-8642-96a6e05733e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3856d76b-2165-4167-a7d4-8f3249d69a86",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469a5293-03ca-4b3f-b5c5-ba1895326be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58c3d4ac-9abd-44c4-a1d3-10b6561a5765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b5bc5d-4834-461c-961b-329f2d7e2f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290de969-3d37-47e8-94ea-64ef07137f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f5b48b-e2b1-49f9-922f-607c9204c98f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393665c8-0761-4375-af06-d9b711eb7424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6da107-eae5-43cc-9203-585662a01992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4715774d-d5fd-4887-9785-98648c854498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40c84c2-1200-4a30-af08-bab2c747027d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785379aa-8ec4-42bb-a46a-db153b930db8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ae0950-6445-4429-b8e2-47fb43d04466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c222e2-27e5-4600-b326-7633488d2104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb4428-bc7e-4302-bbc4-a7a74f7a67cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da69ca15-c3b5-4eaa-8282-c9d142a52f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfd4051-f2e6-4cb8-b5e0-6a631f60ee1a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f2c929-74ec-4830-8b46-8a682d4072b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057c802c-8749-45dd-958f-54de1b51e211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efd7aad-da9d-4217-9bb8-40351cd24552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0aa22a-aad7-4d9f-8f64-3770d1f8a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b814ee-0b89-4d67-b748-fc13a38e15c6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45fe3b7-5b9a-4b37-9db2-a975fdec5994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825e52dd-7e6f-4b2c-b693-ecfcf6eec878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684cc302-1827-48da-96da-14357e9eeef8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5b3e03-f2aa-4239-90aa-717c3294a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221f1540-69b0-42c3-99d9-b5a25e3518bd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef59cba-579d-4472-a48b-f572a4584522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fcde77-c3de-4c1b-adf5-966af43b0a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b260ae15-d663-4fb2-8b5f-d783e34bbb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81feb4cf-40ee-4910-8159-213d8894a63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b4746-f638-4509-80fb-cd9b030b7262",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9405dc4a-cd9c-4511-a2a2-33e3856003b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c832265a-bef4-46e9-b0d5-c44b40399f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87141503-eda0-45c1-93f5-795670c52b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76a70f8-55a5-4b62-b024-cd6428c577e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b8e67b-c29d-49a5-8e20-26bbdc8f3fc3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6c4b5f-a8af-4428-8b3f-70081ef864e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5fd47f-0382-4d8a-af62-a1017924e38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9604a3-8a6b-4cc9-b1ac-6b6fb655eab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd8b61b-1f90-4353-b455-b3f7f68140c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18e3bd1-8cbd-4b6f-bd6b-23a3dc0432cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb9fd1b-b522-493c-8acb-a126f4c3dede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e21cc5-17bc-4296-8f2d-c7aad8182f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5eca65-2466-4b9b-890e-2cc9b83c326f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fd1155-875b-4c67-92fc-a27a55608907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53b44cf-2ace-45f0-a0d3-a06c41b2337d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ddf4d0-ac53-41fc-b741-acf2432c551f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14940d86-0f68-4f3d-be74-0298b751c3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1a5dd0-29e2-4ce8-9fa6-3c83b9e3f911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d67a2a-2439-4056-bc4a-553decda3a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bb42ce-74ba-4867-8f2e-d80cd0fcfc07",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc625a7-2ccb-4df2-8c56-8aaf2bbf882a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bcd5432-20fb-46e6-80aa-8f92d4372fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21106fc-4a44-4bc0-8d21-c38e706fd3eb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc240ce6-6e77-4060-a7de-bbc6285486ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38725603-455d-4501-b241-6dbe786590d8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5a7778-ebba-4c59-8b02-17ab17ded846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2407c8-74cd-4c98-bfde-5370fc562b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63318b8c-274b-476b-8f6b-183dbbc5913c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd2d177-8277-466a-8ca1-74d9699d3df1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00a0e85b-7f12-401d-a397-4b722afdbeb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93a5a513-9b74-4e1b-aac4-a4cff8129626"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4abf3aac-f74d-41c0-ac54-aeae3cc950e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f6e6da8-3282-476d-a0be-5cc09b2e7145"
                    }
                  }
                ]
              },
              {
                "id": "8c9f4572-cf84-4120-b458-dbcdd1190837",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccefb4ff-6402-4b32-9dff-d794fa215d24",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a14dcf-03b6-410c-9294-537f8dc09f67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "257821b4-b03f-4cc4-bbb3-034e5d556548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31a97ef-f51b-40f2-9082-dbe2729b7ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea9ae991-82ef-4aa6-b7f2-c6a3448441ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd146157-5a95-4ef1-944c-855eca9599bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c435036-4058-427c-aa6b-561abee39937"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b421aea6-efe3-49f8-88dd-0d98e3830bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b64d4b6-508e-47ea-9827-baff04297add"
                    }
                  }
                ]
              },
              {
                "id": "484ddc3d-8c2a-4a85-aec0-11ca9cbcc5af",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c22025c4-42e1-47c8-afa1-e91433076499",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693e439f-c9dd-46e3-9856-6928ac730214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "91769b3d-7003-47cf-bfff-fbd17b093ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7845c4-28c1-4823-b3bc-4919fa2029f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3646078a-7afe-46dc-b0c0-0f49bce41fab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7462b6b-6ea3-41fc-9cee-fc0345a50afe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4afcba3-6a89-43f7-989f-5886da239c7e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "668f706f-c4ce-40e6-9263-07a60bb02870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e9e0b600-3e36-483f-93c7-9185bfeb0410"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76718ee9-9d68-492a-bafd-4330cdc2d6eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8017be6a-e3e5-4379-9b1d-b37a6cb93c16"
                    }
                  }
                ]
              },
              {
                "id": "a00286e0-57df-4899-b950-ae9273ae9574",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7e27c4-a731-491c-a62f-15b41cea07f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "773ac24a-6828-4f97-83f2-2ebbb463ae30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b57ccbe2-4d2a-4e4d-83ff-bf060bec09f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "905d58de-7206-4257-b4b6-ec9b0e68cd8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a848378a-1fea-4cfc-87a6-d89113ce6ace",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "199488a4-068a-4a87-ac50-7ef387b3a952"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf5f94f-f8af-40b3-a9a3-b3fdf9074bf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ac51371-014f-443f-a381-3bf929a24485"
            }
          }
        ]
      },
      {
        "id": "29f95264-1a55-412e-bbf6-18ff0a6d5e45",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8128678d-e5ee-44da-ac03-6d65db6a141e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76d2c4ef-f5cb-4306-8c7a-c5ad06b81046",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a9d6e61-8c0d-4398-8b86-316c897372a4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f978e178-433d-48d2-9ccb-a7041ffc5437",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b63882c3-b3dc-4562-b459-aae862279dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49e27f2-cb08-4cb9-a91a-a8967435ecd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae9d9387-b228-40c2-8ecf-c9c489aa9b7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ae5135-d1e2-458c-b226-b04901075717",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "561c2f9f-cbb7-483f-b317-4f4ffecce150"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5279561-016e-469a-930f-319778b0d6f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f40bb16e-1fa2-4b7a-bd0f-4fae39912169"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f350f39b-1cae-43e3-812e-4c8e35251f93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b54eb845-3785-4d30-a859-87838ae0b53f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "109eabad-7b03-42b8-b551-704cc32f721b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a76b3eac-b59a-4835-9613-306546c25d2d"
            }
          }
        ]
      },
      {
        "id": "ee57de40-b71f-423b-bfed-ae85cbe5211b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c99557a-5eba-4472-9bd0-e20ffbfb7451",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df7f6509-90b0-493b-a2ba-d33bc7051f42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c5783f0-757a-4f07-a09f-1a1297b2ca65",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66fde4f-942e-419d-99e5-d538747e1440",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fb00fbc-fb08-4f1c-a99c-b9affef7d047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6218d6-05fe-4e55-b378-e68bc6a44081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e102d0fd-37fe-4808-a2e7-3726bc6ca144"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "033feb1b-7499-4c35-92e2-7e17d61d6e80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca2af70d-59fe-47ab-809b-b13886968c2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e567ce5c-1b52-4c80-b369-9565dbd2a1f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c56333d-4c9d-433b-bf8f-b3894470cd7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00de0990-e28a-41a5-b054-ff84321755f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ead6b65c-f761-4317-8360-7f1412f12f55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "054f02d0-0306-42b9-a023-c7c952118c02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c162b5e7-ad8d-408f-a46a-b7508cad0b32"
            }
          }
        ]
      },
      {
        "id": "d0b48af9-87a4-4e2b-9480-5cb65b6766ec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cc6384e1-4359-4325-b594-7b7d9a1ef55e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f591d4e-c4b8-4450-91e3-c88fc040bea6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14faf37f-6de9-4afd-a129-e53c20dab8f9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebaa3f8-04a3-4d9e-acf2-7e557e69311a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2de35b3e-1dac-4995-bd14-7b77cec79d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27cc38d-6b66-4a28-8c32-f16991694d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d18a1d77-3254-4d27-b952-aee718df7c71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5db4733b-d6fd-4652-bacf-95653f8e2d34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ebab010-c66f-4467-88c7-15ab93dd70b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b7a3f87-b1ec-4b0e-8f57-ca1cb27d3360",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef05df0d-de2a-426e-aa37-432aab48962a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b79e3ed4-079c-4b73-a92c-b90fdb47f1ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec9f94c6-ab40-436d-a1c1-4683a61462ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97f1f9e4-183d-4152-a6b2-03454ee3be27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb7246e9-5b8f-4185-a734-513a0a2d97a6"
            }
          }
        ]
      },
      {
        "id": "385aedef-e5b9-4eac-b459-75b742c23ac3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25fd1335-da65-4e47-89c1-07154e5461bf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ae42483-c25c-4509-a6b3-e86902bf8996",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3da06c6d-a919-45a8-8ad7-819ded5dee1e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf15cf4f-ba82-4c45-a39e-35bac5662839",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26a1bc5d-6aa8-4787-a73f-b61b3a7efc94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.39084507042257,
      "responseMin": 10,
      "responseMax": 5347,
      "responseSd": 416.07054189365596,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694046736841,
      "completed": 1694046775724
    },
    "executions": [
      {
        "id": "0a02271c-2363-4b7f-993b-756b086edd72",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c88fbb38-1b82-451d-9e63-bc51a56f9092",
          "httpRequestId": "f708ba79-3712-441d-8369-04bb9f61e31c"
        },
        "item": {
          "id": "0a02271c-2363-4b7f-993b-756b086edd72",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fe75d26c-8328-4ca5-a3c6-d5d6bc88780e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "dc83ad58-6d40-4462-b1d3-2c213b4a6616",
        "cursor": {
          "ref": "d5c3b001-8496-43b3-8771-8796494a3458",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f241441-4f0b-44a9-948d-bb0120c37234"
        },
        "item": {
          "id": "dc83ad58-6d40-4462-b1d3-2c213b4a6616",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fdda5640-645c-433d-a0a8-cae6ee57254a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a75d9d96-eda2-4932-88b9-8e50fd73ec9d",
        "cursor": {
          "ref": "cd06e024-8d09-4d9a-ae76-0e01eec33365",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "08f1c2d3-58ac-43c1-963b-ec22e547b984"
        },
        "item": {
          "id": "a75d9d96-eda2-4932-88b9-8e50fd73ec9d",
          "name": "did_json"
        },
        "response": {
          "id": "619ab2a3-3e01-4ae2-9e27-94420092618b",
          "status": "OK",
          "code": 200,
          "responseTime": 288,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a27a7f-6cdd-4be7-9d96-8312835a1cf0",
        "cursor": {
          "ref": "1f0566dc-dafb-4359-b055-f35e4f72e033",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4013080e-0851-4744-9b89-7f2106dfd4bd"
        },
        "item": {
          "id": "75a27a7f-6cdd-4be7-9d96-8312835a1cf0",
          "name": "did:invalid"
        },
        "response": {
          "id": "24e1735e-502a-46f7-ba2f-c7abc326edb4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1044,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a27a7f-6cdd-4be7-9d96-8312835a1cf0",
        "cursor": {
          "ref": "1f0566dc-dafb-4359-b055-f35e4f72e033",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4013080e-0851-4744-9b89-7f2106dfd4bd"
        },
        "item": {
          "id": "75a27a7f-6cdd-4be7-9d96-8312835a1cf0",
          "name": "did:invalid"
        },
        "response": {
          "id": "24e1735e-502a-46f7-ba2f-c7abc326edb4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1044,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d7d2be-7d8e-4f11-bacb-da08b3b9ee89",
        "cursor": {
          "ref": "412bc88f-c830-4402-b005-55dd7e971694",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d1a97b4d-b971-4d86-89d6-737c38d6b81e"
        },
        "item": {
          "id": "a3d7d2be-7d8e-4f11-bacb-da08b3b9ee89",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "59305db7-e2ef-4d09-aeca-9b5088a47a46",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d729ae67-0f72-4d4a-a9a5-59134fe61a59",
        "cursor": {
          "ref": "5ae90697-7efb-4684-b043-f2796d8bad01",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad20c856-4985-4597-b53b-4769043a383a"
        },
        "item": {
          "id": "d729ae67-0f72-4d4a-a9a5-59134fe61a59",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bd271405-fbb3-4ed6-aa73-3e0f4406c27c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33115def-1d92-4813-9510-c7cf83672ec3",
        "cursor": {
          "ref": "2cc6c339-f2d1-4d3c-9b69-e8aa8dc8be6a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "11ecac76-5de7-4c6b-81da-793beeb868ae"
        },
        "item": {
          "id": "33115def-1d92-4813-9510-c7cf83672ec3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1baed9d7-157b-440b-9931-21caaee00772",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7df4a2a-9c38-4bb1-bd06-dc765b7bfead",
        "cursor": {
          "ref": "c5ed08fc-c69d-4357-833d-8253191c054b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ac443595-a13d-48f5-be57-c24e885b7219"
        },
        "item": {
          "id": "a7df4a2a-9c38-4bb1-bd06-dc765b7bfead",
          "name": "identifiers"
        },
        "response": {
          "id": "cc2c4d49-9002-405c-bc0b-86840763d04a",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda7123f-4498-4c0a-9c46-590aa4c3566e",
        "cursor": {
          "ref": "e46b089d-8706-4bcd-afa9-938b9a592fa8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8931d1d6-0f4e-4b6d-a336-e57b1da00b18"
        },
        "item": {
          "id": "fda7123f-4498-4c0a-9c46-590aa4c3566e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fb52935d-e1c7-4954-8720-99e931ce7178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccec3d40-ea3f-49a0-91ea-72bccd036a90",
        "cursor": {
          "ref": "cb9698c6-62b2-4240-9672-2a1c8dfa77ac",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e0f25e12-8eb1-42a4-bf14-8a864b86661e"
        },
        "item": {
          "id": "ccec3d40-ea3f-49a0-91ea-72bccd036a90",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "00aff365-4672-4428-8b8d-700c35e5f326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614a2018-f8f9-4e60-b9a4-f2e1b94d596a",
        "cursor": {
          "ref": "70627545-c296-46e5-a350-5db19c45672a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ed5a9b35-487b-421a-8074-632d1b3e260e"
        },
        "item": {
          "id": "614a2018-f8f9-4e60-b9a4-f2e1b94d596a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "666ef283-ccbb-4b2c-8557-4919c335daca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5e1d06-282d-4b50-b61e-15b526ebc127",
        "cursor": {
          "ref": "c18e8a8e-b916-467d-8591-e9e269f3cb0e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8fa43873-517a-41a2-b747-9e47bd53db4d"
        },
        "item": {
          "id": "bb5e1d06-282d-4b50-b61e-15b526ebc127",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8288ff77-781b-4213-836f-55cf71621c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592aca39-ac29-4fce-8382-06d49707651b",
        "cursor": {
          "ref": "df6058d5-46fd-46fa-a60e-552fcff62591",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "751cc91a-d369-4911-992c-fa7acb3f5e37"
        },
        "item": {
          "id": "592aca39-ac29-4fce-8382-06d49707651b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0927a405-ec50-46c1-b7af-37c5a164b0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b917dcf1-2100-4b8f-96c3-99ebe8a8284f",
        "cursor": {
          "ref": "bb81e0b9-05a8-4108-937f-dc59ffd99cfb",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1671b23-c483-44e9-82b3-4c13884d2827"
        },
        "item": {
          "id": "b917dcf1-2100-4b8f-96c3-99ebe8a8284f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "13c600a8-8a69-467a-961e-f135f5878676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202ca92b-3727-4602-8256-546c043e7465",
        "cursor": {
          "ref": "0d8c7dfa-78ad-402e-a15e-efeb2f81489d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5034c04b-b428-4bfc-8bfc-cf2e517e8f66"
        },
        "item": {
          "id": "202ca92b-3727-4602-8256-546c043e7465",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5088e900-ba8f-40f1-8082-32fd52a6f52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b4b278-d0b6-4ba8-91a6-d4caa8d3d044",
        "cursor": {
          "ref": "64296f23-5834-4e0d-842f-5d89aa15a566",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0b1021ee-488a-413e-a6be-4f71a66202f5"
        },
        "item": {
          "id": "63b4b278-d0b6-4ba8-91a6-d4caa8d3d044",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "98065a15-a58c-4336-8d78-ab114a83abae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d1a8d7-0d02-4490-806f-f24c9656ec7a",
        "cursor": {
          "ref": "40b0791f-23ca-4866-bf27-79ea7d17aa16",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ac04d4ee-400d-4bbb-90ed-90e00856a334"
        },
        "item": {
          "id": "42d1a8d7-0d02-4490-806f-f24c9656ec7a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8e174ff2-03d3-43dc-bc86-12b6a4888e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d684fa-3fba-42f8-bce7-ba8294c93e16",
        "cursor": {
          "ref": "83bbea78-b087-4ee8-8138-05140e385341",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a7700b50-2ccc-4482-a34e-fe5e9a0c143f"
        },
        "item": {
          "id": "f9d684fa-3fba-42f8-bce7-ba8294c93e16",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a804ddd7-230c-4e71-8e57-ceadaf67edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b3e416-8b74-4443-8d32-07941f17c9cc",
        "cursor": {
          "ref": "d37de46f-0fbd-47f8-9095-d2cdc2a76a44",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f90314ac-869b-4e9b-8060-41a83baf4e33"
        },
        "item": {
          "id": "e7b3e416-8b74-4443-8d32-07941f17c9cc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7d6db3db-2dce-4d90-aa38-b532c56add76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c099df-0f70-45ec-ac81-c105e631cf47",
        "cursor": {
          "ref": "1dbda22a-dff9-4f87-8bda-75173bbb9fd3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "abafc634-1fad-4dd2-b210-06bb9029e60a"
        },
        "item": {
          "id": "38c099df-0f70-45ec-ac81-c105e631cf47",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bf3230ca-1dcb-4fdc-baf1-cc8e301bfb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0efaa0-4cb6-422b-a32e-c7b27cf67d2f",
        "cursor": {
          "ref": "b112d81d-422d-4062-bdd2-00c92c81dd46",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8dff7ea7-9ad8-40ba-adf2-43fcd3bae970"
        },
        "item": {
          "id": "fc0efaa0-4cb6-422b-a32e-c7b27cf67d2f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "595bf35e-1e44-4532-be35-eefba5895667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3338a3-a0d2-4391-aaa5-a0a6dd9bdc0c",
        "cursor": {
          "ref": "1af87300-634b-4d25-937c-24f224bd55e8",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f1f7943-5c14-42ed-b1f3-0133ca5df1c1"
        },
        "item": {
          "id": "4d3338a3-a0d2-4391-aaa5-a0a6dd9bdc0c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "82dce6f6-bf95-4247-8bd3-fdbc25b701d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4082b7-bf96-463e-8343-e273a68c1d96",
        "cursor": {
          "ref": "f285d600-5a3b-4d4c-8d3d-4617b6119676",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f9ea7cdb-a6f8-4826-bd7a-9cba23292999"
        },
        "item": {
          "id": "9f4082b7-bf96-463e-8343-e273a68c1d96",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "025abaa4-9208-4155-8686-e72c5ca313f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5729718-16ef-4a51-9f96-92f882223edc",
        "cursor": {
          "ref": "b32bfc90-26e8-49db-a667-4956a3a066bc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eb4bdf4f-91fc-4d88-a537-ce965979c8a9"
        },
        "item": {
          "id": "c5729718-16ef-4a51-9f96-92f882223edc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6b2d830-738a-4f2d-a0cd-97b8b3fddeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98216536-87d6-4704-9624-ef8259616361",
        "cursor": {
          "ref": "5d77f840-4814-4967-b8a8-f5987f459fb4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ac666dd9-c6b5-4f11-962a-46f5d5e3df14"
        },
        "item": {
          "id": "98216536-87d6-4704-9624-ef8259616361",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17955847-b0e5-4630-98bb-29bbc9eb6320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc90181e-ce58-4c06-9cda-1e306806aa68",
        "cursor": {
          "ref": "db68ef61-1d6e-4229-af2f-d0bd1b1dc199",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5032df41-4889-4fc1-a516-c9b1c79d911b"
        },
        "item": {
          "id": "bc90181e-ce58-4c06-9cda-1e306806aa68",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dab311c3-e1b6-498b-a991-1d7879eb831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e97bf6-2c0c-449b-a231-2526b077c2fa",
        "cursor": {
          "ref": "479d357c-5ebe-469c-8ada-3b187537e572",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0d0979ef-b600-4159-8dc7-3f8149f56082"
        },
        "item": {
          "id": "a4e97bf6-2c0c-449b-a231-2526b077c2fa",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7a577b9d-c222-4550-9898-0606b4af1063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e658f3-e993-47be-b12c-cc9831653fbe",
        "cursor": {
          "ref": "202c73a1-bc5a-4d1c-b9e8-815b04bed4c9",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f0682f15-8007-4999-9af5-9dd9741034f1"
        },
        "item": {
          "id": "d1e658f3-e993-47be-b12c-cc9831653fbe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "19c31996-6f6b-455c-8795-5ad217d1cd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b060daf-9095-419d-af78-8cea57c0dc5d",
        "cursor": {
          "ref": "69e80e0a-a5ab-4911-893e-53af546533f1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "abf103a9-83c3-4c0f-be40-1a0b672cb5a9"
        },
        "item": {
          "id": "7b060daf-9095-419d-af78-8cea57c0dc5d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b419ac21-afee-4d8c-a06f-4cb245826fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156da99c-fc6a-4e24-8f22-fa5a59e9fcd5",
        "cursor": {
          "ref": "761f52d5-0e5a-4ae8-8eb8-6038f3433672",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "045cf72a-40cb-44ea-8268-cc71fb298f23"
        },
        "item": {
          "id": "156da99c-fc6a-4e24-8f22-fa5a59e9fcd5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e2d93e9c-b0ec-437b-b385-bf5efabf0315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e51b7-f97f-4956-87df-3b2d123d4cd0",
        "cursor": {
          "ref": "7944eac0-6bd5-4f21-ae57-68e6f0fa5a67",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2836ffe7-990c-4fa1-a35b-d829b9da523d"
        },
        "item": {
          "id": "340e51b7-f97f-4956-87df-3b2d123d4cd0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dd0d452e-0fcb-4b18-817d-b9a8b616e01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031d67e7-060e-4a40-a864-351d8405537c",
        "cursor": {
          "ref": "1f9fa6c2-f981-4e51-bbf7-7c0fc5e8fab3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "371c3667-d4fe-475c-85aa-3e93227df763"
        },
        "item": {
          "id": "031d67e7-060e-4a40-a864-351d8405537c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "48a5f4de-a2fb-461a-ac60-b39c0ec54c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f85d651-3ade-4555-89a9-e78c6e2a86d6",
        "cursor": {
          "ref": "cb0d9e0b-db5f-4680-b994-be88352b2645",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d5455e30-5650-437f-8c58-672e583df0e1"
        },
        "item": {
          "id": "0f85d651-3ade-4555-89a9-e78c6e2a86d6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4b535f96-a1f8-4a2f-a4ac-149c5dadcfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bddee40-4d9e-476b-97f3-8a782d3868aa",
        "cursor": {
          "ref": "6a2872e1-2c68-438d-bd9a-96b7a3eb62d0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dc50baf5-9a21-455a-9197-079bb056fb3d"
        },
        "item": {
          "id": "3bddee40-4d9e-476b-97f3-8a782d3868aa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "485a4b80-1953-4f44-999b-cccbe1ad69e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d11a8-2e9e-4021-8fb9-df72f03e829d",
        "cursor": {
          "ref": "90dc990a-7580-46e7-b7be-f402d3a9ed37",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ee6f2d20-af70-46ac-ba57-7dc301c903a9"
        },
        "item": {
          "id": "0e4d11a8-2e9e-4021-8fb9-df72f03e829d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "36db4490-9c31-4501-86ed-b037c75d1043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3787ec2-89bf-438a-835d-dc6be05a2fbc",
        "cursor": {
          "ref": "a29a8e09-7a20-4321-8024-242fe690552f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "40b6643f-e417-4f86-ac4a-4c9e3fbe175c"
        },
        "item": {
          "id": "c3787ec2-89bf-438a-835d-dc6be05a2fbc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ede701e8-a0d6-47b1-b164-14d91a9bcb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5bd0e7-7ce4-4fc9-aada-e7e1d66a7da5",
        "cursor": {
          "ref": "c836b54a-4d0f-43f4-b056-7ad90416550b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ccfe5ae2-e555-46d9-bed2-89f980299834"
        },
        "item": {
          "id": "ac5bd0e7-7ce4-4fc9-aada-e7e1d66a7da5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8085b809-4dad-4451-850d-7c936a3965ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad01a24-fe67-4287-b9ac-e2d4f877cdd8",
        "cursor": {
          "ref": "f0d78de7-76a9-4bb3-9f5d-b144b28a73c4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e500670a-bb5d-42fc-80a7-f5f489484e05"
        },
        "item": {
          "id": "bad01a24-fe67-4287-b9ac-e2d4f877cdd8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d2615d18-7f9d-407d-96e3-1bc764f63940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e77826-58ca-41ed-ae6f-6f5bc533472a",
        "cursor": {
          "ref": "27b59d61-0653-46f9-bc3e-c32acb450ce3",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f6591ad1-3cf7-4673-bdfa-f351861eccfe"
        },
        "item": {
          "id": "72e77826-58ca-41ed-ae6f-6f5bc533472a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "43eed39a-12ff-492a-af98-d56c9f950bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5baaab0-7b33-48ad-94f8-24709f5cb50d",
        "cursor": {
          "ref": "f18f20b6-e036-4af2-a469-167602db9bfd",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a1a8d5ef-bbf4-4ab9-8cbe-1d4ff1c53b51"
        },
        "item": {
          "id": "b5baaab0-7b33-48ad-94f8-24709f5cb50d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8bbdaad7-e158-47d9-be6d-859d7196cb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c070985d-0d83-4944-9ed0-a79c75653bdf",
        "cursor": {
          "ref": "5b6e2df3-43d3-4943-a083-1bc5fecf1349",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9c088254-68ac-445d-8efc-d845f3cb0f41"
        },
        "item": {
          "id": "c070985d-0d83-4944-9ed0-a79c75653bdf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "59022897-d696-4b86-b3da-95e4b46f7fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f4ce20-56e7-4aea-a137-4b37a9259790",
        "cursor": {
          "ref": "4edca788-0805-45c7-9764-373c9fdbf1cb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a19b0c2b-9936-4641-833d-94b35b7e2049"
        },
        "item": {
          "id": "a6f4ce20-56e7-4aea-a137-4b37a9259790",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3eb9575e-fe7b-466d-867f-d451560d8d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191d12b1-3cbd-4888-aa09-84885c81cb79",
        "cursor": {
          "ref": "082088c9-1bcd-430f-9047-5f975fb43885",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "83cd4e6b-f136-468c-bc33-e3ff0ce834ed"
        },
        "item": {
          "id": "191d12b1-3cbd-4888-aa09-84885c81cb79",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9da277d3-d774-4979-a43f-0d56aa3b1207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26537cd-b177-462e-9689-2be76db132cb",
        "cursor": {
          "ref": "548952a3-b610-4791-9e5c-d2bd9a92a9e6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "11c692aa-9332-4b26-99e6-a777c5cb6a41"
        },
        "item": {
          "id": "e26537cd-b177-462e-9689-2be76db132cb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c005aab-4d40-419a-ab82-0e8a160655b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed495197-5469-410d-985b-ac3edb6e793f",
        "cursor": {
          "ref": "810504fe-abe2-470f-b316-2d47634c8caf",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5b8e06c4-eb10-4a7f-8a56-df61abf30ead"
        },
        "item": {
          "id": "ed495197-5469-410d-985b-ac3edb6e793f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3b16694a-1559-480d-9ba3-1b88f0074e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aac4e00-351f-4985-87ee-bb3a32d42941",
        "cursor": {
          "ref": "217491ba-3b04-4cff-ace7-e7ff24b5288e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "07176dda-cc39-4c82-8cf8-0980c2d0f3dd"
        },
        "item": {
          "id": "2aac4e00-351f-4985-87ee-bb3a32d42941",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eef167aa-61e9-44e1-a325-9b05af7ac6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e7aed-bfbc-4511-8342-ca5870a705c6",
        "cursor": {
          "ref": "ac6a91eb-552d-421f-8a9e-9808d1d83f10",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8fc666b8-b5e8-4432-aecc-b3ae121e7ccf"
        },
        "item": {
          "id": "630e7aed-bfbc-4511-8342-ca5870a705c6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dda2d374-e9dd-4759-b9c0-dcb7e9326db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97ba572-7f93-47c7-a8e8-dad52ac659d5",
        "cursor": {
          "ref": "96dc574b-39ef-4857-945e-5319fa08cfc3",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6cafd379-890d-41eb-af73-4a7c5215e31e"
        },
        "item": {
          "id": "e97ba572-7f93-47c7-a8e8-dad52ac659d5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4a89a42a-1b3a-483c-b1de-5b5c1e0a96f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85241b5-ff17-47fe-9b50-207659d37761",
        "cursor": {
          "ref": "b4d7fef8-3c4c-459a-8ff7-624d087b16ff",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a2b63a43-5cbb-49c4-86f8-f5a26327cde7"
        },
        "item": {
          "id": "d85241b5-ff17-47fe-9b50-207659d37761",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9381b88f-efa3-4c5d-9d26-9f1db2e03af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea686f04-5173-4411-9f17-07a613620e0d",
        "cursor": {
          "ref": "3dd30c35-b3c2-4812-8d4c-e1579e0fad09",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "66d52c8d-ed65-4597-8d94-634f0c6986d8"
        },
        "item": {
          "id": "ea686f04-5173-4411-9f17-07a613620e0d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "57fad6f5-81a8-4c98-9cfb-458f43c103e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbacc36-0f0a-4baa-99af-4567a5caa860",
        "cursor": {
          "ref": "9ee2efda-6eae-4d55-9ddb-93fb2ec49e7e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "057117fd-2894-424d-a910-a57f6d3d218c"
        },
        "item": {
          "id": "abbacc36-0f0a-4baa-99af-4567a5caa860",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0632d99b-3901-4311-9984-d82e1f0ebacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f12a4a-67e7-401d-bf3f-d07a00906456",
        "cursor": {
          "ref": "26eb7c6f-aab6-416d-b9b7-dfb5c8c71041",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "224dca93-fa67-4c70-8ff5-3230871d0e88"
        },
        "item": {
          "id": "23f12a4a-67e7-401d-bf3f-d07a00906456",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ccea83de-fd10-4d2a-82f8-e0323f65e495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a05e880-f3bd-4687-8920-e9746929f8e2",
        "cursor": {
          "ref": "8376dd28-08db-4ff7-a895-a274d3cd9c3e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "524c8f2c-1b84-44af-8287-492c26715ebb"
        },
        "item": {
          "id": "0a05e880-f3bd-4687-8920-e9746929f8e2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "54e2cc0e-ee10-46b9-b8f4-37866642ba1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f776847c-eb52-4ab1-9405-2ab9891b5f7f",
        "cursor": {
          "ref": "3e258dd1-8e0c-4751-bcd5-022605d9764c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7d2b2968-04c6-4849-82e0-40d874af7776"
        },
        "item": {
          "id": "f776847c-eb52-4ab1-9405-2ab9891b5f7f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "12f278e8-e200-49ca-9c02-b9ee85ca5de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf8b58-1acd-4f05-986f-acd0acd7a6b5",
        "cursor": {
          "ref": "6bf4abf8-3c30-4dd8-94c9-b5e53e8e29e3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fcf2d1fa-555e-4f8b-b94e-9c08e5a6b5ab"
        },
        "item": {
          "id": "bdcf8b58-1acd-4f05-986f-acd0acd7a6b5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a85530e-eb59-45a3-908b-26b7c1df6797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4882c363-ef39-46f7-99aa-760d9a3b5f72",
        "cursor": {
          "ref": "c1fd75dc-64b7-4ea1-b993-28a02baca4a2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8f86a919-bbff-49eb-ac34-9b0d08debad1"
        },
        "item": {
          "id": "4882c363-ef39-46f7-99aa-760d9a3b5f72",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f75a5bca-1a34-4362-be94-454b7d3a7e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b8be6f-b785-4e32-bd79-62b326f8b2b4",
        "cursor": {
          "ref": "d9b7d373-98c1-4013-99a2-c1f66153f8b0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "814c810c-ae14-4316-8301-ae6c2dbb6693"
        },
        "item": {
          "id": "a8b8be6f-b785-4e32-bd79-62b326f8b2b4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "40516e7e-1ab8-4896-898b-f2f718ab4414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac87c16b-b857-4d72-871b-ee161f86accf",
        "cursor": {
          "ref": "6f07c32e-5e90-4970-ba99-1445a7a5f573",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dc27e859-37ab-467f-9739-049829c65e8b"
        },
        "item": {
          "id": "ac87c16b-b857-4d72-871b-ee161f86accf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7bbbd46d-3840-4420-ab72-44c4ba3c01c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0aa954-ce89-4b2d-95a0-03fe0f55a30c",
        "cursor": {
          "ref": "77175a0e-e7dd-4aff-881d-b29f0aa138b4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2932e2e4-7249-4459-b637-ea88483a335b"
        },
        "item": {
          "id": "0a0aa954-ce89-4b2d-95a0-03fe0f55a30c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c87e0c42-5887-47d1-a6dc-c2c08400b41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d303f56e-494f-4487-accd-6306933d675e",
        "cursor": {
          "ref": "f35cfba9-7156-408d-a928-68ccbb752692",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "60a4341b-d22d-4153-9a16-a46abaec5d5c"
        },
        "item": {
          "id": "d303f56e-494f-4487-accd-6306933d675e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6f5b88ac-8f52-4e28-a341-69615912762b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42790ea6-781f-49ff-bc60-1136d4fe6b5d",
        "cursor": {
          "ref": "4ed2a80c-31fe-4de3-bbd8-0ad6e5faccb6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3337743a-9601-44b6-856e-adacfe1b44a5"
        },
        "item": {
          "id": "42790ea6-781f-49ff-bc60-1136d4fe6b5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab100629-eccb-4608-bd91-881b5584516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522d7d44-6024-4f9d-8912-0cf1dfb79aad",
        "cursor": {
          "ref": "5df54d5a-b542-4417-a307-ac282c702adb",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b03e251a-c9e8-4156-be12-2907485e97eb"
        },
        "item": {
          "id": "522d7d44-6024-4f9d-8912-0cf1dfb79aad",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7ac42904-376a-4f13-a16e-708dbd332af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e0ace-1618-4980-b3f8-d247894f8434",
        "cursor": {
          "ref": "4b21a623-2298-4d00-b0ae-d76a5c73a134",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b3a68c6b-3dc8-49e3-8b0d-58c6e3e425bd"
        },
        "item": {
          "id": "4d7e0ace-1618-4980-b3f8-d247894f8434",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bb5f433c-acac-4ea7-aebf-0277ffe8a431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5af745-a372-4e0b-8793-2d0354b3ffda",
        "cursor": {
          "ref": "9a8a3b6a-8800-482b-a19a-cda7443e603b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "11644626-43e0-4876-8b2a-9660afc239ba"
        },
        "item": {
          "id": "be5af745-a372-4e0b-8793-2d0354b3ffda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d34374a1-965b-4790-9ef2-40f834397e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7324a7-9648-48d8-961e-dfad4c44b8cc",
        "cursor": {
          "ref": "700574e9-ac17-4697-a563-be6c425a6ede",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "72ea16cf-73fb-46c6-a81f-83fbd0fcee30"
        },
        "item": {
          "id": "1c7324a7-9648-48d8-961e-dfad4c44b8cc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e41e5b4c-8455-4caf-8c3c-7a85ea9db109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf026aa-3a2f-4720-8347-61a273e198cd",
        "cursor": {
          "ref": "9d904d71-2df0-42af-be74-54e2bfbf3bcb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "48b3e7e4-8421-4b38-8806-48381975066d"
        },
        "item": {
          "id": "2cf026aa-3a2f-4720-8347-61a273e198cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ff334b1d-44f8-48ef-b4ec-4e59c4c39f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfd93ab-2715-472d-a14f-d401de0468e6",
        "cursor": {
          "ref": "b0c900e4-97d2-4eae-82dd-d8c5b46401e3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0587ebf0-4f5e-4d10-a3ee-d32b1cd81c2a"
        },
        "item": {
          "id": "8dfd93ab-2715-472d-a14f-d401de0468e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c95ae5ec-f414-4536-b54c-fe88e388816a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a835b8-f4f9-48ef-af07-372162ff07f0",
        "cursor": {
          "ref": "34e526c4-c757-4fd2-81b4-f13d5da8af40",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a663e90f-84cf-4719-931b-a0cff92cd8c2"
        },
        "item": {
          "id": "c3a835b8-f4f9-48ef-af07-372162ff07f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34b9e296-e317-4192-b40e-d466d8d01044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19803f6-035b-4764-9706-f1e9d58ef1b4",
        "cursor": {
          "ref": "9c68755b-6444-4d79-a7b2-a57c3663c2ce",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a540302b-2e1a-4ee1-aa75-66028d846746"
        },
        "item": {
          "id": "d19803f6-035b-4764-9706-f1e9d58ef1b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0276d9c4-1b42-4510-90e4-d38a8a884ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7926bfce-8fce-4625-94ff-419967fe86bd",
        "cursor": {
          "ref": "ea9cec24-3a4a-4a3a-afad-3a306b43dcdc",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7dc06306-f70c-4be3-9736-3bdcd7edc466"
        },
        "item": {
          "id": "7926bfce-8fce-4625-94ff-419967fe86bd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b10fdd55-90e7-429a-b6be-d74ee410e2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd142c9-8549-4a1f-9238-d6a74027eb50",
        "cursor": {
          "ref": "89890677-b82b-4eae-9ae6-396c7e6d035d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "330556b8-3e5a-4ff5-b773-aaeaab0bc45a"
        },
        "item": {
          "id": "edd142c9-8549-4a1f-9238-d6a74027eb50",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f5ec9edf-d233-4397-b26f-004f40d7efc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a73a84-de68-415f-a337-d2f844483d03",
        "cursor": {
          "ref": "cdf36017-5c9f-4da8-8823-a16a2c0b81f1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "55388eb5-3849-4e45-bcd4-6ebf5ccd847c"
        },
        "item": {
          "id": "c9a73a84-de68-415f-a337-d2f844483d03",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "224b55b7-a946-4b67-90b4-238f26337ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a763c4-d2e4-4295-a7d5-b4bc36e42bef",
        "cursor": {
          "ref": "3a2fc6cb-93c8-4bbf-8bd8-f7e5308b64de",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a3eed7fa-ee20-414c-b1c9-136d4a131308"
        },
        "item": {
          "id": "30a763c4-d2e4-4295-a7d5-b4bc36e42bef",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "62e4565f-991c-44e7-8505-3f73b91c8c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047a28f0-ab0d-44a3-9ea4-f37b7e469ad0",
        "cursor": {
          "ref": "908d194c-3f7c-4c7f-b4b5-ba1388046d57",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "89d64e1d-57b2-4032-ad02-becf8858a36a"
        },
        "item": {
          "id": "047a28f0-ab0d-44a3-9ea4-f37b7e469ad0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "af34625c-d191-456a-8c4f-389ea6c873f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c01032c-9956-4a52-a23e-c30ae99f9813",
        "cursor": {
          "ref": "8d844435-4875-496c-8b24-6d1061acab81",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cb42e729-9f06-4ce8-b963-a5149456a331"
        },
        "item": {
          "id": "7c01032c-9956-4a52-a23e-c30ae99f9813",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "976001c5-12d2-4c8c-b364-f5c3831829e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f469b6-f20f-4e64-a4ce-160e83530769",
        "cursor": {
          "ref": "32c6338f-8fe3-474b-8dfc-8b353812f701",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ab70da97-777f-452c-b847-bbd0df318e82"
        },
        "item": {
          "id": "29f469b6-f20f-4e64-a4ce-160e83530769",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "676a28c4-ee2c-418f-a122-be00c31ba53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681ba436-48f3-438c-a84a-11089bda79dd",
        "cursor": {
          "ref": "863449f1-8d12-449a-bcef-13f08a5a8377",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0b223915-98ab-463d-9f51-e77543982b53"
        },
        "item": {
          "id": "681ba436-48f3-438c-a84a-11089bda79dd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "403a2057-e60b-4a29-875c-b1b81bae1029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17d0a0d-d12d-4bec-9fc5-26096e1aa3b1",
        "cursor": {
          "ref": "0c5052ea-9bf0-40bd-b20b-5e24ed4a7521",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a810c3f0-30a7-447d-8610-19a9047cd1ca"
        },
        "item": {
          "id": "e17d0a0d-d12d-4bec-9fc5-26096e1aa3b1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "27b3c923-4cf6-46ce-b644-24fcefd5634f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd66346-36b2-421e-879b-b355f427c9a7",
        "cursor": {
          "ref": "d7fe7b87-cf04-4037-a142-25c93b4ebfe5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fb489250-68f3-4309-a1eb-af836cddc148"
        },
        "item": {
          "id": "8cd66346-36b2-421e-879b-b355f427c9a7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f2cd7ca-3c0b-4e6a-b3e5-d6f2dd3f71cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb98b7e-5508-4307-aefb-e56476bd0ac6",
        "cursor": {
          "ref": "46bc3a32-2451-474b-99b5-1d0e37d3ad47",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8027d23e-270a-4219-8d30-7aa30a7b82f9"
        },
        "item": {
          "id": "6fb98b7e-5508-4307-aefb-e56476bd0ac6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3bf2eb31-1018-4cec-8e92-98891b573bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238baa63-57a4-49d5-8b44-5092e13a5b8c",
        "cursor": {
          "ref": "da91c155-f544-4cfc-a7d0-ab7d6e237cc9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0b5bc3af-25c1-4eeb-8225-a002edf4a628"
        },
        "item": {
          "id": "238baa63-57a4-49d5-8b44-5092e13a5b8c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7898bba2-42fa-43ee-b45b-7f4fa384b24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5001135-784e-44f1-8e82-a6fec92fec6c",
        "cursor": {
          "ref": "6d538396-bf7d-4446-9598-10e705b0100d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ac929bd3-499c-4683-81b1-ddab635e0a05"
        },
        "item": {
          "id": "e5001135-784e-44f1-8e82-a6fec92fec6c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e19994ec-e7cd-49aa-b2c3-f9eadb89f6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9d44f0-ac7e-4494-8e09-c2a6ab2c97a9",
        "cursor": {
          "ref": "d4232bef-4642-4cd5-b086-820d63c38a92",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ce98bf90-3606-453d-b7ad-700394e13ca0"
        },
        "item": {
          "id": "6d9d44f0-ac7e-4494-8e09-c2a6ab2c97a9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3f209458-5c7e-4917-b830-8a4aa65f2c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01271bec-df51-4498-8561-22aea6160f88",
        "cursor": {
          "ref": "8b744386-ea4b-4bc0-8f3e-235bb8ba31a4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6b7a8062-477a-469e-9962-c7738edd23f2"
        },
        "item": {
          "id": "01271bec-df51-4498-8561-22aea6160f88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e07b2998-8613-4dbf-904b-61baa1e680bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32fd318-c1b3-42c9-b147-89ad8fda09bc",
        "cursor": {
          "ref": "dc15de84-b84a-4067-ab55-114b88a334cc",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c1b4686f-d224-495d-af1b-ad1972cd182e"
        },
        "item": {
          "id": "f32fd318-c1b3-42c9-b147-89ad8fda09bc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "656a1df1-8c17-4b4f-965c-b658c396f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e93178-7999-4a87-8ae5-2fd65564f80f",
        "cursor": {
          "ref": "a0800c1d-cc4a-4ccc-b88e-743c58462a0b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "626d944a-bd14-4485-9402-8fd35f786fc0"
        },
        "item": {
          "id": "f0e93178-7999-4a87-8ae5-2fd65564f80f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "894dfccf-e52e-4ca1-86a9-8ceae6902350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef304080-40b1-4695-862b-3e0aa7da0f40",
        "cursor": {
          "ref": "dba4da18-df51-4a80-8170-d88953cf82cb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "31775672-394c-47b1-901b-050b8a0ba039"
        },
        "item": {
          "id": "ef304080-40b1-4695-862b-3e0aa7da0f40",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "34f8142c-f296-4be3-b6d2-fcb96918f2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d6ff9-008a-4ca5-ba26-79715e2318a4",
        "cursor": {
          "ref": "62195991-1cfc-4880-a6fe-48a49b354c3e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "13efd210-b1df-468d-bae0-fc6d6c63ec54"
        },
        "item": {
          "id": "407d6ff9-008a-4ca5-ba26-79715e2318a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "17b400cd-0f1f-4366-86dd-9f4cbccfaa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f35f22-9c93-485a-abc9-c229854699e2",
        "cursor": {
          "ref": "6197c1bb-c19a-48d3-a243-7c2e38c058db",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7444c0ed-6dea-4be2-9a1f-336d6085aec2"
        },
        "item": {
          "id": "13f35f22-9c93-485a-abc9-c229854699e2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "80e5cba5-ff8f-4523-b4d4-0105931d5741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6caf306-00ed-4f90-a453-799770638e3c",
        "cursor": {
          "ref": "3d19bd40-903f-4001-a90f-39b5ee135118",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6bea20a3-d386-418f-887e-4ebfabc87335"
        },
        "item": {
          "id": "c6caf306-00ed-4f90-a453-799770638e3c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bdddc241-ccc4-4a04-a7af-daafb25645d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f4acc0-7af0-41a4-a301-564a27d9620e",
        "cursor": {
          "ref": "82d6cea2-0ad6-42e4-8cce-b0eb94e948ce",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4a75a0b3-6167-4857-a7eb-085a48c26c59"
        },
        "item": {
          "id": "b8f4acc0-7af0-41a4-a301-564a27d9620e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7a45df98-b113-43c6-841c-8a213e417453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c796d10-05c6-4f48-93d4-c6e59e7d79a2",
        "cursor": {
          "ref": "b8e2023e-b919-4a4b-a1ed-f24cf345bf14",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "661eb691-5e13-4d18-9264-922c5bc30e47"
        },
        "item": {
          "id": "0c796d10-05c6-4f48-93d4-c6e59e7d79a2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "98fc53dc-bcbb-4dd5-9407-26e14982721c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fac5e17-0357-4b58-aaff-c485b8bcae84",
        "cursor": {
          "ref": "73fa55ce-489a-4b31-a3d8-a0331948b865",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e584deb-c5a3-43e4-a225-74c371eb13fe"
        },
        "item": {
          "id": "2fac5e17-0357-4b58-aaff-c485b8bcae84",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "41d6db1b-6b47-4d83-81dd-f6e34b45b900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410f89e0-47f8-4572-8d9f-06dd13a2d29a",
        "cursor": {
          "ref": "95d2cd8a-e994-4814-8987-b78005d62e1c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "683f2973-cd5b-4ca6-bf8e-ab78fad2f3aa"
        },
        "item": {
          "id": "410f89e0-47f8-4572-8d9f-06dd13a2d29a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d22a44c1-134a-4202-94b1-b8d2e8fb0e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d697a46d-824d-473e-a631-2c2c382314cc",
        "cursor": {
          "ref": "7f7a9204-b1e8-459f-8efd-ba538b178605",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e8d359c3-9c3e-44f9-92bc-0095fb126023"
        },
        "item": {
          "id": "d697a46d-824d-473e-a631-2c2c382314cc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a0f62dfc-2f55-43a3-9661-201cd611c4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c410a08-bbc2-49b6-9aa4-439c991ad9a1",
        "cursor": {
          "ref": "75fc10ef-9d26-4560-9bfc-010116d6951f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8a67a08f-d8e9-4688-b2db-3655fdd3b200"
        },
        "item": {
          "id": "0c410a08-bbc2-49b6-9aa4-439c991ad9a1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a73638a5-d3c7-456d-911d-3321eb4e23a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e404834-5c62-469d-ab0b-3080bd01b240",
        "cursor": {
          "ref": "063df4ac-9b45-4da2-8f12-a0744edb1503",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e203d816-a006-43c9-8e8e-a4985304a331"
        },
        "item": {
          "id": "5e404834-5c62-469d-ab0b-3080bd01b240",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "53754856-ae57-49c9-8950-3b9305a29667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b499aec-cb73-4ab9-b3dc-11e928761c43",
        "cursor": {
          "ref": "be684900-f7be-4eaa-81fc-6add620d7fe9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a16e762c-b99d-42c0-a454-60baf9367395"
        },
        "item": {
          "id": "9b499aec-cb73-4ab9-b3dc-11e928761c43",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c0e900dd-feb1-4366-a565-dcc41a722a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eec52e-497d-467e-be82-618161c44595",
        "cursor": {
          "ref": "a62e05f3-16d8-4df9-a73d-49170abb6249",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "35f0daf9-2a5a-4a92-9212-711880fd2400"
        },
        "item": {
          "id": "d3eec52e-497d-467e-be82-618161c44595",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8fa03689-ef6c-4d00-9eb6-4c6a0cea316e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a048a9-f12c-47eb-9dda-6cc3e7a3f962",
        "cursor": {
          "ref": "795628e6-b03c-45d6-817f-21911c678107",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7cfd311d-6802-4376-968a-b40a89a70668"
        },
        "item": {
          "id": "39a048a9-f12c-47eb-9dda-6cc3e7a3f962",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "24188997-4525-4e5b-9cad-08081cabba48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee485d0-81de-4a23-b90a-6f0f3cfdfdd6",
        "cursor": {
          "ref": "943c516e-b511-4e6f-b6a5-c914a494637c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "36b63168-4db5-4163-b371-e08fb7b168db"
        },
        "item": {
          "id": "9ee485d0-81de-4a23-b90a-6f0f3cfdfdd6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2bafc245-cab8-4357-b480-0e20861c416f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6a093b-4c43-483b-a61c-ac3d990b4b80",
        "cursor": {
          "ref": "4eb0dcfe-70ea-47d3-9285-e33f9803b583",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "172fe026-1c79-4d62-9d21-701a46b1e61c"
        },
        "item": {
          "id": "3e6a093b-4c43-483b-a61c-ac3d990b4b80",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fa72eced-c064-4b3d-889b-d0a96389983c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "d8d51253-a3f9-4754-9aa0-0e3034a132ed",
        "cursor": {
          "ref": "1fdcf87f-2535-416f-8e58-98d91ab74cb5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d67b440a-3131-4976-994f-f87a0b5a8f7c"
        },
        "item": {
          "id": "d8d51253-a3f9-4754-9aa0-0e3034a132ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e3a4da17-c092-439e-9a71-3a177bd12ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "2992c25a-050a-41d3-b533-b178a17485c3",
        "cursor": {
          "ref": "7483e665-7e7d-4773-854c-0f4956858972",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5c24bd29-539a-49c5-a700-03f3aaef838a"
        },
        "item": {
          "id": "2992c25a-050a-41d3-b533-b178a17485c3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cc137a05-4812-421a-b7f0-2837cad6393a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3c40159d-2099-49bb-b9b2-e4f659cc4142",
        "cursor": {
          "ref": "66903cdc-2c4b-42fe-a033-0b83bdd11867",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6738cb92-654f-478d-a7e0-8117f75abb0f"
        },
        "item": {
          "id": "3c40159d-2099-49bb-b9b2-e4f659cc4142",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2e0a5b86-ddae-4221-80a1-1084db38263e",
          "status": "Created",
          "code": 201,
          "responseTime": 5347,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cc2156-626e-4643-8e40-73a8ea1aa066",
        "cursor": {
          "ref": "28f18d10-d10b-482a-9332-4e799632b03d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6198b4c1-e883-4cea-8ab0-2ef90a39549a"
        },
        "item": {
          "id": "b0cc2156-626e-4643-8e40-73a8ea1aa066",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a7db807f-c90a-4174-8d83-b33b5d06213c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0d90c934-50b2-400b-8300-873184393621",
        "cursor": {
          "ref": "f8dbc1d3-2602-4fb7-8cce-c6eec639e4d9",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8975b5a7-e7f8-430e-b7cc-fefb352fca1b"
        },
        "item": {
          "id": "0d90c934-50b2-400b-8300-873184393621",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "247d6bba-bc6d-432a-935a-ed0a5a241892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d32dd413-d15c-442f-8852-26fcb80d68b6",
        "cursor": {
          "ref": "a733b3ce-9d88-410d-99ec-5a51b0547f2c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "91f7d71c-1d5a-4e68-b661-1afe448d6ddb"
        },
        "item": {
          "id": "d32dd413-d15c-442f-8852-26fcb80d68b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aae9a83e-53e6-466c-8ab3-cadc39776a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e73f48-8042-4176-9b7f-f0eaf5c344ff",
        "cursor": {
          "ref": "1d208c3b-bb8a-4a74-b346-7571d3f5538e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "22b69d8e-0725-43d1-94ed-d69cbee36624"
        },
        "item": {
          "id": "72e73f48-8042-4176-9b7f-f0eaf5c344ff",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "db5260f7-ab22-40b5-b4de-92afebfb5dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096ad9cb-d756-41d8-bca7-0e4fbe9da364",
        "cursor": {
          "ref": "55412360-e166-496a-9b73-cf120aae46d3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "63189206-650d-4667-85a8-b1666f077b4d"
        },
        "item": {
          "id": "096ad9cb-d756-41d8-bca7-0e4fbe9da364",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "065367a2-92ba-4e8b-87f3-a89528da726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f8a7b4-91b9-4838-9ee6-e6eacc276aea",
        "cursor": {
          "ref": "d14d33fb-d059-47f3-896e-c669e9227968",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9daacc54-6245-48f6-9704-0d4e1aa69065"
        },
        "item": {
          "id": "28f8a7b4-91b9-4838-9ee6-e6eacc276aea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a83df619-9f10-4f2a-83b8-6463cbc8f1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20b6787-d63f-4624-b4ce-0e076f857e90",
        "cursor": {
          "ref": "87166ec0-ae0f-4a36-8039-3130b3af5a50",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e5d40254-4ffa-415f-ba67-440e91a7d0de"
        },
        "item": {
          "id": "a20b6787-d63f-4624-b4ce-0e076f857e90",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66b8865e-9f86-4711-9a81-7f19afa1676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e00f2fd-e328-41f5-a221-a2ab01ad41a9",
        "cursor": {
          "ref": "dd9f6467-8588-4cbe-b242-c5782e3a1f56",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f24baa6e-a53b-4ced-b9c7-f890614da445"
        },
        "item": {
          "id": "4e00f2fd-e328-41f5-a221-a2ab01ad41a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1f9e7bb7-6cf2-4b4a-b96a-b07ffd52a84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dcb916-de28-44a6-bcc8-af57b5d2e963",
        "cursor": {
          "ref": "0c1e9a63-1d48-4840-a963-47c0abafad52",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7ad83b89-9a9b-46b8-afc6-0665ac17fe7f"
        },
        "item": {
          "id": "25dcb916-de28-44a6-bcc8-af57b5d2e963",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79929ac8-571a-43fd-b005-754da1980727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3caf2ce-657f-4666-9745-11b5885c7cc7",
        "cursor": {
          "ref": "aa7bb16c-985c-4f5a-9e78-967fdcbf4f29",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2a07a72c-b791-4ba4-b338-21c20f2d5950"
        },
        "item": {
          "id": "b3caf2ce-657f-4666-9745-11b5885c7cc7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7ece3287-1823-4b0d-b67a-dd16fda717ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5b06db-4ef6-4cc4-a162-b8a51f733d23",
        "cursor": {
          "ref": "ea7f9363-ea7f-44d0-bb0a-12ff89bdbe8b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a5a539a1-b3d1-48ab-a6c4-04c62b1ad387"
        },
        "item": {
          "id": "ab5b06db-4ef6-4cc4-a162-b8a51f733d23",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5c0a766-fb73-4099-8845-05bdf5f1da77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621f092-d05a-4b7f-b7ff-76d698f153b5",
        "cursor": {
          "ref": "0d5b3715-b731-4a35-9e77-3e8be2128433",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1f1dd49b-8d18-4e49-a77d-4fea7c22036d"
        },
        "item": {
          "id": "f621f092-d05a-4b7f-b7ff-76d698f153b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d2cc13c7-7bd6-4b36-90e1-bad75e4870a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f7830f-e706-42c8-a768-498fa68c733f",
        "cursor": {
          "ref": "6e01dbf9-3ee0-4d36-8afc-c636f7af6829",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6b68254f-cf93-476a-a27d-e0e8ac8efe9d"
        },
        "item": {
          "id": "50f7830f-e706-42c8-a768-498fa68c733f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a87d947e-9e8a-41db-9878-6d04f093eeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df979636-6c53-4d7f-8602-6bc070abdfa5",
        "cursor": {
          "ref": "52d6a079-85c0-4fd7-a19b-59394c6bb5a1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6dc86dd4-e2e1-4e78-a0d1-c2319370d92c"
        },
        "item": {
          "id": "df979636-6c53-4d7f-8602-6bc070abdfa5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b08dc327-0a12-472f-92b8-510c7ff20d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2639b9-516b-40fb-baf8-778b149c9f99",
        "cursor": {
          "ref": "c1e3aa15-cd5b-45e0-ad89-9d8338dd746b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "02ddb08d-b430-4d2c-80ab-5efab161f313"
        },
        "item": {
          "id": "1a2639b9-516b-40fb-baf8-778b149c9f99",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0acabea9-c29f-44cd-b11f-16f52aa508bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6444a5-f905-4d70-810d-31ae1575dbda",
        "cursor": {
          "ref": "99ff1f7a-8017-4f5a-bce6-104724384b1a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "752f5358-054b-41ef-ab2f-f972c7a8a1ea"
        },
        "item": {
          "id": "bf6444a5-f905-4d70-810d-31ae1575dbda",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "596d0050-e0be-4f1c-8e4a-eba3a93bc9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f868f541-5b55-4dd5-a14c-48e8bc0d2b0d",
        "cursor": {
          "ref": "8fbef084-f52e-441e-9585-bbba7a6f25a8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "88e93c81-c977-4c86-a517-4461ce4db1fb"
        },
        "item": {
          "id": "f868f541-5b55-4dd5-a14c-48e8bc0d2b0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8922b77e-15d6-43d4-a431-5907da31523f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdbd873-8d4d-4db8-9f63-7775d954d5c0",
        "cursor": {
          "ref": "bc68331b-4487-4de3-b985-f596841e5a4d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0c75e871-1b67-4fc1-b7a4-b3760029c9de"
        },
        "item": {
          "id": "4cdbd873-8d4d-4db8-9f63-7775d954d5c0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "897e0eb6-5604-41f2-bf4c-635bae1b33bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e46e830-cdc9-4060-9ed6-6a757f415d1a",
        "cursor": {
          "ref": "2b635517-cf03-4278-9c85-dbe32e866d72",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "49408cf4-6b2e-4836-9c6f-f81f8a6af46a"
        },
        "item": {
          "id": "7e46e830-cdc9-4060-9ed6-6a757f415d1a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1f91c84a-5502-4d5a-8d22-4e970e2253ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9dc1a-f287-4998-92f6-cba195514e64",
        "cursor": {
          "ref": "7f790957-fdb6-44d8-9134-1956401915da",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "104787b9-b526-45e3-839f-03429b0c017d"
        },
        "item": {
          "id": "f2d9dc1a-f287-4998-92f6-cba195514e64",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1bc14474-1bf1-4ee0-8cc8-224378e291eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2168e0-b523-4189-ae27-180a0470f4a3",
        "cursor": {
          "ref": "32994d7f-e506-4f85-9ad7-263ffc5114c4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e20d9db2-64ff-4a87-80c0-b931e772dd7c"
        },
        "item": {
          "id": "cf2168e0-b523-4189-ae27-180a0470f4a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a2d4e51e-8003-417c-9bf7-88e732a10998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb53ce4-1d03-4ab9-9ce0-28d33d4b416e",
        "cursor": {
          "ref": "8acd1746-bd19-464c-a487-9c02d98b732a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4c041dbc-08f1-4900-ae55-c8d544cba985"
        },
        "item": {
          "id": "feb53ce4-1d03-4ab9-9ce0-28d33d4b416e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7ff112ee-3d2f-46fa-b23e-3f4d3806e16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454ff980-833b-445a-8789-c7f176091238",
        "cursor": {
          "ref": "c777db2d-829b-40dc-a3ad-95d10f066234",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7f82eb35-a046-46eb-8dd9-93103f2dc5a7"
        },
        "item": {
          "id": "454ff980-833b-445a-8789-c7f176091238",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "86428304-d671-46b6-a9d1-7b71bc4e223f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2683fc8b-0680-4c2a-bf9b-dbf93520834a",
        "cursor": {
          "ref": "c8dda4b6-8275-4009-8353-5fed56240803",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "85550791-237c-494d-89ea-866781b6afc3"
        },
        "item": {
          "id": "2683fc8b-0680-4c2a-bf9b-dbf93520834a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "00764f75-3686-4b31-b6fc-d6eba8d3758d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a90d994-4a1e-41b1-a8f1-028499457471",
        "cursor": {
          "ref": "f4e0a747-e01c-4462-a4b5-b809555a5f36",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "70b50d09-c138-4691-9d58-c90ece557ed1"
        },
        "item": {
          "id": "7a90d994-4a1e-41b1-a8f1-028499457471",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "07ba2987-8150-4a97-8e8e-3d759abd4f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80f1efe-943d-49bd-93c0-a8dcef786cc0",
        "cursor": {
          "ref": "4855fe69-182c-42ce-97ab-95432cb3fae8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1fc7e129-75c9-493c-9417-addc2b01aaf1"
        },
        "item": {
          "id": "b80f1efe-943d-49bd-93c0-a8dcef786cc0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "181a35ab-589f-4e9b-a145-6aebe4d1b107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeb509a-75e4-48be-9182-9757ff2b67ed",
        "cursor": {
          "ref": "8439067f-db34-4bc8-88e1-ebeea6af45bd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c2efe088-ad40-42b3-9e02-75274428618b"
        },
        "item": {
          "id": "5eeb509a-75e4-48be-9182-9757ff2b67ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "46efd34c-fd70-49b5-8e70-4a9f0ee23b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5c46d2-0c18-4fbd-b1f5-52287d7c4bc2",
        "cursor": {
          "ref": "1f01c055-a620-42ec-b73b-c5121c836ff8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "427a9a38-62d5-4ffb-bdcd-1b0bc8f9ed83"
        },
        "item": {
          "id": "bd5c46d2-0c18-4fbd-b1f5-52287d7c4bc2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bbe69a67-7562-4c57-9b2c-065a333042d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee526f30-7b78-4ddf-8c6c-0e2b0aad9c83",
        "cursor": {
          "ref": "13a5564c-4738-4c60-b84c-3dd3b85a77cc",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bbe092d6-0a34-42aa-ab09-4ac7394b5bb1"
        },
        "item": {
          "id": "ee526f30-7b78-4ddf-8c6c-0e2b0aad9c83",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8482ca55-66ee-4ee3-abed-485fb8ff612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d185ac2-8ba5-4ba1-b093-530da089826c",
        "cursor": {
          "ref": "5556eba8-7f46-4c58-a121-7c777bff3b07",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "93b9568c-f056-402e-9072-27f6ac265bbd"
        },
        "item": {
          "id": "8d185ac2-8ba5-4ba1-b093-530da089826c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ada2e266-010b-4cbe-9568-e086dff79f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06b8e24-1c41-4d1f-a592-4d44331a1219",
        "cursor": {
          "ref": "b84bad21-fb43-4a9e-afa0-def39fae6220",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "217a3ddf-5e90-43d1-ad0f-ead5ae2b27b2"
        },
        "item": {
          "id": "b06b8e24-1c41-4d1f-a592-4d44331a1219",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5c5df847-f5c8-4d10-a83e-79dade070398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60875979-c3ba-43c5-9118-9ee1b6b516a2",
        "cursor": {
          "ref": "2646458a-2d1d-4f23-8885-83cce390640f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "88fcc437-bb6e-428c-bce9-9da6e0f03479"
        },
        "item": {
          "id": "60875979-c3ba-43c5-9118-9ee1b6b516a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2b4c896f-6f59-42d8-8921-ae0ffc062bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a043397-3798-4e4a-b6ed-5ccda9a52e3f",
        "cursor": {
          "ref": "4d0a9156-f080-43a9-ac84-7dbf7b49129f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ea5a70a3-21c0-4949-9ad7-4359ac8f3efe"
        },
        "item": {
          "id": "7a043397-3798-4e4a-b6ed-5ccda9a52e3f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ce1647f0-e197-43bc-8441-387dcfba3578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d761629f-b06f-490f-9c19-b02c1b3e6b91",
        "cursor": {
          "ref": "e572cd1d-2e9c-4d2d-a859-a468726a4aee",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ba75c8ba-31e2-4db3-883c-30a7149e88ab"
        },
        "item": {
          "id": "d761629f-b06f-490f-9c19-b02c1b3e6b91",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "34c3518e-312e-4ab0-b788-faf1cca3c05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1543962-ce6e-42de-b941-120c8eb239fc",
        "cursor": {
          "ref": "b6899f8c-862d-480b-9b55-93d16b9fc205",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0419fbe0-e36e-4b2f-a519-a6d483954156"
        },
        "item": {
          "id": "d1543962-ce6e-42de-b941-120c8eb239fc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "111b154b-e431-49fd-aa55-5ba7f8ada6b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e99545-de00-4cc5-94fc-03f6aa840008",
        "cursor": {
          "ref": "e7e45266-0f10-49fe-b227-a794fc4b694e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "877afe15-b42b-4620-88a8-d93c55e8eb38"
        },
        "item": {
          "id": "e6e99545-de00-4cc5-94fc-03f6aa840008",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5e14a9ef-b7fb-4996-815a-7bef9d8b5406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1808c8-f9ae-41ec-ab27-f4ae4433abec",
        "cursor": {
          "ref": "0095607a-f18b-4a27-ae4d-7889ebc786b6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "41b8b926-27fc-4e84-8573-d9db1562fde8"
        },
        "item": {
          "id": "2c1808c8-f9ae-41ec-ab27-f4ae4433abec",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9be05197-08fe-463c-a477-575c4a4e194f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968f375a-a034-4f23-8156-b02576712564",
        "cursor": {
          "ref": "1222e318-eb3b-4392-8d4e-636ac9b1a661",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "86d89665-ac8b-4633-ba3c-4215da7e78ec"
        },
        "item": {
          "id": "968f375a-a034-4f23-8156-b02576712564",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "33b970b0-5e91-42e3-81ae-2496c74653a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06f4cea-ff0c-4c40-9d7a-48f6b9d13b1b",
        "cursor": {
          "ref": "994842a5-4589-4007-97a8-ccc5ef01c6c4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f7a41127-5acb-45df-a8bd-db43cf9e5a85"
        },
        "item": {
          "id": "e06f4cea-ff0c-4c40-9d7a-48f6b9d13b1b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a0d64360-0b4a-44c2-86ac-b114fbced3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccc6981-1d76-4328-bc90-b72ea8550507",
        "cursor": {
          "ref": "d836bbf4-4965-4b47-96e1-e07cd016aba9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "76a1fcfa-f668-4264-a842-c9dbabafe82f"
        },
        "item": {
          "id": "fccc6981-1d76-4328-bc90-b72ea8550507",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c9d7c30-03c3-4a57-bedf-d9afd1f33990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4cf9de-cb77-4e39-8d11-e4c691faff59",
        "cursor": {
          "ref": "4283669a-b569-44b0-a0f7-ebb01de0a60e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "13a8ed92-9987-4b2f-ab39-71ed34d62e85"
        },
        "item": {
          "id": "4b4cf9de-cb77-4e39-8d11-e4c691faff59",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "45ee41ef-9a4c-403a-8075-413f6077d410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fb4407-4d25-4105-a093-08963a09d7e4",
        "cursor": {
          "ref": "b484e220-4eae-43ab-b462-34b6a188c407",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "65294737-a788-412b-b590-316db6175cf3"
        },
        "item": {
          "id": "c3fb4407-4d25-4105-a093-08963a09d7e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "59f0dab7-4135-4fdd-b096-879948ffc7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dd7fe6-f434-4498-a1ce-cec27dc29188",
        "cursor": {
          "ref": "94c25f3a-5e6b-4a7b-81ce-2445272b2382",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8b8c73df-54c0-4ef2-8e9c-c583d2e667b5"
        },
        "item": {
          "id": "a3dd7fe6-f434-4498-a1ce-cec27dc29188",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61281a82-4dce-482b-afef-836fab8e985a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec53fce-eea5-4712-a0bc-a3ebcfb1b835",
        "cursor": {
          "ref": "21ecc70c-b231-4914-9e6e-78260d8f6eed",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d5dd9b1a-9eef-48eb-853c-dc0446b05995"
        },
        "item": {
          "id": "3ec53fce-eea5-4712-a0bc-a3ebcfb1b835",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7a8f9a33-e9a0-4110-85c8-3456ded15caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cb3438-779a-4185-83e8-5d60cd10b26b",
        "cursor": {
          "ref": "a3450218-dc8d-4ffa-b6bf-a1649bf94c6d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3ce49824-ff44-461b-8883-bfff17887d89"
        },
        "item": {
          "id": "02cb3438-779a-4185-83e8-5d60cd10b26b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b64feab9-0d29-4532-ac28-246ad4ac37ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac441b40-025a-49f4-a2d8-e7fae966e642",
        "cursor": {
          "ref": "7910f7be-e302-434c-875e-a045a4e5433f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "60348223-2338-4e8a-9825-584d02a68746"
        },
        "item": {
          "id": "ac441b40-025a-49f4-a2d8-e7fae966e642",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d503426-4482-4b6b-b22e-60807ef7fb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a84ccd-c031-4c71-a456-961abbf1166b",
        "cursor": {
          "ref": "5b633b6c-400f-4bf5-87c5-e8f5a2d3eb7d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e367027e-a725-4117-9c0a-66bbf75d9ea2"
        },
        "item": {
          "id": "18a84ccd-c031-4c71-a456-961abbf1166b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "60d3cbb5-dc46-4aee-bd9b-a1aeba0141d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc1405d-1da3-4ca4-84ab-6c9bf4fe2c30",
        "cursor": {
          "ref": "9a9230eb-a135-4ce9-b09a-302d49956c70",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9c1c995e-9ffe-489e-97c7-75a9b0c23b64"
        },
        "item": {
          "id": "cbc1405d-1da3-4ca4-84ab-6c9bf4fe2c30",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9e0ff75c-e77a-41ff-8cf3-4987beb9b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8b386f-586e-464c-8fe0-14560debb135",
        "cursor": {
          "ref": "6a5b33cb-08ab-48d6-9425-183bea090120",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5583e1f3-6941-4257-92dc-eb8841366515"
        },
        "item": {
          "id": "0e8b386f-586e-464c-8fe0-14560debb135",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6dd246e6-9fbe-4937-8a76-d6c2fe3cb535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8ad7bc-754d-414a-846d-73e9491d4848",
        "cursor": {
          "ref": "8a6fe185-0c7a-4c24-aa5c-0846ef6d2096",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dae9c4ff-4911-4d7a-9b71-5dbb58d595f3"
        },
        "item": {
          "id": "fb8ad7bc-754d-414a-846d-73e9491d4848",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "219f954a-540c-4d25-acfc-6882cfc1bf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff3bf93-cf21-461a-ace8-2beeb6d34924",
        "cursor": {
          "ref": "5cccd55f-d016-4cbd-9cc0-bd1a7b520a9a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "66e3a8e6-b99c-4936-85f2-c304b0ae0e03"
        },
        "item": {
          "id": "bff3bf93-cf21-461a-ace8-2beeb6d34924",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae1e6483-7f02-4962-959f-786a6edf1caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4221055b-18e8-469d-b16d-ee6480a97fea",
        "cursor": {
          "ref": "91ca6a8a-7fb7-4531-8898-584d414df18f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2bb66137-daee-48a8-a1d8-a414fc2f2fb1"
        },
        "item": {
          "id": "4221055b-18e8-469d-b16d-ee6480a97fea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5709ad85-9086-4c08-aa2b-8e66c5f88a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1b090c-f31d-48cd-bbdc-0be7f597ea60",
        "cursor": {
          "ref": "a7060e9b-7757-4b7b-8d58-2073bdac04ca",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cc152ebb-d2f6-42d8-87f3-d4ca127dfe9f"
        },
        "item": {
          "id": "3e1b090c-f31d-48cd-bbdc-0be7f597ea60",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "595701d1-6eec-4d50-b8c7-7d6f8943b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22439de-43e2-499c-b115-a0f767c57cfc",
        "cursor": {
          "ref": "1b19bffa-45bc-4fd8-9d64-baadd8a13b09",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1d195d19-5da5-43cd-8973-d843c3242b17"
        },
        "item": {
          "id": "b22439de-43e2-499c-b115-a0f767c57cfc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c7520765-786a-4bf9-9ad9-da57c3df41dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ce8a1f-0d92-488f-8820-bc01b15e5089",
        "cursor": {
          "ref": "c7dc5057-d51a-4b2f-b503-c9c32d7c24db",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "da7b6024-2813-4853-b660-e7b4e8b18e01"
        },
        "item": {
          "id": "35ce8a1f-0d92-488f-8820-bc01b15e5089",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9dd21588-d952-4db9-bb5f-0068bd63770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516c3a9e-5488-4824-beb6-3a097d70ccd5",
        "cursor": {
          "ref": "d3ca89f5-55fe-4093-98e4-aee847555862",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b0fff9d4-ffa8-45c2-a4bb-7d00e01b4d2e"
        },
        "item": {
          "id": "516c3a9e-5488-4824-beb6-3a097d70ccd5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1332c247-d58e-438d-b3ba-8655a3203f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238ff267-a76b-4299-ac98-9e1b1f5566ed",
        "cursor": {
          "ref": "1840d2b9-f7ed-49ca-8ffd-a627f9c5ccbf",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e161a9ad-a70c-4fb1-8591-580616416f4c"
        },
        "item": {
          "id": "238ff267-a76b-4299-ac98-9e1b1f5566ed",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "49d4dff8-754c-46fa-acfc-8dc0c2c4b7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703863bc-a477-4f24-935d-541980317619",
        "cursor": {
          "ref": "40d7af5f-a3a4-4412-9fa1-0ba7739f31c1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b64b05e-619a-4897-a67c-c7c198a5e2be"
        },
        "item": {
          "id": "703863bc-a477-4f24-935d-541980317619",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ccef4f2b-7e1b-4a19-9b8f-4d1f3884dda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6fbd87-7ca5-46fe-b9f1-be90375050d0",
        "cursor": {
          "ref": "16814f41-6114-4fcc-a4a2-98c49d19c0d2",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "96dac2c2-27b0-43ee-9a74-24c95fa74fd7"
        },
        "item": {
          "id": "ea6fbd87-7ca5-46fe-b9f1-be90375050d0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "204c5c87-5633-477c-b98c-0d198417d8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d2baf8-93ca-409b-ab8c-1e220fdb7fb2",
        "cursor": {
          "ref": "1bef8058-1a50-4dbd-bc73-99074b47fa70",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2eb04e11-6bca-4647-8808-0e69f61b337f"
        },
        "item": {
          "id": "84d2baf8-93ca-409b-ab8c-1e220fdb7fb2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0ea82e51-fe62-4e13-8064-d35193ed564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0507094a-37bb-4af7-9c73-263e9f7ef893",
        "cursor": {
          "ref": "393bb374-926a-4f0e-a9ce-d43784d08612",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4ea64f0d-a74d-4c7e-b918-9f00d385766f"
        },
        "item": {
          "id": "0507094a-37bb-4af7-9c73-263e9f7ef893",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a11b7081-af05-41b6-a3b9-4622d6258f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438c64a3-715d-4522-9129-11b5496d436b",
        "cursor": {
          "ref": "75bd9239-e027-4b01-8aea-e05c76f388a4",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "69261e89-20c3-4a05-b37a-144049e535c3"
        },
        "item": {
          "id": "438c64a3-715d-4522-9129-11b5496d436b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c121e60-ec7f-4777-90b8-2f8300c24575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69001544-be74-4e37-b22a-2fd07cc7533d",
        "cursor": {
          "ref": "7eef3656-a422-4997-88d5-cf086489d355",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "71064fe9-e6eb-4c03-a0a1-8513429dba5f"
        },
        "item": {
          "id": "69001544-be74-4e37-b22a-2fd07cc7533d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5d41402b-54d9-425f-9956-0e34d9562d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d061bdca-e89c-48ab-b4ce-d3a46d067cef",
        "cursor": {
          "ref": "2ca1e62d-0e8f-4645-a125-ee2b1ce7a098",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "50985967-b074-4369-bfe8-f082a6ee4cf2"
        },
        "item": {
          "id": "d061bdca-e89c-48ab-b4ce-d3a46d067cef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2dd2fe26-4384-43a5-82d9-1aacc11a971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca002afe-c90d-49ed-a32c-bf967c15f6e6",
        "cursor": {
          "ref": "d70a271a-5d11-4aa9-ba60-694e13e93d3e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "84a3d4d0-2b6b-422e-a02e-c682d9aa9076"
        },
        "item": {
          "id": "ca002afe-c90d-49ed-a32c-bf967c15f6e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "592d32a2-4af7-46a0-971a-103765aeb734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964696ba-4603-4613-bae5-bfe90ff3dfa5",
        "cursor": {
          "ref": "2fbcc537-8cb9-459f-89fa-4ee903bdf148",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0044f090-9f63-41a9-b337-c803ab04bc29"
        },
        "item": {
          "id": "964696ba-4603-4613-bae5-bfe90ff3dfa5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bab13f64-b3a1-4492-8912-b66baa600d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c510b3a0-ef34-4fb7-acfa-fa9824a68e9c",
        "cursor": {
          "ref": "881945c4-7939-400a-b5aa-896bc8eb920b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0092229a-209d-4f76-ace7-472877f8ebd0"
        },
        "item": {
          "id": "c510b3a0-ef34-4fb7-acfa-fa9824a68e9c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9ee16fd1-e36e-49db-8316-a492df1e1ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f42736-92cb-4317-9572-d4738c417337",
        "cursor": {
          "ref": "962e7287-a4fc-4bc3-ab69-f0e260d56d7e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6e7b3b58-e20b-4d5a-b6f9-26cf1e3dc3d8"
        },
        "item": {
          "id": "b6f42736-92cb-4317-9572-d4738c417337",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c5f273d-5a8b-4828-81c4-921b9e6651a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d08b289-4968-42f7-80da-43f628bc5c38",
        "cursor": {
          "ref": "c895a9e0-d00a-4605-be60-0d5b40f37ea7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "537564b0-3e8b-4f91-889e-9a4541cf9678"
        },
        "item": {
          "id": "3d08b289-4968-42f7-80da-43f628bc5c38",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f07ec51c-939b-4e64-98df-afb0009fb0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813e2135-2868-49d4-9a59-f075cc317545",
        "cursor": {
          "ref": "fad7429b-9cf8-40b0-96ba-3799b5ed325d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "41cd4df1-5a52-4698-a07c-814b0e0b719a"
        },
        "item": {
          "id": "813e2135-2868-49d4-9a59-f075cc317545",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2cb382ba-ea3b-4f3a-8c0f-1c6400b82183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d3213-4a5d-444f-9319-e8039195d558",
        "cursor": {
          "ref": "44d0977b-ec75-48fb-82d8-13c4e7d86d35",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c6fa000a-fc9e-493d-a5ce-cd9dee980bdc"
        },
        "item": {
          "id": "541d3213-4a5d-444f-9319-e8039195d558",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "46bab881-fe5f-40b8-9147-f6407f3f3f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55114e7-8c72-4d25-a979-9f3aaad82133",
        "cursor": {
          "ref": "3bea582c-ed61-475a-b720-cdc165e0585b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bac9c66a-7d93-475c-8a94-5c17b51c28c8"
        },
        "item": {
          "id": "d55114e7-8c72-4d25-a979-9f3aaad82133",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ee71608f-4a75-4d79-96e3-2b821434df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebda9fb8-7bf1-4b1d-86ef-4d60563ebedf",
        "cursor": {
          "ref": "f82bb82e-2db7-43d2-8ce2-0b98455f3e11",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "eec2b84a-ff48-44c2-a6eb-18544cade230"
        },
        "item": {
          "id": "ebda9fb8-7bf1-4b1d-86ef-4d60563ebedf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0e2fa962-7f37-4ee1-95f2-201c240eb868",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b25bb74-eb7b-4cde-a84b-97f894774944",
        "cursor": {
          "ref": "c400910b-0ce4-4d07-b872-f1eb96d04c19",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6ca33db2-84bd-4392-818a-b73825c3f299"
        },
        "item": {
          "id": "6b25bb74-eb7b-4cde-a84b-97f894774944",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3e6b900a-23f6-481b-965e-21ab629e150b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94501b0-f59b-4b5f-8d49-04eb7c7097bb",
        "cursor": {
          "ref": "d1c9db3b-2ac2-4245-a54c-3e36c0b1c3e4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c8d8d6db-dbdd-4228-9c23-a887b6ca9c89"
        },
        "item": {
          "id": "a94501b0-f59b-4b5f-8d49-04eb7c7097bb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7bea33c3-c4c9-4531-9d1d-d1448393c4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0acb5c4-de96-4039-a182-afe9ef1c9499",
        "cursor": {
          "ref": "22a84d4a-6776-429a-88d2-a878cf2b5fc2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "164eb10e-c6fc-4106-bff8-ad646ccd0ac5"
        },
        "item": {
          "id": "a0acb5c4-de96-4039-a182-afe9ef1c9499",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2d80668a-fb6d-4459-b604-774aedde3a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ad6f47-82bc-4335-9a19-243c44d2f4ba",
        "cursor": {
          "ref": "a079e1cc-70fd-42b1-aa7c-b56f9674c660",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "40615bc2-f361-4371-9950-83b24ef19c04"
        },
        "item": {
          "id": "a2ad6f47-82bc-4335-9a19-243c44d2f4ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fba97d97-07b7-4eb1-a2fd-8f0037004188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a8e03c-2c88-414d-9b8c-842614f4be54",
        "cursor": {
          "ref": "d5204fe6-a8fe-4898-9e48-7e4dfbf42849",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1ff16ed3-1ca2-446d-a868-b81a84fa4296"
        },
        "item": {
          "id": "f9a8e03c-2c88-414d-9b8c-842614f4be54",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "adedc1df-3ad5-4be6-8f31-4a72d9ab3cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30024aaa-5977-4dc0-ab89-f6190c87e90e",
        "cursor": {
          "ref": "07cd8350-7120-4957-a6db-f519368af1c2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2e0aad4f-0d9e-432d-a104-84a0a60e32f5"
        },
        "item": {
          "id": "30024aaa-5977-4dc0-ab89-f6190c87e90e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6b450482-f835-49b0-bbef-a02e411ca079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8537055-9090-4916-95f6-3ef1183df340",
        "cursor": {
          "ref": "3c3ad56a-adc7-45da-aaa1-d21cc1c56c4a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ed8b562-fcf9-44ec-b5f2-4b30d5c3aff6"
        },
        "item": {
          "id": "a8537055-9090-4916-95f6-3ef1183df340",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "44cef98f-683d-4a67-b894-e8cc9729e94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046f4fd0-bb5b-4f3a-800d-445fe42ca6d6",
        "cursor": {
          "ref": "d88db7d6-38d9-4c97-8202-3e6854c2ade8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "835957f8-cdef-46f0-9731-6762a5c6d5c3"
        },
        "item": {
          "id": "046f4fd0-bb5b-4f3a-800d-445fe42ca6d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "786f9965-c3f0-4b1c-98f0-4cda23bb24b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689f7231-ee36-4c7a-a715-222aca45d621",
        "cursor": {
          "ref": "92f1e265-7db5-4d18-9d0e-fa70fd4f1efc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8be0f14-3238-4d10-aa5f-1bf9c30a21f2"
        },
        "item": {
          "id": "689f7231-ee36-4c7a-a715-222aca45d621",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1d47e67e-d38d-4a49-bb21-5f613b8dab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32922703-b8c7-4843-9a76-06c7b36dfd7d",
        "cursor": {
          "ref": "eda98a1c-522e-4daf-8bdf-67d13731c569",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "46f3b52f-fe90-4180-940c-5d9f8c289bb8"
        },
        "item": {
          "id": "32922703-b8c7-4843-9a76-06c7b36dfd7d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "48497979-6ad4-4de7-8412-6d766b57864a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1860127-7603-4a7e-909d-c35090bcbe9b",
        "cursor": {
          "ref": "34bbdf28-09cd-445d-9515-05c63a589c65",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8d1a6048-205c-4eba-a8c4-85d53031652c"
        },
        "item": {
          "id": "b1860127-7603-4a7e-909d-c35090bcbe9b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cee29b42-8489-474a-85ae-12e04bf676d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb877a80-587d-4f51-9ce8-9a19f953654d",
        "cursor": {
          "ref": "6c4d21ce-571a-4d30-8297-7433fc3024d7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a9e16f75-10c9-427c-94dd-83cdc01f6456"
        },
        "item": {
          "id": "cb877a80-587d-4f51-9ce8-9a19f953654d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4b3e28d-a1ea-4ead-89e9-2a0e19bccdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cd0cac-7586-4512-980f-f183364749be",
        "cursor": {
          "ref": "0ecb6fc0-ad16-4a7c-ac10-cf5a88b25527",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0cef0ba2-d9fc-4897-923b-849bfaeebd8c"
        },
        "item": {
          "id": "d0cd0cac-7586-4512-980f-f183364749be",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "017a2ddf-200e-44bf-9371-e3ddb03b130d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ae50f9-3a2a-4093-a185-e48dcb0cf894",
        "cursor": {
          "ref": "feb80aae-1e34-4377-97bb-2f5574a78538",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e34b992b-89ea-41a3-956c-fa39a3b1000f"
        },
        "item": {
          "id": "d1ae50f9-3a2a-4093-a185-e48dcb0cf894",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f8eb66e6-5c46-49a8-8112-f722f71e4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e7707c-adfd-4f85-bddd-e6342376996c",
        "cursor": {
          "ref": "4f8cb59f-5717-4a8a-8cd3-b9dbfe823987",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff8d1a3b-e00e-49f5-bfa9-55de6ec080ce"
        },
        "item": {
          "id": "23e7707c-adfd-4f85-bddd-e6342376996c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4af65fa7-6c09-4eb9-9d80-2c287b427a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fd3cbe-7b8a-473d-8b7b-28164bd18998",
        "cursor": {
          "ref": "4f5f670e-7213-4897-bc2b-e20e2244d9c4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bd5ec5e7-4f7f-4f0c-bb03-555bef5ce601"
        },
        "item": {
          "id": "d3fd3cbe-7b8a-473d-8b7b-28164bd18998",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84456ca4-9df0-4578-8c71-fe5a5463d56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a0d6bf-7c4a-4da3-b388-29897d552b40",
        "cursor": {
          "ref": "40fdc9c6-239c-49e0-a0a2-04070e704589",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c00d723f-1ef8-435a-a2f1-710824bd36d1"
        },
        "item": {
          "id": "10a0d6bf-7c4a-4da3-b388-29897d552b40",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "00f2bdd2-8b8e-4a3e-bce3-e95833e67428",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "fd658fdd-3ea3-4fb0-a051-d91a40dc0188",
        "cursor": {
          "ref": "48aad500-4043-4bb5-97fd-30677a23926b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4764aad0-8c40-4248-95b9-ee791005dfbf"
        },
        "item": {
          "id": "fd658fdd-3ea3-4fb0-a051-d91a40dc0188",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "26625ca1-2d22-4dfe-b3af-d4b14dd3be60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce17383f-53e8-44c9-b173-90c519c99712",
        "cursor": {
          "ref": "73673c0b-b35c-42f3-b4a3-d523c3771f3c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "224d772b-178f-4133-90bc-cedbca4c27f1"
        },
        "item": {
          "id": "ce17383f-53e8-44c9-b173-90c519c99712",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "954ad6d2-fa86-425a-b99f-771b6d9ee1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad6a20e-62bf-479c-91ca-2d38471b5002",
        "cursor": {
          "ref": "09f9e395-3b6a-48e6-a695-fb0e4d4c4ccb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5f2798f5-969f-41bd-97b5-e40e701b666e"
        },
        "item": {
          "id": "4ad6a20e-62bf-479c-91ca-2d38471b5002",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a0d6f4d6-5ad1-4df4-8746-41a7f1eccd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd5de7d-09db-477f-97fa-dc4a32cad2f4",
        "cursor": {
          "ref": "458f1000-97c9-4d87-adc0-df1dad2ce785",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0380c384-2a3d-47e9-99ca-cc42fdd1f0fa"
        },
        "item": {
          "id": "1dd5de7d-09db-477f-97fa-dc4a32cad2f4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4c6d7ae9-f9ca-4bb7-97cf-b6b89f92bd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab59295-3602-4f21-811a-ef003636b206",
        "cursor": {
          "ref": "3bcf9a8b-35bd-4017-a884-441950a82941",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f3b467ca-3665-44d0-80f1-3bbdfe017e06"
        },
        "item": {
          "id": "dab59295-3602-4f21-811a-ef003636b206",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2cd104ed-a48a-49c8-b58b-e132eb5d30be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38132632-b0ff-4bf2-bbf7-c98757d78e21",
        "cursor": {
          "ref": "80000156-ecef-4324-a75f-5c90da5b3051",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "870e241a-e799-4196-b747-de44c4bcc31c"
        },
        "item": {
          "id": "38132632-b0ff-4bf2-bbf7-c98757d78e21",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4eed7b47-5eb6-473e-a03b-336e0e21188e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f36223-9eba-4892-ad05-28fe29ca3891",
        "cursor": {
          "ref": "f076bb97-8f2d-4c40-9ecc-5b1ae9877e9a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1690057a-25a3-4b20-96c1-e260086b4334"
        },
        "item": {
          "id": "35f36223-9eba-4892-ad05-28fe29ca3891",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a49fbf95-95d6-4d76-a68e-fc1071e095cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a933ef-1f14-4328-82c2-34857ea4b86e",
        "cursor": {
          "ref": "51982d8f-a1ff-49ef-ab9a-c070c3fa8f39",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9394559a-e4aa-4703-9e3b-67fd028c83c5"
        },
        "item": {
          "id": "86a933ef-1f14-4328-82c2-34857ea4b86e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d6c27613-30f0-4a40-b2d5-ef9d2af7c74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d0f8a4-187d-4916-8f1c-c9fcf520b689",
        "cursor": {
          "ref": "f41c6909-538d-4973-93ef-0304e9aa7324",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "74616b6a-22b7-40d0-bd11-1c7d92942ac8"
        },
        "item": {
          "id": "f5d0f8a4-187d-4916-8f1c-c9fcf520b689",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c147eaf0-93b7-4dcb-947e-999fb6027d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6663672-901b-458c-80fd-baac8e4016e9",
        "cursor": {
          "ref": "50a9efbb-0859-45b2-961f-780a95790a6a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c69e3625-72dd-4918-8aba-ba18352c1ca4"
        },
        "item": {
          "id": "d6663672-901b-458c-80fd-baac8e4016e9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f1ad29c6-fa98-405f-8637-3f59535ac95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a29221-dafa-4b41-9a3a-2916b7fb5bb2",
        "cursor": {
          "ref": "7f854aee-c3b8-4bcb-9c19-4334c3db6fe3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f1c1f5fc-784f-4fcb-98da-ec81d69e3434"
        },
        "item": {
          "id": "a1a29221-dafa-4b41-9a3a-2916b7fb5bb2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0372df3d-7c5b-4c0f-8a4a-ed4a1dba79de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e74b7b-dd75-4cce-b1a7-d05e4843ab36",
        "cursor": {
          "ref": "3d585525-c8df-4f0a-ace3-67fa4f859efb",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b197c7f9-9fd5-48f1-9a42-61d1fd08de8d"
        },
        "item": {
          "id": "72e74b7b-dd75-4cce-b1a7-d05e4843ab36",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c3f30522-fd7e-4ad1-be7c-5512c3202db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fa8396-d3d3-4df8-9e4e-4766ee299bb9",
        "cursor": {
          "ref": "4d41ee8c-6247-44ad-adb9-01ae8180e306",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1acc5103-0b0b-4748-a567-55f7d90b05b2"
        },
        "item": {
          "id": "06fa8396-d3d3-4df8-9e4e-4766ee299bb9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e0b2a5cc-bbd9-4c77-85d5-5869f0434ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dde790-0896-430c-ad19-92c9e92207dc",
        "cursor": {
          "ref": "3d855ea3-1c07-4925-b9a6-aa8e90a837c8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "edff2d34-2a8b-4dfb-9093-549a6df1231a"
        },
        "item": {
          "id": "13dde790-0896-430c-ad19-92c9e92207dc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d3138819-6856-4389-ace3-207bf754ee12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deacfd8-e9f1-4ca4-89ea-ef48db0d694f",
        "cursor": {
          "ref": "6126e8b5-1023-46d0-82aa-49e334100381",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c8b1df4f-186e-4d1e-bd81-65a24bc5c943"
        },
        "item": {
          "id": "0deacfd8-e9f1-4ca4-89ea-ef48db0d694f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1d07cb28-9312-4ddd-a6bc-0f0b2c7b0ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fa21e3-c82c-4d7c-9e43-6ccce29dfe79",
        "cursor": {
          "ref": "6e60b1b3-a253-42c1-8b0b-c84af27d3500",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5bfd9d72-c3f2-4f8e-8cbb-983eb7eb9dfe"
        },
        "item": {
          "id": "32fa21e3-c82c-4d7c-9e43-6ccce29dfe79",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ed30a361-73e8-44ed-8099-496c6e772082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aed5f5b-7d05-4dd1-8969-ad07158d3297",
        "cursor": {
          "ref": "41f03c52-4288-41c1-a5ec-dad055ca0ffc",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "14183277-52de-4606-a15e-b1ed86518c85"
        },
        "item": {
          "id": "1aed5f5b-7d05-4dd1-8969-ad07158d3297",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ea0168b2-8bc1-4499-a86c-76cf086d6f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328b45c6-a01a-4ccc-b9df-2023a5e66d8c",
        "cursor": {
          "ref": "14033e55-4ef4-4021-8409-85374c882183",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be9fd0d9-f9c1-4fdd-8766-e9c44fd887d6"
        },
        "item": {
          "id": "328b45c6-a01a-4ccc-b9df-2023a5e66d8c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0adf1ad7-723d-4754-bb83-f2dc27a20895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd558b87-7096-41a6-afaa-e9ccc87b3a13",
        "cursor": {
          "ref": "39d793b8-2bd9-4c6e-b0d0-9013ad5a2797",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08dc9f19-d8a0-4cd7-aa35-b0a954a735bb"
        },
        "item": {
          "id": "fd558b87-7096-41a6-afaa-e9ccc87b3a13",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c9e90111-f304-410f-b80b-25e85f5b2877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abddcc8b-45e7-40eb-b515-e48331ff7ab2",
        "cursor": {
          "ref": "eec349a5-b602-4329-b782-4d24cd4b7c5e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6a125701-92e0-4852-a8db-ce201cf22c4f"
        },
        "item": {
          "id": "abddcc8b-45e7-40eb-b515-e48331ff7ab2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bc7c565d-a1f3-4bb2-9deb-d144c1ca8aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6f8ead-e0b6-4ccb-94e8-2055c9fb4aaf",
        "cursor": {
          "ref": "3dd91e73-f985-4619-8618-6dad2c868aa3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d9edf912-cdce-440c-bb96-868f945705c4"
        },
        "item": {
          "id": "8a6f8ead-e0b6-4ccb-94e8-2055c9fb4aaf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a9c1fe96-4696-4e92-8bab-e03d7bcbee56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97def43c-7763-4fab-8e52-ed128b17e426",
        "cursor": {
          "ref": "9b540337-76f2-4c26-ac7f-49e47187d2d5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "37d81222-2d91-47b3-9993-ba02186562bb"
        },
        "item": {
          "id": "97def43c-7763-4fab-8e52-ed128b17e426",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "82d40c1d-1c14-4ec5-9190-fcd0b6aaa429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11297b5b-cf48-4177-a413-eac0219ede6b",
        "cursor": {
          "ref": "f39cc6fe-6002-4f62-a3cc-7e112cc8d053",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d2f5cd94-b187-45c3-9b3d-3403ceccc00e"
        },
        "item": {
          "id": "11297b5b-cf48-4177-a413-eac0219ede6b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "613eca80-3797-4f92-84d8-f309891a9b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b958c726-1195-44f8-a829-e292c067e199",
        "cursor": {
          "ref": "ebafd281-acb4-4698-a747-539bb6e5ecae",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d5ca878e-f559-4053-815b-0488952d4514"
        },
        "item": {
          "id": "b958c726-1195-44f8-a829-e292c067e199",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d2920557-9cb1-4f37-8bd0-7db2f1147949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e19a8d-490e-4e10-83f4-a9f14aca710b",
        "cursor": {
          "ref": "b452463e-903a-444f-b7ae-c0248c9423af",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "154b6d2e-b228-4941-9f90-610e20c7646b"
        },
        "item": {
          "id": "71e19a8d-490e-4e10-83f4-a9f14aca710b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "63d4d391-e63c-436e-b100-8acae11df989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf24d9f0-3be1-44f7-ad60-023ba70bb3b5",
        "cursor": {
          "ref": "12479756-f068-4614-8fcb-07dfce97efd7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ce71edd6-028d-4722-a02e-b9fc26b4e2ad"
        },
        "item": {
          "id": "cf24d9f0-3be1-44f7-ad60-023ba70bb3b5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "31409fa7-e102-4e07-b6fa-a66147637131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e082fed-03ce-4860-895a-19b73e0f3396",
        "cursor": {
          "ref": "b5314a7b-bfc6-4f32-bf8c-847ee8e755ef",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d80847c6-fd3d-47e1-bf96-faac4d03c230"
        },
        "item": {
          "id": "3e082fed-03ce-4860-895a-19b73e0f3396",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f23e973b-8ac9-4f20-907f-156eba658851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0003edca-e4fd-4616-9c7a-2f509a1e469f",
        "cursor": {
          "ref": "44e6b5dc-6126-451e-8861-ffad9c4dd8b1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3dbcd63d-71be-4e80-8452-8feb6cc41f28"
        },
        "item": {
          "id": "0003edca-e4fd-4616-9c7a-2f509a1e469f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e78f7390-a1cb-4b37-819b-18631b3f7fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb164963-a28b-45c8-b8b9-e72d87cb6189",
        "cursor": {
          "ref": "a200f91a-3545-4ab1-99aa-a1d01734ae28",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "754d1f3f-f8bd-419b-8cbf-d3509fef8990"
        },
        "item": {
          "id": "cb164963-a28b-45c8-b8b9-e72d87cb6189",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8fbd5f2d-e260-4003-85a8-64b6be3845c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018c0a4e-682c-439a-bb0e-5e8188598513",
        "cursor": {
          "ref": "1da23ae0-2d32-441f-87f2-75f390524085",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4fc60379-ed3f-42a1-a672-4fedd90d5f0e"
        },
        "item": {
          "id": "018c0a4e-682c-439a-bb0e-5e8188598513",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "52d57b5a-1e6c-4bad-b345-8463b4d19b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688366b9-4c3c-46ae-9250-2c6560d7ff58",
        "cursor": {
          "ref": "8c031092-2cf9-4fe7-82d7-82e65a5b1695",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2a16c5f6-e8e9-4555-8d8d-7e3d8e76a57d"
        },
        "item": {
          "id": "688366b9-4c3c-46ae-9250-2c6560d7ff58",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "69fc12f2-d9cb-4852-b3cb-f0045f7bb1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69c0ad4-5a30-46dc-a276-0068c99b3e46",
        "cursor": {
          "ref": "75af5452-e51a-4a33-a36f-24808dbb86d7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fe9bced2-1723-436e-a171-b41929f7766c"
        },
        "item": {
          "id": "e69c0ad4-5a30-46dc-a276-0068c99b3e46",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "85e7cc07-a644-40a0-b2a4-fa0f6cae8125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e774d58f-a3c5-4144-a12f-a2f4eba1533d",
        "cursor": {
          "ref": "cd68e717-7a4b-4d1e-8019-3b1eaaa8d624",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "665a4a19-46bc-41a2-a6fb-4fca5f3d41c6"
        },
        "item": {
          "id": "e774d58f-a3c5-4144-a12f-a2f4eba1533d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "43d74694-455c-4289-b912-c30471b0ff18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820fecfa-6d51-48dc-b05f-876b9c0670bb",
        "cursor": {
          "ref": "3f1e3182-37e7-45a9-95b5-55f1dcc4b8e8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "19ead1c2-133a-4d48-80f5-2cba94c0d235"
        },
        "item": {
          "id": "820fecfa-6d51-48dc-b05f-876b9c0670bb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3b2fc9a9-29f0-4bb8-a61c-a026eee1aeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bce1a6d-b3c2-40ae-ab84-26ff50148488",
        "cursor": {
          "ref": "95f341e3-da16-4f89-ad6c-94d39eccbf65",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "915aa136-33e8-4e54-80d4-04b169aa5641"
        },
        "item": {
          "id": "9bce1a6d-b3c2-40ae-ab84-26ff50148488",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f7b506da-56b5-4193-b355-ff34b701b6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec54dbde-e173-4b8b-9c0c-364607cc33ff",
        "cursor": {
          "ref": "70f46216-946c-484a-8351-e42e22a545de",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "30d23c9d-b832-4dac-bca3-ca3a729fdb37"
        },
        "item": {
          "id": "ec54dbde-e173-4b8b-9c0c-364607cc33ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3c4ab0b2-f29f-4de5-b39d-45e57d3f1423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b74174-1c5d-4f09-8420-417b8856cb25",
        "cursor": {
          "ref": "9d51cd4e-0dea-4f5f-95a6-8b28ba9be78a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "101d9288-8fcf-4968-9328-e9a064d8b74c"
        },
        "item": {
          "id": "f7b74174-1c5d-4f09-8420-417b8856cb25",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "43df4599-ffe3-4333-91c5-4399184ac04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f415b27-8468-4d20-8b9c-31420759de20",
        "cursor": {
          "ref": "27c8d2c2-fe72-4d7a-9e16-e6a1d937d452",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8bafb6c4-8bec-44a3-85ec-497edf4d93f5"
        },
        "item": {
          "id": "4f415b27-8468-4d20-8b9c-31420759de20",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2aea33b4-feba-492d-9b6e-3b8bc8d17d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae047dee-b886-4411-964d-89ed8d0f8142",
        "cursor": {
          "ref": "e7e8bc6b-a12d-4bcb-beb7-51ed7feb1cee",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3d96efa-36ac-41ae-931c-aaa45861ee42"
        },
        "item": {
          "id": "ae047dee-b886-4411-964d-89ed8d0f8142",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2a7e4d84-cd40-44cc-a537-04fed12323d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4c1d49-5391-44b4-a64f-556e34053fca",
        "cursor": {
          "ref": "5ae109cc-f3a7-4c5b-839d-c1b9122cb5a1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b1e03958-3615-427b-aee2-2e5fb9653118"
        },
        "item": {
          "id": "2a4c1d49-5391-44b4-a64f-556e34053fca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b000f8cf-dfdf-4786-b5d9-d1f87ce84710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81bac7d-696d-44dd-ae8b-d7f2101125fb",
        "cursor": {
          "ref": "a3f6b20c-6c01-4d40-aed1-da973e46a302",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e87af2e7-4248-4f48-8ef1-6504180fdb64"
        },
        "item": {
          "id": "f81bac7d-696d-44dd-ae8b-d7f2101125fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9a0ad421-899e-4a86-9bed-fbeabe62d5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5e208e-c42d-4713-b0f6-b2b8da09274c",
        "cursor": {
          "ref": "f277e69d-c380-4ecc-af37-5e380ae04299",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6c931a17-4196-4f6a-9b3c-df0b967fba57"
        },
        "item": {
          "id": "6d5e208e-c42d-4713-b0f6-b2b8da09274c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f9303397-2341-49f0-8dea-34c2111aab2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e338dc-d6c4-46cf-beb2-75409b9e8e67",
        "cursor": {
          "ref": "9784ca91-082a-461e-93ad-b0da3111bed9",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7633f412-ec79-4c07-ac6e-d6b4379a038d"
        },
        "item": {
          "id": "29e338dc-d6c4-46cf-beb2-75409b9e8e67",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "522f4c19-6d7b-469d-80c5-8ce20b11511f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5177ea-8a8f-4d75-aa70-e1a8f4cbc2d0",
        "cursor": {
          "ref": "fb0cf21a-c81a-4a3f-87e7-808e28a537be",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "718b70d3-d46b-49f8-8992-a7b857dc9060"
        },
        "item": {
          "id": "9c5177ea-8a8f-4d75-aa70-e1a8f4cbc2d0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d4fc3246-00d2-407b-b283-8dadf7e52936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5aea49-4765-4840-8b69-e4a3e957f66c",
        "cursor": {
          "ref": "646dcc6f-8da1-44c8-8ad3-4429eb859351",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b0b236de-a0b4-4f1b-810b-676cda2ac4e7"
        },
        "item": {
          "id": "2b5aea49-4765-4840-8b69-e4a3e957f66c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "790d6d1f-f45d-4d25-8bee-cb26c8a25547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cace2c-b0fa-4fc4-838b-0a893654c86e",
        "cursor": {
          "ref": "3ab41b1a-26ff-4e5a-9f9a-adae3475d7a2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f772af2d-2b72-42a0-8701-70c8f102537b"
        },
        "item": {
          "id": "71cace2c-b0fa-4fc4-838b-0a893654c86e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "07e45192-5311-496c-819b-7cef28715a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f0ba47-4d83-4ab8-ac53-de78ee1a6b59",
        "cursor": {
          "ref": "7e79e91e-4af0-4e67-95d8-3b9830cc363b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "902e2a8c-b876-481f-9ba7-974819b2b990"
        },
        "item": {
          "id": "e4f0ba47-4d83-4ab8-ac53-de78ee1a6b59",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7be49122-edb9-40db-a675-b1b96a9e56fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fca00d-56d1-4d4e-bc1d-c9fdbb8c2535",
        "cursor": {
          "ref": "4d1d4fa1-74ab-4a71-9046-d457d1ecfa36",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8d580ca6-c533-4a4b-970b-37e5f93a494e"
        },
        "item": {
          "id": "63fca00d-56d1-4d4e-bc1d-c9fdbb8c2535",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "246a5eae-8f68-4ae8-a1c2-22c0c842e457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35589cd2-9020-47ba-978c-2d9375eefac3",
        "cursor": {
          "ref": "35ab9ef6-f426-4539-8ffc-574edca2f1d1",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c86b022f-eadb-4db3-98e1-92ba2d8f9b8c"
        },
        "item": {
          "id": "35589cd2-9020-47ba-978c-2d9375eefac3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7c6603ce-1a3c-45e9-be85-86881def4da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a276e86-a799-427f-a1d6-93ee5b327a43",
        "cursor": {
          "ref": "e6fd2023-8d34-4ea7-bcbd-3544474b8466",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "14055721-11a1-4c52-acd9-feb684b1f7c7"
        },
        "item": {
          "id": "2a276e86-a799-427f-a1d6-93ee5b327a43",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "24087775-97d6-4358-97a6-c5bbcf5e1560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f206fbdf-d101-4789-bb53-db4a6f3c8144",
        "cursor": {
          "ref": "d2bde993-bedc-4590-a50c-5a9a7fa37569",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cab80199-a668-4c91-bcfe-3c5be77ee672"
        },
        "item": {
          "id": "f206fbdf-d101-4789-bb53-db4a6f3c8144",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d53ac865-de59-4a8b-a58c-460ecb85e4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99605bb-eb7b-410b-9a26-aeb7a0a7768a",
        "cursor": {
          "ref": "5f734dd0-5a91-4e21-ad2d-c6d252dec65f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c5e2460-3587-4394-bc6f-ab83c45945a4"
        },
        "item": {
          "id": "e99605bb-eb7b-410b-9a26-aeb7a0a7768a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3ed267d9-5ec1-40e2-b377-2661cd5d9e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c50d11-67ae-4329-81ff-6deff78e42c7",
        "cursor": {
          "ref": "8f87eb51-4be3-4c3a-a4a7-29fa133022b8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c62c1257-01e0-4e7b-875b-70b44004fb06"
        },
        "item": {
          "id": "75c50d11-67ae-4329-81ff-6deff78e42c7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "10f509f2-6402-45ad-a3e3-ba8c5344aee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3225f9-54d7-4814-a696-54cd8633d7ab",
        "cursor": {
          "ref": "c53a5971-b6c5-457e-89a6-96dcf02e05b9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ebfeb16d-3520-47ab-ad67-b31d695994d6"
        },
        "item": {
          "id": "4f3225f9-54d7-4814-a696-54cd8633d7ab",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7a71d01a-f821-4360-b518-edc818ba1750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0a13bf-2f73-47d7-bb80-0125db949736",
        "cursor": {
          "ref": "6e0ae57b-76b6-4e35-98ff-4eae72cd1027",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "588cf4fa-22b5-465c-8450-23e13bcf6db4"
        },
        "item": {
          "id": "8f0a13bf-2f73-47d7-bb80-0125db949736",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "37cbe7c5-1313-4bd9-8d81-992158e899d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04205e3b-f967-481a-b3c9-26ad91587d54",
        "cursor": {
          "ref": "ca598eb6-d5d4-4ff8-9ada-d423bb09931a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1b226d9b-1574-4165-80c0-0fd7d8a7bafc"
        },
        "item": {
          "id": "04205e3b-f967-481a-b3c9-26ad91587d54",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "68d36a5c-230b-4ace-ae89-37bbfa4d3c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877b2529-e9d8-455f-9582-baa8a740cc84",
        "cursor": {
          "ref": "693cf790-b60f-4c15-b45e-21df242614ac",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "11428f11-e117-44d1-b5c9-8b22031848f4"
        },
        "item": {
          "id": "877b2529-e9d8-455f-9582-baa8a740cc84",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ed6d9937-5b37-4a61-9118-93fff400bc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98409e52-24bf-4e1b-bd43-dab43f4cc7ed",
        "cursor": {
          "ref": "ff37d63b-c419-43ef-8566-383b66907bce",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c6a63d3d-f6a0-4928-9fa2-9dbdb1606e05"
        },
        "item": {
          "id": "98409e52-24bf-4e1b-bd43-dab43f4cc7ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1f6e504d-37af-4829-8c91-91fbb621aad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69433887-74d9-4107-929a-c33d9cf6e432",
        "cursor": {
          "ref": "0c4d0177-a527-4ade-b9e5-69c53b0382a8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8dcf9def-17f2-461b-ae4b-356b68dfba02"
        },
        "item": {
          "id": "69433887-74d9-4107-929a-c33d9cf6e432",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2fe98f1c-4be9-4b83-ab01-c282f233366d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21be8c4d-e86b-4a08-8f2c-71578b560a25",
        "cursor": {
          "ref": "ab638b5a-ec0a-48b9-952f-43381251f8a3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "91e7e2cb-755b-4390-a406-ef4b80bb873c"
        },
        "item": {
          "id": "21be8c4d-e86b-4a08-8f2c-71578b560a25",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bf443afe-79ff-47e5-99d1-3d266ad59b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990f0612-5efe-483e-9199-c54f7de11d7d",
        "cursor": {
          "ref": "ae0ca154-2c64-4ccc-bb76-0344f737b65c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "96ae7868-e68f-488e-bdd8-a435ea5ec9ed"
        },
        "item": {
          "id": "990f0612-5efe-483e-9199-c54f7de11d7d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cc2e71c8-b0b9-4c17-85a7-c86b84d70a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a722d1-b50d-4932-a651-9ee72b5f7e42",
        "cursor": {
          "ref": "57426064-8894-44e2-9488-26fe6d0aa34b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "62b72b49-4557-4782-b7dc-f9c2a84a01ff"
        },
        "item": {
          "id": "c4a722d1-b50d-4932-a651-9ee72b5f7e42",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6336c2da-df4e-467e-93f7-81d975fa957a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c64a5-2306-4e99-989d-764e47579008",
        "cursor": {
          "ref": "3183beea-94c4-4e6e-9fbc-ee67b99b88ca",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0f2d30ac-9d08-4f9b-bee1-1f170e629b3a"
        },
        "item": {
          "id": "971c64a5-2306-4e99-989d-764e47579008",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "71da07b7-2aa0-4960-9f91-85ef11fbc924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18359790-670f-4cad-bde3-6d43148843c3",
        "cursor": {
          "ref": "6884f34d-4de0-4fe5-be68-dd1ad14e47da",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cbf98f8d-4202-465f-a80a-de621000eb3e"
        },
        "item": {
          "id": "18359790-670f-4cad-bde3-6d43148843c3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ccbbea9d-848f-4940-a3c5-fed18d4fb344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcc960e-f157-4329-a218-d8396bd884dd",
        "cursor": {
          "ref": "8d148d4c-86b8-4c4a-b0a4-3f5827da703c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8fa7f469-ba5b-44cd-a111-61efb8042866"
        },
        "item": {
          "id": "0fcc960e-f157-4329-a218-d8396bd884dd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b1d02460-93a0-4390-a467-514a36415bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b075060-3fe7-45ad-b021-9e9fe3c76f05",
        "cursor": {
          "ref": "bce21d42-2f80-46ae-901f-6ab376b4f148",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1a956348-025c-4685-9f28-c17d1fb29d7c"
        },
        "item": {
          "id": "6b075060-3fe7-45ad-b021-9e9fe3c76f05",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6062bb27-d9b6-48e2-88bf-7279f2950472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6dbbf0-0c0e-40e8-b9b8-161866d6ad80",
        "cursor": {
          "ref": "f4daef1d-1ab3-43f5-82a5-d1057df762af",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fefb2577-a7bd-4cd7-a1f1-ca3d79fcae09"
        },
        "item": {
          "id": "2f6dbbf0-0c0e-40e8-b9b8-161866d6ad80",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "02e18e04-277e-479d-95be-505652e482bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edccfee9-0766-4164-9f1c-0f3697b0a3ce",
        "cursor": {
          "ref": "0e754284-a441-4b61-a1f9-2e61a8d7943a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "08e269e7-1eac-4644-a785-f06084e23942"
        },
        "item": {
          "id": "edccfee9-0766-4164-9f1c-0f3697b0a3ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "345110e8-932f-4742-b7dc-09152112b48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3856d76b-2165-4167-a7d4-8f3249d69a86",
        "cursor": {
          "ref": "ff4d482d-562f-4cce-b4a5-ffa0e5e2fee1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "28c9c23c-87cc-4162-ad99-2f0dffc04635"
        },
        "item": {
          "id": "3856d76b-2165-4167-a7d4-8f3249d69a86",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f422e65e-9f07-4926-92c4-551143a2425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5b48b-e2b1-49f9-922f-607c9204c98f",
        "cursor": {
          "ref": "229def8c-6206-412f-bba2-497256e0027f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e9ded595-12ec-424c-a7ad-cdc73e829cc0"
        },
        "item": {
          "id": "17f5b48b-e2b1-49f9-922f-607c9204c98f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0934c830-fcff-442d-a906-8ff0dee765d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785379aa-8ec4-42bb-a46a-db153b930db8",
        "cursor": {
          "ref": "42e60111-915a-4d10-aedd-e974511c11e4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b6dde10e-8bc5-4aa8-acda-bddec52dec45"
        },
        "item": {
          "id": "785379aa-8ec4-42bb-a46a-db153b930db8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "44980663-aa60-4f37-a06e-da20d31b9dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfd4051-f2e6-4cb8-b5e0-6a631f60ee1a",
        "cursor": {
          "ref": "86233897-b23d-404d-a3e3-09991a976a9a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9a7f46a9-cc26-47df-8e3d-af86d072f90f"
        },
        "item": {
          "id": "4cfd4051-f2e6-4cb8-b5e0-6a631f60ee1a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef43edcb-a956-4462-b877-cc67b3e0fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b814ee-0b89-4d67-b748-fc13a38e15c6",
        "cursor": {
          "ref": "8b8a99d0-c553-4e34-b62b-3253da2ae388",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e2cd580b-2aeb-4eca-b3f9-8ef572cc64e3"
        },
        "item": {
          "id": "33b814ee-0b89-4d67-b748-fc13a38e15c6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f7180fa6-f94b-486a-8f4a-2ff236efaab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221f1540-69b0-42c3-99d9-b5a25e3518bd",
        "cursor": {
          "ref": "7a8426df-cdc3-413b-9b6a-35906fdb482f",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "12cc4114-b741-470c-9045-b766ac664856"
        },
        "item": {
          "id": "221f1540-69b0-42c3-99d9-b5a25e3518bd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2c49b06f-cac6-4957-8eb6-b8f989210f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b4746-f638-4509-80fb-cd9b030b7262",
        "cursor": {
          "ref": "31f9f3fc-015b-4249-b953-416629d6268b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bd981859-d24b-4d01-8e2d-12754821160a"
        },
        "item": {
          "id": "595b4746-f638-4509-80fb-cd9b030b7262",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "21d1a857-efa6-479c-8d13-5e8a6555b9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b8e67b-c29d-49a5-8e20-26bbdc8f3fc3",
        "cursor": {
          "ref": "3f6fd371-4003-40c4-88b9-01994ee480df",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "45a73fff-9cd0-4284-b092-45e3aae24bb7"
        },
        "item": {
          "id": "f9b8e67b-c29d-49a5-8e20-26bbdc8f3fc3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d85aa579-d677-46be-b922-fb2421158568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18e3bd1-8cbd-4b6f-bd6b-23a3dc0432cd",
        "cursor": {
          "ref": "3372cf2c-fc07-4d5d-94ab-009543ebc999",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "96c21f46-f640-414b-b2dc-65eca63abd4f"
        },
        "item": {
          "id": "a18e3bd1-8cbd-4b6f-bd6b-23a3dc0432cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c130f80a-57dd-42d8-8a69-64b18ba4bfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53b44cf-2ace-45f0-a0d3-a06c41b2337d",
        "cursor": {
          "ref": "aa2b9a90-7622-4c8a-9f4f-82a4ae78284c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "eff90de8-d3a2-4b13-9964-870654d5c436"
        },
        "item": {
          "id": "e53b44cf-2ace-45f0-a0d3-a06c41b2337d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3e2fe371-f540-4db1-886b-c6b19901c4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bb42ce-74ba-4867-8f2e-d80cd0fcfc07",
        "cursor": {
          "ref": "5d71cf48-5ec1-419e-bab3-8d8f0d7f0465",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "df480657-ec9e-4b4d-ada0-18b5430f9a39"
        },
        "item": {
          "id": "c5bb42ce-74ba-4867-8f2e-d80cd0fcfc07",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ad404577-0ce4-41f0-a5dc-c5a2cb41a6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38725603-455d-4501-b241-6dbe786590d8",
        "cursor": {
          "ref": "dd9f3ba1-f92f-40f2-9477-e219ff5d857e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b53e3b6d-0c6b-4577-b867-d00612b4fa8a"
        },
        "item": {
          "id": "38725603-455d-4501-b241-6dbe786590d8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c4f6fd50-0678-46e4-9be2-fa86bc6665ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccefb4ff-6402-4b32-9dff-d794fa215d24",
        "cursor": {
          "ref": "48f27e67-809d-4b5f-a1fe-1deb6b82ce9c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "661d152e-583a-4f67-9f2c-bc6d452dac07"
        },
        "item": {
          "id": "ccefb4ff-6402-4b32-9dff-d794fa215d24",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9ca53e0b-4e05-454b-bf3c-6e5080ea58f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22025c4-42e1-47c8-afa1-e91433076499",
        "cursor": {
          "ref": "51dd481b-96d1-4105-8daf-11e86162ca0c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "27933202-2a02-4bea-ae70-93417e2b0af9"
        },
        "item": {
          "id": "c22025c4-42e1-47c8-afa1-e91433076499",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2222a997-92cb-413e-b393-1e2221bf4035",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4afcba3-6a89-43f7-989f-5886da239c7e",
        "cursor": {
          "ref": "689a4498-9900-4e67-bbae-59af8317e15d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "afa9dc04-f5e9-4dfc-9778-0ff59161ad9f"
        },
        "item": {
          "id": "a4afcba3-6a89-43f7-989f-5886da239c7e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "be41cd8b-e538-4c57-ae93-e2788e04296a",
          "status": "OK",
          "code": 200,
          "responseTime": 2832,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00286e0-57df-4899-b950-ae9273ae9574",
        "cursor": {
          "ref": "ca386066-1d82-4029-88d0-4c9a84442aba",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8981aea6-d699-4df3-a022-4878c5719b2c"
        },
        "item": {
          "id": "a00286e0-57df-4899-b950-ae9273ae9574",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2f4b2f8c-af7f-49c5-8bbb-cc2ab2b9a6bf",
          "status": "OK",
          "code": 200,
          "responseTime": 2964,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d6e61-8c0d-4398-8b86-316c897372a4",
        "cursor": {
          "ref": "1ce8de2e-59b1-4b37-abd5-a1cbe2232d83",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "02a865ec-494d-4af8-9308-e10de3433c9b"
        },
        "item": {
          "id": "6a9d6e61-8c0d-4398-8b86-316c897372a4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38203ea3-91b0-4a8a-b8d6-b7fee3310bb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d6e61-8c0d-4398-8b86-316c897372a4",
        "cursor": {
          "ref": "1ce8de2e-59b1-4b37-abd5-a1cbe2232d83",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "02a865ec-494d-4af8-9308-e10de3433c9b"
        },
        "item": {
          "id": "6a9d6e61-8c0d-4398-8b86-316c897372a4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38203ea3-91b0-4a8a-b8d6-b7fee3310bb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5783f0-757a-4f07-a09f-1a1297b2ca65",
        "cursor": {
          "ref": "d91074ba-a9ec-42df-a456-7cdf2a515931",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f227a4e6-779d-494c-bf7d-f7be4d39e892"
        },
        "item": {
          "id": "6c5783f0-757a-4f07-a09f-1a1297b2ca65",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a2de9d0-1a99-4d1c-970e-fdd3254aa4de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14faf37f-6de9-4afd-a129-e53c20dab8f9",
        "cursor": {
          "ref": "3f7e21d1-87cb-4381-8525-67eccaa9b5ec",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5e72462c-3522-4c81-ae43-c0f7feb78078"
        },
        "item": {
          "id": "14faf37f-6de9-4afd-a129-e53c20dab8f9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "42ec2606-877e-4fe9-a4ac-968f6d25514b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}