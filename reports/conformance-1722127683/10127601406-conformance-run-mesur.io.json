{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f34b6e7c-57b6-44dc-a6df-49b680204dfc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bc05e37f-fc1c-4c06-b9eb-218151903c6f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "389c702f-1e1a-4ea6-b090-5f824bd27476",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "18f0f459-86d5-4941-9b1e-ed51ede3a89d"
                }
              }
            ]
          },
          {
            "id": "503126ab-25c0-4a32-81c8-5285eb1247ad",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ab82dd8-2587-4776-ae0b-355836953161",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5009c4c-e3b7-402f-87cb-5b2cc2c4e1bd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c9a1f9af-1ac4-4e14-accd-77d96e98d1f5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "439f0f68-28e1-407f-b7a7-d4a0436029d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a81528c9-87a4-4255-9f2d-72661ea130cd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1cb7371-015f-421c-b26a-b016281efb8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91d9eb0d-45bb-4586-9878-08692dd5282d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82a9f0dc-0df3-43bd-bdc9-55bfeb56b68a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b68c89c-56de-45a1-bc39-6c11c3868c65"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62a6e8a7-2e19-4117-92e3-dd8aeb3b4893",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2737dde-831c-4e02-afee-2e4a22b596ea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89bf403b-90f1-4aed-8c44-7fbad5b9c428",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fd5756cc-fb4b-4bb0-8f41-adda6a471a4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "164f4c3d-0667-495a-9c28-75bd4e0fc6cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "201b729b-8098-4bdd-ab28-f210cdc2f03f"
            }
          }
        ]
      },
      {
        "id": "e9b81348-25c1-4cd6-a025-54d37750084c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "57bb5d07-b1ab-44a9-9271-4d909704ef1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17d25e80-92a0-407a-9be0-3b7499f5f07f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcba1dae-a55e-4da1-b23e-8a1ff2d572b2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb9f0b3-52f2-4310-be30-2120230b973d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1711d3ad-05d9-44ad-b492-5ba00f84c9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c104ce6d-98fe-4686-874d-247c0cc1be90",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0622e7f-5862-417b-9a73-f8cbbde7e8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31247fb5-a13e-4f85-afe5-aa9d4316f284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe63306-2b7e-4583-85d3-8ed8c55c5534",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d227f55e-dd29-48bc-ba50-76daa5e4b4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98f0b0ec-9e91-4315-b02d-4130d087ecbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3bf0745c-e0b2-4362-9b0c-b7b71c2f63d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bb84b7c-6bb4-4bcd-81b4-6be2b8ea44e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cd367f-3d90-4b2a-b9ef-636074b57033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a25e304e-9b87-4f1b-8ef8-485571cc6e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd608b99-de1a-44ef-8c7e-8c41ba566b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f1d1f4-9be5-49d3-bd45-e549548d0cbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef5447d4-a2c4-4942-ae7e-9206ad43afa0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2fa9cf5-7e71-41f7-a185-17fa88e1e00f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fc2a08a-3123-4a9e-a709-5a9c14e17d42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d1ca460a-713e-47fe-9ae5-d4d4a9c6ada5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be4464ce-283f-4dbf-9a52-4761b70056ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d635ead5-d0b1-4d23-9099-e7e0ea8ac69d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "802ec3c8-ae74-4c2f-aec4-4fa9d93d9a31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8a75d1d-90f6-4383-9e52-bb8f0f6dda8e"
            }
          }
        ]
      },
      {
        "id": "5abd245f-378d-43ee-827b-80d2e5e454e0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de7b9bd0-6010-43d4-9dcb-a383540fb79b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6944143-a659-4505-a48c-f0614b184815",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c8346e00-4016-4bef-9e7e-f5ab751c93c8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a7ca11-374d-44e9-a3bf-d4a14c078690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb542d28-7e70-4442-9416-4498dbe60304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753b24e8-17ed-4ee1-b427-13b75c8aa021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8012ffca-f205-4838-8d40-42db517728b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114ae379-702e-4aef-8b47-06b13b9067fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffea644-659e-4508-81b0-3275eb90bfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab15f1b-bcaf-4b71-a6e3-fdbbe614dbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a408a94-83c7-451a-9645-4a5832b0bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bf0871a-8f06-4dc9-afb6-7179c51bc1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89815e85-5839-441b-8ce5-83229c1277ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46910948-244e-43f1-a4ee-d0288a4cbf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db1ac54-e58b-4af7-ae6b-2df53fb2e871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d86e7-2bfa-49d7-84bb-eb927bbfdd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caf94608-c3a9-4640-885a-5a9f4b3a3983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7859dc1-18ad-40f0-8ef3-a8bab1bbfb25",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc1c158-7d0a-4aeb-8242-64833d0f8be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea50b54-47fb-476d-a727-5191a9ca5f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaec87cf-3f09-4b8e-a2f2-7b967c58e339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61672166-da62-4eac-88c7-50087483e8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfc4a4d-30b0-445a-8b2d-2688fed9e1ac",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885f71e9-e16a-4929-9c5c-eb4bf1325a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03654b26-b5e1-424b-8965-57b58bb4b957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1813cb-abf7-4d82-8fbd-4f5ee6547990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a455f77-6ff3-45ce-b646-9ffc3edb4ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e4aaeb-991e-4594-90ff-1502d72478e6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe95d0ff-4871-4499-a79b-5e54147cd4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e31fec-33c9-4198-a991-6a99f16a4cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf065a8-be6d-4a74-b786-91c559a6fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65f19dda-e801-492f-82e0-7db08076bfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebb224d-fe60-43d8-a129-f510e9dea055",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e1ee4-8a01-4a8b-9684-4bfe7da7e44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd75f18c-3f10-4b2f-a7ca-bbe86a3f53b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd204b53-1ced-481b-974b-6190c1bc762b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ae2eeba-1d3e-4563-ba57-c338e86f4b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0dc3ae-5dbc-4e4c-9475-019267168fcb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49fc475-417a-4ab0-a6d4-db9ea1d65d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e1562f-0f11-4307-937e-6e19691ef653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa7ece8-c40b-40be-9e30-c52a509d7b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "686842b6-4f4f-49a3-addc-70a5c250a797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fba00f-d317-4ba9-ae09-f510b91963b1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaae1c23-5867-4da3-ab72-849f2aef9b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77dfa274-3025-4c39-9c5c-84f02a515e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fbefa2-5e24-478a-80b4-c94ed28d16cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36be9fd5-2ebc-4023-86fa-e838fe1e43ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a36c49-e291-43b1-882e-6443969ac9e4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ab878e-d094-4462-8ab7-48d8825fdc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1842c15f-3426-436b-9f25-810602c0492b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180b5425-086c-4e5b-a74e-a1a05a8944b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5cb8e0c-c676-4f44-8f85-ab880674f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e8d904-e5de-4046-bc20-832343fe4ff7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afe44aa-a609-43a4-988f-0387a6c8e0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6046be-4af0-4c9e-8661-4cfcb3b8c5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae66ce0b-5433-4478-a920-9db43c1dac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06517f22-a070-4414-b294-422b8e3db520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd9928d-35bd-44c6-84b1-9fbb0db82956",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55a2873-219f-4cbf-85fd-43c4c8b22a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd56e9c8-afd5-4f4e-b224-3790f716ea8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4635130b-99e8-47dc-bd72-5dfc0ba74630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17d72628-6fe4-4186-8be3-5d59b521faab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d8e038-3342-4a7b-9fb0-1eb4eaf85389",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea6eb19-a814-46a6-bd67-03d130c1efa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b4a702-7cf6-438b-9b4b-d747abce915b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b314238d-6f8f-41f4-8c09-b6d57a862d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22067e23-d908-454c-9a32-eb53da3403ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6f44d6-a82f-41e4-8f21-e03718bfdc93",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c740c3-a89e-43c3-9225-d8228861fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11143e0-2adb-463c-a8fb-bb774dd6e3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094f33e5-8037-4d12-a4a8-0c5aea4f3254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "035cfdd0-23ae-4937-8a57-c88f62821cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98554672-88b6-41e3-9998-cffd79669b67",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1def6d61-f1d5-4c91-9db3-2c5d8d0a747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b005d2f9-8c41-4def-9a61-e2e0604c0fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01129eea-d1ca-4ca7-80fc-92e58c798ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52d67add-7daa-40c0-8fcc-04d1e7e23571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57d3048-c071-4369-bcb2-0af945868204",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6afe39a-5e22-49a5-a9c1-34e8b4e6c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6ec5a7-b745-4781-b5c0-59d86e5bd6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c814b13e-9ca7-4b6d-9ca4-a65436483e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ea84d2-90d2-4efa-8686-9e804616b5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ec046c-9f8b-4750-a840-1c8edfa9a31b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a0f444-57dc-44bc-a029-31d922b3a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a580252f-a599-4938-bedd-7ba1c0ee06da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74808f2c-0cb6-4b73-9729-c5f8ffb6b29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf0e76d-b685-462e-88a2-b21e5e05627a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b793711f-a3e9-4896-a438-b8f01a16fe65",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ccb2f6-c0d1-40c1-a873-2469df5963db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e1926e-8c27-419b-9098-6f3c23ead97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6846392-50b6-48cd-b34f-98d24c306111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a86b48c7-d81b-4c79-9418-02455704574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951f6239-e613-4ab4-b77b-554a24c9703d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5d7364-828c-4fed-b9e9-de11bf5d0412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba51574-26e9-4381-8ebe-cd28a2f66d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25041b4c-3d0f-496c-accc-cf20a645fff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e32fcd-aba6-4bc0-897d-f28878fb6db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1c11c7-1836-4ec9-aa44-7747259f32a7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b9b78b-81cc-4e6d-84a6-3bd82f49ed54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3bc757-b46c-43fe-b4db-15e1b44541d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08acfb7-72e8-46c5-bfba-ae42f56b9855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdbbd71-af23-45d8-95d1-3d89c5c24118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4df0b-e8fa-4770-b9e4-665f0126b0b4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b76904-a6be-42ba-b7b2-fb53868362a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf2127d-d265-4837-ae08-0af7e965183b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a840ac-929b-4f61-92c1-d2f5ae63ba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff167d5-c1db-43a7-9372-745f223fbd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3a2853-5f14-40ca-a1ad-65f30bdba927",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2d932b-fd08-434d-9da8-56614b810a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d51c132-bc66-4ef4-8868-4ffc55b1f4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfe2188-e4c5-476f-a1a3-9139483bbc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c244f492-01ea-4543-baf2-7c4ad0499c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d335d176-592a-4694-8c2e-24ded9bdf159",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e834aa-7f4a-4a40-9bc2-fa721b82cc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85469ba1-e09c-4dd8-869a-e3fbb1e77bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21be867d-8a44-4fed-a7de-c3a596daf0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba87f171-fe81-4b18-8014-a266b1522abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2a90bd-5cef-47e5-8c11-40c75f1b65e4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea0b4f6-7373-4313-a8bc-1d03fd9763e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56bf9c70-f3ef-4e47-90f1-c9d9a52205d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74743a66-e487-4b81-b340-5e31ea3f1220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2736bfc-f641-4e03-a3af-7d021cf23dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd7a9e3-9a30-4f05-862d-8e57aeddc4dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8195e23-971f-43ab-9cd1-63fa8c6aac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354dc0e1-f03c-4cdf-a120-721566b07c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daccc3a-c75c-4dde-b4b8-927863ef85db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb78bd65-1afb-4c51-b33b-bd7a90956332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3563b18-169f-4547-92e7-8c2f5f27283e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd0cb52-551f-4f7d-93a0-b10829834c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbecdfba-ae23-47c4-883e-fadd91bbfac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3952031d-aaa1-4e32-94d4-22afa7474841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f21e31-48a0-458e-b8fb-7a58809cba32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6f1902-0776-4e62-8beb-964db68879d8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7e9dce-02b3-4f7e-8ea2-54df884fd4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb6d4a7-4c53-4252-aa89-42889f1c02b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb4feeb-2930-468d-8c3b-71a71cd63c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1339508-b1d9-4970-bde6-0e08b9e87b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3682eba4-1150-49cf-954c-6d4b85b0394f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad1da5a-493a-4001-9314-95f2df10e144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c244b0f8-e970-4c69-b2cf-e9ceef7c1ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd0490-19c2-4970-936e-7e29231f2622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2837dcf5-f2e8-4e56-9f45-7e5a5264eb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c209b6e9-e906-43f1-a7d6-32d2d592f7ce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb8c61e-b542-4cbb-b213-ace58d20547b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd62f208-9558-40bf-8a1c-9e0a7fd481fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ac1428-b8b2-46a0-8b32-014329b8dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7202d7c4-2b15-4ac0-8cb1-75bd2db05457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef10c45f-c753-44d7-ba05-53ba272ad3d3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cb711-a016-495e-a270-c4fbb51f3900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cf94e6-4a20-4ee4-8b73-3ebcd1d5717a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ac56d-5a0b-4c3a-9a14-d28e4857e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ab962c-629b-42cc-bc5e-f8f15d8de4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5c84f8-209d-4ac6-856c-8ef85d345953",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9298c9f-f410-4f83-9b05-e03699936b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f796560c-cb65-4a85-92a6-25d826717c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbd80e6-e090-4191-bd7c-7c23bf5e0222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c90a30-02fe-41e3-a787-f2381963b289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0bf173-88cc-4569-b541-d365c09b45c3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45030a7-1bbd-4fb5-8570-aecf98036c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767fb49b-6766-4507-be45-c872effce89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79a8184-bbc3-448a-959e-5789d7af494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "132408e4-917b-4e57-acf4-7f85042d8cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c848b38-d2d6-417b-b8ce-d203ac33a354",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83665017-ea64-41c7-97e9-18de15b8bc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e870ce6-8ac4-4df9-b918-6d85d26763df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8059b541-8ba9-4897-b6dc-107f59dac619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99df231e-d83e-447a-9a1a-883b92950139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3d0124-c80c-49e2-bf17-8c484c98bfd5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496a989c-dc45-45f4-8451-817d2e844782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e3be67-6bf2-44ba-b986-adf05e8aab52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e1dbf2-7e55-45ff-bfc4-d57bb3ad045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfe82ae-2360-4edc-8da9-17c8f427813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce8d6f6-8784-4a26-a20c-4d2274dadc3f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac5fc2-be16-43d8-a7e0-419737be3142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3600d90-1f87-4ed9-a152-4087b9a5a40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352659c1-3072-404a-b21b-7e9821c09a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cb21e9cd-3afb-4554-bf8d-9545c70fdc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f71c68-08fa-43c7-a234-1478c83e3d0e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0de9ee0-2d1a-4bee-afbc-75f3417e2c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d4bc6d6-6670-44e1-a2a9-160364c6d6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4adb8fb-8a34-4f08-bb04-b5bb2d1d0b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e61b244-4423-4e76-abab-acd5cb01f92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a396df-e5f9-42e7-9554-e24c4398b747",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ff5df-dd3d-4547-999f-abcbfc070473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7875601e-86ef-478e-8f1e-0b931b9fd932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995b2066-05dd-423d-90b1-863f0d547a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ae44f2-958f-4f8b-947a-951c82480d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8247a511-30d5-47af-865e-4d04a6e5c3fa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49453612-b2e2-4436-8420-d164e48b1645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2814241-3c90-43c5-9d6e-93b9e380259b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b0cf9a-7e0a-4452-8748-c0e13b5010f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "042ae270-5462-477e-aa20-1fab632d84d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a04c42-cc7d-4dfa-8fbd-74d690209036",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a5ab16-522c-4c59-8345-a6dd6a8feea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3bd2ee-e559-4517-be31-aabab6a6b7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d28504b-86ce-4491-b9c7-e9070bb68a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff15a88-0e49-4dd5-8e99-ddb0b2066e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b3cf1a-fadb-4135-874a-dc0361469054",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd201852-8565-4d0c-92ab-fad8abb0e21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e49395-8ab5-4b06-bf0c-8708fd174881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be63ce72-0f20-4008-9ae0-d203106ecd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd4bad2-5018-4f29-bd6f-e28b8f914b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf884d2-9d32-4b7e-8ead-9cd6954f88f2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239354d4-870c-4c95-84f8-f754b8271605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fcb1f2-14ad-4929-818a-599fbfb550fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0437971-f68a-49f7-9e67-4cc49bfec5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "08319104-3ec7-440c-8d10-fc1c3b9aec01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912193e1-c19b-4442-8131-40c723dfb441",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0d42a5-b563-45be-99fb-50ecdc5c0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80709f75-88f3-4e17-b95c-dfcfc8821b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ee4133-b42f-40a4-8cb7-7c83815aa4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5fa93e-7184-4c34-95e3-bd78db286c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b7bafe-9bea-41d2-b760-c0c1737bffae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6214f7a2-3260-48d6-ac0c-8dd3b283c24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb63dde9-a368-43f6-a139-34609e014e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c701306-e38e-4d33-9a07-afea3a2615dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "15030c15-7f07-4e1c-aa2c-1903a3b9b6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cf8974-e599-4952-8fa5-e8ed64da31f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7888b3-5b08-4f39-b3ce-8431d312aec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dd1fdc-593e-411d-98d2-fe8c0702d1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8087ff3-46cb-4135-a76d-a1ec83138c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "912b09f5-b0f3-419c-ad56-7dd19c27276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be49017a-381f-4e23-b73f-becac1871532",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741721d6-fc7c-4084-b19e-8ec5edf93cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de099a7-4217-4e39-96ab-cba54af46ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad449d88-b75b-45dc-8778-4d53f6a1d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1be965-3df4-4d43-b964-eee0346267bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16351187-3620-4f37-82f4-aa6bfc7ae61a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86e1f2b-b78b-4cc4-a5d7-4645330a1ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4863dd-de87-4b8b-b270-2448cd08a568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f419e06b-f842-48ef-aa8f-0a6008c220c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef66dc7a-bf1a-4807-b661-fc899f71b2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcaef61-1a7c-47c3-b2ed-d82d375a826c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7aa9ea-87bb-4dd1-9b50-dfdcea43540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e898a0f-cf3d-44f4-b945-9ea034feea2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3306d828-62f0-49b9-b0d1-d9623e6efc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "463a8dd6-998c-429a-b8d3-30485739c931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a925880-93b4-4d31-aa2e-04b11ffe2a8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da0e271-2507-41d2-a828-ca183fc22369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b276490b-ee6b-4f26-b60f-c8b0000f6a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c3b10e-6196-4ebb-a9c9-38d3ecda2096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc85c10-e702-48c0-ae05-4e3ceb3e6c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f785652-08c7-4594-b7cc-4f089cac581c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0481f5-edd4-4523-a669-a1d2af2e1638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0699ef-1db6-413d-99e6-09678c4d2d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19699f6c-beec-4c6c-a027-a5691bed2834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54793c9e-5748-4ca5-9a5c-a18ea6a12863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebdcc19-0b14-4c6c-97c6-7aa8341e88d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7974d4f-8728-432f-83d6-d1036f62eec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74728715-9bb6-400b-a479-b737a2af205c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2b31c5-67b4-497f-ac6e-21347d76d18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4631d4f-bfe4-446f-b8ff-3c8b4b4a63ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b67aeda-ad23-4607-bc46-c3b58cd95905",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ca44b4-ff24-4285-a184-1442747afcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5ca034-06e2-4266-b08e-0d60070eb80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457703fa-b8e3-468c-bf89-9d926f9f4e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ec2ce0-9251-423a-8797-9d4abb54f097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44df4aaf-a0c8-4b5e-a5b2-4ed0df7b49f1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e7e3d6-eb84-4d0c-a5ea-9808cf0b7eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342a9329-6186-4a67-a4aa-1e0305282366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ae1d83-f384-4700-9f60-bbfd6f2dc6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9587f96-20a0-4d79-9384-47458677a0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1322c768-66ba-40be-998a-220808199893",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3702f6-629b-4f5f-853b-b11a7bba06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec89f4b-62d5-44d7-9dc2-a5df0879a400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1afd8ff-9748-4331-a620-2d9f29d4a245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b6a0d8-b500-411e-aacc-9304b9061de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac46f5b3-4f30-4943-ab2c-5dcf22714a93",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baeeb06a-f293-4d18-a134-8598b4175fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba43e1b-5d68-4a39-80eb-6a8691049f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664632ec-d566-448d-bed3-2be61192879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "344d7bfc-9ad0-4506-93d2-a7be449bf64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a47cb2-3032-4c0c-8557-f833aaa40a82",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8972e3ef-66a8-4ffd-a56c-23f223d683ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487ed3a0-549a-4fb7-9342-a9672d34f794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768cce44-04f9-417b-bc89-1de3778ed003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed2ef77-17f6-4be6-8879-7bd44b32ec88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6eb9f8-5ab7-4ef6-b047-e9b82aff284c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d10e99d-efa7-4997-9184-b55b0914d928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6fb556-4d98-483d-8201-0855c536a493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a3a9da-6490-49af-9263-c03ed2ebe584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf184c4-1882-45d1-af1b-4caf5457873f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d99a1d-a419-47a3-a307-72fa17bce9bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fad539-89e9-4912-9c31-11e72b7eb843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c2f959-56dc-4580-853d-d145975f7786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab800a5-f6c8-42ba-91cb-4dff5473159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4570d43f-a87b-4b46-afaa-e2603466d892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d7717a-1bb5-4f7f-b946-ddefbdeebf30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a1e803-a85c-48eb-97bc-f6c60a9104f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87f0d36-49df-4417-8473-9917bfd58492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaefe700-b1c9-42ec-ba32-ab3064748b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c9b5a7-a667-4f43-b7c8-02aab31361a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f44176c-5e3b-411e-8907-acc4f59ad295",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2e6945-ddd9-487b-98a2-4b25cadfc4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba17897-9ce8-48bb-a2a4-f5dac0135166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93b68e3-b92e-457b-82e3-540298aa61fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e78f732-c716-43f4-89c3-0e497cf703ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af064e9f-d98d-4379-8340-ff76d9a0441c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01df2d3e-c9d0-4d99-9cc9-38bb0b9a08a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb59b68-982b-435c-b46a-4992dee60376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2447438f-c781-4cbb-9192-cf6e1651aefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc8e2ea-412f-499e-8cd8-657f28b57107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44339582-4bcf-4026-b873-6c87fc19b6a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caa37d5-e63e-4f04-87e0-d37672a1ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3626f1f-3965-4fde-89c4-5c557c18fa73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2e150f-18fb-47de-8ab1-c354bea7af6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdf5fe9-1585-4e2f-8265-0ff61bfde053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5c1d3f-b1d8-48b3-8322-aebca09c8bf9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec540baa-d9a6-4768-8731-237be79cf884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0137ca21-e996-49b6-9b7f-79ecdf9052c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d0fee7-bb3a-49f3-9e79-e4ccbdf74bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd03d25c-459e-43d5-96ab-2c385ac1a335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b07c472-0036-41b4-9dd5-7b404c4a7eb9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9d44c7-24cc-43b4-8c29-c6b258e4609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d771e1-e6ae-49d5-8bde-829f31880d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138a4eb6-ba80-43fb-9773-55a127b4e30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4485295a-15ab-4dd8-ae1c-cef4df95201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5f449c-7914-4b82-a5df-77f297a6b16c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908e4b25-3983-4e70-99cb-d29604f8b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6357fc-243d-4f82-bb33-145e03d14aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7071760-d731-4f69-88a2-9725b9454745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb7d225-3c9e-495b-80a9-9a10c91398d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dee057c-a4f2-4b15-b128-4bfacb61fd05",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9c2e5c-08c0-496b-9dd0-481b258f80f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410e27ac-0f2f-4e93-a949-b34371462964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94de6007-afcd-40b7-9078-2bf4db9561bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8106328-69d8-4269-b2dc-9bfba27609ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e4ce80-b447-45a9-97dc-dc8f44840a95",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95293a9-afc1-45ee-b903-8cd172ad5d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841a17a0-56d4-4777-99a0-92faa607f805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86516309-2de0-43de-a555-3b35ab9423be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03658d26-8870-4bde-90ec-d673340bcc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6521b491-836c-4aaa-afa6-dc11632ccbe2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd000b9-5e7b-4608-9174-454e93d65657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4afa7d7-ae21-4c21-a308-eb2d466c1e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03469dc0-e5c3-489a-a7fa-9648738cd788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2469b726-7257-43f1-b9c4-273de926e8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da241c7d-ec26-453c-90c2-146c5d70248e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fc0e45-66a4-4873-aa3f-202d0631e5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d90179-3437-4b97-a069-e7cad5c7ac6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219d54a7-b5b6-482f-ab65-4a45b80d1384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "927f371b-41b9-4cf0-898c-9a43a6f52943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065889c-5f56-4798-889b-a7ed782be617",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0361bbf3-084c-4d1b-aaa7-81adf4545434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f63135-927c-42f0-983a-b7d01490985b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01042c8c-6df3-4ebf-b6d6-90092935e679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca5e7a2-507b-41b2-b7f4-91aabf804161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e226a3e9-5c77-4064-ba16-da18838df95f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df863db-ffc4-4143-b3d0-9c1c62fcedb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e034dbcf-0173-4ba3-bfbf-6d7c6fe18869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f1c9a3-dd31-44ce-83a1-68bae6556e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d15ac6-5e07-4759-888a-f2da2d3866e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9fee9a-7008-4570-8c17-ceb21fc51615",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a5fa80-1d4c-4871-94cd-e40952e2a374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adeab53-5539-4100-aed7-31f28675e736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640807c8-94b0-4178-a293-3bd86d5aff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "003eac39-750e-40d1-bc1b-2576a23ff6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c76b5-7be9-4375-b03b-41120500b7bc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1934c771-08ef-4b71-8f40-8d98e89dc11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4d0aa5-0f98-42fb-a17e-9b3e69c85560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92f97cc-13f2-47f2-bd52-3e8d39411211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f2cc17-bbea-4f1f-beea-044995de8d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76c632d-5502-4daf-9434-926ee681d50b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9befc4f8-cf84-44b9-bec8-2e7e73722c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8605065f-c159-417b-ad62-3057f3a17bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f88bfd6-83c7-49b0-9348-2873b4e40d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7d1ca7-c423-499e-b278-e206e87f3ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823b4e1a-3b7a-406e-91e9-5014435b324b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60767b6f-eb16-48ab-a5d5-2f5bde06088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898733e5-0206-4393-a679-584c942f1e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c133559d-9bac-4ef9-a3c2-1e4bb340e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18df041c-4731-44e5-aa08-42bf585e2738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e1568c-101e-4944-9229-3151a9336565",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c8fb4-e0b0-4ef2-ab41-0403b735f54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2d5528-3b59-4de7-901f-3f7a7ad249dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f066af0f-9324-4bf5-95a2-77ffdb29592e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4013046-b017-48b9-a66a-efdc1d20290f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999116f5-7f5d-4a5b-8d84-aef51651c768",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba91b11a-bc9f-4572-9102-0f55f5934e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f073b1-a292-40ba-a7d3-27e37c75348b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba5d0e1-510e-493e-87fd-4c21a1d7880c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "978d831e-f318-44e7-996e-0d69e4cfe09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6953fb0d-eff7-4a09-a4f7-9599965b3bc4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec2d1f-c1c5-493f-8aed-845d9add3e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d1ac7f-560e-49c2-b7e8-61260def54f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b4b030-7384-4e3e-a9ec-acf117608643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cff4471-18d3-450d-b575-3f2632cf861f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2a0806-127f-4659-8543-febeb62e9c9d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d561528-db2e-43ce-8345-8178e5d64548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cb28af-1cb7-4598-8469-443185f57e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d815e3c1-9732-44b2-858e-5e0d88540d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f656cf5d-5f44-417d-8b13-a67f890d49ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d31fb06-1019-4036-88a8-34278af05560",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaee24e-2137-4908-8fad-40eb1e5d0c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882887c8-d20b-457b-b2c9-e7fa58b0d729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff0a3fb-2046-4700-bf2d-b92e645a09c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "066f2e18-175a-476a-8df8-c65de4f104d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a7a212-00dd-4d4e-b742-343b265dbf84",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a71d05-4169-433f-97d4-ccad92d16f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aac462b-a5da-4707-9c63-d3bb7ecd17b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a6cdeb-5ee7-49c2-bbca-1ce3b0c74bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a24dec55-519f-4a05-b409-8278963291c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08278bd6-5f9c-441e-84b3-4bda6ca27c53",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff7c688-8014-45e7-a9b4-05fc5b5348cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b6b416-de79-46c0-a3ab-59b912efca8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4a0f81-aaa3-4774-91d5-40860430b2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb32ed3a-aaba-4deb-bdd8-946ddd49b1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40ea170-95ef-47bc-a7ec-d4f51c148ab5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225012bf-3d1a-481e-8412-72fbb186304f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f88638-35ba-4df4-935c-fceb70d00d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13061b22-89c2-4655-b48d-19f853954054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0abda07-172f-4708-8f64-03455ed04a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9195107a-cf09-484a-b8f9-55e95b87f923",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07043de9-c65a-40a7-916f-6ca1dd062588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c449f42-136f-4a26-a75c-7615bfc631d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d434bdf-6849-4dda-8c93-aee13bbdcfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3204346c-d543-4a61-93f8-ca3f1399a255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c84f33-40bd-4644-b35d-d01cbca385e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98a791a-85b3-4118-9c4c-dc3c7d19c148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aad6bf7-960d-47b0-80a1-caa61a55053c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfa7c90-ac59-4a8c-94f0-8e3866634b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3556527-3258-48cb-b86e-f78baf7311f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f55f50-fd3a-436c-8866-ab0b4d8c3001",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d46b344-1dc1-4129-9541-0ba05cc9512f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4c7ffd-02ff-46d5-9b3d-55b89d27ec75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93df188e-db0f-46e9-a9d6-6bc31787d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f64ea7-a430-4bc3-b90f-58c86f59c463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66528d2a-13ca-4cd6-8e0a-148f147e6c9a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cbc6e1-e0aa-4df7-a27e-e9259ce85df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1458655e-f525-48cd-b321-63d1815e38aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab90a89-05e6-4169-89a0-24a11eea6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73df6d0e-d550-4bf6-8ecf-21b64c035169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3890e040-5acf-49be-b3f5-4672d7ffbd46",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2523690f-d5d4-4939-a23e-1a58a70fd434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b386dccb-8e7a-4990-8425-7b61d5987fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109a07e5-2809-480a-9e2d-f1bc626e2edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7396bfe3-ad04-44cd-98f7-2d3e7e422ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dfc1a9-f1bb-4965-a583-b3c396623eb3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594fcc3c-0b89-4dfe-a1cc-251e9633bcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def00244-a2e2-499e-a106-8cd77d177eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840bbe72-91ea-4c6d-b07c-bd50ceef1873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "58731bd9-767f-41db-9d72-5afc0f3f0694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5059ad-8568-4ef5-9637-775129d8c182",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2faf25-90a6-45ae-8fc1-c52e7ae76888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b978e9-4a56-4dab-a806-6ad87f8c3b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5683f53d-ee95-4666-9393-ac967a07379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8a4320-3556-41ea-9a3b-c7a5f929aea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaf4214-e250-4b8d-a650-9b902bdc57ee",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef7e734-da30-4d84-8f0a-5e9981b694f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491216b6-d9da-4876-a282-e76ce29566d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a5b3fb-5eb9-4a65-9994-fb538d3a0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0835bd2-0e2e-49a9-886b-398c65f26c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c9810b-4ff0-42ae-a4f3-d4c4253fa591",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aeeb1d1-e4b6-4e13-9a9c-84a0fe427c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc51f03-8fd8-4002-ad69-5b16924cb8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066f291e-3792-4a2c-9700-d1012be245fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a98d263a-dc51-46f3-9644-5452499bc396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7588e7da-eab6-4a4f-ad02-494ec9615130",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17407d68-18e6-46ce-99f2-3a9e88c17f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7fdc1380-e3f6-4fde-b5f5-908705d47473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad6219d-57d8-4a84-9432-f99783ca3bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1915cd-172c-4250-a40b-d2c55b276561"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f395b00f-3ae3-493b-a1f2-4c2f724dfcf8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50e0b79d-5d4c-4737-9b40-4a421e89538f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaf78b6-b4a2-43b9-927b-34c5aba45176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cde7e6d-0973-4889-b61c-011b7194302f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9e187d-1b00-4324-a6d7-fbb8d7d1c465",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd21d209-dc3a-4684-b03d-23564cd6077c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a75447f-70e5-4602-b9ba-69e39f506f8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a6f416d-8dec-4ccd-8777-1458f0c58283"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d8942d8-a8bd-4469-957e-a0fcdf43c36b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "528bdaa6-ba22-401b-82a2-0b961c96fd8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e13163e1-1ef3-47a6-ba1d-fc9f26e91973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57ecdeb7-bdce-4d6a-922f-9dae3dfc69aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fbf0c114-d5dc-4135-b3da-551b23b316cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5f792ed-6287-4df0-b7b2-e13bb47652e3"
                }
              }
            ]
          },
          {
            "id": "8f75c231-9ef1-4e86-ad4d-433b2774e47e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "962954cb-9d7b-45ff-ae3f-fc270e00cf17",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4ecce50a-409c-46f1-ba9d-28ef5b74a32d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fde398f-0779-4003-8e53-04d315ae9a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e5cee74b-4acd-45ec-bf2d-77bb3370df23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68e26e9-464a-4542-99ea-afbc85869826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f7f9f9-e93d-4d11-9789-de37716cae58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7cff6a5-f060-451f-b00a-e53424d657d5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35cdf9cb-7c99-4f4d-b8eb-7da82ee3d42b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32d88679-94f2-47ce-a824-c46c79d5b6a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6d05757-e160-448c-bdb0-84043b598c87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5835375c-ed55-4733-9926-3bcb06cfcbcf"
                    }
                  }
                ]
              },
              {
                "id": "15181ac0-ff79-4d87-96b9-0c3fef9773ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "959793c7-fd23-459e-a6be-d2e763b28cd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c44d103-0f7e-460c-9fc4-5cfbdf71c0e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed8b0bdd-5175-40e2-adb4-7233bf6a25e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c99d44df-db28-4442-994b-e7ec98419b3a"
                    }
                  }
                ]
              },
              {
                "id": "1ec47582-0cfb-43e0-bc8e-0a8de1f200e8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93c1bd04-d0a5-4e7a-8117-f6c83aed5e85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c30186b-3462-4256-888c-2f94bd5adfba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54c42f2e-2bb0-46c3-83c1-02a77e7569a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8805dd80-b345-4344-86c0-1325594c450a"
                    }
                  }
                ]
              },
              {
                "id": "fb246482-3c5b-48d6-b279-8f16a2738033",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "113881b9-bc75-4fc8-a670-0bdead97f076",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63178280-ac90-46db-bac6-2390fb8b6724"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "934d052f-24bf-425a-ac42-1de7ae8d13a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c791eed6-5cf8-4819-a800-9d673c76c85c"
                    }
                  }
                ]
              },
              {
                "id": "f09a227c-d123-4bb0-85e8-41ed742c99f8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b560631-ad86-40ca-beff-a27c663c2d23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97c33470-0804-4cf3-bcb4-adc3fe059065"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbb59323-0d78-4f6e-a181-716f4a4dd29f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ac46efc7-ba9c-49fa-9885-acf6fdd1e23f"
                    }
                  }
                ]
              },
              {
                "id": "ae3d876c-1171-4673-a424-57a549aa1876",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fabbce1-5c74-4f66-848f-374d4fa0ea00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "647df764-39a1-4cb1-975d-d034e0d356c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58bed78e-5945-4e36-a9be-f378be7cff4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dea1d4ce-2831-40ab-9fa1-fce985bb6f5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c868826-e5f0-42c9-b800-c95185a8e089",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d6ae5c3-f2b2-4109-b650-93b8ebe55582"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b797bd2a-25ae-4147-82b9-4fd5120bd233",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c7f91d6-7876-48b5-9b87-d163f92a3ecd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fb2dfa9-dcc8-4e60-8bb6-f6e2289f3ab8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ebfbfe47-95c7-44ea-9ed7-0ace6342149e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16e7f4d1-085b-44c2-948a-62d6f0dd63e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7f483f8-9bf9-4a3d-8ae0-68bf9aeb8483"
            }
          }
        ]
      },
      {
        "id": "75b15a9d-f077-4327-ab88-a952cb5de28b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e44047e8-fdd7-4d5c-9cc4-372ce41a1469",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b67b09fd-cee1-422e-b9ff-b5a1507b9444",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7eaec8d3-80f0-4d39-8646-cb895477d270",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b8a6d-1c93-420f-8cbe-69ad00b89c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0242a074-f2af-48f6-a9bc-2a30432c9d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66664fdc-1f98-4c26-aa0b-5d41cfe06c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "314cee4e-4f41-46e4-b9e7-cb64db5b2808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe7a63f-9216-4711-8b2b-ec0b87110fee",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b6374e-6b61-4600-ad84-502650ad2cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cf7e5c-6f04-4424-ac1b-dbfa86a81845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b699227-2b94-4af9-9b60-c6c3a15daf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5d4d70-b663-4c32-ad3e-8f753c02525c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da773894-694e-41bd-bbdd-ab8030a33d6c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1605b7c4-6722-4f65-9896-3250a3148f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b71988-ec4a-4a3e-82c5-a4b493a94774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3f8756-d388-414d-b884-e1afcef7943b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "475228af-2b6e-49c4-aaf8-f8c2223916e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c8a711-cacd-40c2-9610-5ca1d87b3bb0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8958ffb-e233-4715-aac4-ac3ee4e6b2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326353b3-65aa-42f8-ab7d-58aa87d54388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e266a48-dfea-43a8-b5cb-621bb2f49058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9a7315-94bb-4529-840d-821ab571e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b69c3-d13c-4c5c-b0bd-bd3b7ce4e0b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634da620-88aa-404f-94b0-2c40096cec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f41981b-5cd0-42fc-a725-11761f59c2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296a41c7-a59d-4fa2-93c8-8b2885660e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4381c1b-6cd3-4cdb-8d4d-8af0d7d258d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc721411-4529-4035-8077-7bc2b4a51ea8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d68d46f-8897-4fed-836d-58b7c4cd0ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccb7520-2d0a-43db-ab76-8cc07cdc8881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e983e703-9697-4be7-bf21-50a87b6b5fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da3ded4a-c109-472c-a582-0a15047d01c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbccdae8-ab4d-4a88-8758-20979d3f4600",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e8dd97-0c6b-4532-ac8b-8ce12faafd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07afe419-0114-4940-8fed-14171d964522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1110ea3-5495-4159-b0f2-46f11836be55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5afeb413-8022-419c-8c7d-a5331bf17fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b889ed9d-fa89-4731-a7fe-d6ac62dda31f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e55dc48-c6bf-40f4-9fba-5f15c2b1848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdd9995-0b3a-4d8b-95e0-583703a33c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917f04cf-058e-48a5-b9f5-2f6ed3dcc18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f75c12d-9509-4a0c-a677-5896a52a53f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979cf18d-79a7-43f8-9db1-316c41f0b753",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e39d0b-bb6d-4679-b82d-afb8fe73518b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6e31a1-8c49-44f6-b93a-0bd8bd7c68ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e9b59-7437-42ba-8dc1-665b288058c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb15a23e-5bcf-4905-9403-25cf7833932b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ca275a-876b-42bc-9775-09808b651fe4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38612b4-aad9-42bc-8929-f8e2cf68e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e80e29e-93ea-414e-8cfb-3f9693f6a07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5b67a8-5a55-4264-81e3-467555fa0265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48da7966-8e5b-4de1-85ba-a163b01b8f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b78c15-8435-47f7-9bae-2aa5709b4b00",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423b81b2-4c6a-47ad-946c-f2204fcdd196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1350bfaf-2dcb-4ec0-8aa8-e1572b25fe2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9cd340-7eda-4177-b2f5-29bdeeca4dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24341306-fdbf-45ff-9306-324142a83f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aa9731-3563-410a-a671-3bb950cb6d9c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9c80a8-6a1b-40c6-925d-ca28fbc01eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5788a9e-90c6-43d8-b36c-b6e4c7dc73d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87132f5-da9d-4d46-b5f4-ca84317d19f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6771f61-8670-4a09-9267-1245e132e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6442952-8755-400d-b1d4-966289f51ba1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0665065f-fb22-4902-822b-0562a4b2089e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec09471f-4a79-4014-84dc-9d78f73acb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51debc49-5920-42c6-b081-04093b8aab16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "438f4ceb-9aae-4c57-a048-a66b611505d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd9888-1884-4507-8cec-a1de66e51b5f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e45c3b-e9f5-453a-a0a0-8e88f7bfd611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537b1a11-ea8a-4510-bf8d-c25568222905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ccb874-69f3-41ba-99a4-552e901d5d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "831379e5-ddc6-427f-9947-bd95817cbab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad33c061-a942-4d13-8cb8-4aa630e69774",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c6ac2-d74c-4512-94b2-b1088f4dbea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36201b75-3c08-47de-bfbd-e6afe7c70698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93272045-d565-477a-9032-67573170f430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "385b6bfd-5e8d-47dc-a693-12250388e6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7b86b9-f039-4c09-aa1d-14b12747b07b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5565ce1d-c45c-4fba-a743-63edad939477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db22cff7-5312-4807-a722-cb522b18fb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22058b35-95b7-43e5-9efd-6de064780dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "deef3089-f2b2-4363-b839-c2ad69bd17dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f463f7a9-d824-4dce-ad02-129ced6dbf16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d238ce-5397-4278-a5a8-f129425f4f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14adfd40-0698-4104-bd3c-2994fa87ae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52706acf-3907-4593-a4d6-6f22f803babb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c98c5cd-fe45-4553-abc1-594b5e38c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5f5b97-4abf-495f-bf94-a8737a654513",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710f598d-ef32-4ff1-ac17-e7f2db2d8466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94183cdd-5440-4d30-a206-6053090dc2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10daf85-e1cb-4670-911c-3b11fecf9841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "947d7776-1efb-4f24-89ee-fa39217bc2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068a3999-2ec9-43c6-9459-057402b401af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02658b4c-c654-4ea3-8930-2d2ef6f0842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041b4308-ca0e-4a90-888c-8c2b01c92e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cf4738-c892-414c-9ac8-2c80e14729c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d7aab3-1cb1-402b-9ff7-e78fd0c690f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcedf23e-5c6e-49ed-b325-5cfeeb80831e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e275b959-87c3-445c-849c-5b8b8844690f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969dabb6-6249-4bf4-a2f0-d020ea7da67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbdbbdf-9894-45ba-8922-c3aa706278e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6047d1-7c8f-478d-89ef-4d0daf67294a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e76d34b-660f-49a8-8b92-b0d80948c33e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b59b2b-9a23-4643-9f47-93048b609fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c3d721-7d30-4351-aaec-60ecde722e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997ecd7b-cf1f-44e7-afb4-b3691daeae12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8409f013-5491-4a8f-89cc-b94094d28954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e2277d-bbe8-4efa-9a55-6a697b222c44",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8884d22-6c5d-4095-9f4d-406f1b722b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1925b4-cad1-4ca0-8e58-8ac7e7a4512a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34c6f2f-6ba1-43d3-964e-dc0119e0eb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6e7c97-2b07-4ab1-8cd9-5fc700c252dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703fb419-f14c-417c-b4cd-bd6a21cc6242",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115c0afa-bf0c-4f2e-adf4-a24cbaae72db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519cb04c-fa2b-42a3-bda8-ff8381cf52ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e0b72a-4c59-47a7-aa2a-7d35954ffde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96cd03c0-dbc6-44fb-acff-c6ba3103cae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d408f2f-f19e-420d-85fb-eeb65655ffdd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c8a0b2-de66-49f1-aeb0-74635cf79746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36db2dac-d437-4ab2-b188-60a43b80d871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65ddd06-c8cf-4607-a8f4-46931095f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e76c0ff-8ed0-4c7b-b4ba-04c1c669c119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6aa81f-b73c-4f8b-a8d0-5a8ff07054de",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cd06ee-7e4d-4934-8b36-eb2fbab22daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff74679d-52f3-4431-b6c2-a1f438c9e030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4398be4c-2ee8-4d7c-8ede-5edb3aa021ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c0cf30-c8a2-403c-9621-81fc90b753f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9920be04-803a-4fc5-be7b-cb7367190709",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e3f7b0-f725-44b2-aaff-677164445f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38389e34-0ab0-4ab2-b749-d06f51e22713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d049a79-274b-4a3a-803b-6accc7066c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d664d505-911d-4ca0-a9c8-c89ee5b24c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c51d615-3d06-4e24-8e34-e700abb89449",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fc5c1e-98b0-45bb-a1a9-cc22272333f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245767d3-02fc-41fd-90db-6f590f67c7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5dabd0-3a00-4918-bd72-f4c87904a194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52f7de5-cc76-4f83-b207-15b533a30b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27da345-9ed9-4d42-b78e-3eceb75bcc3f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eef33d1-e518-4ff4-b829-3fdf4a54d71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9022729f-d915-4082-b44f-31cbaf21ffb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750a01ed-c3b8-4360-a487-3fcfda822551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a010945f-e8c8-44cd-9044-b95b26ad4cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b8979f-d8d2-43e0-a9e8-654469bf0f2e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a6487-b0c8-42cb-9bf2-c770641f3ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b059bfdf-94dd-49df-92ee-1ac842679c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d45f36-14dd-410a-9721-9b6d4539b862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf0f991-8330-44dd-8f64-6a2e11695374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e90c57-b650-4502-94de-ec7f93ac9b8d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d53b46-7d69-4f4d-b055-bab98afef80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acaa19d-d75c-46fd-8c76-3bfd9a0ac21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86839ab-51fe-4f86-b767-2f0a6fbc977a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "657dc31d-dbba-45a4-b921-e776cec5b325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae41be6-4c5a-4c17-a181-7698790c2eb1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ca3b6e-672f-423f-b5d3-b77e4927905c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835afb84-d99c-4ec2-b937-29cac8354fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3781f4bd-fe4b-43a4-a46f-8ea2ef90a46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd01dc0-3bd3-418c-af63-c348b1c375a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d63515-f3ba-4e2e-8508-2b5951959681",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b17a6b1-3940-452e-a134-460af81edc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25c4f53-7303-427a-b5ab-fe32a5bc43d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035aa914-1f5e-457b-9ac1-43da5beb1397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a81ca02e-350f-45c1-951f-187a39ad5644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606cae96-46f5-4c25-8170-18b0fae091e0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa5c353-39bc-492c-9ad6-3c5534705c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6617e0dd-0990-4be4-a0b0-e5e8a925c045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0732a36e-a719-4394-bff9-67e0d34dfb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5167d2a3-2e52-4fbc-afe0-40fb90374c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86faa0c1-6510-4413-a584-2c6ab614d25b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c04fbb2-91cd-4632-9d70-da891c6b4882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9639d83-9f68-4b7c-b0e3-3b149441ed36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659c887a-629e-4584-b6d2-ffd4345911c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "702e160f-b6a9-442d-8923-4bd9e6844a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0ad7ee-9e26-45e3-b2a3-c1a1adb5e8c2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f01047-ad18-4ce3-b279-4d4610198988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0013814-abe6-4640-8809-a135d7c7cbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eafaaa-c5bd-48e3-aa04-16fa7bc5425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a62de77-22fb-4c6e-a1e0-89af1af9b537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb05dfc-5e03-476d-b6f3-012064241aec",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494382f2-f4c9-4a24-9e8a-c74fd47ec3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43320d4-4f11-4cd8-af0b-9490810196aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7eea97-6944-4db1-9404-0b2c5068d836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9256dc3f-d17a-4508-9f81-66b9b55a136e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9042b525-fb20-40e6-86fa-a9b1c6e2df08",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d51a3d-cdf8-4e61-9639-c6bdddd7cdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26c47a3-fd01-4903-a881-9176cce31549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29ce1a3-336e-49a8-ba78-73ed61103f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a83e12-10bc-4eb0-8d41-0b80caa219de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9412cad9-a785-42d0-8ff5-46f1c1fcb249",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "509dcafe-1b3e-4203-a590-4eb3f5d1eb26",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b15c60-b556-48a2-bece-088e896ed4b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "25e72a06-dc6c-49b2-ad92-b62b533fa5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2c9cf6-5a26-419d-945b-944b43316b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cb68504-0d19-4b2f-bda6-0bc1a2c87399"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57701e50-4fab-4b1c-a4fe-d4a8bdf1fbe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b4f948-7219-4793-974c-16f62cd52f21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc6c8be3-8d67-4c67-9074-ee9386b6c480",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b9d2e78-b001-4aed-b882-e22ce75c784f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7046ef04-bafc-4449-a966-459818192022",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f11ce067-edb9-4000-bf17-a42a01f2f31e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2f2e383-69e0-48ce-9ead-606bbad184e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f35c5fb3-e26e-4ac8-9005-480a944cca49"
            }
          }
        ]
      },
      {
        "id": "ea94b383-d253-4c39-a3d2-533e4d80db9c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "de9695c8-6014-4fb4-b78e-8ea4f2548eeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86cf7e18-ef0a-4015-834d-96866978a82a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6278536-b40e-4bcc-a234-8ef8df0cacda",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a70b350-2902-450f-ad9e-d60140591198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f7006e-3a90-4fe3-a89c-f80ec8da77c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cb5a6b-bc1d-4328-a8e4-4c455a45725f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cde71-6454-443f-829c-c1e237afe56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022036a2-818b-41e2-8379-626f40e70a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4408443-6b50-4ceb-ad38-fb08a82e8620",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a26aba6-fc9a-44f8-9f0f-a6686905c30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e9d4c3-a07a-45f0-acee-95cac8b18518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380819be-4940-4354-a1c3-9e2139ef2303",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679a64f1-f98f-4463-9aae-0a9cac780635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8296b7be-1ed1-4ef3-9b86-4f06d2837cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300a61aa-a5b8-4187-878c-8679d336944d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051be2d-065f-44d7-a1c3-a1c01912becd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f27a277-66f7-4662-bbbb-37caeb4070f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1154548-b83e-4cce-b0bc-bca161efbc19",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54953324-e921-49ce-89a6-0ba059bcd2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344ae889-de54-4841-a82e-4acfb2ff7c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c97f011-9081-42d3-aa39-120bb000ca2b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba2e656-7c75-4ac0-8796-f943c84c6f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3c0cf6-0e55-4940-ab33-748ec3d4b1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881c7c0a-8e6e-486b-8d2d-9ca977259abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac875d02-62ab-48f1-adda-14e1fb9ab445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bdaf31-f3ae-46db-b5ef-3f4b6aa08e95",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12805fa6-b02c-46eb-8a5a-c4e70b692d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab1f06e-e98a-48cd-8167-18a606f31a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feff7d5-a4e3-4d2d-9782-771ff0f8b9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716b8c7a-b61b-43da-a8fa-e537598c0257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b92f1-408f-445d-83c7-0241f4af1e28",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8aa7bb-050a-4ef5-8a82-51140ffda24b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916b8783-4518-4120-a00d-6c35c4db55d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7046b0ea-6ace-4bb5-a465-3ebe669e8278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317c04e6-e2b7-41d6-bfe5-8d8df8d5e87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7751d547-0f20-4451-9921-8cb765536b43",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1219edc6-9496-4075-94ae-d2b84d4ec0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4d6a31-d6ea-474e-9157-3a6b8a46a66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5224ca-d8c3-44da-93ae-3b7c9a24a933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c7ce62-723c-44ee-9e25-c171d09cf28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ed9103-9c80-40fe-9e2a-c6e21f316ee2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14248ec9-ce37-4f70-94f8-7608e51a13c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6960875d-e6f9-4922-9de2-d0c0c2e0d529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2819ce4c-2cee-4182-b9fc-aa3d44ed03a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701b2657-e8b6-4b20-9769-b949077d7918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfa401a-4138-412e-9403-78ab48bd99b4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f25c5a-cc72-4c9d-a16f-21ab3d96b6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c198bfb-92de-4066-99bd-f5315303bc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6d2158-caf9-42a6-8c08-c1995a7d7e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968b61d4-38e5-469f-8909-fb35683866b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc58dc3-5cc9-4d25-9371-7149c263d5fe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f8d39a-eabb-4033-adf1-018f57f19460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708262d5-69cf-4487-a62b-531c30703c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b528af32-778b-4a80-ab7f-d67d9db5e179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0cb8c8-7271-411c-adfe-843bf186c2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6802f8-a130-4367-8c9f-5ad800d878d7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca912c8-055f-471f-a133-56e8cf2a94d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd6311a1-9c70-4f07-b95a-4314c8c61485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cf7dff-f014-4ddf-a5bc-7a71b2dbb76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc5d576-06a6-4a65-b5a2-86c4464fbddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628a56ce-ad5c-4f64-80b9-7d8076a2bba6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495095aa-d413-4e6a-b8ce-be0003ae86a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a1e1be-8cf0-4485-ae59-af965cdaace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aeb7aa-d51c-4120-9e83-0017f50a9f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b10e74d-c272-46f3-ad11-6446a538e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a683e4-89e7-4efb-be2e-7ddc7d9bc9b4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aed889b-19fc-4fa0-b68b-107ff3b6c642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fefafc-f6fd-4d62-bd84-232661368d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80036cd4-df70-40f2-b60a-7c8adf7ffe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d0f855-ed4f-4253-b0e6-edafe03e5554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6174c124-b3ba-4406-b47f-31e4910dc2af",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad73a9a9-d1eb-4588-9e23-b617ab981a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1731bcfd-1a8a-46a2-97fb-d2637c0066b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a687eef-68d5-46de-acba-602b631867a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d29c810-0c7c-46e7-a71c-fe951fb06ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d4563a-00c6-435a-a171-c4100aaa013b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e97ed2-0ce8-44d4-a868-36b81be8a7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a44b8f-c00e-41de-baa0-9cb8e64f7f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceac374c-b820-43ba-851b-2346e01d5f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78618ec-f709-455a-b84b-ba68b3992128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b2945b-bf74-4244-af88-bc2e7c7ec08b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dab4670-f2ff-4407-90fe-daafc5310541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5861886a-c9a2-4276-8233-662ed5a25c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61380ce-199d-4bbd-96cc-f2643b27aa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d76e56a-a5c9-471f-9070-2f9df8a0a10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322d0e5d-5aa7-43ac-a8ab-0cc20b9a0d58",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ddb511-5c8c-4a81-8571-205a97a945a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a383b6f5-178e-4660-bfca-74ae3fc32718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db657eb-fef8-4c81-8875-08943939c20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e80800f-7a3b-4b4e-bc60-62169c0aef74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb87db8-b826-4d68-9b08-a8509da125a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f5f7f0-24c0-4f64-90d6-8889ac28c3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5479ed0d-9f6b-498e-9d8f-dcba23626e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4252967b-7bd1-4392-a116-0acce8252284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe53a7c-a4af-4468-a573-2c1fe187b5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e80dc-8988-4a63-a8db-6c9255ef2068",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9109f461-c747-4943-ab98-5c902658a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fdb673-9e33-4a72-a721-110ce6296f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a43f1e7-dca8-444a-b223-c683c27444bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b043db-8005-4503-98df-d2bb6ff8736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a01e4fd-9f69-45f7-85ff-33a3060cd389",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737a9347-6033-4de3-95b6-0394d29d8b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50800c8-8de1-45f5-ba43-25455d5f85fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dc51e4-eea7-40ab-8b5d-7c65ccd16d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf13e67-7f1e-4147-8f74-6b2e00c83de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306ea753-d197-4523-bfd6-85446e4989a6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06caeef6-2e2a-48b4-ab33-e0fe7909c677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10048478-86ee-488a-8b1a-dfc99064db6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1774916e-018c-45d2-b02c-697039dad85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c082fb96-d730-4d62-91fe-7200104d9bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f063d8a5-df26-407e-ba72-9a6c0aeeb0e1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f6c446-dc86-4716-b322-76c01d249129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d4a097-e24f-4363-8ecf-dda5a82af6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22425899-3b95-461b-9343-1f257f1ef425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b1d236-3534-433b-905f-6e51c5a75062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5247606-e688-43f1-b09c-34eaa89431b2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c66eeb-0a29-473a-a499-115f6db73607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa466ca-b49f-4534-b43f-8a9fe8152dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ef9920-45a9-40b7-bb3a-b39b91233d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f6a1bc-76c4-4a81-bfa4-e70c868a51f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728920c4-105b-4db6-92f7-69830bc4f27b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728efedc-2c2f-4554-85b8-c8167a7a4708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c83783-dcde-41e7-8a11-37d31610ceab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db8cb20-5f2d-40d2-8b51-fe58ec10af8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb6a44b-57a1-4626-9cf2-2ce1ea99da66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf9ed93-6f40-4db5-bbf9-00d7aa16d9d8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c8ad8a-9048-4c17-a793-f94eb22261e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b97acf0-a9be-4db2-a564-3330dba91775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cf77ff-6fed-4da3-b948-ac1f9ba08d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951f025e-eed3-4007-8895-bdc6df25f23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cada899-691d-4cb5-8233-7274a575ccf8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa2be3-1096-495e-a1da-5bf327655243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aabdc6a-9789-4d9e-be8e-6c2b78bc5d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f06e6f1-bad5-4512-83ce-7469eee0e73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2a844e-c037-471c-aa99-6a7974f2625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a740800-ba40-4cf4-8f85-b396068c4b4f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24253bc0-697d-4b5e-94b2-e05b2ab1b11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0efba3a7-0a4d-4592-b0b9-de52f43c1613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b202bc-f188-4284-9364-d01b7691dfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf5054e-26e4-4114-8f01-6ed1fe58c545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18ec44f-ee1a-48bd-9407-cf4b1c1b505c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6acd25e-1db9-41eb-8da1-305a2016efd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d05a6d-0fb6-47c1-bedf-a52636b38c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8f9379-b67f-4e9f-b631-1b9b33a3b04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac7a7c6-1357-46f5-bd7d-acc596c5642c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5971988b-d65d-414a-bf0b-1ecf7f267d99",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6f08d8-61b0-4ff0-a3c8-83e0829d21da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978b3a9f-d65b-4863-874f-6b5f98110d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ebad5-be8b-4930-b0a6-960e4a691e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ba9d51-04e8-496f-8e49-68a8b38d1b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2d4352-180b-46bd-8ae2-5c8e37eb68e4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24b48fb-89d8-493b-ac7b-c780a337d207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23e2b1b-fd9c-4d81-9263-efa564721b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1319e2d-9189-45a6-860b-87d69beeb7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35076c77-c452-4e5c-927a-601fc647485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f116015-aeb2-4d1b-aa1b-4e562f34e2cd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cb17b3-5bdb-4b2a-ab33-d1d918ba12f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f25bc0a2-dde2-41e2-8b0b-f9c3fe8ce1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57692c44-0ace-45dc-a130-ada7a1e8c1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba988b89-3aad-4b83-b44f-91c0e1d6c8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a16d55-0cca-42da-bf71-72f768801d80",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9e3904-cd7f-45ce-a19b-7080ed97dd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18757c1-9832-42b6-8038-c2a0c0f73039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca641d2-8a8e-41d0-92b4-f848ba3a008a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95253ea-75f5-45be-86de-70259813738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a302a6f-acfd-4b0c-b788-1654029eb5a5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4763f0f-3c73-4ab7-955f-413717b8b48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc028fd-65a9-415f-a9e1-8c673f822432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150d0775-6b79-476b-86f1-59c3786cd3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c57a7ac-979a-4195-9de6-509f673599ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b23eccb-537a-4af5-8d09-61fc5ce09ada",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60549d7-1d22-43fa-987a-1de0e1e67dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be1256a-74a7-4048-9e4d-1199aec1c0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be188aa8-66e6-45ad-b09a-d3949aebd946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17c8455-b400-4820-bae7-2853b104cd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1e1e1b-910d-4f94-a023-0897abab0d3a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c6b24d-d56d-4712-b2d4-467362d67054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38068983-496d-43e6-bc8d-4975fd6bdbb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744108d0-9f8c-4892-a482-abac3b650d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcab23a-e8cf-42af-af27-5bab103f69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9300f0a0-0ccd-4765-8592-5f1c537b1bd2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc000e57-82a3-4444-a1f6-11be21cab0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e7f7c7-85f0-4065-b1fe-03bf1209854c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d2340f-6170-473b-b598-972b96386e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97542fc-f434-4b8c-b876-d8a74a578a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deb8761-6901-4c2d-8395-5927e36b830d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541a317d-7c3a-4dcd-bbf8-fc06f17445bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabdb410-3151-4297-ad06-da5f5e56ef59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445ad4b1-0a91-469b-8a67-7e7c246f3909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526a998e-8e5d-4ec4-ad6f-6a31f2d6d077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18cddeb-ddde-4bbb-896b-86af08269543",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2da32e-7582-45a8-bc29-bd476509be0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5563bd-b49b-40de-97d3-4382cf6274a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c526b96-4983-4bf6-a5c0-11b17fbd4155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9190c640-fc4a-45ab-8a5d-3089a9f9c4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a78cd5-5053-445b-be2c-b28fe32940f5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f08992e-6d13-478a-b5ab-37b6cdb2d48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e07eaed-0e79-4ace-aaa2-6b6bab36e0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2218816-68a6-4f29-9394-cb207a3fbc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bac9b65-1215-4e00-ade3-9dfd756beca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c72ba-5363-41ed-9fee-7bb4ba5f1127",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25ad9e-b3fd-4164-af22-5dc1a6a80e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7c39a6-8e68-4ab0-982b-127906066ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b625dd0-a215-40b6-865d-cba324999e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad42253a-0aa7-481e-a111-3426d0555e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b439e6e-7b1e-4a44-a611-4c4d0f8d83df",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47d35fd-a2a9-4bd2-89f7-fcb3aa4f3bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e599b0c9-d2d7-4d7f-9722-f88fbc5f76e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b309863a-954a-406d-8ab0-0c8b3a671529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfff4e9-114e-44da-ba38-e78d65bb146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be56d21f-c81b-4a56-b2b0-29755871822e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06561523-e8b5-4462-8c83-d75a73886339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1828c1c6-5775-4953-b8e4-114c3a01f844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d6c76d-8bb3-4cf2-9e34-834802263bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce3f6ed-cef8-4b85-96aa-0acb90f1248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83d33ad-1dae-4f0c-87d8-88c7243c8d8c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a6ebaa-a045-441a-81c8-f71ade192a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c235b1-174d-48df-83dd-5c5b9b0cc665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f39e5-df99-4819-b5b2-14aa347874b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e60156-cb3d-4454-9d29-0030c6b4bb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993426a5-601d-4b62-bcb1-fac76e3efb50",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1b033c-37c9-405d-949a-4119d063e184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d74673-6358-4699-9f5b-3707747565fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882efe7f-4531-4e5f-b2a7-b8b8e0e116b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bda5a3-7c86-43fc-83bb-bab391706328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fedaf6f-060f-469e-9761-d50b87b529b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6337875e-6c47-43a0-9e2f-30365f818655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b71b68-064c-4aa4-8606-4304b4eec9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060e9fe2-00e2-4d24-b15f-fa896b02ef03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f49264-6789-409e-bf8b-83eac7ad8f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7969f289-e646-4752-ab5e-781819294b41",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11daf179-f7d0-4a71-91cd-254c28e8de2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5155276e-47bd-418e-906a-4e439469d21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d0f96c-700a-4a40-a657-143daa1077a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d93cd69-6057-47b5-9912-f7a54d6271ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d495c76-8e2e-49fe-8937-a64f3df8fbd9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ea680-b68a-4e8a-a2a1-635532c4f1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98b77f0-c2ab-4f9b-9cc5-117644d5ef3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb78d2d-c81c-4475-9a5e-e0488e3eb728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9a64a6-6354-427a-9cca-e5e865744151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3d88db-047c-4940-912b-87e8322311a6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd21ca8-16d6-487d-9065-e2414c5c9ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0974e8e9-efa2-42e4-9c67-bb1fdd65668c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bd1c57-d6de-406a-91c2-8a28c4b22eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1d91f3-4396-4cbc-ba09-d3352970df5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f3544a-5f0c-4e78-ba51-3537773fe5e7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257e2a98-5a9b-474e-86dc-4b3832bd95eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaac2a3-baf2-40bd-93a9-1d28e2125987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd6b74-20de-42b9-aabf-1cf96ffbc8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d747c322-f35c-4463-b9af-5129a5daf23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5181c2d3-b7f9-4fa8-a9a9-b6f4c9dfdd25",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7161ee76-f491-4f6c-bfd5-20d03ccb43db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302db61b-6909-48ef-8283-84c556f0f723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0796069c-fcba-4d87-9d9f-507ae2bb61a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1054112c-44c4-4093-a583-a46dbc52958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ab288-7c1d-429b-90ff-b48e1aacf601",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542175af-3035-495d-87b4-5631375f4877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df25fb6-1d4c-495a-a126-c9b1bc2616c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f04c836-65fb-4224-a82d-da9a76d7fc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7055738c-7436-49b8-9438-058ba594c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa578bc4-729a-4dac-ab91-c15d61ee583d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05ed839-cc9c-4b2b-ba46-0983523f8a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73a1af2-7d6e-4df9-a28b-e7b67b78cb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbb7d6c-2984-459c-ab41-38ecd0f937a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d68cdba-b91d-4e8f-a847-b9d5acb2a608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e453dd9-e696-4386-869b-edbff2dd6a12",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178bc01f-3318-4a87-a156-df6244c8597e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affecccb-34f4-479c-9627-7c486abe2b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00eaa03-be3f-41cc-b9d7-e48a05ffe025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841db089-8714-4366-a736-72104a8eb8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e5c479-e064-43ca-bad4-790b58b724df",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f304b4-e122-4e61-88a8-a2c5a3e6aa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb8418e-ae5c-4625-8928-d892e22e8a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a9f172-04f8-4a63-9936-3406de885ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93c1bc9-d9f8-477e-aef3-1bf9c8dc0fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabc0b92-5b50-4dad-9875-ee3d87843bb8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e66c595-0bc3-433b-8c78-f222f1d837d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5277dad-beb6-4eae-80b6-42de1e3b1723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f2df99-0b7c-42b8-8595-a7bc1870b5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590ee0af-8350-4a43-9f23-a0acec030db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7354d4b6-7adc-44c1-8072-60cee02e2b73",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b7468f-53f8-408b-8a31-d76147ba7baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad4608d-a42a-43a6-8b43-bed76605e018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682b93af-04f0-48b6-ae8c-0a5fff557845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdd34d1-8091-4c9c-af33-1c8f10a65060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a192ea58-4a70-46c4-aa83-8c5d95037f63",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b06295e-0c04-4ef7-81da-78a6b1428a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae86023d-e21b-480f-bc8d-f9d345f917ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2efeafd-bc8d-4d24-a1bf-735de8b0c850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e1170d-627d-4fd4-ab2f-8250536d3ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd36ef7-fe77-4524-8abd-4886be96966b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bf42f3-2934-4378-8936-08c5434180cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1263882-6a07-4183-8141-b1947fa26cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d89359-2c4d-42c3-81d8-c40b91cc7624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0807e1-225b-41ec-b5f0-0e9457696f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73645e3c-d188-4071-9d88-9929132384a0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cf3c75-d896-47a3-8c9c-37be4b4c5f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83984e36-bd44-43e2-9948-eae28fdf892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd380fd1-fa04-4f71-975b-74ca5f18e030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c088d20d-523a-4dbf-90b4-642039b23637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098a6d4c-eb89-4456-86f7-1e30490bede4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fe1e57-a7cd-4156-b198-357669837621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deae270b-25c9-4c25-ab06-edfdbda42086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2fb5fc-4d1c-400a-be4b-d2dcf81598b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68174d1b-de14-424c-b8a8-4c54f3a25679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712fd1f6-5fdf-40c0-a6e0-8cb2cf125bd5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570e5e66-ffa2-46b8-be3e-9ad323008beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471b79f5-8b82-4c0e-8b17-dd49cc72233a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e129230-3a2f-4341-9b42-388e459d4147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48153a60-ed0c-4639-95d5-deff0f2f2199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6580e52e-dd8c-409b-aa25-c574121daa79",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85adae63-8c2d-471c-960f-c1589f35aeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c35df40-417d-4d72-b537-47e8ab7dff2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13def5ea-45e7-4c86-9264-31bd1ce0cd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759e969e-d06d-4497-bbb9-fa5ce8272a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376e265b-a352-45f1-a2ab-9970fc61d9b1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6808366-0f57-4922-981e-1daf0771a529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3872ca0e-1cc3-4cf2-a83a-a000a2f3b545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904b5068-0121-428f-934a-c4ec7066b562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac0f234-2493-46ff-b3f6-870a7974538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d460044-35fc-406f-b102-7719da4df48b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a008294-0969-430b-97b4-048f408ec7c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "108b6b3c-a41b-471d-a450-efa16539c548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c6816d-de53-4943-bd87-f5a47bdb1013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89812e12-1195-47c0-ad83-e83aaae5fba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fac52b-333a-44e8-9f6a-0104f8344640",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c24625-9af6-42d6-bca2-f28548cbf671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260a5ae1-5d83-4ca4-ac64-e0f0291f90c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f86b901-7409-43be-9111-2109d3366871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ebdbac-8b2e-45fb-a981-2f3d7ab269c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b781d42e-95fb-45fa-a17c-cc722cb97264",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4361ec36-1496-44fd-a3a3-bab605053677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b009fe66-3af7-4be5-bbd8-ce754ec2ebe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c89e37-e5fb-4fd0-b951-88107a94293c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06168b78-9982-440e-9909-6ae27f4d401c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e319bce-0b50-445c-a177-d9f7b1980ef6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cb873d-4c48-42e4-9e5e-d58214b7dc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fce868-6478-481b-a5ad-e127a58cc7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880c5a2b-4c4c-4c30-92a4-2be468d6d60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be485870-6824-47e2-95e1-ef791706e238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9017437-76a2-434b-a146-dad52933134d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a9eb43-212c-4e6f-a508-d199abdaa30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be6ab9d-01ee-46ff-bf5f-66fcdf73aaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf6dec6-980a-4c01-876b-7a57a12f9f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26949ca1-1d7c-4472-8d22-4774a95f1d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5c959b-1fd5-4cdf-ac6d-673486ba0030",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ec5b7f-64ed-4027-b44f-3c6d15a09da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ee4b17-97f4-48de-b703-574d29b315ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd826538-b23e-4128-8b9b-7c9b4cd699d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31c53d0-fb67-4a2c-99de-3dfc7dfa1c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2deaf04-18ea-4908-b997-88aeac19cebb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec6238d-9c2e-4f4e-bddb-1ec8ead2c60f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e007a4-59ff-4338-b9e1-b89c702fc582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354713b1-2221-451d-a7d1-9cc281b73cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f47a019-6c0a-42b8-ac4e-4711d6c8e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa82b76c-a085-4fc5-8eb7-cd980fa7be73",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9973818-2984-4b83-8966-0ecd8df62720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4a35fb-a189-4c13-bc04-ec64723d284d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bff65b-306b-4fe3-8006-28f4649837f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e6ab9d-3a40-4b14-ad80-fa825eed3c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5624b70-e9ea-4702-9e57-e6417618d234",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3feb217-b5e2-44ba-9174-c1800d742ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e19b57-84ab-44c1-b2af-2be670736c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc84fc84-3253-486a-9275-579b03dae4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bd833f-8e6f-40bf-b9d0-eaca358e2098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032aa031-03b2-4a6d-a198-5e92cce7c373",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f809f65-4ff2-4fd4-9e82-559ca729a136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca89a65-9179-49cb-98e7-655ff4894f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d429a-9131-4c5c-bafa-77c154395fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c7e2aa-936a-41f7-9e57-2f45ce7b0625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64aefa9-abeb-4548-9b46-4b15cbab09e1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13af1d2c-6cfd-41b5-9e63-d4686946d4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2c39e3-fd70-4ab6-8947-144cb0c1d0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983768fc-d464-413d-8dad-486e126bd847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b94690-0398-4190-a413-19189d5c9caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd0f25f-518c-4775-b71a-2d4f46efbb79",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8f4696-4fe7-4ef0-b395-c4438ca8b119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb0fa6b-1e09-43e3-850b-2a22bd271cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19c1779-9ffc-4bf7-8176-35890ac20031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168892a7-b988-4d17-b1c4-481d9d3285b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b130c45-3e4b-4468-8f32-89900af75d26",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fced050-740b-468c-bf02-878e9005155b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afef3fea-0d28-40cd-adbd-ab596cf83b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28324d35-316c-4abf-ab54-b213fe84bd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757b4203-15ee-45ee-a796-12f0a754e6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4117d8e9-41f5-4996-9777-c49f3621c556",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12483867-5373-4aa8-bf7e-7cc3924046a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d7958d-79a7-48c6-902d-201d3b28360d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e489dd-65d8-4de0-a318-52239fb2e48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5d37bb-ee44-452f-963a-603d57a1012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7790cda5-8be5-4b7e-8306-f39700bee163",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd85372-e1d3-4c29-983a-19a83a63ed81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167c3d96-2bac-488c-a264-58d2cb7dddda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ee48ed-eee0-49dc-b2fb-298613ba2a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480d423b-5708-4ec1-b832-fc770f34d4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc208f0-aa99-40f6-96f8-412deb12fb45",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2241300-0085-4a19-82b0-75d61d24f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c984d8b-5c3a-4c4f-81a3-ec0efb4c30d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c797bd24-307a-4dc8-a7ad-4c079a64b559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdc499d-4f1b-4c33-971a-3d42ee2dd3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4759c498-31fb-4b03-a555-a0bc907ee684",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa79034f-5638-4724-9007-59a57e34c973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd3f948-9877-449f-a9e6-51a2417bf944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a72769-0e7b-46e0-976a-11cfcb370218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e237392-d779-4798-94cf-ca3ac7956afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075b6a90-92b2-4ea5-9119-bca7482d2d0a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06571684-c8dd-4ca5-9004-1a54eaabc31c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f88d22fb-c4e8-43e4-8388-40c6d0e1d1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6abc20f-d993-427e-b8c1-d57d46e7cb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f767dd45-69f5-44c5-8fc7-fb9afc789f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66fddef-bd17-4729-a0e5-878a821a2379",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660f633a-28c1-416f-b7e3-3de0dc9aaa23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33cfcbe-53ef-4e8b-8082-2de721d33e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f9de5f-7b3b-4f62-a585-62ad8549d5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5263d074-e0eb-40a2-b526-25287e0bb6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17ed357-b805-437e-b3e3-511fb3805a2f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8713cb-ec47-4232-a550-fc7dd6d3de05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901b7bb4-d664-4cfc-afd9-ee9f78920e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d3874-4603-4e0e-9245-7e784c665c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5aea15-af4e-4eef-8dd0-24aac5687438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b391f55-da18-4bc9-8b73-55018537caf9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9886f315-8790-4c9d-add3-4199ef419d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb2c315-2d54-41c7-bdd2-57924f8dd71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549cc497-1767-4ef0-adc8-c49372f0e2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b662930-30e8-4114-a263-dfffb19afe60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad5227-7dff-4850-865d-929679c27c8b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d241e5f-8d9d-4d42-b61f-fc0c8160d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24872ee-a22d-4f9e-901d-b999a0123278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f92ef8e-6815-4ec6-abbb-129548e21c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86f6e24-36cc-4cb8-b24b-dc3660b110c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56908186-4851-47ee-b32c-f6805ed477be",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ef2193-8961-435c-a10a-164d0e7f015e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a564ca-7504-474c-987b-53ef659be6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824eb953-5720-4b85-a929-128c752bcbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f52b589-d08e-4d89-ad75-cb949ae99701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7103c638-76aa-4081-92f3-d234871cf0ef",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5c107c-f798-458f-8615-e7b7cc40da5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e8c615-f8bd-486d-b377-1b56d9ce4ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f67d397-d8fc-4dc3-b7b9-6570ed26b671",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1502f5c7-03a1-46c4-95ae-d528a6f31183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4b6a33-efb0-48b7-9ee3-677bd7339ad4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ea314f-df1a-4353-b553-81a6504e4fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5369db5-40d8-4cb7-a135-aeecb1ead6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57b7de9-a5e6-4d8f-84f2-7c703dc725cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9463f778-39f4-4d3f-b92c-e54f39e77d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe34800-fdd3-4cfc-8ecb-51323f72ced3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979004ff-e720-40a2-ae54-cd25cf1b9a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c4db92-842a-4de8-832b-7421277c6497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56320a13-6300-4f4e-8329-610bd136ee6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4801dca-b847-4ae6-8f67-e91c7b80b44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfd65b4-7b1a-4237-9859-88568ef78791",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d47c72-6277-4b42-98d7-3585df2b8512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b584d313-9904-4213-ad76-6b93947c6cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458e228f-43fa-4e93-94ce-c22c2ceebf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b353ac-0fac-46a0-a130-2bd769bdd6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5474129-fce7-4c9d-9455-0353d60e148d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387304ab-dc9a-4724-9318-7af611323d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26feddb-fa3e-4223-88e3-647caa2c06fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa94a12-ff3b-4077-a379-1274bca84106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee20edfe-8419-4419-abfc-dc76ee58e4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea972c9-a931-467b-9eab-c0930c18bc63",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80a2045-27c5-4971-ae9d-b59ac1b639c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864b1938-5f53-4fb4-9e7d-2c2d26ade39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f19bf0-b8ed-4bc0-85d6-f72ce864d8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807b7f8d-aa4a-46e6-930b-2a377c5e98ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b189361c-ebba-4fae-ba8f-9da409524aae",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83cf3fd-87e8-413e-b022-a7307616d2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4421aa46-f6a1-4a1d-972f-26b9c2aa264a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4253e4-bd77-42b8-a08d-b35278158858",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d673d3b-a8f2-48e7-8d64-5f59c5280003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b18574f-3880-4b6a-a083-bb05e29fa9fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445435ce-1156-48a9-8548-cab6e4449c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb276f6-16fa-4ca7-b679-34eedcfad855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722e0152-3be8-4e8e-acf6-06cca67bcbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138c2b68-6836-40ba-ac11-d22f51481735"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "448a76f7-ccad-4e83-90e3-80f794794cf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c06252af-d76a-4328-ad7c-91a62c1e8ca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73685667-a7f8-4c6b-a150-b5dc62f56b1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bafbe5a-17a1-457f-b188-387602136dc0"
                    }
                  }
                ]
              },
              {
                "id": "8444ee28-a6f6-4b5a-8096-39ec4a4c8d39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19054f2-bfcd-47c8-8134-7e1e2f574827",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e86f202-e615-42aa-8f04-e7d0ae02a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "840fdf9f-9e30-4927-bda6-dde67ccc4b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b8a2f0-04fb-4438-bd65-5b3b3f2db873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "797c9477-904b-4b9b-8664-c3d9a60cddb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bb91fa9-7c62-441e-ae9b-04263f056caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "629d9c50-941a-4eee-969f-db7360afb4e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f382a9df-def6-4b00-902f-144caa9d3ee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e02002d-ff58-47b1-9477-1b9975e6c4fa"
                    }
                  }
                ]
              },
              {
                "id": "0f40c1bf-5912-43a6-946d-33bfdad9916c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "30471503-5cdf-4ed3-8d61-5838f31980f3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b28d195-cae8-4754-841c-6a2862157b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "14885da2-a81d-4483-9753-1106ecdeacec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda63fd8-ad47-426d-8d04-0cbce1108756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd239a3-31ec-43bd-8458-fc25a61de488"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d34c5996-cb8d-4b23-84f9-54441399d808",
            "name": "Positive Testing",
            "item": [
              {
                "id": "924b49a3-ed7b-4eff-9a38-e26b0d3d3e0a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a48e61-2f18-467a-81f5-f2e1a96e468a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26a5c57f-123d-4f87-8ea6-7e70825afdf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c261208a-07c2-4ad1-bbee-bd87c67c8a07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fa44921-7af3-4279-b09b-194750a61153"
                    }
                  }
                ]
              },
              {
                "id": "2a481b72-46b8-4724-a17a-07d9384d53cc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2de6eba-a9f3-44c0-9e97-cf0629b591c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8335bcb2-0c34-4a85-b769-8e5fb01f0480"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68af25a4-4d99-4f4a-a984-d5d66b59d5c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f91b9e5-9b6e-4af8-909e-91260f8e1431"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "519eb7b2-4770-4226-a503-779fe20629fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5aa283a4-a8a2-44e7-ae21-d0771b99a656"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45c57855-5218-4a87-9a27-e932bb89be99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "813dc25c-688b-402c-8d1f-8222343241fc"
            }
          }
        ]
      },
      {
        "id": "c4a6e7d4-7888-40d5-8ca0-36e05be7480a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "adfb3de3-295d-4c40-a9b5-29e9c3e3c922",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71bbeb35-ce35-466a-84fb-d86f5f186ac2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b94ad91d-588d-4fb5-bd87-7f18d2f00ae0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64f981a-4652-4266-a02e-f2ef7c748d18",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f05d73ba-0a76-4ace-b702-5665c5df1668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c17953-51f3-493b-a062-fb97f4722a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3032e22-2e86-48e5-a574-734e4f4df261"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff3bc105-9044-4053-a047-d68fc80a9031",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a9d04c1-dc32-44ad-b50d-e1ac1724c8da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4dc39fa-e1c1-4217-8e7f-c991c15de1e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab16651f-b224-4e69-9949-5b4a80d92aaf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9326279d-9ae4-4004-a718-31e13aa2b7ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d420ecbc-5503-4f98-947d-85ca8dc88915"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "500942dc-fead-4a56-9554-da646cea71c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e87c06c-f02d-401a-ad6c-ae408e0b8fc4"
            }
          }
        ]
      },
      {
        "id": "d68032b0-4338-4a52-a08c-56917bca3e32",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "65c1a4f3-8b47-45f7-8353-0d290c5858c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e84b70a-313c-4bb0-bf69-2c992d308e7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05f53978-ea6c-4fb3-a20b-2d7ea4f64a94",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19da3474-2975-4e87-bf0e-9bddc06d4baf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dc8350a-a64a-4a71-a686-85f0e54c00eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db75743f-cf69-4cd0-a58f-1cc9c2dd8590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630093d1-52ac-4677-8eda-9822cacb6cd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "414af2d0-aa18-4ede-8dba-da59e6d1b1ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0401182-4d30-4879-9385-53a9d5e7c3d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a91d3da-f0d0-4d43-8203-bb778910d43b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed49aec8-a93e-4cef-aa1b-42757f1d350e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8186db60-7dcb-43ed-af09-5e29fd071d7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30b9c995-4959-431e-94cf-63ac557c030e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d32577a4-20dd-4e6e-8775-fce20080a168",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91c02200-4a46-4dfc-91ca-638667086190"
            }
          }
        ]
      },
      {
        "id": "e15a3e88-9a6f-4e1b-8aee-7e087b03d60f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9323d13e-4d24-4ba5-af27-3a46a73c140b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddcc6bfd-d7e2-4e68-bd2c-24a59fc9d1a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "323f378b-49c2-410b-9ae5-afd43eb832b9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2458c0a5-66e8-4987-83ea-0fc2eb34ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01fc47ef-63fa-4fee-8e7a-ee167acea44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7569432-b89a-416a-9130-62d7fa11ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74499e50-1f48-4073-9c5a-ff5e20df082e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f1fdb12-b651-47a5-a3a4-0f7572fce7f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cef3aa08-c75f-4cff-8175-fe1c158995c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c094d6-ab35-44e8-bac0-af03a2005df1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91f38a71-9469-4094-88a0-3d899da45402"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e41f2ec-ba50-450f-a518-75d62f25eb44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4333e88c-d521-4fe8-9136-26f0be767e77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea781446-c0b3-4d20-adda-d3f5253dcdbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37f255d9-95ee-46e8-a3a2-d7704261defa"
            }
          }
        ]
      },
      {
        "id": "f704989c-1d9b-49ec-9e96-9938275f241a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b4a0f95-50dd-4abe-80da-ebed74a3ede2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a81453e-d581-4856-9bdd-fa35d905c6da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "96ab81ed-4f78-4105-a4b1-fed59d4f1bcb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a79524c8-f57b-4c8c-aafc-2caa1a319a77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d2c065d-c7c8-437f-b548-fcb8a053fd69",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 41
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 192.14285714285722,
      "responseMin": 9,
      "responseMax": 10032,
      "responseSd": 1249.7855289931626,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722127421292,
      "completed": 1722127478256
    },
    "executions": [
      {
        "id": "bc05e37f-fc1c-4c06-b9eb-218151903c6f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bca2f3df-e26e-45df-afb9-72be818e48bd",
          "httpRequestId": "91254a73-372d-4270-8ebb-36d48126b798"
        },
        "item": {
          "id": "bc05e37f-fc1c-4c06-b9eb-218151903c6f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1663fbd5-cc89-4de0-bff5-c54ae7bc06fa",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "503126ab-25c0-4a32-81c8-5285eb1247ad",
        "cursor": {
          "ref": "c649675b-1cf1-42e5-a15f-d34253016434",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "524752aa-cddc-4930-b5f0-d7314b95c7b0"
        },
        "item": {
          "id": "503126ab-25c0-4a32-81c8-5285eb1247ad",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4ec165ee-9428-48f6-bfae-47852f43d96a",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a81528c9-87a4-4255-9f2d-72661ea130cd",
        "cursor": {
          "ref": "90852505-fd42-43f6-8b6b-31c39c01b9ed",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a6635564-eb4e-4c32-bb71-e2590aebd872"
        },
        "item": {
          "id": "a81528c9-87a4-4255-9f2d-72661ea130cd",
          "name": "did_json"
        },
        "response": {
          "id": "83fcb97d-3369-47f8-9e6f-f0059c97d460",
          "status": "OK",
          "code": 200,
          "responseTime": 230,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba1dae-a55e-4da1-b23e-8a1ff2d572b2",
        "cursor": {
          "ref": "a0567591-1d9b-453d-b0fd-58280a63dec5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "899e90ec-c12c-4e97-9c2e-b535fc6ec288"
        },
        "item": {
          "id": "dcba1dae-a55e-4da1-b23e-8a1ff2d572b2",
          "name": "did:invalid"
        },
        "response": {
          "id": "fef20c54-f16d-4f71-9fb9-5ac9e3be6257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba1dae-a55e-4da1-b23e-8a1ff2d572b2",
        "cursor": {
          "ref": "a0567591-1d9b-453d-b0fd-58280a63dec5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "899e90ec-c12c-4e97-9c2e-b535fc6ec288"
        },
        "item": {
          "id": "dcba1dae-a55e-4da1-b23e-8a1ff2d572b2",
          "name": "did:invalid"
        },
        "response": {
          "id": "fef20c54-f16d-4f71-9fb9-5ac9e3be6257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c104ce6d-98fe-4686-874d-247c0cc1be90",
        "cursor": {
          "ref": "61802526-e824-4885-a0fd-1e70e9b4261e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "061688af-cfaa-4be5-8c23-f853f59dacc2"
        },
        "item": {
          "id": "c104ce6d-98fe-4686-874d-247c0cc1be90",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "59cc9ffc-13d5-4110-bca9-0326b48a6ff2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 187,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe63306-2b7e-4583-85d3-8ed8c55c5534",
        "cursor": {
          "ref": "2251175d-42fd-4862-bf49-af6c6761749d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "32cbad65-355d-452d-a07b-c775d46f9980"
        },
        "item": {
          "id": "6fe63306-2b7e-4583-85d3-8ed8c55c5534",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2c18a6f5-99d0-4de5-bcee-c5700ec2ee3f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb84b7c-6bb4-4bcd-81b4-6be2b8ea44e0",
        "cursor": {
          "ref": "96aa93c7-2f0d-4b04-a53b-de28c26a4085",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e4d94699-0c8d-45f6-bf71-10357f638e10"
        },
        "item": {
          "id": "8bb84b7c-6bb4-4bcd-81b4-6be2b8ea44e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c4b2b78d-dbf3-4bed-9567-771bd25915d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa9cf5-7e71-41f7-a185-17fa88e1e00f",
        "cursor": {
          "ref": "bb483f86-6c94-4057-bbc8-e967c34339b2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1a0978b4-1eb6-4b46-9efd-86712b32c5ee"
        },
        "item": {
          "id": "f2fa9cf5-7e71-41f7-a185-17fa88e1e00f",
          "name": "identifiers"
        },
        "response": {
          "id": "6ecfa9f5-b2cb-4d17-a86e-bda7652e5ae4",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8346e00-4016-4bef-9e7e-f5ab751c93c8",
        "cursor": {
          "ref": "ad1f98d3-2b29-44c7-9ca5-4af8cd3b2424",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f8c5d6eb-1173-4c8c-ba46-d45f12913c84"
        },
        "item": {
          "id": "c8346e00-4016-4bef-9e7e-f5ab751c93c8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e3b0b338-0cfa-4571-8a02-2b39f61b8177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114ae379-702e-4aef-8b47-06b13b9067fa",
        "cursor": {
          "ref": "54c884ff-2f56-48c2-9ce4-8cb2473c7ca6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "575c6aa3-af96-40e9-945b-0dafb34fb8a3"
        },
        "item": {
          "id": "114ae379-702e-4aef-8b47-06b13b9067fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "af8d080c-cd8f-4c00-a1b1-cd20c2346e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89815e85-5839-441b-8ce5-83229c1277ee",
        "cursor": {
          "ref": "b438cbce-fd98-495d-bf29-011f638b9975",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7f626010-837d-4b17-9f7c-2e1b730871ea"
        },
        "item": {
          "id": "89815e85-5839-441b-8ce5-83229c1277ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "492c141b-bb84-4e81-969f-d0f0273c494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7859dc1-18ad-40f0-8ef3-a8bab1bbfb25",
        "cursor": {
          "ref": "7e1237cd-aafd-425d-b1f0-e2694148d579",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "38310ccf-de4d-4ce5-bf38-75af96f3d84d"
        },
        "item": {
          "id": "f7859dc1-18ad-40f0-8ef3-a8bab1bbfb25",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "09f04c15-7b51-4e9c-b310-d56a5cdf5453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfc4a4d-30b0-445a-8b2d-2688fed9e1ac",
        "cursor": {
          "ref": "a43e4eee-835a-4385-9bfb-61b9798f3ee3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "52b2c57a-9ceb-4dcd-ad0e-67ee43fd279e"
        },
        "item": {
          "id": "9dfc4a4d-30b0-445a-8b2d-2688fed9e1ac",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fd16b042-d313-42a9-8601-b345eed7d7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e4aaeb-991e-4594-90ff-1502d72478e6",
        "cursor": {
          "ref": "1bee75d6-ec3f-452f-980b-d3b059b6bc2c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "281e0d44-7495-4183-8d93-26b5582b33ea"
        },
        "item": {
          "id": "62e4aaeb-991e-4594-90ff-1502d72478e6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "180c84ce-4922-4d4e-9102-1d40c6a7b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebb224d-fe60-43d8-a129-f510e9dea055",
        "cursor": {
          "ref": "3eae3dbd-a10b-4840-9a59-d79fdb457eee",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "33aa1a9a-c7c7-4bf5-b22c-0b4cebc7fcab"
        },
        "item": {
          "id": "cebb224d-fe60-43d8-a129-f510e9dea055",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f3c05a89-7ad7-4333-8676-292a2872e6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0dc3ae-5dbc-4e4c-9475-019267168fcb",
        "cursor": {
          "ref": "9c59b34f-cbb0-4bf8-aa2b-c67f88db11fd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e5d2cbac-d1ed-434c-8ad5-875bb609dd85"
        },
        "item": {
          "id": "aa0dc3ae-5dbc-4e4c-9475-019267168fcb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ee35255-dbff-4905-af93-194a3515907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fba00f-d317-4ba9-ae09-f510b91963b1",
        "cursor": {
          "ref": "42bd7e23-16bc-4953-b8af-9b8ccf3c7602",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "39d977ed-f33b-40d3-9242-4879b61a66d4"
        },
        "item": {
          "id": "d3fba00f-d317-4ba9-ae09-f510b91963b1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3763ee36-0a61-462a-85dd-e03ea875a959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a36c49-e291-43b1-882e-6443969ac9e4",
        "cursor": {
          "ref": "2e10f99e-6c0f-4105-8011-e604387844b7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9c8b894b-e984-45fd-9dc1-baae343bf9a8"
        },
        "item": {
          "id": "e0a36c49-e291-43b1-882e-6443969ac9e4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eca97822-9a53-400a-a574-7148796d4070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e8d904-e5de-4046-bc20-832343fe4ff7",
        "cursor": {
          "ref": "656da60e-6a04-4959-a7c3-87f8104bb3a2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "de968ca2-deca-4895-9a30-c5a3940c130d"
        },
        "item": {
          "id": "18e8d904-e5de-4046-bc20-832343fe4ff7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "24b12671-1649-4301-9187-f1f6e22c75bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd9928d-35bd-44c6-84b1-9fbb0db82956",
        "cursor": {
          "ref": "eab7a296-2578-4cee-a738-da59060c7e93",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8a87eb43-b16a-41f0-ab49-22ba83546fb1"
        },
        "item": {
          "id": "1bd9928d-35bd-44c6-84b1-9fbb0db82956",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d54781a2-a19b-4f2c-ae90-5fcb48aa0680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d8e038-3342-4a7b-9fb0-1eb4eaf85389",
        "cursor": {
          "ref": "a20163db-61b8-49fa-903a-d6ab14a9f251",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a8c0819e-6987-4aa5-8520-2486cd2ad7d6"
        },
        "item": {
          "id": "d8d8e038-3342-4a7b-9fb0-1eb4eaf85389",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8bca6f4b-a654-4f5e-92d2-d5a86fc8951e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6f44d6-a82f-41e4-8f21-e03718bfdc93",
        "cursor": {
          "ref": "29e9d01f-c890-4bc1-b4e5-44cbf59aeaeb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "12076221-434e-4dbc-9982-54ad11b31aad"
        },
        "item": {
          "id": "eb6f44d6-a82f-41e4-8f21-e03718bfdc93",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fff3df6c-b8e9-4db6-9ddb-86be786e4b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98554672-88b6-41e3-9998-cffd79669b67",
        "cursor": {
          "ref": "d8b3f117-c055-4237-9a1d-1968507d2303",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ffee15af-0637-489f-983c-90babeb2c05c"
        },
        "item": {
          "id": "98554672-88b6-41e3-9998-cffd79669b67",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "07d2a333-cafe-4a26-8ca4-bb3a048e3b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57d3048-c071-4369-bcb2-0af945868204",
        "cursor": {
          "ref": "ee7cb97d-088e-4fab-852e-f9c3e73e71a4",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b1c0f7d3-017c-4815-8390-e91eba9c6541"
        },
        "item": {
          "id": "a57d3048-c071-4369-bcb2-0af945868204",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "22a02463-29a2-4a75-81a0-4c4620c152a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ec046c-9f8b-4750-a840-1c8edfa9a31b",
        "cursor": {
          "ref": "c4b1215f-91f5-473a-a8d0-13497c2bc576",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5f623faa-8f85-4e27-95fd-d2082031b1a4"
        },
        "item": {
          "id": "78ec046c-9f8b-4750-a840-1c8edfa9a31b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa15f205-d3bd-4001-8acd-ea68b1680709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b793711f-a3e9-4896-a438-b8f01a16fe65",
        "cursor": {
          "ref": "083bc845-3a7c-4c59-9a23-45a98ec06fc0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "214e04c4-0d51-405e-a448-24642420b47f"
        },
        "item": {
          "id": "b793711f-a3e9-4896-a438-b8f01a16fe65",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6beaab51-3472-4f6a-b2f2-392a75082783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951f6239-e613-4ab4-b77b-554a24c9703d",
        "cursor": {
          "ref": "321457dc-7dd6-43fc-acb6-c979d6da8749",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16fd7968-f33c-4061-863a-2845345acf4a"
        },
        "item": {
          "id": "951f6239-e613-4ab4-b77b-554a24c9703d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "535fd407-8d5f-4340-a1b3-1eb674f1de75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1c11c7-1836-4ec9-aa44-7747259f32a7",
        "cursor": {
          "ref": "128d66b7-78ad-4975-a876-ee3f626b5d86",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f5405af1-9e43-46e2-8c67-8cb10ab06793"
        },
        "item": {
          "id": "3e1c11c7-1836-4ec9-aa44-7747259f32a7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2cc58ec0-078c-4438-bcaa-70abdfc41828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4df0b-e8fa-4770-b9e4-665f0126b0b4",
        "cursor": {
          "ref": "bece1f97-c7ef-4e90-aa25-bafcd73b4ffa",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "51a91829-01ff-45b4-ae2a-321cef6f8e84"
        },
        "item": {
          "id": "b2e4df0b-e8fa-4770-b9e4-665f0126b0b4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9f8c0fd6-ce99-4a57-9a0e-61b8c54f0202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3a2853-5f14-40ca-a1ad-65f30bdba927",
        "cursor": {
          "ref": "da84973b-2a20-4811-a4d3-76a993bc9f66",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e9fbafac-c24b-4e06-a6b9-0d66e538e651"
        },
        "item": {
          "id": "5e3a2853-5f14-40ca-a1ad-65f30bdba927",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "01e8360d-e96c-4d47-980a-ad03bb438817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d335d176-592a-4694-8c2e-24ded9bdf159",
        "cursor": {
          "ref": "273f8b45-c38b-40a7-b197-61936000e404",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d481c87b-a72d-4d2e-86bc-d8d06f106ddf"
        },
        "item": {
          "id": "d335d176-592a-4694-8c2e-24ded9bdf159",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a52e456a-268f-48cb-ae8b-ec49bb2c7bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2a90bd-5cef-47e5-8c11-40c75f1b65e4",
        "cursor": {
          "ref": "8343bfcb-bef5-4689-9e51-c283ee06618a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "44c558a6-3f45-4fe5-8147-02f29a3f37a7"
        },
        "item": {
          "id": "1a2a90bd-5cef-47e5-8c11-40c75f1b65e4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "779f0fb7-e7e4-47a8-b8b9-2aac61f552ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd7a9e3-9a30-4f05-862d-8e57aeddc4dd",
        "cursor": {
          "ref": "67975e47-dd9e-482b-86a5-95e94f7e179c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d53abe44-f935-4eab-b8f2-c97cb597b8e6"
        },
        "item": {
          "id": "6dd7a9e3-9a30-4f05-862d-8e57aeddc4dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fe8a1601-7b42-4119-9a54-1f22122275dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3563b18-169f-4547-92e7-8c2f5f27283e",
        "cursor": {
          "ref": "e01bcdfb-0ab1-4b1c-8055-22a68d2ba33b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "00ac73d8-c18c-4ec0-ba08-ca1343e5c1da"
        },
        "item": {
          "id": "b3563b18-169f-4547-92e7-8c2f5f27283e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eab3dfdc-93b4-4bad-8dca-648d0557d3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6f1902-0776-4e62-8beb-964db68879d8",
        "cursor": {
          "ref": "19a72e7c-367d-4a3b-b5df-b1d24f4dbcab",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0c804409-0cd8-4774-be26-7a091656db99"
        },
        "item": {
          "id": "ad6f1902-0776-4e62-8beb-964db68879d8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5a156f78-9fe5-49cc-98af-3f3f255e5ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3682eba4-1150-49cf-954c-6d4b85b0394f",
        "cursor": {
          "ref": "c893d290-07fa-4521-85f5-72dbab3fa775",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "908a1157-84fd-4b3d-8a67-6f4e6f36b587"
        },
        "item": {
          "id": "3682eba4-1150-49cf-954c-6d4b85b0394f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "607cf50a-f494-4c0c-8f6a-b1e76074079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c209b6e9-e906-43f1-a7d6-32d2d592f7ce",
        "cursor": {
          "ref": "3ee7201b-6f5d-45bf-8b92-0e97126c200e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f3ef7aba-7b8d-4fe7-a303-89fca70df7d1"
        },
        "item": {
          "id": "c209b6e9-e906-43f1-a7d6-32d2d592f7ce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7197c13c-c445-4d24-a482-f143d6126cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef10c45f-c753-44d7-ba05-53ba272ad3d3",
        "cursor": {
          "ref": "b4258310-ee65-429e-9f41-9d673359b7c9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "afb3df7f-e980-4157-b4ae-c7a2c3646655"
        },
        "item": {
          "id": "ef10c45f-c753-44d7-ba05-53ba272ad3d3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3784547d-0482-4b7e-951c-87223749cd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5c84f8-209d-4ac6-856c-8ef85d345953",
        "cursor": {
          "ref": "0d04959d-1a51-4013-8eeb-092184c5627a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0dae2df7-e653-4c65-b6e2-4426d6b77ad6"
        },
        "item": {
          "id": "4d5c84f8-209d-4ac6-856c-8ef85d345953",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "83ad5fc3-7862-4b57-a39b-babd9372f60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0bf173-88cc-4569-b541-d365c09b45c3",
        "cursor": {
          "ref": "949ac5d4-5c26-42a9-a556-0985bd6efd80",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "480d6aed-29e9-4ab9-bb85-59886d945a7f"
        },
        "item": {
          "id": "bf0bf173-88cc-4569-b541-d365c09b45c3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "75900b2a-a814-4ea1-baea-8a78017b5b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c848b38-d2d6-417b-b8ce-d203ac33a354",
        "cursor": {
          "ref": "80239f58-b16f-4d5a-86e5-920c31461935",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a37d210a-fca2-4a3a-aefe-27a3cd4778d9"
        },
        "item": {
          "id": "0c848b38-d2d6-417b-b8ce-d203ac33a354",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "66c789b0-ddc4-41ff-8011-23e54a770990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3d0124-c80c-49e2-bf17-8c484c98bfd5",
        "cursor": {
          "ref": "d4be66dc-7b52-4fb2-8e55-e98ceab4ff2f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "571a2a70-54bc-4b15-b810-a583f2cca9fe"
        },
        "item": {
          "id": "9f3d0124-c80c-49e2-bf17-8c484c98bfd5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2409d543-8c40-4429-b876-948f4d0aea02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce8d6f6-8784-4a26-a20c-4d2274dadc3f",
        "cursor": {
          "ref": "9455d3af-6f73-4ba8-85f0-ba8243a7179c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c3192f0e-b0a2-4849-b284-2b3526706367"
        },
        "item": {
          "id": "2ce8d6f6-8784-4a26-a20c-4d2274dadc3f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b29c0037-5d8c-4349-812d-fd2502cbf073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f71c68-08fa-43c7-a234-1478c83e3d0e",
        "cursor": {
          "ref": "509aab37-9a5f-4127-84d8-f2f1baca68c1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "91c61a03-5e5f-4526-9ae6-c386990b2b5b"
        },
        "item": {
          "id": "59f71c68-08fa-43c7-a234-1478c83e3d0e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "74cdb736-9e9f-4bd0-9b94-bc6f753e1d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a396df-e5f9-42e7-9554-e24c4398b747",
        "cursor": {
          "ref": "5152fc2b-c3a2-4db7-b929-8bd65da20f4e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8494733a-892f-49e1-87ab-60b51644abe0"
        },
        "item": {
          "id": "28a396df-e5f9-42e7-9554-e24c4398b747",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4696251f-597f-426e-8e38-7bce241a5ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8247a511-30d5-47af-865e-4d04a6e5c3fa",
        "cursor": {
          "ref": "95347283-4f58-4a01-b601-672d466f738f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b6e55af8-9e7a-4eec-8769-b3a3bfd83b4f"
        },
        "item": {
          "id": "8247a511-30d5-47af-865e-4d04a6e5c3fa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "14290781-720f-4f74-a78e-177066a5d9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a04c42-cc7d-4dfa-8fbd-74d690209036",
        "cursor": {
          "ref": "21bbdfa9-4a1c-4585-8949-bdb9cca4dd55",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9ed637ca-f17d-4187-a7e8-a89bd5106b10"
        },
        "item": {
          "id": "e2a04c42-cc7d-4dfa-8fbd-74d690209036",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "20bae88c-ced4-4940-b955-fdab083ab986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b3cf1a-fadb-4135-874a-dc0361469054",
        "cursor": {
          "ref": "1e42e494-0dee-468c-b47b-9dbd0b7a581d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a00b113c-e7d6-4cef-9d82-74674e816571"
        },
        "item": {
          "id": "b7b3cf1a-fadb-4135-874a-dc0361469054",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3a20de6-ce42-49ac-bb2b-3c4378997419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf884d2-9d32-4b7e-8ead-9cd6954f88f2",
        "cursor": {
          "ref": "c2dde128-2e8c-4312-a040-ab9ff2bab006",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2c6f4d41-78b5-4a43-afc4-eb535a9eddff"
        },
        "item": {
          "id": "3cf884d2-9d32-4b7e-8ead-9cd6954f88f2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "850345ed-f620-4e9b-b9a5-bb4e2da247ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912193e1-c19b-4442-8131-40c723dfb441",
        "cursor": {
          "ref": "5f0ec938-0440-4cf6-a7de-8bad0c55aa7d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "db6a116c-60f5-4d81-9a09-ae2f80d94cde"
        },
        "item": {
          "id": "912193e1-c19b-4442-8131-40c723dfb441",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f1668277-7c37-47ea-8ba9-3fc62d2eb64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b7bafe-9bea-41d2-b760-c0c1737bffae",
        "cursor": {
          "ref": "48422618-5cc8-48c2-8170-8150e49a5b44",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "61513c78-fd71-4164-b5bd-bd1e31496981"
        },
        "item": {
          "id": "30b7bafe-9bea-41d2-b760-c0c1737bffae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "42d5504e-a432-4458-9c13-8ff6795fba3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cf8974-e599-4952-8fa5-e8ed64da31f1",
        "cursor": {
          "ref": "8b7ebebe-4f7a-4e80-9e24-ded0b4a9f767",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4437550b-df60-4ea4-8d72-37d07852ee8f"
        },
        "item": {
          "id": "57cf8974-e599-4952-8fa5-e8ed64da31f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "468c0a07-b980-46fd-8b45-faef45f0e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be49017a-381f-4e23-b73f-becac1871532",
        "cursor": {
          "ref": "fb133d6c-4c56-4304-a0e6-956376951a84",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ec1b848a-fd5f-4c95-9e17-a15bd5db3e11"
        },
        "item": {
          "id": "be49017a-381f-4e23-b73f-becac1871532",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ba07079c-8ca8-4887-af5f-026bd7c2bf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16351187-3620-4f37-82f4-aa6bfc7ae61a",
        "cursor": {
          "ref": "8f3a465c-a7c1-45c8-8bac-f1188575f647",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dbb7d01d-516d-470e-91a6-77eac2cade78"
        },
        "item": {
          "id": "16351187-3620-4f37-82f4-aa6bfc7ae61a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3df92b27-ff4f-49bf-a3b6-955366451cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcaef61-1a7c-47c3-b2ed-d82d375a826c",
        "cursor": {
          "ref": "2e747417-ce3d-4521-bf16-4ab601ac5ceb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "205223ee-0919-4cb4-8e2b-64c0ffd3112b"
        },
        "item": {
          "id": "ebcaef61-1a7c-47c3-b2ed-d82d375a826c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1aa4871d-ed9c-4433-bb3e-910060eb25b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a925880-93b4-4d31-aa2e-04b11ffe2a8c",
        "cursor": {
          "ref": "44f8b729-bdfc-4660-a43c-21f085916aeb",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "28a2993c-9784-44eb-aebf-e5224ffaa05d"
        },
        "item": {
          "id": "7a925880-93b4-4d31-aa2e-04b11ffe2a8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2218c63f-e3d2-460d-b5f0-387162c8906a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f785652-08c7-4594-b7cc-4f089cac581c",
        "cursor": {
          "ref": "5e6397e2-e1ec-4814-8d13-67c9f98c7af9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5d65bc81-d1bc-44b6-b92a-80bec94df1ce"
        },
        "item": {
          "id": "3f785652-08c7-4594-b7cc-4f089cac581c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b439cb8e-3d97-462e-8cf7-259405439c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebdcc19-0b14-4c6c-97c6-7aa8341e88d9",
        "cursor": {
          "ref": "b1ac7ccf-c1e5-475f-8453-7b779b5e3224",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6231e6a-3411-4efd-b80b-389e46075ca1"
        },
        "item": {
          "id": "4ebdcc19-0b14-4c6c-97c6-7aa8341e88d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1898f8a4-38c7-43e2-912b-5c82fa9c63ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b67aeda-ad23-4607-bc46-c3b58cd95905",
        "cursor": {
          "ref": "7d5dea97-b959-4072-9fd9-11917c72caa6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "93bea947-a933-4ac1-b70f-1b9cc6551db1"
        },
        "item": {
          "id": "8b67aeda-ad23-4607-bc46-c3b58cd95905",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3f3fac6b-dadd-4479-979b-b7b361b16543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44df4aaf-a0c8-4b5e-a5b2-4ed0df7b49f1",
        "cursor": {
          "ref": "9a0ba286-39de-441d-8ad8-acf203ca5c1b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "14f6c4a0-2099-431e-9647-f0f1e4be08dc"
        },
        "item": {
          "id": "44df4aaf-a0c8-4b5e-a5b2-4ed0df7b49f1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "40ef9eb2-12a3-441f-aa2e-f77d188b88f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1322c768-66ba-40be-998a-220808199893",
        "cursor": {
          "ref": "eefa7a8e-b617-43f9-a535-395eba658b41",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7453bebf-8f64-4722-9666-1f6f16e62e6b"
        },
        "item": {
          "id": "1322c768-66ba-40be-998a-220808199893",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "012968e4-abf2-4a13-8727-cd1040f8199c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46f5b3-4f30-4943-ab2c-5dcf22714a93",
        "cursor": {
          "ref": "2b679995-52a2-460b-9705-b35421a7d993",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "87766dbc-bd34-4902-b71c-6da49d649d7a"
        },
        "item": {
          "id": "ac46f5b3-4f30-4943-ab2c-5dcf22714a93",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "01129759-03b0-4e6a-8694-e0bf8902bbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a47cb2-3032-4c0c-8557-f833aaa40a82",
        "cursor": {
          "ref": "19f88be4-2ed3-445c-8614-dd3f10e2d2f1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "38084847-b54d-49b4-97f0-c524b6960bf5"
        },
        "item": {
          "id": "86a47cb2-3032-4c0c-8557-f833aaa40a82",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e1858dff-64c8-4290-9d4a-ee2b2eb0b938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6eb9f8-5ab7-4ef6-b047-e9b82aff284c",
        "cursor": {
          "ref": "c7274976-4bdb-4ccf-b8ef-492d05a0102c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8985187c-51e5-4f13-92f5-2ef52f46fd4c"
        },
        "item": {
          "id": "af6eb9f8-5ab7-4ef6-b047-e9b82aff284c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c04bcb7a-0cf2-4209-9322-706f36303fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d99a1d-a419-47a3-a307-72fa17bce9bc",
        "cursor": {
          "ref": "72d0f10f-986e-49a3-92d2-ab17a40d997f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bbec89ec-58cc-431f-9d3e-82aa78dda331"
        },
        "item": {
          "id": "90d99a1d-a419-47a3-a307-72fa17bce9bc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9aa96420-035e-4c55-9af2-16bdfa3c8d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d7717a-1bb5-4f7f-b946-ddefbdeebf30",
        "cursor": {
          "ref": "db13fc1c-6af0-43d8-ac02-6f3134391e15",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "96f5f1a8-8623-4ed0-a634-c76c7539b03a"
        },
        "item": {
          "id": "97d7717a-1bb5-4f7f-b946-ddefbdeebf30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0ab51d7e-bad5-41bb-9304-472090ac53d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f44176c-5e3b-411e-8907-acc4f59ad295",
        "cursor": {
          "ref": "c877752b-4b8f-4b7a-a80b-7548400d3f33",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6b78ae97-d6eb-46b0-a1c9-67b3b94aef6e"
        },
        "item": {
          "id": "8f44176c-5e3b-411e-8907-acc4f59ad295",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bebf9243-031c-4513-8515-7bb71436b875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af064e9f-d98d-4379-8340-ff76d9a0441c",
        "cursor": {
          "ref": "327f9bbe-d412-4c32-9c12-6bebbd10350d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1affe4dd-b455-46c9-92a2-cbe74ddf26c4"
        },
        "item": {
          "id": "af064e9f-d98d-4379-8340-ff76d9a0441c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "698a2084-90c5-42f4-a37e-88c8d86eb687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44339582-4bcf-4026-b873-6c87fc19b6a8",
        "cursor": {
          "ref": "43a3d915-40ec-4ef6-b1c6-976da4a20b7e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ef76f773-b85f-46e7-a65b-47b15154c351"
        },
        "item": {
          "id": "44339582-4bcf-4026-b873-6c87fc19b6a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dc63cbbd-347f-4760-8da3-07cb74ba3e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5c1d3f-b1d8-48b3-8322-aebca09c8bf9",
        "cursor": {
          "ref": "ffe0f500-a08f-42bd-8525-63799fdeaa32",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "083ac1ab-723b-4844-916d-0dc8e17c6d4f"
        },
        "item": {
          "id": "ab5c1d3f-b1d8-48b3-8322-aebca09c8bf9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8682969d-8872-46e2-bf76-d1466640c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b07c472-0036-41b4-9dd5-7b404c4a7eb9",
        "cursor": {
          "ref": "5ea220d6-0d11-4a8a-8603-a7fce7ad082b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04a7b862-f85e-4aec-b05d-fe1c7c31ee67"
        },
        "item": {
          "id": "9b07c472-0036-41b4-9dd5-7b404c4a7eb9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7af31b84-0888-40ad-911d-d121b69921e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5f449c-7914-4b82-a5df-77f297a6b16c",
        "cursor": {
          "ref": "ff739080-c2f6-4dfd-ae01-bc2333742cdf",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "955ed277-7551-47f1-88c0-f87cb524c5d3"
        },
        "item": {
          "id": "dd5f449c-7914-4b82-a5df-77f297a6b16c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a6fc6ff3-976c-4e66-9ed5-cec2a10742bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dee057c-a4f2-4b15-b128-4bfacb61fd05",
        "cursor": {
          "ref": "532c9a55-97b5-49de-98a0-7263795627a2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "864f1d1e-7ad0-45ad-9b27-d2e12a1cc038"
        },
        "item": {
          "id": "8dee057c-a4f2-4b15-b128-4bfacb61fd05",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f5d7f623-5127-4a86-a84a-c7ab0e6ed8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e4ce80-b447-45a9-97dc-dc8f44840a95",
        "cursor": {
          "ref": "481dc570-25f6-434e-8184-cc355b5ac914",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d24cf6a4-ea24-4b81-88b9-33fc83aa996b"
        },
        "item": {
          "id": "97e4ce80-b447-45a9-97dc-dc8f44840a95",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c5f5b52-0501-4c16-9ae2-484e20ada0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6521b491-836c-4aaa-afa6-dc11632ccbe2",
        "cursor": {
          "ref": "c9c87eff-4154-4b1c-91bf-cd87312f9001",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1246d0b7-4102-43aa-8c32-2c879795e8e7"
        },
        "item": {
          "id": "6521b491-836c-4aaa-afa6-dc11632ccbe2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2bd17103-6f29-4d01-af6c-7e3582f1c0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da241c7d-ec26-453c-90c2-146c5d70248e",
        "cursor": {
          "ref": "e7162a54-75c8-4032-8048-80ff344a267f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0bbfd832-93b8-4776-84d0-3a963eee4f83"
        },
        "item": {
          "id": "da241c7d-ec26-453c-90c2-146c5d70248e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b82f9e91-f5c1-4535-a0cb-cdcc087bdb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065889c-5f56-4798-889b-a7ed782be617",
        "cursor": {
          "ref": "740146dd-90c2-4509-a627-6e1e2bf2b065",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "54350b99-0437-44a5-8de4-7583b2c1a408"
        },
        "item": {
          "id": "2065889c-5f56-4798-889b-a7ed782be617",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "db081e78-ed7b-4882-9091-56ec2cebe212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e226a3e9-5c77-4064-ba16-da18838df95f",
        "cursor": {
          "ref": "61193d2c-2220-49d7-a524-03015f882f49",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "89f9570b-8bca-4250-b0c1-26c3a41cee30"
        },
        "item": {
          "id": "e226a3e9-5c77-4064-ba16-da18838df95f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8b592b7d-ffd0-45e6-b7f5-0e7a640891f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9fee9a-7008-4570-8c17-ceb21fc51615",
        "cursor": {
          "ref": "7382ff97-a891-4f57-96cd-32667460ccf4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ee5b0dd1-3b17-4319-8734-ca8f5d622ed4"
        },
        "item": {
          "id": "5d9fee9a-7008-4570-8c17-ceb21fc51615",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8077be88-0192-4009-a80c-23de36da535b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c76b5-7be9-4375-b03b-41120500b7bc",
        "cursor": {
          "ref": "e0a39f5d-beea-4198-bfc7-8853203ffcc8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ee0f7b10-1b22-4f9f-a0b2-c58b722212e0"
        },
        "item": {
          "id": "a71c76b5-7be9-4375-b03b-41120500b7bc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a1e0cca5-ecff-4bc4-9ab7-ca6be9647c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c632d-5502-4daf-9434-926ee681d50b",
        "cursor": {
          "ref": "255e9bb1-a604-4ffa-8664-7231963a2b1b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4bfe5183-225f-4e46-b814-a77523f64ae7"
        },
        "item": {
          "id": "d76c632d-5502-4daf-9434-926ee681d50b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9eea6b1d-f95d-4d21-b087-8f7a9f54b8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823b4e1a-3b7a-406e-91e9-5014435b324b",
        "cursor": {
          "ref": "5a3196ac-68ca-434f-9aa5-c8ff7f65b027",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f5a62a43-dbe7-4836-8e23-8ad2d6bd9e90"
        },
        "item": {
          "id": "823b4e1a-3b7a-406e-91e9-5014435b324b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ac425d2a-bdd5-4179-91c6-1e5c948d7ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e1568c-101e-4944-9229-3151a9336565",
        "cursor": {
          "ref": "6944f5b4-5722-4b5d-b933-5b4876caf9d9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ba67e741-3f61-453a-b77f-f802304d8cca"
        },
        "item": {
          "id": "f3e1568c-101e-4944-9229-3151a9336565",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3510c82f-377a-4fcc-b125-9c83cc350440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999116f5-7f5d-4a5b-8d84-aef51651c768",
        "cursor": {
          "ref": "b698aa83-c529-4c4c-8d04-d2d7106e331b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5b2b324f-b2aa-413b-b5c1-9fa5a9502e15"
        },
        "item": {
          "id": "999116f5-7f5d-4a5b-8d84-aef51651c768",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ca49b66d-06e1-4f51-81fb-273af11d2fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6953fb0d-eff7-4a09-a4f7-9599965b3bc4",
        "cursor": {
          "ref": "046188b0-6aad-4474-af10-43754783127b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b8f8e5ba-f26e-49ec-951f-54289f82c6f8"
        },
        "item": {
          "id": "6953fb0d-eff7-4a09-a4f7-9599965b3bc4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b9209507-cbfc-4e1d-8cb3-d46ace8e4647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2a0806-127f-4659-8543-febeb62e9c9d",
        "cursor": {
          "ref": "7187b3b4-c5bf-49db-9a71-4e2e464c5e45",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c48c00d6-4871-43e6-868f-af286a3d37fc"
        },
        "item": {
          "id": "af2a0806-127f-4659-8543-febeb62e9c9d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "79b379b0-cbfb-496f-8754-6c2f77c09b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d31fb06-1019-4036-88a8-34278af05560",
        "cursor": {
          "ref": "3f8bd380-2f2b-4e34-9222-7dcfd5228580",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90861efc-6157-413d-b9cc-a62e751f9c67"
        },
        "item": {
          "id": "5d31fb06-1019-4036-88a8-34278af05560",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "922b76b8-e97a-46b7-b80e-4a5110576119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a7a212-00dd-4d4e-b742-343b265dbf84",
        "cursor": {
          "ref": "80d9fe4f-b4a6-4133-b269-125605172eee",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e745cdcb-d1f3-4d7e-85a2-edc49beb96e8"
        },
        "item": {
          "id": "29a7a212-00dd-4d4e-b742-343b265dbf84",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "54240821-f066-43dc-a358-972769106ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08278bd6-5f9c-441e-84b3-4bda6ca27c53",
        "cursor": {
          "ref": "06b427bc-a57d-4404-9c29-d55baa51344b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fbbe1e1b-a1ce-45c4-b7e8-45371caf373a"
        },
        "item": {
          "id": "08278bd6-5f9c-441e-84b3-4bda6ca27c53",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9e416316-2d5b-47df-81e5-97199026da27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40ea170-95ef-47bc-a7ec-d4f51c148ab5",
        "cursor": {
          "ref": "417f86c7-1113-4b9d-9ab8-084945dd1c7e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "86cbff35-b94a-4798-9319-47b81fc7feb3"
        },
        "item": {
          "id": "f40ea170-95ef-47bc-a7ec-d4f51c148ab5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c375c01d-e400-4c89-b92d-b9ad9f603131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9195107a-cf09-484a-b8f9-55e95b87f923",
        "cursor": {
          "ref": "15876439-e56b-4725-8927-2112d56aeaf3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "92969f73-e922-48f4-9304-8e8dbfbebb9d"
        },
        "item": {
          "id": "9195107a-cf09-484a-b8f9-55e95b87f923",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "efbf7d6f-acd8-44a7-a9f5-53434f0b7ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c84f33-40bd-4644-b35d-d01cbca385e0",
        "cursor": {
          "ref": "05cedf07-2877-4160-8aa0-e257a41d4a99",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5cbd8386-d967-4b91-ae35-0cf2303dc684"
        },
        "item": {
          "id": "33c84f33-40bd-4644-b35d-d01cbca385e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f2f1aa18-c953-48f3-a1f6-2a5d351af8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f55f50-fd3a-436c-8866-ab0b4d8c3001",
        "cursor": {
          "ref": "cf54ad96-165b-4ff5-b6a5-6fa9c241b03a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "82ce2f2c-97a2-4dd4-876b-f52407ec4545"
        },
        "item": {
          "id": "b0f55f50-fd3a-436c-8866-ab0b4d8c3001",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dce389de-ed68-423a-b3ff-40946147e534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66528d2a-13ca-4cd6-8e0a-148f147e6c9a",
        "cursor": {
          "ref": "d9f1e4be-25dc-453a-8e28-9e925ad3a539",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17181861-ff35-4b14-81c0-2afdcb5f59c9"
        },
        "item": {
          "id": "66528d2a-13ca-4cd6-8e0a-148f147e6c9a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f5ae8fb4-8e04-4af0-8472-34ae5ed708f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3890e040-5acf-49be-b3f5-4672d7ffbd46",
        "cursor": {
          "ref": "019dc45e-3acc-44d6-9f09-ef3f183858cf",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c17dcd2-c4b4-4f41-8315-d2dc73c6f89c"
        },
        "item": {
          "id": "3890e040-5acf-49be-b3f5-4672d7ffbd46",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4557d67c-42b1-4f8b-9cdd-6099fe4941e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dfc1a9-f1bb-4965-a583-b3c396623eb3",
        "cursor": {
          "ref": "9359dcea-a87a-49fc-b987-3f611c402a3d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "217c559d-04db-450a-a9ac-814313e08b51"
        },
        "item": {
          "id": "a8dfc1a9-f1bb-4965-a583-b3c396623eb3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "511ba329-3eaa-4c98-a2c2-f74952930807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5059ad-8568-4ef5-9637-775129d8c182",
        "cursor": {
          "ref": "7818eb05-9e37-472f-a571-2ab3f0426177",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "893011e0-884d-4945-ae01-ecf83bca1bac"
        },
        "item": {
          "id": "fa5059ad-8568-4ef5-9637-775129d8c182",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5d37781a-81c0-4a5c-978f-ae7912be0e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaf4214-e250-4b8d-a650-9b902bdc57ee",
        "cursor": {
          "ref": "4629705d-7908-480c-8cc3-148804cd5400",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eaa027ec-bd32-4d26-81a1-78d230a6345b"
        },
        "item": {
          "id": "0eaf4214-e250-4b8d-a650-9b902bdc57ee",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c34d28d6-80a9-4c5a-8a93-8942da845b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c9810b-4ff0-42ae-a4f3-d4c4253fa591",
        "cursor": {
          "ref": "3569a01d-1bfe-4ebd-b51f-23f653baf09d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "598ce401-bc0e-4cc6-a79c-42ed0c943586"
        },
        "item": {
          "id": "47c9810b-4ff0-42ae-a4f3-d4c4253fa591",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "285682c0-ce53-43a4-9d7b-04c8757df593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7588e7da-eab6-4a4f-ad02-494ec9615130",
        "cursor": {
          "ref": "62d006a7-2223-4866-bf7c-36c6fa73ae4c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f4411bde-7b2f-40f6-ac17-b60ec7cbf313"
        },
        "item": {
          "id": "7588e7da-eab6-4a4f-ad02-494ec9615130",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8fa36456-f05e-4277-b4f7-786ba6fc25cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e0b79d-5d4c-4737-9b40-4a421e89538f",
        "cursor": {
          "ref": "dc868989-8d20-4ec7-991c-21b7499ef82e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0504afb5-8b08-4254-8df5-4ff40aeffeff"
        },
        "item": {
          "id": "50e0b79d-5d4c-4737-9b40-4a421e89538f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c65805e6-7436-45c8-b1d4-73310ff98801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecce50a-409c-46f1-ba9d-28ef5b74a32d",
        "cursor": {
          "ref": "9508cfde-138a-4806-af4d-647f681bed45",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5c599338-a9cc-4183-982c-b4085775a7b8"
        },
        "item": {
          "id": "4ecce50a-409c-46f1-ba9d-28ef5b74a32d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0c20cdaf-d133-4a15-83dc-df8e3da7cd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e7cff6a5-f060-451f-b00a-e53424d657d5",
        "cursor": {
          "ref": "655a4ce6-3365-457e-b673-f8280ef093aa",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "084faf6f-eafd-4ba5-95bd-f4781cbbb801"
        },
        "item": {
          "id": "e7cff6a5-f060-451f-b00a-e53424d657d5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a555a2b8-1a77-4166-b7f8-e5c8e922ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "15181ac0-ff79-4d87-96b9-0c3fef9773ed",
        "cursor": {
          "ref": "047b3ff8-7a8e-4764-b8cc-0d2a5b8e3a43",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "16ebad86-88d3-4d8c-bb0b-7624469ee5f6"
        },
        "item": {
          "id": "15181ac0-ff79-4d87-96b9-0c3fef9773ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c5c68d5b-122c-413c-902d-cf97763a9853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1ec47582-0cfb-43e0-bc8e-0a8de1f200e8",
        "cursor": {
          "ref": "d04a642b-986c-4ef7-9b06-838ad7a6bf58",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5880203f-0e36-4a70-bfcc-75e02f342c60"
        },
        "item": {
          "id": "1ec47582-0cfb-43e0-bc8e-0a8de1f200e8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "be0e3448-5768-4e2b-893c-4926b09b1cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fb246482-3c5b-48d6-b279-8f16a2738033",
        "cursor": {
          "ref": "d6d84f7f-7474-48b3-a9f1-19deae07d4ff",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "42e56531-c1cc-47a7-b1ac-b7c261d2a278"
        },
        "item": {
          "id": "fb246482-3c5b-48d6-b279-8f16a2738033",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "61f47312-5e2d-4bf6-83b0-a8b88083811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f09a227c-d123-4bb0-85e8-41ed742c99f8",
        "cursor": {
          "ref": "abaf90a9-8099-4134-870c-f97b610ae65f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "da7a25c0-e45a-4a2d-9d15-e862453801d8"
        },
        "item": {
          "id": "f09a227c-d123-4bb0-85e8-41ed742c99f8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5889c880-2308-468b-a1d4-2225d723678c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ae3d876c-1171-4673-a424-57a549aa1876",
        "cursor": {
          "ref": "851ff6f4-fed4-4dc9-b692-c14884635ceb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a6048860-9034-45d7-9dd7-f02cc6f8f7d1"
        },
        "item": {
          "id": "ae3d876c-1171-4673-a424-57a549aa1876",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "181093b0-3770-4367-a3e6-1411b8f219fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7eaec8d3-80f0-4d39-8646-cb895477d270",
        "cursor": {
          "ref": "e1a9ed90-5075-4261-900a-fb561237d5ae",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fd311234-57f9-41ad-a3be-a21b8582b6bc"
        },
        "item": {
          "id": "7eaec8d3-80f0-4d39-8646-cb895477d270",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "460e350d-4e7b-4038-bf0f-6cda598a157e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe7a63f-9216-4711-8b2b-ec0b87110fee",
        "cursor": {
          "ref": "c26db1aa-d693-43de-940e-124823cc4b05",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cf12892a-5add-4644-bf7e-619f75df85e7"
        },
        "item": {
          "id": "7fe7a63f-9216-4711-8b2b-ec0b87110fee",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b004c8d-5e16-4663-a8c4-64b5ee869f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da773894-694e-41bd-bbdd-ab8030a33d6c",
        "cursor": {
          "ref": "da57f1fb-75fe-4084-8729-1a9231215c07",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07ee82f1-e356-4330-be04-27eeec435594"
        },
        "item": {
          "id": "da773894-694e-41bd-bbdd-ab8030a33d6c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "22243016-653a-473f-bf6a-932569b7a62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c8a711-cacd-40c2-9610-5ca1d87b3bb0",
        "cursor": {
          "ref": "e6dfa212-a69c-4020-8150-ef0b84f972d2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9dea5c72-188b-4f8d-b8e9-15c4d3117562"
        },
        "item": {
          "id": "b7c8a711-cacd-40c2-9610-5ca1d87b3bb0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ad46ad07-94b3-443c-a542-05f67c45b72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b69c3-d13c-4c5c-b0bd-bd3b7ce4e0b2",
        "cursor": {
          "ref": "7395b87e-56ea-42ec-85c0-f29ba82c1641",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b760321c-e3d3-4776-b5f7-ac43b086f1f3"
        },
        "item": {
          "id": "6a7b69c3-d13c-4c5c-b0bd-bd3b7ce4e0b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "26a7a034-b3b7-4209-be42-054f07bfd380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc721411-4529-4035-8077-7bc2b4a51ea8",
        "cursor": {
          "ref": "bc3fe7d5-27df-4d26-b4f7-e0059afc7331",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "391656b7-efe3-44bf-95a6-226ddb971725"
        },
        "item": {
          "id": "bc721411-4529-4035-8077-7bc2b4a51ea8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5fc49d2-14d5-4fea-a8c5-e6481e8dd1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbccdae8-ab4d-4a88-8758-20979d3f4600",
        "cursor": {
          "ref": "a9ed6857-b121-4e4a-a917-14b91ab2f62f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ef589346-097c-4aaf-9ed1-24021defc758"
        },
        "item": {
          "id": "dbccdae8-ab4d-4a88-8758-20979d3f4600",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a044c566-a4ae-4bda-9b65-d6604ec59ffe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10030,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:115)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b889ed9d-fa89-4731-a7fe-d6ac62dda31f",
        "cursor": {
          "ref": "5e188c5c-11a2-4b32-9531-20cdbc135c4c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e901bd7e-026f-4c46-8389-23e317d121a0"
        },
        "item": {
          "id": "b889ed9d-fa89-4731-a7fe-d6ac62dda31f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fb72a2c1-aa6c-4bfd-b21a-54314a7d85d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979cf18d-79a7-43f8-9db1-316c41f0b753",
        "cursor": {
          "ref": "ad33318e-8258-40cc-ba0d-d19f5ff476d2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a268fee7-879e-4088-a7d0-76f1a7bfdd08"
        },
        "item": {
          "id": "979cf18d-79a7-43f8-9db1-316c41f0b753",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3f76c13c-ec5d-4b1f-b1f2-cb08b50b200f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ca275a-876b-42bc-9775-09808b651fe4",
        "cursor": {
          "ref": "1f6a9888-860f-4373-9bc6-46a64abc8bb4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "473e7ad9-7649-44b5-85e7-b5dd64bd3227"
        },
        "item": {
          "id": "31ca275a-876b-42bc-9775-09808b651fe4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd965191-b208-4bed-8294-197137ad5875",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10030,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:118)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b78c15-8435-47f7-9bae-2aa5709b4b00",
        "cursor": {
          "ref": "ffab24e0-0c22-4454-af99-f423f3bd7c3d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e0059e8d-bbcb-4056-baed-9e28f9310061"
        },
        "item": {
          "id": "13b78c15-8435-47f7-9bae-2aa5709b4b00",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5cbb5092-0dbf-470b-b426-18629a6096b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa9731-3563-410a-a671-3bb950cb6d9c",
        "cursor": {
          "ref": "acadc23a-db36-49ff-bbc5-b602514e5040",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e3f8b159-937f-4bc9-93ac-7155257f7149"
        },
        "item": {
          "id": "76aa9731-3563-410a-a671-3bb950cb6d9c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d676ebf-9c3c-4033-8df2-ae04639f146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6442952-8755-400d-b1d4-966289f51ba1",
        "cursor": {
          "ref": "3aa5e89d-dd35-4724-8bce-467b282e0022",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1282d559-0a67-4650-a30e-c2332100c6a0"
        },
        "item": {
          "id": "e6442952-8755-400d-b1d4-966289f51ba1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69f2d18f-78ee-40e7-916c-0c1d444888eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10032,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd9888-1884-4507-8cec-a1de66e51b5f",
        "cursor": {
          "ref": "d3fb97c7-c9f4-4eca-a9d0-06d810876695",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e51d666d-bff1-4500-af96-b67879a8f024"
        },
        "item": {
          "id": "65dd9888-1884-4507-8cec-a1de66e51b5f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2a161939-a89b-4ce2-9328-0b5aae9bf144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad33c061-a942-4d13-8cb8-4aa630e69774",
        "cursor": {
          "ref": "302d208e-f825-4756-aa77-00eedb12a582",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e10523c2-0add-4df6-bc93-f2d19816ed24"
        },
        "item": {
          "id": "ad33c061-a942-4d13-8cb8-4aa630e69774",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6a6d6d7e-e579-4395-a5af-78a241171a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7b86b9-f039-4c09-aa1d-14b12747b07b",
        "cursor": {
          "ref": "e4fb3a0b-d264-4dac-9d3b-b7560fb58b85",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8cad7c74-bec3-4398-b96b-f5399752b7ea"
        },
        "item": {
          "id": "fd7b86b9-f039-4c09-aa1d-14b12747b07b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94f26342-c751-48a0-8e90-ac618289eef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f463f7a9-d824-4dce-ad02-129ced6dbf16",
        "cursor": {
          "ref": "6c06f2b6-90f4-4f06-8962-5b206ee45f92",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "23361be1-a5d6-4a1e-b281-1ad86b5c85e9"
        },
        "item": {
          "id": "f463f7a9-d824-4dce-ad02-129ced6dbf16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e22ef65f-d774-45cd-a3bb-9c51fe018ee9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 10032,
          "responseSize": 109
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5f5b97-4abf-495f-bf94-a8737a654513",
        "cursor": {
          "ref": "264ffce9-e715-4172-b7d6-3237627f7bbf",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "60769d80-d323-42d4-a250-30b9a56937f6"
        },
        "item": {
          "id": "3a5f5b97-4abf-495f-bf94-a8737a654513",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "74b960a4-c708-40db-88cb-fc0beeea9132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068a3999-2ec9-43c6-9459-057402b401af",
        "cursor": {
          "ref": "b7b2eb4e-7881-4ae3-abeb-d20a53ea149d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4b7ce33f-4886-44c5-99e9-cc6828987f29"
        },
        "item": {
          "id": "068a3999-2ec9-43c6-9459-057402b401af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "47a5feec-11e3-4fa8-9fe5-f2adfd0599b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcedf23e-5c6e-49ed-b325-5cfeeb80831e",
        "cursor": {
          "ref": "8d859a12-e8e1-4f4b-8fbc-7d395b16f7a0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b371907c-d349-4152-87b0-3256b2463610"
        },
        "item": {
          "id": "dcedf23e-5c6e-49ed-b325-5cfeeb80831e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "61bb9230-8eca-40d8-90a3-986d568749f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e76d34b-660f-49a8-8b92-b0d80948c33e",
        "cursor": {
          "ref": "8c93f3e5-7985-4ec1-93ea-056a7dad706b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6725f2c3-9cf7-4690-b667-e0a7586c7ed8"
        },
        "item": {
          "id": "8e76d34b-660f-49a8-8b92-b0d80948c33e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6048b9f8-2bfc-4672-b39a-7b1b1b79fe2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e2277d-bbe8-4efa-9a55-6a697b222c44",
        "cursor": {
          "ref": "dc396d0a-c5fe-4368-a684-96643ea304fd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3a7549a4-2ee1-4869-95bb-e7152f446717"
        },
        "item": {
          "id": "96e2277d-bbe8-4efa-9a55-6a697b222c44",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76066648-cc68-4d87-ba2b-6e30d496f234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703fb419-f14c-417c-b4cd-bd6a21cc6242",
        "cursor": {
          "ref": "e6bfbbfe-a042-4a81-8cf2-ec5e85f6e9f8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f4abca05-ac76-4faa-b1d8-a5121dfa827e"
        },
        "item": {
          "id": "703fb419-f14c-417c-b4cd-bd6a21cc6242",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d379396-83ee-487b-ae5d-6f0b78124ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d408f2f-f19e-420d-85fb-eeb65655ffdd",
        "cursor": {
          "ref": "2225eb4a-c2d6-48a7-9cc1-2fc9a7ec0b80",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1fca0e9a-35bd-4236-9f2f-02020b821358"
        },
        "item": {
          "id": "4d408f2f-f19e-420d-85fb-eeb65655ffdd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c7849540-693f-494c-a23f-88bf1fd75e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6aa81f-b73c-4f8b-a8d0-5a8ff07054de",
        "cursor": {
          "ref": "ab519f74-0340-4129-8e0b-833978d69d0d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8512df90-ada3-4a6d-a901-8d3998dcf8fe"
        },
        "item": {
          "id": "4e6aa81f-b73c-4f8b-a8d0-5a8ff07054de",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "472901f2-3e56-4413-9ac9-66e5730d3445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9920be04-803a-4fc5-be7b-cb7367190709",
        "cursor": {
          "ref": "b360e8b3-9305-45e4-99d6-26262d3ad2d2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c95950a8-6b6b-4727-a704-e50062b53fe4"
        },
        "item": {
          "id": "9920be04-803a-4fc5-be7b-cb7367190709",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0f49a1df-9013-48c0-af79-96d4e084dffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c51d615-3d06-4e24-8e34-e700abb89449",
        "cursor": {
          "ref": "269941a2-5fe6-4f01-9c0e-4596c628ebb7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7221109e-6b21-4e6d-9718-c84a04bc0cdd"
        },
        "item": {
          "id": "1c51d615-3d06-4e24-8e34-e700abb89449",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3dc25832-f48b-460d-8d88-c59eb665171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27da345-9ed9-4d42-b78e-3eceb75bcc3f",
        "cursor": {
          "ref": "9c5c28d9-1699-45af-aec5-c8ff6622e8a9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ccddcffb-b242-4a34-89e9-0c68fdd09ef1"
        },
        "item": {
          "id": "c27da345-9ed9-4d42-b78e-3eceb75bcc3f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25383654-6018-4317-8884-d645eb4987f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b8979f-d8d2-43e0-a9e8-654469bf0f2e",
        "cursor": {
          "ref": "0080676c-ffd3-4cb4-96c3-b351d44357aa",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f91f3916-e286-4b1f-be65-55615f200e51"
        },
        "item": {
          "id": "c9b8979f-d8d2-43e0-a9e8-654469bf0f2e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4dbf05f-36a3-45fe-85a4-df57c8552348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e90c57-b650-4502-94de-ec7f93ac9b8d",
        "cursor": {
          "ref": "b50fb14f-e319-4a3b-b820-b81da4abf708",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9651af82-a426-4324-a05e-328caeedf932"
        },
        "item": {
          "id": "04e90c57-b650-4502-94de-ec7f93ac9b8d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c454fec-9fc8-4997-a468-ba34480612ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae41be6-4c5a-4c17-a181-7698790c2eb1",
        "cursor": {
          "ref": "869b8a8e-20e3-4d4f-bce7-973576071955",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "53b8fb7c-e7d1-452a-b2fc-e16133ff2a7a"
        },
        "item": {
          "id": "4ae41be6-4c5a-4c17-a181-7698790c2eb1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "580a0128-eeff-4ad8-a6c4-238460ce8022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d63515-f3ba-4e2e-8508-2b5951959681",
        "cursor": {
          "ref": "0a1fac80-a5af-4605-9271-1b624d2afb08",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "874c59b4-0a73-4e7c-9ca0-cb7c9e980520"
        },
        "item": {
          "id": "57d63515-f3ba-4e2e-8508-2b5951959681",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "52409c72-5750-4766-b76e-0e2aaa8903f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606cae96-46f5-4c25-8170-18b0fae091e0",
        "cursor": {
          "ref": "030cca6c-4d8f-42ad-af3b-d8bd9edcd2cd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "702fc241-09e3-4a70-85cc-aceaa53823e2"
        },
        "item": {
          "id": "606cae96-46f5-4c25-8170-18b0fae091e0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c34bd14-52cf-4aad-9673-a393b4bb88f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86faa0c1-6510-4413-a584-2c6ab614d25b",
        "cursor": {
          "ref": "e920a8f8-bfc8-491d-8e44-cd9002dc5920",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cee3125a-26d9-4acf-b977-7d86eb17e841"
        },
        "item": {
          "id": "86faa0c1-6510-4413-a584-2c6ab614d25b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "68cc47bf-4e0b-4478-91cc-f3eebade7662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0ad7ee-9e26-45e3-b2a3-c1a1adb5e8c2",
        "cursor": {
          "ref": "693f0ff6-6285-4125-99bc-1506137f852b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a884b161-3091-4ebe-ae80-66c68e261c7f"
        },
        "item": {
          "id": "3c0ad7ee-9e26-45e3-b2a3-c1a1adb5e8c2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cfdd72f1-ae4e-48a9-98a4-ff3e332fe50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb05dfc-5e03-476d-b6f3-012064241aec",
        "cursor": {
          "ref": "401b1506-4e70-4524-8fd6-4b1fb8e06a77",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ef8e1b8c-ce12-4f60-8c9b-018a1496031f"
        },
        "item": {
          "id": "3eb05dfc-5e03-476d-b6f3-012064241aec",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "30501681-518a-44a0-9722-b0d9824eada6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9042b525-fb20-40e6-86fa-a9b1c6e2df08",
        "cursor": {
          "ref": "06dd57f2-1c13-4c00-882b-a918e18fcc2e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a5695f54-dad7-4a60-aeaa-b4ebc616422c"
        },
        "item": {
          "id": "9042b525-fb20-40e6-86fa-a9b1c6e2df08",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a6e8b16c-86bf-4038-9422-12aaa8c3dccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509dcafe-1b3e-4203-a590-4eb3f5d1eb26",
        "cursor": {
          "ref": "fd16c709-c4b3-4dcf-818f-a912f6f48a4e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "88be3aa9-4491-4c76-a653-9599358c3e7d"
        },
        "item": {
          "id": "509dcafe-1b3e-4203-a590-4eb3f5d1eb26",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "13b77ab9-eece-44d9-b4bf-598e8195b33e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6278536-b40e-4bcc-a234-8ef8df0cacda",
        "cursor": {
          "ref": "b0fa9584-5793-4308-85c5-c77714c9093c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4a6704e4-cd3b-4f65-805c-25ba3a8f7be3"
        },
        "item": {
          "id": "a6278536-b40e-4bcc-a234-8ef8df0cacda",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5d172917-fef9-45f8-add9-233cb162c73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cb5a6b-bc1d-4328-a8e4-4c455a45725f",
        "cursor": {
          "ref": "f0d830c6-c8ce-4353-ab58-f474c2599c29",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "39140eee-9455-49a4-8dcf-3d935791d2fc"
        },
        "item": {
          "id": "64cb5a6b-bc1d-4328-a8e4-4c455a45725f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41258d8c-639d-4716-a47f-efd90a7e8b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4408443-6b50-4ceb-ad38-fb08a82e8620",
        "cursor": {
          "ref": "279fc5bf-9dbc-44e8-a8d6-22d07703d0b7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "05f2352d-7a0d-4edb-b49b-2eabb20b6b5f"
        },
        "item": {
          "id": "f4408443-6b50-4ceb-ad38-fb08a82e8620",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f625cba4-3c7e-4996-b3f8-5abfd9604f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380819be-4940-4354-a1c3-9e2139ef2303",
        "cursor": {
          "ref": "359e75d0-534c-416f-81c4-cafa6da7f961",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2c33e4f8-06be-48e6-a2c5-c45fadd3ecd4"
        },
        "item": {
          "id": "380819be-4940-4354-a1c3-9e2139ef2303",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "014dfd59-3409-478f-83b8-78e309356bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300a61aa-a5b8-4187-878c-8679d336944d",
        "cursor": {
          "ref": "349ebe83-1519-41ff-ad39-4627d064fff7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "154408c2-a8bb-476c-a062-f302e3a6179f"
        },
        "item": {
          "id": "300a61aa-a5b8-4187-878c-8679d336944d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "02c98ce7-3cb5-4162-a235-5dd402e3b5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1154548-b83e-4cce-b0bc-bca161efbc19",
        "cursor": {
          "ref": "5c679ac3-6ce8-497d-b2e1-a3e7fe721f4c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "71ba8fb8-c999-4d42-8bb0-89f608b40bef"
        },
        "item": {
          "id": "f1154548-b83e-4cce-b0bc-bca161efbc19",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "426d7912-dc47-4b99-829f-f6c47bf790c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c97f011-9081-42d3-aa39-120bb000ca2b",
        "cursor": {
          "ref": "c0fc61da-384b-4450-8651-a03212223e82",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "859e60bb-30e3-447d-913d-5bcca3aaa35a"
        },
        "item": {
          "id": "3c97f011-9081-42d3-aa39-120bb000ca2b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fe134cb8-76da-440a-bda4-b04743279156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bdaf31-f3ae-46db-b5ef-3f4b6aa08e95",
        "cursor": {
          "ref": "ef487249-03da-4bbb-98c4-7d02df105bed",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8d8f7efd-2bbf-423e-ba77-273c3313fdaa"
        },
        "item": {
          "id": "d2bdaf31-f3ae-46db-b5ef-3f4b6aa08e95",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d742db36-5c85-4560-9df3-aca5f9017896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b92f1-408f-445d-83c7-0241f4af1e28",
        "cursor": {
          "ref": "7967de38-8757-4a86-a87f-bb6ddd07011a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f799e1e3-a98c-4db8-97db-420cffc2e248"
        },
        "item": {
          "id": "c20b92f1-408f-445d-83c7-0241f4af1e28",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ee1c4b4d-c142-48c0-aed1-0428efc46db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7751d547-0f20-4451-9921-8cb765536b43",
        "cursor": {
          "ref": "5f41889b-260c-4d83-a75d-a363256f95a9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b45ed458-2025-4a32-a06b-99c2746f2e23"
        },
        "item": {
          "id": "7751d547-0f20-4451-9921-8cb765536b43",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f643d4d3-82ce-401c-89cd-b474dbbf9846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ed9103-9c80-40fe-9e2a-c6e21f316ee2",
        "cursor": {
          "ref": "b15bb1e3-b755-4015-8e9b-17a5bafc5a2f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "795d1158-fb74-435a-b34b-27ae79e63dd1"
        },
        "item": {
          "id": "40ed9103-9c80-40fe-9e2a-c6e21f316ee2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c7ba06ed-e4f2-4022-900e-c51146227433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfa401a-4138-412e-9403-78ab48bd99b4",
        "cursor": {
          "ref": "62be7a43-1073-4764-8f2b-845e3e784f58",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "68fad074-d485-4612-be22-c2026ca0f45c"
        },
        "item": {
          "id": "ebfa401a-4138-412e-9403-78ab48bd99b4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "78b22a10-08b4-48ad-9a93-3ac2921b6024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc58dc3-5cc9-4d25-9371-7149c263d5fe",
        "cursor": {
          "ref": "7d6045d7-bd40-471f-8e1f-7aa72efeee0e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "06b10dd1-77b5-447e-aacf-6bdd58b5e421"
        },
        "item": {
          "id": "1bc58dc3-5cc9-4d25-9371-7149c263d5fe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7aba2491-885f-48a5-b3b9-a55106a399d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6802f8-a130-4367-8c9f-5ad800d878d7",
        "cursor": {
          "ref": "fbd14674-0f52-490f-b95e-17312f22c8a7",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a690515-138a-485e-8f34-31270f44c0e9"
        },
        "item": {
          "id": "de6802f8-a130-4367-8c9f-5ad800d878d7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d3d99eec-0bfb-4bb0-9cd9-5abc3a7fb1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628a56ce-ad5c-4f64-80b9-7d8076a2bba6",
        "cursor": {
          "ref": "80f2eb43-731c-4bd4-9391-ab4b3208079a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "010b6ae0-3d16-4eac-9720-847173bdcc7b"
        },
        "item": {
          "id": "628a56ce-ad5c-4f64-80b9-7d8076a2bba6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b7bbf7d-b7e2-4961-a01e-f069b5234cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a683e4-89e7-4efb-be2e-7ddc7d9bc9b4",
        "cursor": {
          "ref": "81cba748-4a9b-407f-baf5-66f8e7588624",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "030298ce-9fa5-4e47-9785-a9818321bb31"
        },
        "item": {
          "id": "36a683e4-89e7-4efb-be2e-7ddc7d9bc9b4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74edef78-f812-465e-b4df-74724c5fe8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6174c124-b3ba-4406-b47f-31e4910dc2af",
        "cursor": {
          "ref": "c5b40436-498b-4062-be27-e71dad103dee",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a3051e81-d7f9-4c11-ab57-7453e573500d"
        },
        "item": {
          "id": "6174c124-b3ba-4406-b47f-31e4910dc2af",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2c16ac5a-4ea6-4812-a3cf-7fb01df35f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d4563a-00c6-435a-a171-c4100aaa013b",
        "cursor": {
          "ref": "b0af1f40-ffdd-4db3-aae5-71c52f886c1b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cf542025-d0ab-47ed-91b7-77937f4ad9f4"
        },
        "item": {
          "id": "b1d4563a-00c6-435a-a171-c4100aaa013b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4897812a-9b41-4012-bf76-7a8d9a55f5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b2945b-bf74-4244-af88-bc2e7c7ec08b",
        "cursor": {
          "ref": "9d9a2caf-c673-403c-8940-68497f5270fd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a92c5083-d23c-4c71-9a06-b1d72ed166f0"
        },
        "item": {
          "id": "72b2945b-bf74-4244-af88-bc2e7c7ec08b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a8a6ad05-09ca-4551-98fc-599d833248cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322d0e5d-5aa7-43ac-a8ab-0cc20b9a0d58",
        "cursor": {
          "ref": "41f22473-2ab7-42f1-b938-05c0da9c4f1c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6e1e87c0-5233-43f4-88cd-da4a009004bc"
        },
        "item": {
          "id": "322d0e5d-5aa7-43ac-a8ab-0cc20b9a0d58",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8513c7f4-9d94-4042-920f-5fa8411a9a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb87db8-b826-4d68-9b08-a8509da125a0",
        "cursor": {
          "ref": "3d4b0b98-cfa6-4edf-8c3c-62320c211b72",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "53ed4c16-af50-45da-ab18-0ce0a8a96e88"
        },
        "item": {
          "id": "4eb87db8-b826-4d68-9b08-a8509da125a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bcc01cc9-8f78-4af8-8611-b129aee7198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e80dc-8988-4a63-a8db-6c9255ef2068",
        "cursor": {
          "ref": "c55aeb34-a907-4199-bde3-505abcb44ee2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c195fa38-9e75-4a46-a727-5f8eb866da1b"
        },
        "item": {
          "id": "078e80dc-8988-4a63-a8db-6c9255ef2068",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b6e1918e-24c3-46db-ad29-ff54d36a7a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a01e4fd-9f69-45f7-85ff-33a3060cd389",
        "cursor": {
          "ref": "26dee395-2f21-4a88-8f4d-3f55152dc018",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "08518953-c35d-429d-976d-e5986523d579"
        },
        "item": {
          "id": "8a01e4fd-9f69-45f7-85ff-33a3060cd389",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f36b9fc9-ee17-4658-844f-d128b9dfb1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306ea753-d197-4523-bfd6-85446e4989a6",
        "cursor": {
          "ref": "30a6a8e9-9ef8-444d-a687-b52d9b7a3e42",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9ab1d889-513a-40d5-b240-bda3ae5e9ead"
        },
        "item": {
          "id": "306ea753-d197-4523-bfd6-85446e4989a6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "320e26e1-f0d6-4b98-ae7f-1974d173917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f063d8a5-df26-407e-ba72-9a6c0aeeb0e1",
        "cursor": {
          "ref": "bc771b84-fa43-40b6-b1ec-1bd0e3efcbf4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f3384774-ec00-4cdc-ba32-1272abb2c180"
        },
        "item": {
          "id": "f063d8a5-df26-407e-ba72-9a6c0aeeb0e1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "21ea91cb-a54e-443d-be1d-bef9a031cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5247606-e688-43f1-b09c-34eaa89431b2",
        "cursor": {
          "ref": "63cc8e07-6e52-4f07-b066-e64c309c8a2d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f7e7acb8-ba39-4377-b858-67857260eff1"
        },
        "item": {
          "id": "f5247606-e688-43f1-b09c-34eaa89431b2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9144da36-651f-40d4-8170-01fc69baa26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728920c4-105b-4db6-92f7-69830bc4f27b",
        "cursor": {
          "ref": "64ebaed5-c0d1-4941-8e73-0437fd4e3594",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5cc2217d-dca6-47bb-adbd-c0d00d0c7777"
        },
        "item": {
          "id": "728920c4-105b-4db6-92f7-69830bc4f27b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e30babae-ca62-4e75-ab5b-5193b76be16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf9ed93-6f40-4db5-bbf9-00d7aa16d9d8",
        "cursor": {
          "ref": "79555be3-33c6-4f5a-a94b-aa7a3255f828",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "774f2ebe-f935-4a1e-91f4-14998bd9b6ec"
        },
        "item": {
          "id": "acf9ed93-6f40-4db5-bbf9-00d7aa16d9d8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f9cfb985-2e48-44c4-8f8b-3569caf2e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cada899-691d-4cb5-8233-7274a575ccf8",
        "cursor": {
          "ref": "02ba8684-4981-4587-95df-4bc08059423f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5914cd77-f096-44c7-8b3b-e0e4d785eaf3"
        },
        "item": {
          "id": "5cada899-691d-4cb5-8233-7274a575ccf8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bb6c9225-ad2d-42da-bd8b-8d135c3b2955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a740800-ba40-4cf4-8f85-b396068c4b4f",
        "cursor": {
          "ref": "de1eb891-499b-4bea-86e7-c068ded7fb23",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "29120858-eae7-4019-bec0-abc3c6e95744"
        },
        "item": {
          "id": "0a740800-ba40-4cf4-8f85-b396068c4b4f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "866f6ac8-77f2-4405-9200-82034816ad2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18ec44f-ee1a-48bd-9407-cf4b1c1b505c",
        "cursor": {
          "ref": "b3ad470f-6eef-4ff6-92cf-d2efea409d62",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0c4dc73e-911b-4aa3-b6e7-86e89c3a1cd2"
        },
        "item": {
          "id": "a18ec44f-ee1a-48bd-9407-cf4b1c1b505c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "027dd19e-0a7e-4a0b-bf25-9643bc20f474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5971988b-d65d-414a-bf0b-1ecf7f267d99",
        "cursor": {
          "ref": "caa1695b-d08a-4e17-8943-6e7f6134e3dc",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "498435ee-70d6-4ec6-8532-bf7e674c79b0"
        },
        "item": {
          "id": "5971988b-d65d-414a-bf0b-1ecf7f267d99",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "88e07926-9cbb-4713-8750-2ba046155ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2d4352-180b-46bd-8ae2-5c8e37eb68e4",
        "cursor": {
          "ref": "f4b6ca99-0fb8-41a8-98d0-046ed7bfc7bd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1cfe74dc-bd07-415a-a24d-c546c0fda40e"
        },
        "item": {
          "id": "ba2d4352-180b-46bd-8ae2-5c8e37eb68e4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dfcbe5c7-f546-4786-b1c4-82bb05637ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f116015-aeb2-4d1b-aa1b-4e562f34e2cd",
        "cursor": {
          "ref": "04767ce5-b99c-4490-8322-bb9bbb9ba518",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a6f8e9e3-16a5-4137-be63-d33dc1424eda"
        },
        "item": {
          "id": "5f116015-aeb2-4d1b-aa1b-4e562f34e2cd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5f364b50-21ac-416b-9369-4c751492cda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a16d55-0cca-42da-bf71-72f768801d80",
        "cursor": {
          "ref": "bac5fd62-6bf0-4bfd-b5f0-6a1b976f4f8a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "446d064f-b157-4fd4-bc06-fd5f180c44a6"
        },
        "item": {
          "id": "88a16d55-0cca-42da-bf71-72f768801d80",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "644d6786-298f-4aa4-8eb2-9b2378146787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a302a6f-acfd-4b0c-b788-1654029eb5a5",
        "cursor": {
          "ref": "7108175d-df14-4032-ad6a-ba1f6b70f6ec",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b6ec9ff1-bb53-4d8e-9d0a-43e1c2cfefaa"
        },
        "item": {
          "id": "5a302a6f-acfd-4b0c-b788-1654029eb5a5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bfbadb5e-8258-4541-8475-2dad9f4f72df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b23eccb-537a-4af5-8d09-61fc5ce09ada",
        "cursor": {
          "ref": "3001936d-098a-419e-9f87-49562523a7c8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "22297ebd-7857-4bd2-af5a-ff3af7dd8128"
        },
        "item": {
          "id": "3b23eccb-537a-4af5-8d09-61fc5ce09ada",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4a16a978-682e-4149-ae61-0afb36d3f850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1e1e1b-910d-4f94-a023-0897abab0d3a",
        "cursor": {
          "ref": "ad8f69ed-ef27-455d-ad66-de50a3322e6d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "098a2487-d13c-4171-91d7-5f6ac3aeecb9"
        },
        "item": {
          "id": "2e1e1e1b-910d-4f94-a023-0897abab0d3a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bb4927af-f9c8-494c-90d8-6be6236ae840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9300f0a0-0ccd-4765-8592-5f1c537b1bd2",
        "cursor": {
          "ref": "5c26de04-8dc8-415d-aed7-a9583138f4ad",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8739f2c-52f9-4dbb-94ac-a4c1fc688d13"
        },
        "item": {
          "id": "9300f0a0-0ccd-4765-8592-5f1c537b1bd2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0c65b21e-3eed-4f8e-b46b-519e6a5074e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb8761-6901-4c2d-8395-5927e36b830d",
        "cursor": {
          "ref": "a1b909e1-f62e-477a-8ceb-bde89173555e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c4b6a808-cee7-41aa-bf21-1192adfca0a5"
        },
        "item": {
          "id": "4deb8761-6901-4c2d-8395-5927e36b830d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "258d1cd4-09a4-4ea2-a741-376c21583fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18cddeb-ddde-4bbb-896b-86af08269543",
        "cursor": {
          "ref": "4f18fa41-3de7-4ba2-9c2d-d375f5aac7ac",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f565c673-b3d7-4f69-894d-64fb5f5d239b"
        },
        "item": {
          "id": "b18cddeb-ddde-4bbb-896b-86af08269543",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2607cd02-a257-48fc-a5c6-00df3c8ffff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a78cd5-5053-445b-be2c-b28fe32940f5",
        "cursor": {
          "ref": "946dc018-9153-4eae-a376-058631b2e30d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "de9d9091-8658-4df9-9542-a33832e82e53"
        },
        "item": {
          "id": "25a78cd5-5053-445b-be2c-b28fe32940f5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eba72d9f-fc03-4174-b705-17b3364a7bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c72ba-5363-41ed-9fee-7bb4ba5f1127",
        "cursor": {
          "ref": "816aacaf-2b53-4231-a65e-59d49b0eed01",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ec669f06-79c3-47a5-8410-da6686ded012"
        },
        "item": {
          "id": "4e7c72ba-5363-41ed-9fee-7bb4ba5f1127",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bbfcb849-af64-4d4c-adb6-3352b0d00efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b439e6e-7b1e-4a44-a611-4c4d0f8d83df",
        "cursor": {
          "ref": "82d00b8d-609f-4b4d-ae61-5e060996315e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1732578e-8aa5-4f2a-8881-1aaf80672b79"
        },
        "item": {
          "id": "1b439e6e-7b1e-4a44-a611-4c4d0f8d83df",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aa589b0c-6e89-4e4f-b12c-cacac671f2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be56d21f-c81b-4a56-b2b0-29755871822e",
        "cursor": {
          "ref": "8bd10862-f19f-4e5a-8441-df76b5308b7b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5196d2ac-a451-4d43-9f00-2f497553e3de"
        },
        "item": {
          "id": "be56d21f-c81b-4a56-b2b0-29755871822e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c0916a1e-e748-41b3-b559-8e5dde777071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83d33ad-1dae-4f0c-87d8-88c7243c8d8c",
        "cursor": {
          "ref": "da6efc33-1559-4b48-ae06-aa628840a60d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40649a83-5ddb-47c7-b0b3-48d646641677"
        },
        "item": {
          "id": "a83d33ad-1dae-4f0c-87d8-88c7243c8d8c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2eb88cf1-d002-4146-89a2-6885a0a5c4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993426a5-601d-4b62-bcb1-fac76e3efb50",
        "cursor": {
          "ref": "c5c5d6be-75c1-4a9d-93b7-21fe24bf3178",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "33fb31a8-8113-4679-97b1-2ab238c7870e"
        },
        "item": {
          "id": "993426a5-601d-4b62-bcb1-fac76e3efb50",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1b8ca434-7ff8-404d-814d-e99060a02b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fedaf6f-060f-469e-9761-d50b87b529b6",
        "cursor": {
          "ref": "44e63de8-19e5-4a7a-8a9b-4a982ea5f98e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fd059371-5cec-4abc-8bb6-2390330c4f1c"
        },
        "item": {
          "id": "6fedaf6f-060f-469e-9761-d50b87b529b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5d0b6c75-c339-4291-adf9-179033dc60a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7969f289-e646-4752-ab5e-781819294b41",
        "cursor": {
          "ref": "8610dd82-7a43-42d5-98fa-14d24aa0d8ab",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "afc9d40c-deaa-47ed-804e-1723f292eaf9"
        },
        "item": {
          "id": "7969f289-e646-4752-ab5e-781819294b41",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "268d9afc-ba9e-4a3c-b961-71fc1c5214a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d495c76-8e2e-49fe-8937-a64f3df8fbd9",
        "cursor": {
          "ref": "547af378-78b7-4148-a924-2e27ab36d091",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "50acd4d1-f8fa-4f1c-96cf-b6f7878e1e92"
        },
        "item": {
          "id": "5d495c76-8e2e-49fe-8937-a64f3df8fbd9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eb0a9c81-86a7-4f70-9260-5180af25f9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d88db-047c-4940-912b-87e8322311a6",
        "cursor": {
          "ref": "8536311d-fefd-4df4-8847-4929864a0c94",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d8a6cd15-d1d0-414f-aef9-d00a5e1aa081"
        },
        "item": {
          "id": "2f3d88db-047c-4940-912b-87e8322311a6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "70a4db96-1328-4fa1-a003-c53c179bc3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f3544a-5f0c-4e78-ba51-3537773fe5e7",
        "cursor": {
          "ref": "43f116bb-2376-43a7-93e1-609cfb751a64",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3e6dd03b-c5e8-46e7-96f4-9a1bd20dc925"
        },
        "item": {
          "id": "30f3544a-5f0c-4e78-ba51-3537773fe5e7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae93c4b6-8701-4db8-a2d4-614931323f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5181c2d3-b7f9-4fa8-a9a9-b6f4c9dfdd25",
        "cursor": {
          "ref": "40494e1e-3e53-4369-8d8f-4d9546ea2e3c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dcb542ea-82aa-45d0-be58-c76605011831"
        },
        "item": {
          "id": "5181c2d3-b7f9-4fa8-a9a9-b6f4c9dfdd25",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3587a859-148c-47f4-a046-850ffffc80a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ab288-7c1d-429b-90ff-b48e1aacf601",
        "cursor": {
          "ref": "c216525d-85d1-4b65-bcd0-b6a43d554b4c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "99e5de96-8067-47cb-8478-cfc906b45c91"
        },
        "item": {
          "id": "934ab288-7c1d-429b-90ff-b48e1aacf601",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a39f0fa2-bcc6-4e4c-b49c-d196b6871ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa578bc4-729a-4dac-ab91-c15d61ee583d",
        "cursor": {
          "ref": "7115e9de-0996-4e80-98b1-9c50a847496d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2fa11b2f-8278-4be7-a4d8-b60acdb2a648"
        },
        "item": {
          "id": "fa578bc4-729a-4dac-ab91-c15d61ee583d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c86f5ee6-cfac-4c22-b4ef-6f62ff9b2cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e453dd9-e696-4386-869b-edbff2dd6a12",
        "cursor": {
          "ref": "1d6002be-8338-4362-ab76-f5dfbea0d0c4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "247d8de5-ed81-413a-8067-c2eae143081b"
        },
        "item": {
          "id": "8e453dd9-e696-4386-869b-edbff2dd6a12",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4fb79111-30e5-404d-8204-5872cb51c4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e5c479-e064-43ca-bad4-790b58b724df",
        "cursor": {
          "ref": "804481d7-e98d-4b36-a08d-e04c01aa6971",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "81d6713a-2014-4710-9c91-65ee19fb4b04"
        },
        "item": {
          "id": "58e5c479-e064-43ca-bad4-790b58b724df",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2bff98e9-3e08-4cb0-88a1-5d4269f084ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabc0b92-5b50-4dad-9875-ee3d87843bb8",
        "cursor": {
          "ref": "bf7fc710-46fa-488c-972b-1afccd5024e3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5db6985c-7b73-4700-9880-66b423cfe3e8"
        },
        "item": {
          "id": "fabc0b92-5b50-4dad-9875-ee3d87843bb8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2547ae4d-37a9-4dd3-8cb9-99486f24bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7354d4b6-7adc-44c1-8072-60cee02e2b73",
        "cursor": {
          "ref": "33b99498-64d2-41a6-81ad-e8dfb3f401d7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2297f81b-1ec8-47bb-867b-48ed77b048ea"
        },
        "item": {
          "id": "7354d4b6-7adc-44c1-8072-60cee02e2b73",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1f87efed-31a4-44e0-9504-6bd37ca07819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192ea58-4a70-46c4-aa83-8c5d95037f63",
        "cursor": {
          "ref": "006e740b-1372-4157-9417-eac698fd3e80",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f0e77b9-1feb-4024-9c59-1bfd30344516"
        },
        "item": {
          "id": "a192ea58-4a70-46c4-aa83-8c5d95037f63",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "79facfbf-5cc1-4ef3-9932-7e4ec90746f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd36ef7-fe77-4524-8abd-4886be96966b",
        "cursor": {
          "ref": "17f8928d-0dde-4414-b0dc-dc9626cd5800",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d2548dc1-743a-4de3-ba3e-59279c267617"
        },
        "item": {
          "id": "0fd36ef7-fe77-4524-8abd-4886be96966b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bc005570-5f2a-4d1c-917a-11ff28c55924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73645e3c-d188-4071-9d88-9929132384a0",
        "cursor": {
          "ref": "592c8a82-8d5b-4115-b943-1d9ff63c009f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4a7d9cb3-2a70-41f4-b89b-69c462a935cc"
        },
        "item": {
          "id": "73645e3c-d188-4071-9d88-9929132384a0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e4cd0cd8-d021-4751-977a-5f29b887e713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098a6d4c-eb89-4456-86f7-1e30490bede4",
        "cursor": {
          "ref": "b17f2d3b-5ec3-404b-8262-364ec6182ea1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f2a1a64b-cd67-40ac-bc30-5d51eb465d2a"
        },
        "item": {
          "id": "098a6d4c-eb89-4456-86f7-1e30490bede4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3b65e7cd-5e58-4c5a-a3c6-3de1a1209dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712fd1f6-5fdf-40c0-a6e0-8cb2cf125bd5",
        "cursor": {
          "ref": "f8f62fee-c09b-494c-9345-a31c3423cca4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fa23cc1e-ab93-4b80-8f7d-424875314bc7"
        },
        "item": {
          "id": "712fd1f6-5fdf-40c0-a6e0-8cb2cf125bd5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ac7907d2-e898-4660-81f3-71df4ac2f1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6580e52e-dd8c-409b-aa25-c574121daa79",
        "cursor": {
          "ref": "28939ccf-d39d-4b64-b4f4-5aa97c70de4e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "347ad36f-6f80-4602-8575-08d4f0912103"
        },
        "item": {
          "id": "6580e52e-dd8c-409b-aa25-c574121daa79",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "94ea95e1-eea9-485c-b72e-7b9cbb194139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376e265b-a352-45f1-a2ab-9970fc61d9b1",
        "cursor": {
          "ref": "0dc24362-1683-4f89-9b3f-9623e4df093c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "117da6cb-7bf9-4c27-b149-ec7057562a0d"
        },
        "item": {
          "id": "376e265b-a352-45f1-a2ab-9970fc61d9b1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fb6ecce6-0767-4d7f-a060-8ff1c3e5e946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d460044-35fc-406f-b102-7719da4df48b",
        "cursor": {
          "ref": "cce790cc-8124-4f20-bb4f-eeec3aeb5fe3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e5e928ca-df0e-4309-8605-c690a3698b50"
        },
        "item": {
          "id": "7d460044-35fc-406f-b102-7719da4df48b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ae98a49e-0624-4928-8670-5e76e7b058c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fac52b-333a-44e8-9f6a-0104f8344640",
        "cursor": {
          "ref": "09c72cfa-2156-4982-9f15-2b99d0d09684",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4696ca94-7f2f-461c-83b5-20bc57e628f4"
        },
        "item": {
          "id": "b5fac52b-333a-44e8-9f6a-0104f8344640",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "344f6269-d858-4e0a-a2cd-bbe226ed5c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b781d42e-95fb-45fa-a17c-cc722cb97264",
        "cursor": {
          "ref": "53619650-35e4-441a-a5e2-5f0ab94f2f76",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "623b0320-c041-480c-900c-7fa24649f90f"
        },
        "item": {
          "id": "b781d42e-95fb-45fa-a17c-cc722cb97264",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1f63a68c-1aec-4d4d-a5f3-160399eb8eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e319bce-0b50-445c-a177-d9f7b1980ef6",
        "cursor": {
          "ref": "37ada195-4361-485d-b439-8c48e06a03b0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9eb01eb3-dc97-4d32-89a9-8051a395d6e9"
        },
        "item": {
          "id": "0e319bce-0b50-445c-a177-d9f7b1980ef6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9541275-06ba-4ee9-8f0c-8b8b8a34c0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9017437-76a2-434b-a146-dad52933134d",
        "cursor": {
          "ref": "ad26bb4c-22b7-4af1-82f0-c703f455aee8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "707d827a-d406-46a4-88b8-9bb3b41a84db"
        },
        "item": {
          "id": "d9017437-76a2-434b-a146-dad52933134d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "32600072-805a-4bac-8be1-e962848bbf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5c959b-1fd5-4cdf-ac6d-673486ba0030",
        "cursor": {
          "ref": "9f85ea50-fba6-44a4-be6c-e83d15e29769",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a64e04da-e6c5-4cc2-9f23-0e0bd5427ba3"
        },
        "item": {
          "id": "1a5c959b-1fd5-4cdf-ac6d-673486ba0030",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ac2fd80-91a8-42d5-8a7d-314e82df5301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2deaf04-18ea-4908-b997-88aeac19cebb",
        "cursor": {
          "ref": "16228831-a9fc-4f0a-b244-c2bf572827e0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "59ede040-2384-4773-8c0a-04e850b66c8b"
        },
        "item": {
          "id": "e2deaf04-18ea-4908-b997-88aeac19cebb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50a69f27-7e5c-4731-8be6-a122d701fa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa82b76c-a085-4fc5-8eb7-cd980fa7be73",
        "cursor": {
          "ref": "ebbe33a0-acea-43e7-b8c0-b14ce1237892",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7eb85391-a215-4a65-9104-ce64170d6eb8"
        },
        "item": {
          "id": "fa82b76c-a085-4fc5-8eb7-cd980fa7be73",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "aa41d217-7936-4360-b9ad-cbe93941f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5624b70-e9ea-4702-9e57-e6417618d234",
        "cursor": {
          "ref": "99580376-caac-4639-b728-f15e5c2dff3f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a7faf80-cdfe-46f3-b6f6-b32d2857a3dd"
        },
        "item": {
          "id": "d5624b70-e9ea-4702-9e57-e6417618d234",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13315371-3d8e-404e-a652-58f294d5d790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032aa031-03b2-4a6d-a198-5e92cce7c373",
        "cursor": {
          "ref": "02a13179-da24-4e20-8e11-561e64e45bbd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9ea409bc-ca10-4c70-84ce-103dc9f9107e"
        },
        "item": {
          "id": "032aa031-03b2-4a6d-a198-5e92cce7c373",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "302bdb25-3f75-4b7c-bf73-cf92ce95e72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64aefa9-abeb-4548-9b46-4b15cbab09e1",
        "cursor": {
          "ref": "b0cea0ef-73bc-4d9f-acc1-5d56b818ae88",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a226fb71-564f-4dbd-9431-39d7d4ae8788"
        },
        "item": {
          "id": "e64aefa9-abeb-4548-9b46-4b15cbab09e1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1228473a-9cd7-4f86-98b8-5f7f4eb32f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd0f25f-518c-4775-b71a-2d4f46efbb79",
        "cursor": {
          "ref": "ee228d76-f87b-481e-9135-de30844da1fe",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cb8be9a4-86c6-468c-97ba-d2ae0edd7079"
        },
        "item": {
          "id": "5dd0f25f-518c-4775-b71a-2d4f46efbb79",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6231a5d4-df03-4e91-85bd-840548ae9eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b130c45-3e4b-4468-8f32-89900af75d26",
        "cursor": {
          "ref": "14cd0ef0-608b-4ffb-8dcd-7e4d55a47ad4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7246c709-4385-45d8-b18a-36ddfec59a33"
        },
        "item": {
          "id": "7b130c45-3e4b-4468-8f32-89900af75d26",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22b1c7e0-0dcf-47fb-ae84-11344171ac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4117d8e9-41f5-4996-9777-c49f3621c556",
        "cursor": {
          "ref": "ff2ac672-635d-4bf3-bba0-37ff28b91c1a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "402f8996-8abe-4b27-908c-a90bbe445c3a"
        },
        "item": {
          "id": "4117d8e9-41f5-4996-9777-c49f3621c556",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0a456ab8-2029-413c-9d19-5184ae50ff84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7790cda5-8be5-4b7e-8306-f39700bee163",
        "cursor": {
          "ref": "9955aad0-98eb-48c4-808a-8ed40353a5a8",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "25f85c21-dbb8-49ef-a50f-9127884327e4"
        },
        "item": {
          "id": "7790cda5-8be5-4b7e-8306-f39700bee163",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b946f8c7-0c23-4ced-980c-5991ea785d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc208f0-aa99-40f6-96f8-412deb12fb45",
        "cursor": {
          "ref": "7a1ea5fc-5864-434f-b84f-754d2da55fb5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "34cf540e-fbf6-4bcb-8946-701cc80dca19"
        },
        "item": {
          "id": "2cc208f0-aa99-40f6-96f8-412deb12fb45",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ae5f12bb-985d-4c92-8584-a994a8e9c489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4759c498-31fb-4b03-a555-a0bc907ee684",
        "cursor": {
          "ref": "7ce55632-148f-4393-ad84-69ec6f6f1a62",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f7c744b2-63ff-4524-83f6-cd77a77dfd23"
        },
        "item": {
          "id": "4759c498-31fb-4b03-a555-a0bc907ee684",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2aa34928-3fd2-42ad-b623-0dfc5534b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075b6a90-92b2-4ea5-9119-bca7482d2d0a",
        "cursor": {
          "ref": "f7639fe6-0001-4871-919e-3edb98cfb5b9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8fa72003-fa4c-4b13-be5b-8b840078dfd2"
        },
        "item": {
          "id": "075b6a90-92b2-4ea5-9119-bca7482d2d0a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d045a90-e9ce-420d-b032-5091ab37083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66fddef-bd17-4729-a0e5-878a821a2379",
        "cursor": {
          "ref": "1ebc7f1c-1ec9-4087-a76c-c191bb91b21f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "231a7a17-b267-4cc9-bda7-d5521cb64c9a"
        },
        "item": {
          "id": "a66fddef-bd17-4729-a0e5-878a821a2379",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4e84d8c9-3925-417f-9eef-3098a3d8a5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17ed357-b805-437e-b3e3-511fb3805a2f",
        "cursor": {
          "ref": "6492c636-6c3a-42c9-8453-50ca7f960cf4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e3800dec-67fc-46c0-b18a-3fae37b327f1"
        },
        "item": {
          "id": "d17ed357-b805-437e-b3e3-511fb3805a2f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "02afd9da-f061-454e-8860-ae81259f1304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b391f55-da18-4bc9-8b73-55018537caf9",
        "cursor": {
          "ref": "12189cda-4f76-46e0-bb71-affc7c6ec210",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d9e3249a-007a-4d89-868a-3a24ea9cf651"
        },
        "item": {
          "id": "9b391f55-da18-4bc9-8b73-55018537caf9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f9fba8b6-99e3-4291-b58d-dc3c57a86059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad5227-7dff-4850-865d-929679c27c8b",
        "cursor": {
          "ref": "b2d74630-1d69-4094-b4ba-5a155a4ae043",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ab7ae9b6-73d5-4fd4-ad66-3e20da3063be"
        },
        "item": {
          "id": "8bad5227-7dff-4850-865d-929679c27c8b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "277991db-eafd-483a-8919-57ec6f3746ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56908186-4851-47ee-b32c-f6805ed477be",
        "cursor": {
          "ref": "bb3e45c0-dbe2-41dc-838f-596b90e83a19",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "79ac6408-b5f1-4ab8-931b-8925599be2c8"
        },
        "item": {
          "id": "56908186-4851-47ee-b32c-f6805ed477be",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "82799f19-ab75-4f58-bdcd-de589847b578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7103c638-76aa-4081-92f3-d234871cf0ef",
        "cursor": {
          "ref": "0474ec8e-5044-42be-b4ce-ff583426a5c1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8627c351-8ce2-4d05-adbe-0c3de7a21b4e"
        },
        "item": {
          "id": "7103c638-76aa-4081-92f3-d234871cf0ef",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9fe739e3-43cd-4d83-8c53-2bc3b21a830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4b6a33-efb0-48b7-9ee3-677bd7339ad4",
        "cursor": {
          "ref": "fe28030f-1429-4af9-8b10-46a45e53c25b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e39fed48-931c-4cc1-9bd0-9b9bec61ff18"
        },
        "item": {
          "id": "7d4b6a33-efb0-48b7-9ee3-677bd7339ad4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f6d1b4d6-a0aa-403e-b9d5-cac2d003610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe34800-fdd3-4cfc-8ecb-51323f72ced3",
        "cursor": {
          "ref": "e6470069-867f-4390-bc14-bc45f0749edd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ecea9010-e2e6-4e6e-a12e-39d650a20a4a"
        },
        "item": {
          "id": "5fe34800-fdd3-4cfc-8ecb-51323f72ced3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f434a7d6-794b-4044-b0fd-735cddaf4d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfd65b4-7b1a-4237-9859-88568ef78791",
        "cursor": {
          "ref": "859bc7f0-e5a1-405f-860c-24bc7c32cdd5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5c87b364-a573-4e5c-bc42-8f6b11d3f616"
        },
        "item": {
          "id": "dcfd65b4-7b1a-4237-9859-88568ef78791",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9da142ac-c10f-4c07-859a-ff84349cf17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5474129-fce7-4c9d-9455-0353d60e148d",
        "cursor": {
          "ref": "fed8843d-3965-490e-aa10-8d80c8d23605",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7b239da1-c030-43a2-8954-0bab5ae3e82f"
        },
        "item": {
          "id": "b5474129-fce7-4c9d-9455-0353d60e148d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a014e9ba-13bb-4dae-b63f-5f931aa81721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea972c9-a931-467b-9eab-c0930c18bc63",
        "cursor": {
          "ref": "92c77ac0-ae1a-4a3a-83c9-13933259a198",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "59acc84f-ad22-4153-8d26-f91dc5d18794"
        },
        "item": {
          "id": "cea972c9-a931-467b-9eab-c0930c18bc63",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5153d165-e41a-432f-bc6f-8dcb313d5da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b189361c-ebba-4fae-ba8f-9da409524aae",
        "cursor": {
          "ref": "b7287827-1108-4325-9cb3-18243d8c2f99",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "31f9cc07-2a7d-4e2c-9d0d-b6097602b4b3"
        },
        "item": {
          "id": "b189361c-ebba-4fae-ba8f-9da409524aae",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2816844b-23d1-4b56-933f-1eee5908988f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b18574f-3880-4b6a-a083-bb05e29fa9fa",
        "cursor": {
          "ref": "a2f7784b-cfe0-4535-86a1-229d570c247e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "65d4a1ac-7f5b-4e31-b379-26cb5b5420dc"
        },
        "item": {
          "id": "1b18574f-3880-4b6a-a083-bb05e29fa9fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6a299ec5-663a-48f5-901a-bef2152bd9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19054f2-bfcd-47c8-8134-7e1e2f574827",
        "cursor": {
          "ref": "f7b32db5-7dbc-4ebe-b8c4-b662cdd8b32f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e987abfc-ef81-4dec-aa9e-52ca81762783"
        },
        "item": {
          "id": "e19054f2-bfcd-47c8-8134-7e1e2f574827",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "af3ec5fe-7cc6-41b5-b07c-5a31ed7662db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30471503-5cdf-4ed3-8d61-5838f31980f3",
        "cursor": {
          "ref": "d1650be3-b2e2-4943-ac84-374342cd430e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0143acf2-face-4966-94dc-ca6d6afb622e"
        },
        "item": {
          "id": "30471503-5cdf-4ed3-8d61-5838f31980f3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b3a3d998-2fa8-47e6-adac-82c58556387c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "924b49a3-ed7b-4eff-9a38-e26b0d3d3e0a",
        "cursor": {
          "ref": "b7042289-6321-442b-bdc9-149bfa1649f2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "806537b1-727f-42be-ae1d-145fb5e0c977"
        },
        "item": {
          "id": "924b49a3-ed7b-4eff-9a38-e26b0d3d3e0a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1a4122d1-f928-4a5a-9fb8-34aac4a8cc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "2a481b72-46b8-4724-a17a-07d9384d53cc",
        "cursor": {
          "ref": "3415bc6a-23ad-4224-8886-7f854ea2c88a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "af3bdd14-3741-4bf2-a2e0-81c9063b4877"
        },
        "item": {
          "id": "2a481b72-46b8-4724-a17a-07d9384d53cc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1e5b794f-674f-495a-8594-bce7d6f5943e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "b94ad91d-588d-4fb5-bd87-7f18d2f00ae0",
        "cursor": {
          "ref": "9f2e825e-b3bb-433b-802a-1678cba6cc85",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a9e8bf35-a086-443b-83fb-780637c56329"
        },
        "item": {
          "id": "b94ad91d-588d-4fb5-bd87-7f18d2f00ae0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c1252da-8aae-435f-94eb-4d3b7c3d3ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94ad91d-588d-4fb5-bd87-7f18d2f00ae0",
        "cursor": {
          "ref": "9f2e825e-b3bb-433b-802a-1678cba6cc85",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a9e8bf35-a086-443b-83fb-780637c56329"
        },
        "item": {
          "id": "b94ad91d-588d-4fb5-bd87-7f18d2f00ae0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c1252da-8aae-435f-94eb-4d3b7c3d3ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f53978-ea6c-4fb3-a20b-2d7ea4f64a94",
        "cursor": {
          "ref": "d512d04c-9f02-4716-9975-e70d6abf0a7f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1128e465-f44e-40ca-9273-0c00f5558ea6"
        },
        "item": {
          "id": "05f53978-ea6c-4fb3-a20b-2d7ea4f64a94",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f07b819e-3387-437c-8f35-65ba63e48fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323f378b-49c2-410b-9ae5-afd43eb832b9",
        "cursor": {
          "ref": "0a5a112e-05df-43f0-bf48-eb18450e8f4e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8242fb6b-244c-409a-8960-60d122cfd945"
        },
        "item": {
          "id": "323f378b-49c2-410b-9ae5-afd43eb832b9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "699cabc5-5d42-4159-9ece-b276c8f78466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}