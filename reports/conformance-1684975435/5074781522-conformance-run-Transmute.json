{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b71fca68-d56c-4421-9048-4ab9ede5e8c0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fbdeaea7-d7d4-455f-a4a5-c5dff29893c4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9d87606-618b-457f-8018-bc72d6b652e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bef49c55-e231-44f1-87ba-b5605c6c52b0"
                }
              }
            ]
          },
          {
            "id": "0091d89a-3a7a-4077-9e1b-56f1946da99b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc146c64-fab0-415d-90bd-f2ac11ae3ab6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7fdcb212-4522-463e-b869-7b7c8f6bb8e7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b6284360-858f-4732-94b6-7b199c1ceb14",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bbbc6de0-f6a3-4220-8f75-0e84f292dfad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2051819a-a795-4e8f-8190-629cc1b0ed51",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0106db19-5ec3-475f-a420-e2b29029cdd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e31a95dd-2e3d-4c47-9f6d-279ca3d4bffc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a125e78e-0bc1-4936-8882-395e325284cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14cb0b67-6bd4-46d6-a0ce-5635df478249"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98fada41-1809-4115-b969-a4ea1c6885f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e04b102-9678-450b-b9df-b2ba5356b5a4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d57e472-73c7-48ed-8bbb-01275ef1fe91",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "68308d42-ff50-45ac-8c64-ba6ff0999ab3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46befd5f-2566-4a1e-953d-25df990de8b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57723cc3-dc17-4845-b458-ca1a48981645"
            }
          }
        ]
      },
      {
        "id": "8c1bd245-b67c-440a-bd11-0f796189c63c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a43d0f5-c818-4209-8cb3-b0f6d41b3f1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "203e59c5-6f68-47ef-a197-3eb8d4cc991d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ccf6da22-a1a9-4860-b0ce-8ebf8cb84aed",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f972fc07-0dde-4fa0-90b0-05b6222f18df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8a601e8-6abe-40c9-b9a8-ec9ab8386f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c042b6a-012f-46cc-9546-732882d97e6c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3456d557-a7e4-42f1-bbcd-94fdfde17118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b52283c9-1661-454b-a7da-ec12c08f1500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0380df-798b-4879-b135-f91c7791b862",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67018523-858e-4088-9bd9-1f89a9a7347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f45d769-b122-499b-ac14-07293bc83f51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5379314-5274-40e1-ab70-ff190a89a9c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94a20b3f-f975-44d2-b205-5c09d130d2e9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9dd7d3-fd3e-405a-bb4e-fc6ff2567289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6b1ea84-a69e-47a1-ae48-654f7d57affa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414d73d3-3065-48c0-992f-aa6822a9eaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3a4351-e094-4837-bf20-5210b2f4858c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbbeaf4-cb16-4eca-8ec3-c6f3d8a9b46e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47613dbf-dd62-47c2-a7ef-4ba871df81ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cf76e38-e9b9-43dc-88cb-51fb123dbac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c0d204-4285-460a-91d5-59cd5b43783e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "03b9c689-0705-4f85-a4cf-e40a16ca0942"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14a215ad-5a8d-4f49-a43f-9a9b4b66568f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c440a5f-8810-4e88-8f3f-73c764258709",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca3c7b1e-99db-4dbc-9d81-e7d0c9328045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bb84d20-ebf5-462b-a332-1c878d278fd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96515294-c619-426c-9750-673845a55402",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "62c0e51f-d2a8-4eac-a60b-51350ff38893"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9a8587d-deb2-456d-8c3f-fc351318d3e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "097d4f7a-0d2e-49ad-8ec9-4c3ed46cef2a"
            }
          }
        ]
      },
      {
        "id": "67ef361b-cb99-436d-8065-ed5a7b3da9da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a0408b8f-45c1-4329-8492-0ced9cc112b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbfd64dc-3117-4a7f-a19e-e662f60a1948",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "16cec81e-53be-4da0-b069-4898830829a9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21423446-67ba-4249-9e29-d457ae7ea2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891d73cd-be70-4ea8-bca0-93d18af2c430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176c09c7-f372-4c55-ae02-2d42de991cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af6b1d82-da8a-4699-8590-3220e921f904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8b19e1-7f09-4a49-9835-e63b61d6011e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b2a388-a79a-4bbd-b94f-cc7b8846424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e816fb5-c72e-4e04-a9a2-92f325ac7c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c439ac-8bbb-4144-be94-d604daf5ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b64bb24-76b8-4130-a2db-c34e22220720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf97d5f-6e10-4e6b-9ed4-dc13f942c3c9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b47af1-da4b-482a-b673-86ed74489035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1626d249-8729-49e6-b5d6-c213fc4454ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7201c2-3fec-4a9b-ba0b-f7f249dae64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de22ab54-c91c-49da-b390-97a9bc137330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb00450-61ec-4a70-a401-407fb95af2d5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29929df5-317c-4e2e-9891-08ce1ddbe298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff89834-29c2-41a2-9211-7b5acbc71c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b732163-24c1-4ebc-bf2e-7302d645c35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b3443af-5a1b-48b3-8bac-1270666454b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2d1659-1bb5-4f9a-b7c7-fde9bc8cca84",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df634e40-d0cf-46d6-a681-fe99362700d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802e7409-132d-401c-8956-fe67d7e68bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74d3e1c-457e-4971-bc48-207eccaaee5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a9b036-9502-47d3-9707-95d41d1bdf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c12dd0-36cc-41f6-8c45-5492e34c795e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2dd307-cee4-4ce5-896c-7a941b290c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42725a53-5253-4718-8ad3-3ff9556d5511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d33a20-fc07-4f2e-b2a7-78fd46042fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65451fad-a137-4e4d-9114-9b1bfc42648e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a90d22a-cf30-4aba-ada5-751bfcc15c4f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5dc6f9-e2ca-4b7a-9289-e90108775f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3962e3-1cc6-4818-8dfe-6650e139b81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f14891d-7518-4c6e-9866-313746cea1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1b7086e-8c7a-4a5c-b071-331be7c1a30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1743e03-11df-4432-b097-ca0e17a9010b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2abddf9-3f40-4626-8e21-4f8ccc9acde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79133347-a17d-47f8-8fa7-308c195bb172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32abc43a-2630-4301-a904-220dd432beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7e9ab7d-f6f4-4a37-be86-f79067d0c0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd979b42-b936-40f1-ab52-216adaa062c8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f76d9e-02a0-4604-aa91-4d20b5a2c2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd9a114-bcc1-434e-ba52-e4ff9406da79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6f4928-d161-4dd2-b8c9-abd97b06af3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e13d9a9-418f-418b-b77c-f0a1e53a2d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d6ae1-b5e9-45ba-8e46-58034422dca0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3587670c-6352-4e7f-b872-2b5d03352097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aa0757-c7ba-4f1d-87b3-09637fa6a6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c9f327-b775-473e-a4a3-7ff27fabde12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99842df-2545-4ad3-a5bd-309302af7e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114f11bf-7ddc-4197-84c4-142dbf1d43d2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9850896f-3770-4742-8655-751c55127632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289a857d-d92e-40ab-8160-9725417bab5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dda7a9-7f6a-4233-898c-4eaf3b9365c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075aa277-02a3-4703-b5c3-f9f03a3906ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d004587-eedf-4fde-8fe2-4248c2890685",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c025fa1-172f-4049-8760-d80d545d5efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fb7a0a-b4ab-4596-b2f7-cc801c48a194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0db418-c5f8-4978-9b4e-f31588981030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "406ea95d-f7a9-4466-b9a4-050307b1c4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0986dfb2-f228-4f14-ad8c-99664d441276",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df47d685-eddd-45eb-b137-38d367a49803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1342e6-010e-407d-a2f7-7937904f9f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d461010-5c8e-4790-8ca6-d93ff3031ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4097bb1b-588d-4ef1-9d75-f6a896c36165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b0c06b-b04f-4ac1-9fc1-e5695ba4718e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5710228f-36b3-48c8-8abb-c35a7106e24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f19c6f-a7dd-459c-ba0b-8ebe21f04f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d57afd-6873-4538-abb0-d28db98bca2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c12682cf-cf3a-4134-bdb4-a9d561b5c24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba8cea7-9030-4896-8d5b-15793871bed7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa35d0a5-da7a-4515-9ca3-7b1fe513dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2868437-b8e4-45b8-ac82-ce5c7cc549dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd05ab46-079f-4bd6-8b46-deb6163403c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0280d6a-d525-4d44-a7f1-ce42d8fd9185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67a929c-33ba-481a-b44e-13c9a2725d4b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2127cc-1b6a-44d9-96a0-0b766dc02e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc1819a-8bbd-4330-90c5-712feb8cace3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc26049-a6e3-45b5-94a1-2960b87ea219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1557ee68-880f-4398-9f42-243af4aadef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a698319c-4ad5-49d1-b50c-b8de9958765d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17aeec1-e5bd-442d-9610-c4f741df64a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b599a65-ee0a-4903-a665-554ebf0e12ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d93de6-82af-4aef-8936-36cbf64e833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12abcf72-22d0-44fa-8743-df6a5fd24c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b67485-c18f-4733-9c9b-dd13deb1e9eb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde0a4cf-fa07-42d3-877f-ddef3033e198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da198fad-dd2a-4d5c-bc4c-54113e2c0c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6ee9ac-c2cb-4f16-86a1-a81c43280f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91dadfe-e1ce-4333-b804-492ee5838b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b603d658-9ceb-4494-9e3e-fddea4f5d4f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5d6460-4232-4637-a568-c01a87ea904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60518019-af1c-4ec3-9ee3-bff20fa26c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e40281b-1997-48a7-a287-825e1893665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e846921-dac7-478a-b841-e47e773bebb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbf5cc6-c11c-430c-8bc2-41117d306f7b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f24b3f-cf46-4aba-a741-2f28d0c03fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f6c0d3-f903-4ecd-bdd7-3e1b12e17fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4d5145-03d4-4a5e-9fb3-44c5d5a83d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1184ae7d-19d0-4fb9-8104-10e2d6ec280a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dd118c-46e7-4e62-a159-16087e87776f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a314c9f-408f-438a-b6c4-7aa1545c5cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e6a3a5-f901-401b-8848-db8a6ccea0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77495968-04f4-48e0-9a21-a3f1e65a1d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "532fb3c0-4a3b-47db-b513-58368e29cbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7540a25-206e-47e5-9ff3-d845dbe15304",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742658a5-ccbc-4a03-92cb-5a7bf74de601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad47b28e-06da-40df-bc0a-d92df6d63efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f07ace-2884-4b88-ae5e-be5f2b3e030c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ccb707-0acc-43a3-a301-1403f53c2069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5401057d-f2a0-4b2c-8cef-bb3f7eddf9c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c94ee0b-bb81-4217-b0cb-8aff62084f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d0baf5-73c3-4768-97b4-bd404d892996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553da86e-d80e-42b0-a98b-884a228fbfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9c3dfb-bc8d-4f30-ac6e-ee23ce5f1a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77473e6-8ff3-4641-b97d-ce78df3c8c5f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f063467-005f-407a-ad81-6450a87091e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55be2244-5749-4ba2-8a14-a4b9a89b1e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d71ab3-1184-4d97-ab1e-8c9c046a93cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "430e049a-42b2-47c2-993d-5bbb38e25ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfc0639-daea-4177-aa51-26b5f585029a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813857aa-8fd3-4525-8854-533fb58af599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1516d7-82ba-4fec-b5db-cd942d752041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978db286-ba61-49f9-90f2-f3d5bc4fc72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df953cff-b4ba-416b-b666-289c124afa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4850ce2e-d046-4d0b-87d4-fd2d537564e4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d944ea-4d34-4322-bff3-615d5d4860d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e48202d-addf-480e-bc21-4ec72b25efa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7278114-8515-4919-8fe9-09f386859099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "045d3298-52b3-491c-898d-37e01dd10731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bc4efe-aebc-4562-86dc-4b6c93466d60",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9ffc99-33ea-4996-a5fb-ed4d6c16de56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf3c602-cfe9-449a-ab24-c68de104196f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0b6bc-e86c-4b9c-b4c4-43562a711a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad76fe0-c787-4f2f-8b51-03dfda553f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d448169-0224-4a5b-a339-8f0a6d914576",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18450bb-1363-4d21-b815-4309e45ed76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483ae20c-960a-4d35-b7c8-e939ae56f545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c21a1a3-e5ba-44ee-9790-5446bd0315b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbec1c7-3523-468c-9417-c398668eba1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd77be1c-7bb6-4d30-b755-bccf6ac975d7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21b714b-a7f5-4ba0-8095-7583829bc870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7c81d6-e228-45dd-a91d-9fb33685b4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61057127-558f-47d0-8aa5-b3cf8e60a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2e54ec-b7a1-43f4-a978-8eb2294c6c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af03537f-07fd-4b96-86da-0391d5575b4d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d0bf06-c90e-4b4d-ad56-2d680afade1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42933f3e-d359-4c86-85dc-e3e4906cc3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c3f028-4162-48e3-b405-5603c82c211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0792256c-c3f0-4263-843b-f66b632135b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560773c0-19e4-4d45-9079-457730254f26",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d424d40c-4ade-40a2-b1d7-587ba48f844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400e1748-9d35-4676-87d2-87a2c101effe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3137ec99-d6c1-406e-be03-cfd20b9f3adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae52fd6-ff9d-41af-a8ed-5bf936cbf600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17b0435-aabc-4cb0-81f3-086d527a1692",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff027929-8278-40f1-b0ce-2a31285d96e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93f3d33-a4b3-44e5-a953-ca85edb71e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89bca9-ced5-4672-8902-ae7b559c4fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe92207-5bcd-4eac-a001-5eafbf1c6a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b6eeec-3e68-468e-987e-686ebd9cfd23",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1167b99e-372f-4897-8e38-bed45d0d6bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f175ba-c1b4-45fc-bba6-58fc7a6cea1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed5ce64-cdd4-457f-af8d-465622566fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80bb9c00-e23b-4a64-9495-3bdc149e1f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afab728-37a2-431d-810b-42a020f7ed15",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b374d6e0-3823-4429-9ef6-8fe793a15de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b932a3f-cb46-4ca9-bce0-f81e12753eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4264c77f-1a60-491d-bda3-6dd9648761c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1a8a3-c5fa-41b8-93f8-3a8b939f182b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eb1ae5-2d13-49d6-ab73-5b8cd243c216",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3807b05-0869-459a-9c70-5fd8d22850f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c286af-7f03-4001-86c3-a1be2ec172bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed8f1a2-e2b0-4d58-9372-bddc6b00deb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "505b8165-e33f-4404-9d29-a157350ccaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62ae558-ca30-4f14-9f2b-d65ef4ab5007",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9f1be3-2ad1-423d-a9d1-c0c850bb98d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a595d3d-b43d-4b1b-947e-83bb0698595d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f7ad33-855f-4653-b9b7-56da6a8f509a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf31231-fb6b-4891-8cac-4a71bd7985bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdadf66-de28-406e-b539-bdea65f48293",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36064480-1bb0-48b7-86f7-354b7485f7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390ad369-8e52-4085-ad2b-a535e21408b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12efe7e-4fdd-4cd7-a31d-70cd9036a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3b7fcc-aa5b-4260-a2ad-9d0ebb25a04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047f3b49-1dce-489e-ba9c-5d2687abb562",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f75c0f-e21b-4ba8-a921-5f600ef7105b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d781eda-9d9c-445a-b6db-1a3a8d06778e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdda11b-4bf5-4b38-ac2b-18a8d3807a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d698a7-2917-47fa-b95a-9aa7b4838c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196a3219-55e9-4cc8-94a1-94c20fc4292f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ca33c2-8515-4eb9-a1dd-39ead24b8b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba7a9d9-c169-4882-b7a4-61b5510ac00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22dc548-fa7f-4a48-9d4d-aee5cfca11cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cfabfa-35ea-4198-bff4-950f9cf66703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b863aee8-7df0-432b-8528-3c00d428836e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acd8d86-78b4-42ae-8fe6-d737b86dffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25de74bc-e693-41bd-aa71-9e08cd146d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4454fd-ea69-490c-9341-ff7dd72fbca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44dd08a5-3fc2-4f0e-ae00-ed302dc23aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867fa20f-2af9-41ba-a9ac-28ab12c6c339",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744b1278-36df-42a3-bedd-dd590ea587fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b421007f-808c-46c7-b773-4c0302163f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2dcc37-bdf1-4bed-9d04-740935ec958a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5467ed98-4e4d-4c45-8e61-4c35b2f37805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c1d946-94ca-4a3a-8205-fe6d847fb4d9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c5409f-7743-4d74-91e4-735bdca84135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7be7c0-4e8f-41dc-92de-771bc4832122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a3a882-597f-4809-a2f8-092b0e53389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "71e6a4c7-9c92-4436-9754-27278dcb227c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55a9b91-cf42-4df3-ae99-0ab17cdf74c4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff24688f-a413-4082-bde7-d7df51f19c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f07da6-0bbf-4293-b65b-137adb89ebff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7972a08-652b-4efc-aba1-1cbb87374172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7e4e1e-36f3-4e50-8b5e-fade21c18f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5cabff-0738-4cbe-a739-363b2c5b634f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d1c2f7-cfa9-43f8-82fa-379cb8166632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899fca3b-914b-4c48-aace-f00a71c89baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04f248e-a0ab-451d-9f95-d3ae773b9814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0506215c-685a-4401-85d8-930f847d603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea70721-4f8a-449a-a137-84e4c4c99063",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5267e6a4-f2d1-4d1a-a01b-7ae267aefc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e14a3dc-68db-4063-9416-13855133ab3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb7b127-cdc3-43f0-91d8-ad433da08365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05771597-040b-4f71-a535-e1db5ab276d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84554da1-2fed-4c0b-9c1c-c8e033791c93",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0525a1ee-8f42-4316-aef3-58b5d6ff2c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dd4f38-ddf9-4789-b3cd-a1a715b275e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58605740-ac8c-46d0-a3d9-638aeea8567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d376a8-fac1-4417-80fc-3b7426a8c9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c17283-33d3-4b81-b4d8-609e46501613",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc63a0e-e571-4bfe-9b66-3105356b2147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0093e9-0869-42bf-9d65-b9a3fe9b77fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0a1897-8936-4256-8734-9ff5a72c18ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f34376-7ba1-4328-ada3-b17802ceed6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4417afa7-c54a-4099-9f41-306302c5fcb5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79d5f1c-e069-407d-ab6a-c84998b01974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169ec35e-f468-40cb-afc0-a830b7529be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53ef022-6074-4f5e-ac49-1fcdda20db46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "289140ba-542e-4970-8643-40e486e19aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b54a699-84c3-47e7-94d7-d10a2b6a4d83",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db77cab-fd31-4a19-ba1e-5d063ab12d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3f3a0d-1c57-4e3e-9b05-964da873d842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4699bcf6-b360-43de-83ee-619799e39ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "353d0e5c-aa5b-453c-9fe0-10090deef94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd7505f-361b-45a1-a9ca-e5a3f2d0ac6c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c672d4f-1627-45bf-8a24-f00774563af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0eb4c77-3bf9-4783-8c3f-f6a490b80f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc029892-4771-41bf-b7cf-615182543210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80515d83-6731-4415-949d-f5ca29d733ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6606389b-8b37-4834-9d44-96fb82ec4539",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa3c538-7fef-4a25-ae52-7bfc92d78cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe67b325-479d-4e2d-b3b8-2515dc0428f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da5e97-6baa-445d-932c-4efa6a4c8e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6078e1-ca3c-43c5-832d-9a6abaf4bc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3242d052-05f6-48df-96e4-9c3be225f56a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d82603c-f427-4193-9811-f02b2efeaf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6807644-5fed-4479-a817-8331647912e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793ab0b7-4ec9-4d4f-9a3b-856ffd8b5c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "204cc858-fbe5-42ec-85c5-0761321dd178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acad832-8e97-426b-b799-76cd0f453714",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e76ff7-f01d-40f5-aba4-aa284b43d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704b948d-dfcf-4fe3-8af1-7346e63b288c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f55af9c-b3cc-4248-97d5-6a63d1261115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd5e2e7-7200-46a0-8abe-625fd5d9a521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b83cd26-56a8-4814-8394-af09379dae24",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcea5bf-b5cf-4020-b720-b5076491efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39891d6-bf1f-41ea-92b4-337d9ed63bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c672da41-3a61-4a7c-a9fd-a1ea317b7137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed53b2a-963d-4f15-9560-d4b5ef6688f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a217ac62-f73b-4a6c-9590-ff87a02759c1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8776e8bb-6841-4f74-bb54-b784d85850a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa8631f-1a76-4465-98e0-21fb936c6f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7c4908-04ef-4c21-a1a1-e88e894e5fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf730bc-8e5b-42c7-b3d7-5854bb64836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eee65f-cadb-432d-80fa-36d5eb8c2d70",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03965f77-f97d-45e4-9c0a-30b09510955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14705e23-1c4d-4d80-8c68-0e481bbf7cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf737c17-cd3c-4b3f-900c-7d39be263619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "67476d96-7150-469f-8196-457a7a78be2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbc51c5-2c93-466e-97c2-4393323d9192",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f545ee-2d2d-4171-a742-cb928048c48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40ca49b-4648-4e68-88c3-b24da40d2825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74a0caa-0ee7-414b-92cf-c68350c9a120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3676ec1-2da2-4180-8ca9-822c916ecda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff0913a-3320-49a6-bf06-01c1ee81adcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa70dc2-d265-4555-9684-a6378a131153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e024b8-f329-4a1b-b533-501472a29c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75632fb4-feae-4351-93e3-b04b1e26bb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda8099c-2b47-44b6-becb-a2c9279ddd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac165e39-48f5-41fc-a75f-1a51a6fcab96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e662f3-af8f-4309-9c1d-f2bcab486943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f0cf0f-e205-4a99-9404-7a2ca4412f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599bb69a-47f4-40fc-a4b2-f035bdcc135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "463c4345-408d-4069-a87c-8c20cd52cd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d63aa31-1f67-48d7-891f-80d6a3af3b98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7985f1-d8d4-47ef-9bac-83d2de713957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9dc2ee-50d0-49e8-a7f6-3c3194ff43d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5354094e-6700-4911-a729-fcb1153d80dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4f14e1-2a28-4107-8bf0-1ade1fe2b34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61a4054-ff8f-40fe-830c-393bb618c4ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95277617-eb99-4bbf-a648-2fba3dd0092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da15ed3b-f6f8-4d66-a8e6-3dcd76645451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a08d111-c2a9-41b3-8270-08fe65ccf122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c19e12-449d-4fcb-ba91-546cf29c61a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188e7191-fdcc-4048-8280-429160e15cc7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21e056e-96f4-4ca9-86de-3794800e4d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2371d01f-f8cb-472b-bde6-0bc5f4649e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10998e1-63a2-4cf6-8a40-407a680fcdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3010ad55-38a9-4714-bb86-679a8799a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d8b658-3cdf-456c-9c8e-d1dafec0111e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78dd623-348a-4131-9ba5-ffc5bad61a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8753ccd3-319d-43ac-af0b-518263b031d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f906545c-5726-4316-9338-670d61818caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "701e9a1d-a217-4711-bbbb-ebe2325ee780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c449897b-2d29-46e6-880e-3d99b7656f96",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abad1b35-4817-4b8a-bd22-f53760715f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ede59-7712-4432-9abc-f9ebd0492e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d100891f-13b2-4b52-a529-0d1b58c3dd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ec262e-7d64-4259-b72a-ac97e118039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2be8ab-9c22-4d8f-a519-0dc3756a0e7e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342b6a98-4d1d-46c9-be12-37be8a8e0050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26225559-7d86-4930-a7e6-d33da8d6fbd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30105ef1-500f-487c-8493-6a2152a3de1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9d6b39-08ed-463a-94a2-0089fd6847cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce713b5-428f-4b5c-b4a5-20fe6824bb66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb0c589-8ecb-4099-bbd4-92c9274801bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f374230c-bace-4188-b1ec-1e05a2cc6456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a448015d-07ec-4bf9-949f-61efd16824e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e94a75-aa99-4bfb-b756-ad1b56285c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8298f9a-642a-49ae-8c41-4f9eeee373e9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe735c-9720-468f-a0c5-4904b74c1075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868746ce-b710-45ba-9a2b-002e0fe99f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9632a7-7e2f-43ff-9e4e-30d850ab85b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0df9894e-cda2-4cf9-af89-74bff9ff8d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2108e28-c0ae-4a72-af3c-73f1f84fa46e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bccc99-a147-4858-be23-d80a31a3dd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7f9f67-f623-46bb-b8a4-61dd91effd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0ea0f2-15a2-42d5-98ed-9cea9fdbdf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ed2a62-55fe-498c-ac9b-fa99f378107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f60eafe-576f-4b05-abe5-b0197a64f265",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5221c5df-2de2-4d93-ae26-52104d557399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5edbbb-e57a-491a-8893-4a75f8f9400c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dfc003-12dc-43cf-a3a0-b84eec53b027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07173112-b52f-493a-96cf-798d439d3309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8d30b2-5b15-473d-8625-8442ce5ed228",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda0a411-de58-4768-a298-9c474f0f3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d487b61-4dea-4252-8274-9ca5525a19d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eabb73-47f0-4e0a-aac1-89c98cae6bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9864ea2-7cdf-4145-9062-a6a116f9b58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e236fb04-2c51-45fd-89bd-bdaee227fbd8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c113d30-1caf-4c25-8eaa-fb66d7754cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f81efd6-3abe-4060-8cf6-d934422ee045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0323ac7f-b182-4154-888a-2df75b144d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7557436-99c7-4fa0-abfe-4dd8da8dabfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2868985-3870-4331-ad80-9f42434111bb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c93b4b-d7cb-44e5-a746-46966c887b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909d01f5-52d2-43e7-ab30-b526fd12b98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c246f-e66f-4958-9373-90c067bcb7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9b4fc5-05ac-41af-af4f-37b8fdc703fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dba706-4ec4-4503-a145-63c0b96b3b38",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daf8d63-b2d3-4449-afc1-425a7184c89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3136cc4-b57a-4f80-9d47-47041e4cd8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1036ffda-8315-42d0-be0b-84daf0433377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15765ba5-bb97-4bae-8fda-f11cbd5b9e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a62bda-2e0e-4f4a-8109-1de500e71256",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7699e068-76cb-4c90-8e25-dcfeeb992b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19a2afb-a46e-4342-9fcd-29bc8e9da9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acabb33f-0904-4661-ae1e-0016df684939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ba9b22-90f9-4678-af33-3e3b2ad9d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106a6f52-95ab-4544-928b-4c5ae7817861",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3c11e7-fc71-49d4-a4df-07b2f141287f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5896f9-1263-48f8-9c3c-a0aef29608c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba0e656-0e81-4bd4-9767-0474c2d8f48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e1dc9ff-69ce-4b5e-a32c-08a396a9feba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7315c628-2a9c-4f56-8dab-815959216d4c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf336fb-4894-401e-a616-e28431dd6f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4dd4b8-d66a-43b4-bd5d-925f185dc9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773d621e-004b-41a0-b8aa-1f09f007dc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25189ea4-9b30-4c42-a23f-1fd2bb8d00ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc65e947-2fee-46cc-b14b-98b8eaa7467e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05304931-7742-4b09-9def-b93368262281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7016b2-1734-4579-8479-017a42d4085b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fbaf19-5ff8-4415-b6a0-721deee481f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1762c64-f707-43b7-82c7-6e60ce6ab702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ff4e54-0926-48db-8a26-cb133e21a42f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b1d6b0-ba15-4373-8891-2657c32b5584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d3eb1c-0487-45fe-8f33-49b36918f959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0ee06f-0673-463a-bed9-149312993fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa31abc5-a4da-4acf-8c5a-cba3965b398e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faded9da-09a5-477a-ad74-33d5d67341cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd01fea7-00cc-43b1-8520-f73e62a264d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7271434-3af7-4a73-8661-8f19f369a625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a1bf8b-0431-408e-9926-ecbe71357e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0552b594-b966-4807-956a-7b7641dc837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05911646-1ed9-4ff7-a7dd-36f8849f1c87",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e759f3-9a0e-4e14-ab3d-07998991596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62049888-8992-4806-8eee-92baa1019b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ea7c6a-2f96-43c0-babc-9c664aa360f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08f57775-aee8-4fd7-a167-d5400f6aacae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17268e9-fe43-4725-9361-41771357fc58",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9861753b-7e4b-4bdc-9611-ee7574848186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0eef433-b8f4-407b-977f-0e9eac80ccfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78762fd0-9c06-4ad3-b8df-9acfbb37062a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "910a7b64-b9b9-4ec4-827c-f236d4c302f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a7f782-fc0d-4f4f-98ea-8df90ca3bf3c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593c830d-cfe9-410e-9efc-3861d8449227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a99b5ac-3ff2-4360-a639-1e779f5ec9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c198db-3939-41d3-bda6-13447d63f35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "287ec483-83ea-48c8-aa0e-6e846e5e5d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f378e31-f797-4d8c-88be-d396a7216a0f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6969edc3-d4f9-4619-9c98-9e9c68213833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dabac88-0585-4192-ade4-d99dc4578e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b815715-2a57-4770-a13e-c8c2ac215bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4337301-481d-456f-8dca-750c6dda1300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c51373d-5b12-4140-85dd-9753b585cea3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec8ab3-50a5-4ee1-9dd9-b9fc377a0a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87b62cc-6fd4-47df-a176-700e364a306a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9ebce9-ba1d-48f0-9930-1acf7cc57ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc75d42-dac9-40ce-811f-6e5b0a1db9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce46ebd-f0ad-4e87-8fdc-4bc34f16e1c5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9ca4c9-32eb-4b34-b871-0645b1aa7abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db535d0f-b806-41e9-8fe6-e610223b3b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e1a3ea-006a-4f75-9739-21354a767976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60936222-8005-4c45-904c-2b6d8bfc849d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2896570-8651-4266-bcbb-847fae8bdc5c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52d9bcf-a36f-40ca-8097-fda09312f1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ac73bb-727e-4bcc-a88e-79e20f57ee1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f08ec01-8ae4-4c44-bd99-84097cf77209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e36b92d9-637a-471a-9195-e564fbc8bf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53342ee5-2c8a-4046-a26b-1020ca4c8795",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac768c1-7332-42d3-8a25-875fa40f3fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04c2975-238c-49b0-9962-c7ff92fd24c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbdcfc8-7b8d-4bf1-ab07-e7fbec5d4542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "978e4817-06cb-489b-a62e-637f5c6e0f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bdd67c-6e38-44b3-8fe2-28dde6ad4518",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c09551-eea7-4406-b080-8607403469ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191b8743-f038-47fc-a24e-a47648652e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e412d1-cb97-4926-97cc-321e504c3164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00036175-8d67-46cb-be77-2f56efd18aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc6ba1-76d2-444b-b659-04ba7f0b6fa1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c844e-5dfd-4472-9af0-d08d620fa3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bcb2b0-ff17-4567-97e2-cd00201d30d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f2ee18-2728-4adc-affd-273590648a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19f44e20-b75e-479d-95ab-43afcff7255d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70edec04-ba1c-44c0-a693-1a7923ca37dc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecb3dbc-6c1c-4913-b382-8287c403241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b08a5e-1011-4e93-bf2b-b5e044d84309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da997e0f-9bad-48c2-8958-e1e5e3bd60d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "39524a91-a982-411f-a321-ed939c365fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f82879b-fd8f-4d7b-bdd5-904e9fd6dc0c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc284db-be41-4b27-8ece-368edb8208a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529754d7-aeec-46a8-8b57-ca996c199506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7dd912-415e-4ebb-9f34-774b8f4befc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "039d0f09-5ede-4060-b3e2-670f7f712b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51edd0c0-1974-4f39-97f9-f4dcb2fed169",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cf2af3-5ab3-4dba-bcf4-eaa3bcbfc754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e0fed9f9-e594-4971-9954-80e873822e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02207bfd-cd9d-45dc-9b7f-e97bb1e4d96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e690d2f6-c4cd-4ccc-82fa-50405d86d855"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a23ecb6-96a4-4bf3-bb8c-2e418e07ff1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca7f0355-e7ee-4c59-8c9e-e8934414e741",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04f922d-1caf-47b9-8404-875d6285038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f58808c-7270-42fe-8004-85589dc95925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f478e6-616f-4f13-8a80-2daf32e29449",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1df0db85-a72f-434a-81c7-eee17df80fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b3c3d8-057e-4c26-8bed-94bcef3528b8",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e55702d-afb9-4735-93a8-fab81928ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e55322b2-cffa-404d-afed-fb97bc477d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a076b0ba-0898-4078-9823-f46a7ea563ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1632b77-b647-48f2-a900-f5bb23f73a54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5200ba2d-4266-4cfe-bd3f-84eede3944f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e4f7a18-b60c-44f6-a9c9-cf3e1f7fe382"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dd21b3e-a233-4f2f-ba22-f3d5b16598a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e91a3351-4c30-4161-9559-6849a5e44ec7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99fbea45-6681-4233-b968-ae67cfa575e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22ec9f96-fe39-4f0b-a460-8d47e058653e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "567c4915-1877-4de2-8a78-b24fd0fe2a9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c53b140-b92a-4cb9-9065-abe32771acbb"
                }
              }
            ]
          },
          {
            "id": "5addd655-58d5-41e9-90ef-fafc6c693ce2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9aecb527-9ed4-49f2-b821-53a1ec1ac2c4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df95022e-8d7c-41bb-a392-3988d7f22826",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56f46c71-4720-4427-8678-dac21bf70f27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "229dd015-ca53-4fbf-8ca3-6ad27a11479f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7acef05-770e-43e8-90e5-e47f8c6db711"
                    }
                  }
                ]
              },
              {
                "id": "1943497b-41d8-40a7-8397-78670ff9fe23",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86faa977-4667-4fcc-8eae-2d5359289b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b62de52-99d1-450f-bca0-3597b1e461d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebe564f4-1a66-4724-8ade-df6569dc5875",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7341d245-54b2-420c-a852-3f38d188d371"
                    }
                  }
                ]
              },
              {
                "id": "0adf74de-c8da-4df9-810b-c749d7add8cf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45680fb0-6195-47cd-8bb1-a16235d50947",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29516b92-325f-4476-8d6f-a3ae601351c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f390497-10e8-435e-809d-85891149de0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92e85d6a-5553-457f-a6b1-77ee55e21f48"
                    }
                  }
                ]
              },
              {
                "id": "5516689a-d383-408c-bcb8-cdf0dbfc03d8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cb6a4aa-f42a-4246-8e66-ac87063cc90e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4471e90a-cf11-4ed4-af67-6313103f7d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "239a78cf-a2e4-4f00-b35f-65118b70fe5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "40da21d6-fa8d-4a80-878a-881209833310"
                    }
                  }
                ]
              },
              {
                "id": "2548c0da-907a-4485-a93b-9fd8a212bfbc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41ec09ce-0bb8-4430-b9e3-5237939770fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83dc3404-1e55-4b0d-9444-d0547ed5983d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24339163-d991-49b2-8ef9-fb6bd782e8c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2558b839-0138-4462-8d5c-44fa2171adc2"
                    }
                  }
                ]
              },
              {
                "id": "daf076cb-31e9-4b52-bae5-68720c9ed03d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe79cda2-f101-4f81-91ea-cc164580ac96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77db4a8c-99b5-4835-b5d6-77fe00b029aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b29874ac-2b1f-4dc5-8998-ed35583f999a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50232a7e-bb5f-4669-b1f9-40f1828e8010"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d891d97-0c3a-47fc-909a-6d41c59d4f4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79309652-cbac-41c6-8f6d-def8387f0aba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a1f92ab-bb45-48d5-98a1-ac0a5a0b083a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b536e10d-c028-47f8-b4b0-42aefe0341cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88297680-b476-422c-9580-0d2fa482ae96",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d0255312-4ddd-451a-83d9-6c6f41554917"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd1a2a24-93b2-4e29-a4f4-b69b5bb69d0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9adde07-1a09-4221-a004-1888319fc950"
            }
          }
        ]
      },
      {
        "id": "477800ce-4bb7-44be-8ff6-cede29f940de",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2dfbae70-47e2-45ad-925a-31941aa11517",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3a180c7-ace3-46f7-a88c-883b86435905",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "882db1e2-133e-4b5e-af82-dcbd643fb366",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438a05a8-5aa3-4845-8a56-f1793a48c2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfcd85a-50ae-4ee9-8faf-4d9183b2cdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1a8ca1-28c1-457e-b8c7-dda5eb3cf3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df26664f-6589-4a8d-8b6e-395c9b666ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9434bb6d-a8fb-4707-9abe-1203f83acdd8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575449d-010c-49ab-8a5d-71a0f8b06764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc7a4eb-78b7-4c59-8c32-b98d1a92d5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea01f491-897d-4346-bce4-f0567f3b092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae6dff2-9153-4f17-a85a-b7eb237895aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba47ee5-ca61-452d-97bc-8b8a77a45093",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16259207-dcbc-4daf-94f2-fb548269e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3a0048-7dfc-429c-af99-bdb5e8cf2905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d279fb4-f7d4-49a7-b5ed-31d3c6a536eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d53aff98-01ba-4dfc-bb8e-348fddfb43bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556bcdf9-b98c-4bb0-a9b4-2185a92d0428",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d8596b-e8ec-4edc-8609-1eeb8322d3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234bb792-5a6f-4177-b1ab-8ab061daaa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f99f9fe-4a57-44c9-8bed-f2367c5c3817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc8736f-de6d-4abe-b933-9ea557b8ea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a5d41c-9c74-4440-98e7-2904bcc0df67",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0614d79-d3a1-4eda-aa43-6bcd832e5d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b87a33-3e4c-4acd-b268-357976d19b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8105757-93d7-4d1b-a99c-f9eca85f5c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9925470-5c3f-4813-9a6b-3e12a2f67f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f902ea5b-1e88-4637-b02f-c5e30332f5d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03f88ba-8389-43f8-b381-f216c3a928a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0958cd41-7607-4ad5-aaf6-961a7259eae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c5c17f-19f9-4673-9b6e-a5c388cc10f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29d4625-9a5f-4f27-9c40-c0c84f821180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0797b6-4820-46eb-9542-8da3c85d1949",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620bbaf-8dd7-47cb-a3d5-7256dce66174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151ac3a5-d02e-4dd1-9a6a-801e93ca05d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43454f6-e26c-48c1-a233-4cdd68813953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad5945f-3459-4ddb-8a96-6b63de6a036c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61989b87-f6cc-4bdf-a012-171bc7345482",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6827f2f4-0f3d-40f3-bdbd-7420bbee8b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2af293-bea9-40f0-a7b9-4da38ea6d60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a71d3cf-ff2e-47f3-8901-3ca7359ff3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a45be61b-5680-45a7-8c1b-9e6973df16ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8ff671-19d9-48c7-af9f-24147e89a605",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219f01fb-4848-4939-8f0e-18fab5f32b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a631933a-ee74-4c75-85d7-c773b14de76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3567c846-1ec6-43d7-bb36-44c1bbc643fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68e7a65-9e04-46c3-ac74-14db92c8f4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c2f64c-44fd-4979-9533-3373a93b091c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34981c56-e97d-4564-9403-2e19841ccae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c09640a-4e50-4b48-9746-d37775278617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34af6d4-8233-44fe-87d0-e805cd69b469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98bffbd-1f7d-453d-ac43-08f3ce76a529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36c0a5a-9415-4fe4-bd55-23c41b707b2d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97a2d9c-475c-4ef1-bd42-25677388be39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d48271-2bb3-481e-a45b-58ed63cbd9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979e9ccd-5827-44fa-ade4-8d03f83a29b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "758b955e-4edc-4223-8718-a607e5393e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaca31b-ce61-4cee-92b9-40235b50b653",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6460a45b-05c5-4e4e-b33f-ee2a9d30db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f64f493-0885-4d6d-b030-22229f7bebc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9370c868-76bf-4a18-adf5-209651e08676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bddbcdb6-0798-4669-bbe2-2e2cdb547c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163ba46e-3766-4690-a507-dbb8faea3b9b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481d5be1-d122-40bc-80d5-02c721e33600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3042a82-423d-4eaa-b446-b4bb3f8b32ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0365ce-f763-44ad-b8e6-3e3315681ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9b682b-581c-48e3-b8b4-eea14bfd60a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef87450-5507-47c6-9388-b1e51fede2d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43b3afb-5776-4774-ad43-8663748ff30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d33202e-f883-4b91-a9b5-07aa22b3fc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bd6b7e-a507-4141-8dbd-af4548f981cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "336bfe8c-ece3-446b-9425-5ee78ce21cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45e9635-8c30-4301-b312-626c280d5bef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeaea82-3c5f-431d-a479-e3bb618333fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc50fc13-8627-4619-9dae-48cd3bd3d384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb0d4b7-7510-4f47-be1d-4bf1d03f128b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5e1c2a-0f0e-473a-8bda-7aa96f33bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8191469d-a694-4739-969d-e1b6f6d1996f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20209333-0f20-4572-904f-8342801b088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4a7f3d-0f42-4d78-a2e9-c7185ba698b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593cf5f1-bc82-4b78-95cf-77ac22b90062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dc366e-da15-42f1-9a09-e73633cce106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4a7f6c-3d84-496e-9977-b9c635ea821e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6d1b08-5bfd-4806-be94-7dcf7b9910ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd9ca87-e2c6-4ec3-8b39-ad8ffb011dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee85362-b748-4a36-9c49-c61c269c63f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a29e1b8-423a-4050-8059-4d6620381101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1582608-6081-44d2-ab85-5ea218c4dc42",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc3391a-4151-4164-a712-441a66440675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fa7ba7-9513-46a3-be82-6c18cc798860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9b51a8-5be9-451f-9c00-3b4f82cdbac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed210f99-6136-4cde-8331-fa04eba96506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd06780-39a5-4336-9dd8-5cc40aec8630",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f41131-922c-4767-a825-e447e088667d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e78e77-b238-4908-b36d-c682a5d77c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a7a0c6-9c54-43b0-a2dc-4795443959fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1781cab5-7dbe-42e9-9a0c-928d5f98459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36acc784-b3ca-4c09-87d3-d313c78303b0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c38e16-4e84-4341-a52d-197cb2a9b817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8650fe-92db-4412-b507-7addee91ffe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187e09f4-0efd-45b4-8622-3fd4b2946224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c251ba84-082d-4a0f-919f-c3a5233e0883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd5590c-8d28-467b-beaf-ad98b8ed2d0b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1fe30f-1f79-4cbc-949b-cd2c15cad046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69648ffd-aed0-451d-af25-bfe3f1862725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b30544-d19f-414a-91ab-1b441f7a50ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87dc9935-62f9-4426-aa14-494a81a8ce55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60af2f65-84f5-4537-89c1-afa8f20a0301",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d972837-da82-43f3-89cb-f2bf420befbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c333c3b-8985-4b3f-9909-867c235683cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443b93f0-e5a9-4e14-a4a8-cf4b336baf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9adcd59-ee2c-4857-8bfa-d7a76e9b17d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d657c7-fd86-44fa-896a-32c38299fc67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb7afdf-2ed8-4780-b993-e172781c8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4f7367-f214-427c-9448-148b577af0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dd9e42-d677-43f3-9ccc-ead656dd5a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3746acd0-a39d-43e7-a758-a6105687b07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd58e4c-f623-4262-b8e8-e5e891694a83",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283411f5-29dd-41d7-9fc4-b64f0e6f5c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6650f9f0-94f6-4576-b23d-5e8c37dcce1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f068221-b6b7-48c6-a1f8-2840b49585ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c6f0c4-18a6-48bf-99f8-90440e64ed4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94102e2b-a9a8-4707-8732-23ec5e19734a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c181ccc9-8161-47e5-b513-0e62112aeea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655225d5-51ff-4f91-a0fe-da115065b43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc03906-0a0b-40f6-8bfb-0bec84caa4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "993cf4f5-d06d-4f9e-a2d2-8ae25dc52739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c062f71-ca48-416c-bb0f-336ebdd0d974",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff8fc0-b657-4598-a74d-3ebb66ef034f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cbe062-f028-4575-9f95-78b5c23194e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45d61d9-4bc6-47bf-ab0a-d3caec39af41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6931202-e274-4951-833a-76534ec04e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f247a3c7-b414-4165-b93a-06cd7c993fcd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c977e04e-8dda-4567-ab5d-c1bfb1aab7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4036a43c-f44e-4da9-98e8-4c77d8d3389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22acc45-bc71-455e-8a6a-297d5aa30cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5641e8-378f-46af-8f06-abfb0efb0490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9755cf-81b7-49ce-8255-b57cf3030a5f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6433b-dfe6-4c7c-82f8-7bad0a3803e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd3ea7-d988-482c-8194-9b5dea2e77bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cffbcf4-77a2-4915-a2fb-1f6e027007b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa9e714-e81f-4975-80c7-4b1c72256b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705acf8e-dcaf-44f9-a854-75e79aa3dcb5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0c7ace-f0ba-4ad0-b6bb-a06e144e4339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb94353e-edef-4ddc-a0a9-9eb9e2c1e4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946c7681-6d73-49f9-8a20-2fb04ffb3b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f03ffa-acb0-49d0-98c1-c983920844f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4592b4a3-443a-4e42-aacc-05986810d169",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77354939-15c8-40ad-b9d5-4ec39caa2ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4a2a2e-0240-44b9-8559-13923656a4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec3ccc-9ebf-450d-ba7e-80174a923261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6154aafa-6472-442f-911d-5efad2b95db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2974f47b-8afc-4353-b8c8-2e362d89e50a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7845586-06e0-4698-b691-7c1ce52fa68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73652fd4-c042-44e7-aeb7-b5e24ba8af69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7657f95d-0ffd-4860-94cc-75f9d99d95a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "273fc040-d25d-4fdd-a914-6b94d9de70a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1ff331-b99f-4b6c-9acb-7699196a6ba6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ef0198-7b08-48bd-9fce-4b3d81474903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a801e99e-542f-47b8-b43c-62c16b6d3861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bf5cba-b7df-4de1-a779-d283f6636905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed188f5f-42af-4bcc-9809-22080fd0de71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "312ad487-5d31-4322-af8f-3e304e517706",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bada50d4-5409-43ea-b52b-b33007fc700b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017019d4-5b80-4474-bba4-16423a5674fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce94dfc-5967-43ab-bba5-7bb50c791c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fd3b86-ad0e-4b33-afad-bea462714383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f71b53d-88bb-47de-b15f-f81c8f130eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4059c81-9ff9-42fc-b130-d6210435430e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aed848-6466-4f44-a2e9-e7fc429368e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "39c9a9b4-5a74-4d39-9b43-dc92abb202cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e708b9-7305-47a5-82c2-ef3a23f33473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "813271fb-0ef1-42ef-8b96-97cf7d6c8d52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5815bd09-fcdc-4d6f-9868-79928afb9fb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15fcd416-5e83-4a94-9fa1-36789ed9120d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1a3b8ab-d1f3-4011-81c8-1a8e62e61a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4faf4a6c-4878-4d8c-811f-adf3a5d25c73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62d7c16e-057a-4e6f-a573-2085e70a0db3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a1799ab-79cf-4f7e-9c96-9704cc997451"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efc7d821-d492-4591-9866-eaa99ead7e4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21144812-c0a3-4e8e-a90e-7d7e189759c1"
            }
          }
        ]
      },
      {
        "id": "e89e25c7-a9a1-476f-8a0b-b04f2eee132f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "26c34727-550d-477f-a61b-e38025de032f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1710c6b-6479-4aa0-8232-425c00aaa1f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "334cdfa3-4340-4db7-96ae-f75e82fc89c7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff346862-2b57-4855-8b64-350c477883a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f9bf10-4e16-43c2-a32e-30cab4151911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2cecd6-3fee-4838-afc9-40105294e379",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f21d59-3bd0-4872-9f8b-91c89573bc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e1721c-9acd-4935-a393-bacc48a24421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c54e0c-171b-4034-acce-2fdf8bcd1401",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37ea86b-ef3b-4502-95be-fbc8e3609a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf9a1a7-e3cd-4179-96d8-f4df75dac9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f442e15-696e-4730-b088-abe4bed23348",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9987ab-38d9-4b40-924d-971c338c6a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c2f844-211f-4c1e-ba41-36249638d0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dca642-4993-4796-a77a-99a05f9cdbd8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdee419-cf4b-467d-b2a0-dc9bb91de27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2911a253-17e9-4b5e-be8f-c4fa63d5e0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9690ec-420f-4471-8ecc-cb4058dbd8ca",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59157002-2046-4e94-aa80-bce368e626a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ba756b-59a5-4744-88cd-7e91c9e1d22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f8e634-c1a6-4cf3-98c9-349a92f9978a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeee8069-0208-4e05-b738-b296f1647230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f0c1b7-4a55-42cd-a209-6690d931b147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22915727-d089-4e00-a5cf-ec7454b58348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b26d9c0-8449-44c8-ac9b-16c66f824c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aae06e-8b4c-43b2-9cac-48f80feada01",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f66e1b5-b4ba-4ae7-9f9c-b99ff44e1a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56d0331-f6b0-4850-9516-c6c11d8a150c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c401158d-162c-44e0-bd44-254a61057e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4c3100-9257-472c-b89d-bdfecd0a7387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09405003-c93e-404d-925f-8e57f4719b0f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a02c24-4ae3-477a-b0b9-bebee1d28800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39150bb9-fbd0-4011-8425-8c0c65d4da40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa82ae04-72c2-4661-83ff-941df2710243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3fcb29-9b7d-4793-ae38-d91714abf563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931cf4b9-9073-4c35-bd70-ce891b5fc913",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566d15a7-c4eb-4471-9f02-d85498b1e867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da46541-2245-4be8-b4b6-36c115663d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2a7024-61ae-43bf-8a6e-0a41aea201a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20afc304-8f41-41ae-8de7-5d876adb238d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1b406c-2b79-4a81-82bf-5f60d774d22c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb27b3b-5d66-4eee-86e4-cc6912e06e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9133af3-b5ae-481f-9001-1abe3babcf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beb8842-f92f-4f93-9eba-4f30cb89c2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaaa538-9a4f-438a-b850-3c2037fc4895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5357e60a-6013-4d2e-aaf4-2dc96f53654e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2addf54c-3d6d-44fe-8a1d-ae6a21e3aa0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb25c518-e4e7-402a-b91c-1253cb05fc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4763bc9-ac01-426b-b02f-2f02a14ee65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec9aa7a-7713-47bc-a254-f06155a425db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b837ec-8dd7-4be2-b17f-0249ba95935d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10e1e4a-7a73-4585-8fa9-ef9ccd45b95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a589ec1-b6aa-43cd-a06c-03a90ad27802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16288098-591e-4aa9-8dca-d711016cbb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a958d315-50ab-4e75-96ec-7e16c67fead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2ad3a-fd23-4ba0-b414-ed4f1c8fada6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972e749d-a5b2-4403-b7be-13c8a2302e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ba646d-a1a1-4848-b4e0-ea4629592090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe83f4-1c16-41a6-b6d6-552d7a16d5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06571d2-37e2-4702-a6ae-fb3bddff1487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb48b36-196c-4090-a1a9-ed3f74a81e3b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cc5805-86c4-402a-b2c2-9cc1f126cd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97933ec-5b50-4abc-8526-9e1a512d073c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09bdb76-d044-409c-b9cb-5e2ce5745c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ac0552-f0bb-4da6-84b3-fbf32f1b4a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764fb318-424e-42c7-a3c8-83f37971c26d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b8028e-e560-4843-8af9-cfcd66ae8fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4708dec2-af21-49fb-933b-66a454bbe54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e202d12-b898-41aa-9735-eda2ac41483b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3437aa54-b67b-4b41-b1c5-3ed75261f238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1866191d-890f-4877-bca2-63523e9618b4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2572abb-8c59-476a-8dd8-601951af5884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e216cc-d9b4-48ee-98f8-1804eb3bfdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2daf5dd-42be-4dad-a8cf-aaa48b07a395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61663ba6-a5b6-4779-a6fc-3194671327cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ec596c-3341-495f-9642-eeb54132484d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd31a09-0331-49ac-a012-41a05ea8fe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660304c0-d6d9-49b8-803c-b8dfe4324cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5b6ef0-bda8-4d5b-a8cd-8c86dde990db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee523e5-15b5-440c-a550-3aff05dba895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ca9bfb-930a-4586-9086-5bc237813cde",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80af49e6-e74f-4ea9-b656-86ba43de2996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f2f832-68e0-419e-9532-b9fab681ecda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dabb2c-b0eb-416f-a585-78edd8a8e7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6341dfc-74e8-4b84-93a3-807e78d4cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bf2788-88de-44ca-92c4-2abf071a2cc3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25815f6-ba1a-4446-8eee-c8823d3aef45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0422d648-c243-49a7-a897-a8a9bb422313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43a53e6-6dae-4357-90b4-52fb53d0d6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b47c459-7cce-4929-a2dc-83ad61ddd57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfd1b2d-f07e-4645-9d52-f0d955c9c930",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffe9edc-d47d-4c32-aa85-36105154343e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b457f2b4-ac15-41e6-a36d-d65ec22dc592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937b9b3e-9943-4a23-a529-011b45c05745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfe07d0-a2b9-4432-8022-530b77e24e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85df85d-7a2b-4527-95a6-6dd5d9d8e34f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761ac3ea-bf9f-4dda-acfc-bdeedfbb2f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756da02a-18c0-4ee4-a2bf-0cf00b754b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac6f46-6090-4363-8ec8-bfac6be099f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052bb605-bf4d-4387-a2f0-46bfa31a9aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06738dd3-7d13-4c7b-a77b-abe86ac82561",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116ec97a-13d0-4f1f-8ba6-597d67563ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b333b4-2034-40c0-b76d-68fab9224ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa17f9c-14fd-4d5d-87f5-05b4083c5d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510663bf-3f90-4fc7-8c80-3ccc8d3bdcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb58e3d-b24c-42fc-ba64-ada5c2527c1d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb6529d-12ae-4d4e-84d7-73062fa57ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff8a6aa-da34-47e2-987b-6a35431481e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b5a756-5120-459a-ae3d-f26661486f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8885968b-2399-4d1a-97ef-2655f6bc46ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d530544-949d-4da2-9621-44f6122cbb96",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cc3e43-df60-4984-beec-3edb8dba9d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f09b66-3343-4efa-a30b-720e4c093f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54c4ee2-8c22-42c6-b293-ab6c36d0f5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a353cd7c-1dbf-4e81-bcba-52f2db174d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a0b5dd-f164-4699-87d1-9b8a7bab6806",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5103b044-6ec6-4e49-b522-3c1e84f467bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7d0739-08a5-412d-a9d0-4989ffa05a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ee6907-ac57-44a2-b094-3369d8526cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5020ed-7875-451a-8111-b75ff6ab9c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb92638-103c-436c-8542-6ba7b747e837",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e4f62d-1506-4904-8706-fc3b5cedc151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc27a52-4c4f-4dd4-a53e-46a9b82b7836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a271f1f-3093-4b77-8ab5-0aeefef01096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc44ca6-f47c-44e5-8159-dd6f0b59c868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b825c41f-e133-44db-b43a-367cedf2f1cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1c3362-e708-4c1a-b1ff-be2aa8d2b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e0f92e-ddc9-4ba9-82e8-b51993a0f249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b63ecfe-f3bb-41ed-a8fa-bbaabd8aa157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d9c5d9-a6d3-408a-bb4f-715848abe293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fd3540-693b-4d9a-955d-405c33e6e231",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a11db9-12e1-4921-9845-949c3cccc2ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a999d99f-e1fe-4bb8-80a9-0ea8cecd5f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b13a96-d92f-4554-8060-50382e236d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98717095-f1df-4405-ade5-2b70530ad7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c0a771-75ae-461b-bbe9-040398841ffb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4131c32a-7db2-42ae-9c17-251357d39bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44f6484e-d82b-48b9-aa7a-8172a39b6055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f30e67-8359-41ae-9d7d-14de05d7cd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c66155-145a-4247-8a7b-ac4dce6b4f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b80bcf1-4af0-40b7-8b57-1d6c87ec1b45",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5588aa-62d8-4e46-8476-41a4ab7e31a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862bddf0-38a0-4618-9c68-0b07e5013182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535c1d45-3c23-4127-882a-e51e00fb6ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ebd081-0e32-4e43-8f44-5c3b692c4019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f990ed-0599-4219-9f0c-f8e45734099b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ff04ee-688d-4450-9d6b-c30b13520b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1876e1c3-aada-47d3-9771-cd7092e68ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a333016-a630-4455-ac00-e76874a03f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78d1f77-0963-4698-bf26-9b2d44bbe09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c46e068-e558-4605-aebb-e60f51ad258c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df0dd19-7cd6-419e-b95a-d8d5b08c4d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96017fa-6620-4f1e-89f7-166c66cb2f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b84eb2-f7f8-429b-98e9-8f7af7ef4202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a49945-8a54-46b0-9ab5-59d9006e4e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0fa8d0-8a17-47cf-ad5b-8ce1f8873ebc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35da61a2-8dad-424b-a133-6f4328a64791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7de12b9-b23c-423f-b859-e9277fd0b1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbda802-439c-4677-b9f7-e880b4e5825a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56245539-f5c0-401e-af26-926df033c94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a817da9-5661-48ba-aa23-355979f5c306",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b31f83-5944-40fc-a139-548aed2f402a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bd0200-d22a-4bb6-9d74-30dfb6b9d7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce038aed-aa9f-4030-86dd-756fba24323f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c768492a-0e74-4f0c-849b-8b963e59b7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0033869c-5364-4231-8374-fbad5462a5e9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950019c2-49b2-4230-85d6-cb2ca84fbdf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6592be74-20d6-4f62-93c3-ceb993d3f106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e499730c-2df8-464c-a39e-b1f383ecd93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfae20b3-48c5-42cc-aea9-af37757a1ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72db1463-232d-4441-85f4-386517f49a92",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddd2298-71c3-4a8a-84a4-21b56499581b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a14c9bd-d2ac-4469-aa7f-7cce4176c1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2e9475-b49c-4a7a-9169-3cb94bb94964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe1ee46-2107-4c36-9304-1221c83e900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2496cb0-ac63-45bd-936d-1415ef73e8ea",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afb2836-66a4-4718-9488-4aea9f0d84d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba42f7c-f588-43da-b46d-5f9beb89e6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6529e5f5-afd1-4324-b63b-1c2718731652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bce2757-4d24-460b-91fb-920030c69b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f642344e-62d6-4642-be71-07f4d0922b7a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c390c353-4509-400f-a191-2075655037bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763ab178-110d-47e2-99b7-feb979f21312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed218155-2014-432b-9657-e275e89e8f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b17905-0be2-4c17-9fc7-33e2a343fd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32e5bd2-b26a-4fc0-93a2-684b88617260",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777d449-8b90-40ef-acfd-c6cd6e8052ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe348ee-32da-4a3f-983b-1c5d341916f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75cf135-4aa5-474a-b8bd-1bbafb3ec613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f091ae-24ea-4f40-ae67-d394dd352541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46e1b6a-4a55-461f-a097-fbf85769c295",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6086769c-207b-4e0a-8c0b-414f12d4c312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158c06e1-ffa9-42c9-9b9b-2eb79588bf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92834e7b-bed1-4b98-a336-f22e6d79cf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e30efa-d00e-475c-8c70-5c9d4913d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcf1bd1-9fa9-46d4-8f74-562b671d420f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641cf8a8-672b-4ce3-be83-5a188ac5d67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10cc116-e47d-44df-b627-96fba5c81984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52ec0f3-806b-4b11-99d5-45242a83f28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1077dd-8a06-4f7b-b226-852a205f9329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4304d6-4244-4198-8200-589ff3ed8ae9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f9a919-5560-4052-91b5-b89f5f664fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7c5040-70fe-4992-861c-4a7e403bdba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2190b336-7cde-4d31-9722-bf449a07cb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d032bc-feaa-4642-82c5-6f5189d51617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4856350-ba60-470a-b8f6-1fc6ab00b59b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e871b5ad-c54a-48c7-a69c-facd59307c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b8caea-a28b-46ce-83b4-c84ee2c265ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdee3846-ab97-44e5-9706-e852cdcdfd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087830ce-aa49-4704-951b-95f8f327f3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a370a4ee-0ed7-4630-aba9-5ae5e6fd1c71",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c569f90-720c-4c1c-93ea-5c0559743875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4412d0e5-271f-4fcb-adb4-b8eefa9523de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2b32a6-7536-46c3-a1ef-98e33454be64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ca7597-fb1f-4aa2-ab95-9bd3462f5dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941f8201-5dce-4152-8dfa-37096d8e6e00",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbf8669-3715-47d6-a2e9-3112ea76e6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecd4fb7-7918-4c65-906b-3e819552352d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c10d6eb-c5a8-465b-8cef-00efe3311530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d96986-ca26-40e5-8543-6bdf9040921e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ba7fac-2950-4b61-af1b-87b40978e411",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16265c9-6407-46b8-a366-86b6d2d39f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f5dc8d-91ab-4a15-b8d8-528b0057872c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc16d40-40c9-41c8-8260-98c301f06ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9c5e14-886c-49bb-a3ba-d4bc4a11a255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d51a234-59b6-4412-bc59-4c8cec48f5e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebc343d-d989-4a5c-9215-54f79960f42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7566a5b1-626c-4034-b4ba-9e1d56c79220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42454de4-5cb1-4203-a88a-0cf7489d1a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdf2bdf-8b91-4f49-97a8-fe436db0e654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501a2b8a-25ab-4793-8223-470cdc8c9ce5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4f0e46-6a09-4165-9508-fbe498b7bafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f78fe78-6287-4a9e-be68-76a68c232576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4cc29a-e086-45a4-9c51-1b9c909cd944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5315cab5-b9df-4c38-b726-49025f5f862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4a9d66-a722-4667-8e3e-4c4d33fba7b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e125f4-f64a-482d-8771-f0133b48aa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b995338-0a0e-4144-99f5-1fdbde036bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c9963c-8596-487a-af66-303cdb024a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7057bb-3c81-48c6-9df7-ba2a3668ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b370c4e-2fa1-4439-9c6f-74452d56d331",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba8ba6f-2edc-4bb0-a7cd-cea006669b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4103ec86-0125-45ff-868a-8a174439dd2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047266bb-ca61-49a9-8781-4288fefad1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08339605-663f-4373-baa2-48fd97325952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1cf2e5-eac1-40eb-b023-0cae166580b6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0f7377-eab5-411e-b5cd-c955fe3cdfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ca6271-d2e3-4261-9621-27d46aee6d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e71514-d10d-4324-8826-91d1bb6032c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e555e2-1b17-415a-b98d-f7c39785de47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c2bf9-5f90-4102-ab39-ebd6e09b5cc4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699c90e5-7981-4cf0-a8b5-6c7b55cb9374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ed1511-6c94-4372-86e9-f04d78957db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde2180f-c033-4861-bb83-6d9ff042f375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658e4d58-1c62-47df-9abb-c1b5d0fc986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaeb405-af52-44a4-aaa4-8d0829758eae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3b729b-970e-4020-9e4b-f64cc1db3239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4dc8c4-2c3f-431b-b803-587c81afe560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74c5035-dfd2-459a-8b87-23acb93d45d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2cae49-8932-4fed-a3b5-d90cf20392fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a72af6-2257-445d-bbb1-5a04fb4accc3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d2f68d-f2c7-4552-bef3-160edbeed1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08b8906-ad77-4f75-98c3-3917b60e5168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db55c5d5-8d2d-4f6e-8ace-ea1bcdfcf985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356707cb-7f2b-4292-bedc-a78be92f7353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa255a2-4d65-4660-a17c-d48d59169bf9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bafa060-92cb-4b75-9c6a-bb021e26f2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88774c30-956a-4102-8b04-133bd1be049d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f848498-f430-4b45-aad6-0380fc23f877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49323d7d-e0f1-4042-9d65-f02eee0c4b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0777753-0bde-425a-9278-22b10fc21225",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befc051c-5dfd-4162-9e6f-7bb6a7da15a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bcc1c2-4636-4ebc-9966-61b48c663471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc274a2-cbf9-429d-97f6-653aef3eb81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58727392-dbac-447a-b2b8-7126e085ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29834e5d-297d-406f-83aa-d382ab84afad",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f44a620-0f46-46ed-8717-8d8b456881ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f35f25a-0bc8-4ce6-a6f1-a8ec9d32447e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a41d462-28f6-4993-83bf-f20b91f6467b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece38aca-cbde-492c-9ac5-b593feaed678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2e3428-8c2a-4867-afd4-aacb1145770a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79498cd1-0611-42f7-a24e-dfcfc89781a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06529d89-32a3-4e3e-9d61-0c608942b621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e871add9-6812-4063-8572-5424096dbb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c94d78-f6f7-4b5f-aee2-3369ee2e837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e74b70-5576-4e39-8dbd-06feb9ca8eb4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dc3df9-db9d-4f9f-997f-956b7853484a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed1d752-9986-489e-afdf-f066d423747d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad00285-d5cc-43b8-8660-53a38b8cbb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43195e9a-2870-45d3-ae0c-6b1322433ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1be260f-d62a-46e3-a542-72acfbee871f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04e6bc3-f5a9-4d7f-95e5-288a74749314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d630348-77e0-4173-8cce-fecff0fa6f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3395d9b-8781-4132-8eef-d0c918c1c6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec84ffe-6a20-4bb2-80cc-9b3b2f0d0b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d71e62a-ca48-4435-9390-c8800cef4a6a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f692048-c8df-4ca0-8456-73bb5dab655d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bcde07-ab7e-453f-b526-35ad25a42f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0287bb22-8de0-4a7d-9687-9df8d5c2f939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2acf03-1250-41c5-88ba-ad7a6006302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0846b6-a69d-45d7-89c4-d4f68dd96b30",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdc20d3-52a4-494b-a8da-dbd0b6fd20e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd07056b-aa86-4da9-9d27-aa1043f36aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d26047-0afa-46a2-8a57-3a14ec54ba4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e70a16-39e6-44be-b178-aa2fa9f614f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3888a2a1-abdc-45cb-af32-3a677badb038",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9a4026-461b-4498-a51f-9fbaa12d15d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ebc60b2-9ab3-4733-acc7-502bb005feda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23743da-2caf-4bf3-8636-7f222e5b5a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0aedde9-6bcd-4915-9f18-22aabd5a3527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efb5ae5-0f3e-4d9e-87a5-0ec948fc7c34",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4644f96d-8651-439d-a56c-405aae8537b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0784b6-d0c4-4d66-a3bb-58d87876d47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7087b622-417a-4450-a0d4-1e0c3f586db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8704c63-03ed-49c7-9f3a-724055744e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e07ceb-8450-4551-b768-4f52ed13d71f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da85eec-3628-4e85-9c28-ae902b839fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbad78c-b437-436f-8e6f-d15b7487b7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deadc4e-6503-40fe-91d5-f1ca517f62dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0ac770-de29-4dc9-be61-591066bc2a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaaff03-743a-427f-813c-4e3f42e5ac94",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b674d3-869d-4823-91da-754cf7f0fc24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42fb9b0d-4c54-4d32-8dca-1e412d0be8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7d4caf-b1ea-480e-a790-817688b43e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52282c9-c67b-44ee-83f0-a8521c5369e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbea22e-15b3-46e3-9413-d14fafb88496",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6422ce4f-5d96-4507-be4c-68932dc97b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb829b45-b574-4e7e-93e4-d3effdd37a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df1ffa-a9a7-4916-8aef-25961b7e6b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8d1e75-93ea-48ba-81e6-d8ea70b5dc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79655e44-f1de-40bd-82bb-713be5d076d9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a77a10-4ba2-4c2d-ae69-2c5e8199b77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a2052e-8178-4b98-9e22-6e1735d09781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd00839-6dd1-43ee-9188-185e28c02f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccace60c-3f5d-4f0b-9094-ecb2a4de17b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905afd98-58c2-45ca-b96b-106b6ba32da0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466ab173-419a-470c-8e6e-ea6c5ed52c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d2f77c-003d-46b5-94f5-8e1c0ec2d947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215dc826-ee88-4323-a9bb-d59d1a188bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57ea402-bd7b-40fd-aa16-2190a7543d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11bb9c8-167e-47a2-af81-fa6b7ac669df",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ca0512-47b8-4d3f-9d83-2922d6984b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3824639b-f1fd-44e0-b8cb-55937aa698da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dde46e-1901-4eda-b058-9e60338e67a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79867a67-d6a2-4f09-930e-f0f2561cae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce199853-7702-4440-888a-90caac2720a1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458a9ce8-4ae0-4fd1-9284-6658558047c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c56e9ed-3d2d-45fc-8dad-7b74637da725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aeb5b30-cafc-4843-85cd-dad948799e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4fdcca-04e3-4dff-9738-fbbb2db49466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5f899e-87a6-4cd6-89e0-a461b4f180be",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb686957-a62d-492c-812c-19b1b5aca304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3668adb-15b1-4092-a4df-9033b6032015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ba4e0f-3eb4-43bb-80c3-bec558e28bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb85ddd-5e0b-47be-b2dd-47fee765ba77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd19c3d5-871f-4286-9384-88f3b39424c7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41da4ac9-3170-4f0d-9fa7-91dd0cb34696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150a8b16-1196-41f8-b553-37254ca8dff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e242666d-d631-4f4a-b6ea-a6b6e770a7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a45151-d6bd-476a-875a-2d4e8f21a472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef501bf9-4b0f-44bd-a183-b15940cd7df1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1b1872-1e35-49bf-bfed-5024e16a1567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb57943-78bd-4df9-abc2-4316134bb87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8523d2-d17b-4e25-a416-f919e3801a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aea3693-7236-4f2b-be51-110601a7b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cdb1e2-ae93-44ef-ba83-b95b2ce04fe9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5025a1-e91d-4154-887b-f7f2999a1a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790a05c0-8c50-408f-9ed0-c0c78b2f45bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1018e857-d6e0-4567-aaa0-ab5c10d191a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9947ee81-4444-4026-904f-58a2fb743e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc97ec10-0059-468a-9541-11bef3b1f741",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f731e4-e02d-4da0-a288-c28d6a6c38b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b07b891-56c2-40f5-b0ad-a9dbf15810b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9a7812-f2fc-4e82-aafa-0f9cf447cb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e7c6e2-d673-4757-8aef-355ffe5de655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bc5998-1c73-4c73-adab-9324f9eb5574",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c792c562-6ae3-4c67-a5fe-14808358f905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c3cbf1-45b0-48ff-87c6-6f2a060f7858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e3b3e8-bddf-405c-946f-1e4ca40fb7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce2e7c7-e730-49f7-9d7e-456650fbe069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2fcffb-2ea3-49e4-a963-896024f1c1a6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd2dbff-6629-4485-8e82-6a65a2c1d931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f5c662-0385-4e48-9372-00883dda37c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00c0d13-d900-443e-bfdc-b45122cd5b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836cf18c-ff7c-4d8d-9b64-05f7923053f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945225e4-d5b1-4706-962c-e402759d8cfe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd19e5b-7e53-43b0-b377-8df3edbb2657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10d41d9f-9dd1-4045-a3bb-d460cc256718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55422398-6e60-40fe-b9ca-57a0ce71ae8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdaa84c-c706-451a-8642-387e94ed080c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfb0222-4fa9-4d09-8675-c831857aaf48",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62d7309-dda3-4234-ab87-a71592ccb18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ad0191-4d56-4c00-8552-d4950aa03508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f945a974-bbb0-4085-8bd6-39058e9d63b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2564cbb-e596-437a-bd66-9e0b2677621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56506b4-462c-4503-ac15-dc71a0508f9a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb8c599-3aa5-4edb-b92d-d023c43bf689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846513a7-51bd-43bb-922f-4e67f85d163f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f37186-269d-4666-ba37-f7f4104b2049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9c5d8a-e7eb-470f-87a1-9e680b8da617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad37ee8-134f-471a-a88e-b18b22eadafe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f8c31-fc7e-4f03-8730-f85aaf6cef28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d582ea00-3921-455a-ace9-965f1abdd5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b2c905-e94c-4d37-9a47-f2b7dee1b77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9834f0-e234-4857-8bc4-e435cfd58de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5afd1f-d275-44cc-978f-a58852f3b154",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5965b3b2-bb9a-4700-84d4-d91c1f7bf104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e24c083-5a41-465c-8a5a-158a7923d9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e29f3ce-7c36-4f80-b43d-58da20b01f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc5934e-87e9-4d91-a792-2417697dfa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1fb755-7a7b-4de5-9852-1dbac4cdc3d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a154a29-fb4e-4b62-8bc7-a30b056e086f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7202335d-0ce0-4a9e-bef0-0b7517c09802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f875dab1-d60c-488c-be23-1d4b690b45f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019da812-5b7c-4d2a-babe-3c079aa2ee95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3034fa2c-41ff-4b2d-881c-cf55ade4c142",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c96fb2-d894-4472-89bb-0f7e13f5b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe16d56-8da4-478b-8f27-fcd4694c4be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d4ca3d-ff5a-4175-aace-175d729bca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38404823-3d26-4bdc-bf33-a3c7d1886c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb52480-6144-4210-82f0-52c0daa923a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5910ac91-9614-465b-a032-b79d7dd9b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6bf6bd3-5964-41e0-a6c5-de5b672e1eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e67206-d538-4f53-9156-f4fdcb970082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a509e54d-4a35-4baa-97e6-677bb083921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3093308-0c1c-4b80-b3f2-946c477ed846",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d94e1f-d10b-42d2-aa1e-88c78abd5e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41475bf-cf06-43fc-be68-56b7e2704e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e6b5ae-0a07-4d51-bd4b-137204862a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a792c3a-7911-4615-8a3e-eac01c66fff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f13d31-047f-4f8a-a651-f1fd0d1a75b1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb32c2a-1f57-4658-98bc-ea0564df3307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123c6c90-8a68-4727-b319-5585081b9ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09d9c6b-4324-4afe-b506-79544c8d3e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cee1a1e-41bd-4cc7-b471-9b802468dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6b93b5-edcb-466c-bf08-681a1e1b0d73",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54355382-c144-4345-acb6-b8ffdf7c2cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a981b0-dabf-4c83-b372-8e7b289d49d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ba8b66-3d59-48b4-b582-06dec7999aca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99495712-a1da-4667-b66d-de20ec5b8fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38e6543-ee8b-4ef5-a3fe-f6eff1d465a1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef7ff97-0001-454b-8439-8dc9d0c2063c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd7576f-9a37-4884-844e-9d1216749d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c27fc0-3414-4f88-9221-040605effef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c951bf46-ed80-49fe-bc34-ef67fe2dbc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6984bf69-cefb-4406-9f97-b36db5034736",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0acd69-1cf3-426d-b906-188cec8c6113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42367319-55d9-447d-9725-cd8eceee15d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7956f5d4-a6ff-46fb-8443-4e3bbc132653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bba2209-ca0e-4f6b-b556-deb39a9994ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb574ada-3db4-4057-a306-d1387f789715",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e72392-b484-4bbd-af09-1651baed7b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2e91af-2ed9-4468-8bdf-fc7d870b09d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc63e45-6860-41ac-970a-5b9c7ecf7235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8051e79-63d7-4a6f-9092-c4a7523c6054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f412302-6e5b-496a-ab9a-5b141d850c41",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b50be8-5d85-4642-ad1a-2ebf1c1469a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7695ea-229e-460e-b07c-99c211427c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d9c79f-6003-4ebc-928f-c079b4b5665e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af273519-85e1-4de2-a38d-8072f8cea43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8027d18-90a0-47d5-acbc-c9b79dc50491",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a973ac6-391a-4826-b207-f0c76ee02f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277b690a-9db5-4390-82fd-e0c4e4806700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55462d96-730b-4356-9178-dac1d79628be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b0f52f-f6bc-46dd-aadc-eece459d3c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f1d084-fa85-4e82-b822-2c84143f178b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a4bc5-1d1d-4276-98c7-78a8ff0b47ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f06e0749-8bba-4008-b586-2be82e2080f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e42d93-7c78-4d24-9a1c-a840400d1b54",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a96872b-e23f-4116-8a17-1a0f67978b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ec0592-2db1-4706-bf4b-4c8b730df2ac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b9e765-2984-4971-af0a-3eba17391044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "897ac671-5ffb-4378-917e-25a78f3a26c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d992885e-4c06-4ecd-8c42-ecd3f56348a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448c2f95-b7e7-4208-82e3-7eda597bce52"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b90e8444-abc4-491b-b7ff-b6eb719496e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da712965-ab09-4549-9f91-0120789f9349"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "636edb27-d22b-425f-aa35-72f578109569",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bed8c1bf-a5fa-4a04-9c7d-4d3e203adbb9"
                    }
                  }
                ]
              },
              {
                "id": "4ba53e53-615e-4fd6-92b2-48f307a5c9ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7105712-c7f4-467c-9718-85fecb3ea4f5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca03bcb-f349-4f7c-b01a-0156125f958d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f20b25dd-13dd-4b8a-b92f-9d474ff83fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413726ae-b3f5-448e-aaf0-3cf76ef6bec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9951255-177f-4846-b294-1c6ed222d6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9755af95-f687-44ae-8801-0da8548ac1af",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc636ea-58d2-496a-b3ed-2eb126f76fd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3ce2cf3b-c935-4a52-8ece-528571fffdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965c0bc2-f858-4051-8948-d597de16cbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a10ecd6-93b7-4bcd-81c1-52ee4420228f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e9066e2-64b7-44d9-9fa5-eb8f055f1789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6f0b6a1-199a-4aaf-896e-caceb7e1aafd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "628c2f5f-9cb1-42f5-8d99-6add291a8f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ddcdb8f-7350-431f-9163-3bd81bd656d1"
                    }
                  }
                ]
              },
              {
                "id": "8a582a83-3701-4c2e-ac35-11309fc9389e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "35179ee6-c053-413f-9062-8f87ee28e7cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b86431-421e-4d66-ad18-0ac87447b0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c684e357-8368-43a0-9cfc-bda1b5068e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505cb872-1cb0-4953-980e-74798b771eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f18eac-1d4c-4bff-bc92-3949ade49ca9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9afe876a-b41b-4fc6-9514-fdf01688347b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "106caf77-3ae7-422a-861b-76287558bc5a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d264a09-868b-4068-b825-7eefa4459673",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df0c0f0d-3c97-44bb-9625-a5b7251f7fae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9679a996-1e62-4e6f-941b-e6225ba5deb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c84173f-c795-4f32-a874-cc1667219fcd"
                    }
                  }
                ]
              },
              {
                "id": "c19a594c-75fb-4c76-8540-d3d764f48b86",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18482b44-5fe3-4a3f-823a-53f8dd3914cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61ebc7e9-3ec5-4149-80f2-48ee24805555"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "512d51d2-9744-43e9-b74e-7c56266df7c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a905dfc-c1e2-444b-abaf-6791be1f31a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "424e2534-10de-4ed5-b698-a3268063ef1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d1ac6e16-3a9f-4bb2-9b5e-cf91082797d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2758bee-fcad-4997-b84a-f641df5d9e28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77446b13-59b8-4653-a4ff-5e8a77d39dd1"
            }
          }
        ]
      },
      {
        "id": "ba3e5ccf-aa8e-45f5-8cf4-a8ac1ae0c314",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2a0b97c2-06d1-42d8-a210-5b4ce0b3c1f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6543317f-9c52-4962-aa37-ec5e65697452",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f094020-87ed-4966-b125-87e64b071280",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4791460b-37c4-4b70-a83c-ba865d3f18a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8455481d-c817-46cb-892c-158cd215aa10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a7da67-a1c5-4288-95ac-7e69af8f48c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ce788a7-79a0-40c4-9e78-ba6d472558a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cd108c-7600-478a-82f2-e450abd7f078",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871c6ba7-9cfb-4ad5-b8f3-123ac37428b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3ad05124-8ce8-4b9f-a848-dd48b529d565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50567b4-895c-4062-8c4d-372ab14c0555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be1beb3a-2aaf-457c-be94-7fbf6a51f8ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbdbcf41-b740-45ea-9ded-833d785b90ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4879b544-beac-4c2c-9738-041bf8f57ef5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13b5fae8-00c4-4b1d-96d6-e23cbd04e473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "271f5f80-fb88-4ab4-843d-f5ef8e682f2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c4dfa81-986e-4274-a2ac-dcad18ab568e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "810ea5ef-ee3b-4a1f-837d-65637355f8f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fe67966-fc75-4340-ab7e-e6cc208b9b15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39f21197-a0c7-4a09-8379-ad3799f50ad9"
            }
          }
        ]
      },
      {
        "id": "9dc36f5a-6d01-4c31-b607-2dfc167ae881",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "55884645-1a99-44e3-b534-228d56e4a6a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05d1da7c-16be-4b87-8313-438dce91b91c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fcf9c9c-d4eb-4c90-84e4-b99b3a22f7c6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeebd3c1-fbc0-4237-8134-ec3eeecc1b24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b95ca228-aff8-41db-ac5d-3077d7afe9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e3b500-c85b-44db-ae82-ee4cbe51f8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f7e1bac-7e8e-48a8-8c6b-688b902d8c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf928b2-fd2a-415b-a9e6-66200db69dd9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c7b22f-2934-4cba-915a-49d75f40e3d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e92aa455-1c5d-4d39-8c30-92a86a1044aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206380d9-d38d-4983-83d3-1142e9a08561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "328329f6-1866-4579-a87b-d4d8e8c589e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca5ca149-df22-4fad-9d22-f633ff0701a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b0212aa-0b02-486e-b972-0aad7088f0d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9cd14e0-10ca-4acc-a36f-d83d141fa7f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b121f3b7-f25d-4daa-a8ab-09d592baba7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a55120e-802c-4c25-9c0e-58df74487f52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8eb24a9-8ba2-425d-80d8-ff4b46b4a5b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a379193-8f8a-40dc-b07e-6109438a63b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "935c8367-8236-41fe-833c-f7e558bf470d"
            }
          }
        ]
      },
      {
        "id": "aa3c1a39-86dd-473d-ab55-cb7c7ffddb2e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c1c78e30-ee44-4567-b277-858db8339bc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "800e2dd3-97d6-4b33-a829-0e73aba0fbf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4513e162-62f9-48d0-a00e-eb9dfd61d03c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b5899b-94bc-4d39-ab42-c103e83ebd87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e420dfc-3ce9-4e2c-88f9-edbbd8ca3135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adde637d-4d1f-4cf9-951f-d9fedadde99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1475ec9a-c693-4e4e-96e7-5e4a58b64c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e11783-9843-4caf-97be-65b1923049fe",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0064bfe9-f315-46b8-a090-74fa40c7ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53434e2f-d6bd-4a23-a5af-1c0028301cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a623223-df3c-423f-b7f6-7c874fd0cb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "637ff87c-8347-404f-aae3-b515d391335e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce351bce-316f-4352-a545-461fc4581a15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60a6e193-f087-4151-8af5-cc08aa37c46a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61e09145-829f-49f8-913c-39fc5b2c3b67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f28ea96a-6f9b-4d97-9267-305b6c4dbac0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18b3628a-d9fd-48e0-9144-6c392b21b315",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3936c5ff-3f15-4c20-bcfc-47f81b97de19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f65b5f-17b1-4be7-bfa6-507cfffb4b79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1547f7d-7cd3-4801-9ba6-51dfd2cfe8f3"
            }
          }
        ]
      },
      {
        "id": "9af0aa8a-4386-4c10-8252-d7f2d2d18ca5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de6d510e-e7b4-427c-8b3e-e4747f052588",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63a680f2-abeb-479a-bc4f-9feaaa8bc74e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d41526a-6726-453c-bb5d-a40433340c61",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bd641e1-3173-45ff-a8b1-d3f6ae031a87",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89ea6f06-bd05-4547-933f-d4c4355dd525",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 664.8846153846154,
      "responseMin": 14,
      "responseMax": 7093,
      "responseSd": 825.6190044642527,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684974983149,
      "completed": 1684975168887
    },
    "executions": [
      {
        "id": "fbdeaea7-d7d4-455f-a4a5-c5dff29893c4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e9d2ba5d-d7b8-4f48-ad78-c93556892566",
          "httpRequestId": "1367bc8d-8b70-4ffd-9a10-f5a3691f2155"
        },
        "item": {
          "id": "fbdeaea7-d7d4-455f-a4a5-c5dff29893c4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73beb394-d039-4455-bbca-73d2f6b2a732",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "0091d89a-3a7a-4077-9e1b-56f1946da99b",
        "cursor": {
          "ref": "b35a6245-4697-48b3-839d-118be95dea78",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "52059e02-d2d1-404e-867a-d88f200b5439"
        },
        "item": {
          "id": "0091d89a-3a7a-4077-9e1b-56f1946da99b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea91a0c4-a2be-46c3-9456-8305f4db8437",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "2051819a-a795-4e8f-8190-629cc1b0ed51",
        "cursor": {
          "ref": "cfcc2392-b6c7-4b2c-afb1-834e1ea01ead",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f077f7c7-59fb-457b-88a2-2a7e9b32a42a"
        },
        "item": {
          "id": "2051819a-a795-4e8f-8190-629cc1b0ed51",
          "name": "did_json"
        },
        "response": {
          "id": "ec83d6e9-97be-47d3-aafc-8c2d0d32cd16",
          "status": "OK",
          "code": 200,
          "responseTime": 1168,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf6da22-a1a9-4860-b0ce-8ebf8cb84aed",
        "cursor": {
          "ref": "75a569f7-f91a-46aa-bdc4-275b05a26698",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11aab9ad-899a-4364-a21f-1ef82ce31e20"
        },
        "item": {
          "id": "ccf6da22-a1a9-4860-b0ce-8ebf8cb84aed",
          "name": "did:invalid"
        },
        "response": {
          "id": "adf756ec-021b-4a21-ac0b-31318c2601ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf6da22-a1a9-4860-b0ce-8ebf8cb84aed",
        "cursor": {
          "ref": "75a569f7-f91a-46aa-bdc4-275b05a26698",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11aab9ad-899a-4364-a21f-1ef82ce31e20"
        },
        "item": {
          "id": "ccf6da22-a1a9-4860-b0ce-8ebf8cb84aed",
          "name": "did:invalid"
        },
        "response": {
          "id": "adf756ec-021b-4a21-ac0b-31318c2601ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c042b6a-012f-46cc-9546-732882d97e6c",
        "cursor": {
          "ref": "5f3094fb-3fea-4b32-a6bd-51501b7e8692",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9a59c3fe-56a0-4f9e-97e3-8382d923dd56"
        },
        "item": {
          "id": "7c042b6a-012f-46cc-9546-732882d97e6c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "44143d38-d5e9-4a4b-98f6-d5598f636d04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 636,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0380df-798b-4879-b135-f91c7791b862",
        "cursor": {
          "ref": "3f08f3d7-60b0-45c5-a43d-b6cce26ceb41",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c4d90fc-ab85-4282-a255-2d3331c2d620"
        },
        "item": {
          "id": "5a0380df-798b-4879-b135-f91c7791b862",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7f78aa75-6d5d-473d-adcb-6be8e575a611",
          "status": "Not Found",
          "code": 404,
          "responseTime": 595,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a20b3f-f975-44d2-b205-5c09d130d2e9",
        "cursor": {
          "ref": "7ed9b78b-9250-457c-adc1-aa33470e0d57",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e2740069-f73b-4eec-b47d-010772f21e4a"
        },
        "item": {
          "id": "94a20b3f-f975-44d2-b205-5c09d130d2e9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b703cdde-9f7c-40a9-810f-6a4b73f2849f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbeaf4-cb16-4eca-8ec3-c6f3d8a9b46e",
        "cursor": {
          "ref": "ac463e82-4b7b-4f9b-bc1b-d658ed098f34",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "281f3c77-5571-4d9d-8065-d783aa45ba6d"
        },
        "item": {
          "id": "5fbbeaf4-cb16-4eca-8ec3-c6f3d8a9b46e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "380d3247-0c14-419e-becb-640dc6bd27bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 822,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbeaf4-cb16-4eca-8ec3-c6f3d8a9b46e",
        "cursor": {
          "ref": "ac463e82-4b7b-4f9b-bc1b-d658ed098f34",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "281f3c77-5571-4d9d-8065-d783aa45ba6d"
        },
        "item": {
          "id": "5fbbeaf4-cb16-4eca-8ec3-c6f3d8a9b46e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "380d3247-0c14-419e-becb-640dc6bd27bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 822,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c440a5f-8810-4e88-8f3f-73c764258709",
        "cursor": {
          "ref": "8cb37faa-86e7-4d3e-ac44-2b9f90dcbc9a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6bc42c66-0356-4970-b2cf-4eb235a1bda3"
        },
        "item": {
          "id": "0c440a5f-8810-4e88-8f3f-73c764258709",
          "name": "identifiers"
        },
        "response": {
          "id": "28d4997f-72f6-4327-9a65-18907e555a4d",
          "status": "OK",
          "code": 200,
          "responseTime": 1428,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cec81e-53be-4da0-b069-4898830829a9",
        "cursor": {
          "ref": "961043b7-886d-4e21-ac42-2166d2a75de7",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d899a315-084c-4e97-9ac0-d55c1bc98fac"
        },
        "item": {
          "id": "16cec81e-53be-4da0-b069-4898830829a9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "189f8aab-f5a7-47dd-857a-a5987ca7db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cec81e-53be-4da0-b069-4898830829a9",
        "cursor": {
          "ref": "961043b7-886d-4e21-ac42-2166d2a75de7",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d899a315-084c-4e97-9ac0-d55c1bc98fac"
        },
        "item": {
          "id": "16cec81e-53be-4da0-b069-4898830829a9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "189f8aab-f5a7-47dd-857a-a5987ca7db42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8b19e1-7f09-4a49-9835-e63b61d6011e",
        "cursor": {
          "ref": "006d3a77-67b7-48b3-97e8-9c066c7b5f9a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4a5bb50a-4970-4147-af35-6ae5b233d50d"
        },
        "item": {
          "id": "6f8b19e1-7f09-4a49-9835-e63b61d6011e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c25ac276-84dc-4bd7-a122-4a4fb3d8a2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf97d5f-6e10-4e6b-9ed4-dc13f942c3c9",
        "cursor": {
          "ref": "6ff68d5a-1707-4fe8-a487-11da1eb68d1e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8d1aae74-d520-4aea-b0ea-375c558da715"
        },
        "item": {
          "id": "aaf97d5f-6e10-4e6b-9ed4-dc13f942c3c9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "48ed5f6f-40dd-49d5-baaf-fe0f34105fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb00450-61ec-4a70-a401-407fb95af2d5",
        "cursor": {
          "ref": "997f471f-2a7c-41b3-87f5-d0d91e7a7e93",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4b712b98-be0d-4cf3-a4cc-feffc8d0f6e4"
        },
        "item": {
          "id": "bfb00450-61ec-4a70-a401-407fb95af2d5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df5ac1db-8e48-4aad-a81d-08fc95ad9423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2d1659-1bb5-4f9a-b7c7-fde9bc8cca84",
        "cursor": {
          "ref": "cf6dd444-0ef6-4ca5-843f-f99285ac7868",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eb5fec67-a5d1-425a-b690-a20f44d502b2"
        },
        "item": {
          "id": "fb2d1659-1bb5-4f9a-b7c7-fde9bc8cca84",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ba67dc3e-0578-4ed6-9e81-414a276e1342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c12dd0-36cc-41f6-8c45-5492e34c795e",
        "cursor": {
          "ref": "3b6e362a-4ff5-4d48-af66-f65024a4b172",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3908305a-20bd-4cfd-b835-dbd095b66c55"
        },
        "item": {
          "id": "23c12dd0-36cc-41f6-8c45-5492e34c795e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "96a2ad51-9b29-4f44-b143-8e298b424c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a90d22a-cf30-4aba-ada5-751bfcc15c4f",
        "cursor": {
          "ref": "41b2e37e-6647-4499-92b6-b4ff43d8bfb7",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4a720e1c-473e-4c4e-90d8-dcd75b7299c0"
        },
        "item": {
          "id": "5a90d22a-cf30-4aba-ada5-751bfcc15c4f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "df9b4fac-4fdd-4e00-9a65-7ffa69780099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1743e03-11df-4432-b097-ca0e17a9010b",
        "cursor": {
          "ref": "84615317-0816-4aa0-acd0-2f0016f2aa49",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eeff8ca2-8249-49d7-a627-656b85bac645"
        },
        "item": {
          "id": "d1743e03-11df-4432-b097-ca0e17a9010b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d9baf71-83b4-410e-be57-9bb5aec3be38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd979b42-b936-40f1-ab52-216adaa062c8",
        "cursor": {
          "ref": "fa98e63a-55c4-4ce1-b86e-6d01071df49c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7aaa4047-b59b-4fd8-9102-119f9ef8c6bc"
        },
        "item": {
          "id": "cd979b42-b936-40f1-ab52-216adaa062c8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02a9a5eb-a128-4eac-ab3b-4edf5aef9d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d6ae1-b5e9-45ba-8e46-58034422dca0",
        "cursor": {
          "ref": "5be9f370-9cfb-41b0-9a4c-4b1ff0f2c974",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c437aa5b-5994-45d9-bf99-df384a92cd36"
        },
        "item": {
          "id": "4a7d6ae1-b5e9-45ba-8e46-58034422dca0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2b8ac88a-a356-46b2-a08a-354ff12db0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114f11bf-7ddc-4197-84c4-142dbf1d43d2",
        "cursor": {
          "ref": "f4e8c7c7-516b-44bf-853c-0185a3d33978",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8034a98-ce3a-4357-8c54-eaee3c2e911f"
        },
        "item": {
          "id": "114f11bf-7ddc-4197-84c4-142dbf1d43d2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c89df5f4-95f0-488b-a02d-442a0e106bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d004587-eedf-4fde-8fe2-4248c2890685",
        "cursor": {
          "ref": "e2abb010-e397-45e2-b72e-ff2d8a195d4f",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c3980805-90ee-483b-839e-c19d384b59e5"
        },
        "item": {
          "id": "3d004587-eedf-4fde-8fe2-4248c2890685",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "98ab3459-6250-46ef-8c2b-2dd6840d7c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0986dfb2-f228-4f14-ad8c-99664d441276",
        "cursor": {
          "ref": "2edd51b2-34c6-4f19-9b04-f78bbe65d6eb",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eb870315-de83-4c4a-9348-998067799a47"
        },
        "item": {
          "id": "0986dfb2-f228-4f14-ad8c-99664d441276",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d73e0d56-6421-4264-bc87-e8361e9bbd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b0c06b-b04f-4ac1-9fc1-e5695ba4718e",
        "cursor": {
          "ref": "b2d580cf-d9d4-485b-848d-619fe52b46c2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7f798411-286d-481f-904e-a50dbb62165b"
        },
        "item": {
          "id": "01b0c06b-b04f-4ac1-9fc1-e5695ba4718e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8253d319-0ec5-4209-906e-79a0d3487846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba8cea7-9030-4896-8d5b-15793871bed7",
        "cursor": {
          "ref": "97a6a3fd-6446-413d-92e4-ff1f9ccf74b2",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "89da2f5f-58df-44a9-bd94-c9801d17c79e"
        },
        "item": {
          "id": "5ba8cea7-9030-4896-8d5b-15793871bed7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2154be45-bcb4-46be-86b0-868fe7eb30f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67a929c-33ba-481a-b44e-13c9a2725d4b",
        "cursor": {
          "ref": "9cd3a751-6069-4fcf-b81f-ad4d95190f7f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9a03e965-d9c1-4929-ba6a-6c062bcbff04"
        },
        "item": {
          "id": "f67a929c-33ba-481a-b44e-13c9a2725d4b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "aa18eb35-252d-4f63-a514-a814f79bf375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a698319c-4ad5-49d1-b50c-b8de9958765d",
        "cursor": {
          "ref": "cc4305ca-0967-44ab-b9e8-a10791da6b3a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6171648b-171e-459b-9c06-f2a42ed9332e"
        },
        "item": {
          "id": "a698319c-4ad5-49d1-b50c-b8de9958765d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9cf2493c-1cad-4fa2-b026-fdd6930dfb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b67485-c18f-4733-9c9b-dd13deb1e9eb",
        "cursor": {
          "ref": "b959ed62-1241-4270-b462-46500f1c2e27",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "75ee9145-3512-45e8-9ab7-d75fec1a1018"
        },
        "item": {
          "id": "54b67485-c18f-4733-9c9b-dd13deb1e9eb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2916e02e-61bd-4d2a-8750-dd7440dd09b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b603d658-9ceb-4494-9e3e-fddea4f5d4f6",
        "cursor": {
          "ref": "90238f08-37d1-4bdc-8a53-b12b825eed2b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "84705e9d-4212-4838-8203-7117c858e13d"
        },
        "item": {
          "id": "b603d658-9ceb-4494-9e3e-fddea4f5d4f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d0d42054-b4d9-47cd-94fc-f441b6db45a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbf5cc6-c11c-430c-8bc2-41117d306f7b",
        "cursor": {
          "ref": "665bc15a-6147-405c-bc13-5c930f5fc913",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "18f5a440-1135-4e27-b282-e0fbaa301530"
        },
        "item": {
          "id": "9bbf5cc6-c11c-430c-8bc2-41117d306f7b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6e786ae0-dace-46d6-9608-5faadf3ba619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dd118c-46e7-4e62-a159-16087e87776f",
        "cursor": {
          "ref": "765af5e6-1069-4d29-8a8b-55a218d4563d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "65319584-784c-4759-86d9-a69766130ddf"
        },
        "item": {
          "id": "94dd118c-46e7-4e62-a159-16087e87776f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6b8ce374-54b4-40fc-b686-8f82c422ef89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7540a25-206e-47e5-9ff3-d845dbe15304",
        "cursor": {
          "ref": "e1111a3d-5ed5-4b4f-9284-3a135d000810",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d2db4f81-89c3-418f-8e0d-c6abce124e89"
        },
        "item": {
          "id": "f7540a25-206e-47e5-9ff3-d845dbe15304",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "33cae5b2-24e1-4ebf-9ed7-446642f55209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5401057d-f2a0-4b2c-8cef-bb3f7eddf9c7",
        "cursor": {
          "ref": "870dd39c-9bc0-46dd-a39a-8d6eb3b8abef",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "70eb6dfa-22a0-4512-a951-5d817a81add3"
        },
        "item": {
          "id": "5401057d-f2a0-4b2c-8cef-bb3f7eddf9c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0c57e83d-01d0-49f4-91db-65509cc5b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77473e6-8ff3-4641-b97d-ce78df3c8c5f",
        "cursor": {
          "ref": "c29bec93-444f-48b6-a2ce-8d68c9ec7d43",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "13640f27-a67f-4503-93e0-05086f8c92bb"
        },
        "item": {
          "id": "c77473e6-8ff3-4641-b97d-ce78df3c8c5f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "880c5ce3-8301-42fc-8c10-0f0aaae4d4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfc0639-daea-4177-aa51-26b5f585029a",
        "cursor": {
          "ref": "3d50341f-ec0b-4e4e-885e-c8416f916009",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5a17f51-0b2b-4ad1-840a-2b19e1ab39f6"
        },
        "item": {
          "id": "2cfc0639-daea-4177-aa51-26b5f585029a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "85a41dae-9582-49ec-83af-898a50a22aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4850ce2e-d046-4d0b-87d4-fd2d537564e4",
        "cursor": {
          "ref": "dbafeaff-9a0f-4c7a-b035-53bd2384d39d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2b9234f3-3b6e-4d47-b7ee-812a06dfea82"
        },
        "item": {
          "id": "4850ce2e-d046-4d0b-87d4-fd2d537564e4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "670987af-1032-43dc-a773-fcdc78e23254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bc4efe-aebc-4562-86dc-4b6c93466d60",
        "cursor": {
          "ref": "ca881ae3-ce1e-4a4c-95f9-a99a337e542d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "18155ba6-3e14-4dd0-9ce7-96bf8792ce17"
        },
        "item": {
          "id": "f1bc4efe-aebc-4562-86dc-4b6c93466d60",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f3455f4b-f111-4e37-bae1-5861d2534df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d448169-0224-4a5b-a339-8f0a6d914576",
        "cursor": {
          "ref": "cd2ca8c0-6b60-4b57-8389-92db4d6d4675",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e60974d0-db84-4946-917c-4c54bd149a20"
        },
        "item": {
          "id": "9d448169-0224-4a5b-a339-8f0a6d914576",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ffe9e126-e270-49a1-8ea1-5a1b454b53b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd77be1c-7bb6-4d30-b755-bccf6ac975d7",
        "cursor": {
          "ref": "dc349215-c27b-4394-ab59-fd9bad7f0df0",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "395d37a0-2ad0-4662-a1d8-4c49fca27faa"
        },
        "item": {
          "id": "bd77be1c-7bb6-4d30-b755-bccf6ac975d7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ccbe5a83-decd-40fd-870a-7cfc27618400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af03537f-07fd-4b96-86da-0391d5575b4d",
        "cursor": {
          "ref": "fe79c185-d0c2-462f-829a-7e7d70629343",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "09543116-d928-40a9-9fdf-a833698cdf19"
        },
        "item": {
          "id": "af03537f-07fd-4b96-86da-0391d5575b4d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "54d11867-88ab-46ca-ac35-1a6a554e0bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560773c0-19e4-4d45-9079-457730254f26",
        "cursor": {
          "ref": "3d1018a1-a97a-41f3-ba96-c826a9b05848",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c250d4c5-2261-41df-857a-3600d3933a37"
        },
        "item": {
          "id": "560773c0-19e4-4d45-9079-457730254f26",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "935d6fbe-dc0e-4aad-ac85-b86504bfa99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17b0435-aabc-4cb0-81f3-086d527a1692",
        "cursor": {
          "ref": "b23dca0c-83a9-4285-b8f8-5c4bd55e0d11",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "136a3cd5-c69f-4750-a97f-9536baa2bacd"
        },
        "item": {
          "id": "a17b0435-aabc-4cb0-81f3-086d527a1692",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bfe87f39-ee0c-4352-b996-f4632b7233a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b6eeec-3e68-468e-987e-686ebd9cfd23",
        "cursor": {
          "ref": "b8eefbbe-e73b-465f-bc32-4230adbc4286",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "72de10d9-67af-4233-90b3-d1c6b0e51388"
        },
        "item": {
          "id": "e7b6eeec-3e68-468e-987e-686ebd9cfd23",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dcd12510-cec6-4e29-ac66-6798fd07301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afab728-37a2-431d-810b-42a020f7ed15",
        "cursor": {
          "ref": "811f4db5-ca5a-4aa3-ae78-3b3411a0f37a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "507ee441-208a-4cc9-996f-396b5154003e"
        },
        "item": {
          "id": "9afab728-37a2-431d-810b-42a020f7ed15",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "870d5d31-2e18-4b64-b65f-af775b07d68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb1ae5-2d13-49d6-ab73-5b8cd243c216",
        "cursor": {
          "ref": "c0241c02-e8e3-44d1-87f3-e2ccfe1344d2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c97c05b9-dbd9-4819-b4a5-2550f1c4c2c9"
        },
        "item": {
          "id": "e5eb1ae5-2d13-49d6-ab73-5b8cd243c216",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e52db6f3-5725-459e-96e4-11dc7fa24079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62ae558-ca30-4f14-9f2b-d65ef4ab5007",
        "cursor": {
          "ref": "563db9c2-916a-4937-a8ed-9f44a8808c98",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bae88d1c-4207-426f-b999-b7a409632214"
        },
        "item": {
          "id": "a62ae558-ca30-4f14-9f2b-d65ef4ab5007",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8b4d94e2-e942-48de-b41a-8776878e76c3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 911,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdadf66-de28-406e-b539-bdea65f48293",
        "cursor": {
          "ref": "e76a33f9-30f1-417b-a49f-69cf7be7bee8",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "331312ac-6908-4a58-8588-9d1501b080c6"
        },
        "item": {
          "id": "9bdadf66-de28-406e-b539-bdea65f48293",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8d7844b5-f521-497d-a0f6-193ebf1c8dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047f3b49-1dce-489e-ba9c-5d2687abb562",
        "cursor": {
          "ref": "7f66c082-076d-43c4-8c57-d19f70b74d65",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5d7932f8-6639-4304-b029-882921cb9576"
        },
        "item": {
          "id": "047f3b49-1dce-489e-ba9c-5d2687abb562",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e7caa0fb-c597-4137-9575-11c284943340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196a3219-55e9-4cc8-94a1-94c20fc4292f",
        "cursor": {
          "ref": "c87115c0-b5b4-4611-9464-24baf733964f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5916cfe4-4ebc-4c9d-aa58-321dc3faa20b"
        },
        "item": {
          "id": "196a3219-55e9-4cc8-94a1-94c20fc4292f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d856baf5-5b13-49a0-acb1-36caaa3c1b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b863aee8-7df0-432b-8528-3c00d428836e",
        "cursor": {
          "ref": "5a1aa914-e096-4a6a-a5f9-b85a010e82e8",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a715b724-2158-4f00-a737-488cff8230a2"
        },
        "item": {
          "id": "b863aee8-7df0-432b-8528-3c00d428836e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fd0fee3b-b3a3-44c0-9067-49df413ef6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867fa20f-2af9-41ba-a9ac-28ab12c6c339",
        "cursor": {
          "ref": "2a6a7c8c-c5dc-4568-b394-e5e70462a849",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "47648eec-c043-49a7-a6c5-8f59f7b19dfb"
        },
        "item": {
          "id": "867fa20f-2af9-41ba-a9ac-28ab12c6c339",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49ae3344-42c0-4111-8dd7-2efbb17f53b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c1d946-94ca-4a3a-8205-fe6d847fb4d9",
        "cursor": {
          "ref": "178fe39a-49ee-4422-b1db-759a128c9c59",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "497bad07-49c4-4280-b283-83464b6295dc"
        },
        "item": {
          "id": "68c1d946-94ca-4a3a-8205-fe6d847fb4d9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9a7804d7-3b03-4fd9-87b8-b0a2de2ed412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55a9b91-cf42-4df3-ae99-0ab17cdf74c4",
        "cursor": {
          "ref": "94b39d2f-7531-4d36-805e-06a4c6c534fc",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "140b726b-d457-4906-affb-cd21754a71a5"
        },
        "item": {
          "id": "b55a9b91-cf42-4df3-ae99-0ab17cdf74c4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "07c94327-8a90-4c3e-90ef-e92e72f06de9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 698,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5cabff-0738-4cbe-a739-363b2c5b634f",
        "cursor": {
          "ref": "c4bf0e83-5b52-42b6-bd9e-4b134ffaed0f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "74dee24c-e93d-4dde-b63e-75de8f1d1ad8"
        },
        "item": {
          "id": "db5cabff-0738-4cbe-a739-363b2c5b634f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "044789b2-e54c-48b1-a9d3-21babf277620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea70721-4f8a-449a-a137-84e4c4c99063",
        "cursor": {
          "ref": "6a7c28fe-1d0d-41d4-8025-6dc3494bde25",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "36ecb51d-2157-4c1c-a772-d073cded55f2"
        },
        "item": {
          "id": "8ea70721-4f8a-449a-a137-84e4c4c99063",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "99b37ee5-ea95-4aee-8df0-7be47537c13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84554da1-2fed-4c0b-9c1c-c8e033791c93",
        "cursor": {
          "ref": "e2795b34-84fd-4ee6-b503-4586083c5335",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "50f0af8e-2d74-439e-af25-faef80d33d66"
        },
        "item": {
          "id": "84554da1-2fed-4c0b-9c1c-c8e033791c93",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7768d5a9-c921-45da-bf1f-a5f43c80be8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c17283-33d3-4b81-b4d8-609e46501613",
        "cursor": {
          "ref": "547fc050-6482-4763-87d6-bdf34e29a6c2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8318f719-253f-43be-a4a9-d13a7cfb6888"
        },
        "item": {
          "id": "38c17283-33d3-4b81-b4d8-609e46501613",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "415a272c-7df3-4d94-ae46-be09aa3691d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4417afa7-c54a-4099-9f41-306302c5fcb5",
        "cursor": {
          "ref": "790abe56-6bbe-4844-9f91-adb5c98d23d1",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "72229873-1fb6-4bec-9fa3-06ec551836c6"
        },
        "item": {
          "id": "4417afa7-c54a-4099-9f41-306302c5fcb5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35785229-4974-42e0-818d-731e8d049005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b54a699-84c3-47e7-94d7-d10a2b6a4d83",
        "cursor": {
          "ref": "6e964705-2a32-4580-a37a-5092bbb27719",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a6f75718-e6ce-4a13-932d-01b5dc744383"
        },
        "item": {
          "id": "3b54a699-84c3-47e7-94d7-d10a2b6a4d83",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "14105b4a-80ad-402c-8d90-9317aefde5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd7505f-361b-45a1-a9ca-e5a3f2d0ac6c",
        "cursor": {
          "ref": "b06a9eeb-a19c-48c3-b5bb-171e98488c6e",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e8ccb3e8-6ddb-4cc0-92e8-85cbd755fb06"
        },
        "item": {
          "id": "2cd7505f-361b-45a1-a9ca-e5a3f2d0ac6c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c32c8a8d-ca04-4127-8b1f-4498d27065ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6606389b-8b37-4834-9d44-96fb82ec4539",
        "cursor": {
          "ref": "05ba130e-a836-424c-b674-a54345ade0f5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "049ee2dc-dcb6-42a5-89e4-62a52946c5ca"
        },
        "item": {
          "id": "6606389b-8b37-4834-9d44-96fb82ec4539",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "99402d62-3270-40df-bfb5-eabf5e2b18f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3242d052-05f6-48df-96e4-9c3be225f56a",
        "cursor": {
          "ref": "f82cba12-e686-4101-bfdd-ac4af8e4962f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4ab4c013-41fd-4656-9608-bff88c41fcdd"
        },
        "item": {
          "id": "3242d052-05f6-48df-96e4-9c3be225f56a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a33b242b-f703-4838-888f-08700565cbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acad832-8e97-426b-b799-76cd0f453714",
        "cursor": {
          "ref": "ee771bea-6c61-4ff8-854d-3dba0050274f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6e640fd6-7992-408c-8c64-67ac04386fd4"
        },
        "item": {
          "id": "6acad832-8e97-426b-b799-76cd0f453714",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a220d3b3-99fd-489a-8a88-38d0835941c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b83cd26-56a8-4814-8394-af09379dae24",
        "cursor": {
          "ref": "ee37a608-be85-4e90-95f6-a453d12eab79",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d640419a-63f2-4422-be05-b062c40321ba"
        },
        "item": {
          "id": "4b83cd26-56a8-4814-8394-af09379dae24",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a1d67a9f-3e0c-4cdd-8a3d-125d9026399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a217ac62-f73b-4a6c-9590-ff87a02759c1",
        "cursor": {
          "ref": "c7fb0b0b-b582-4993-b284-c313d968aeab",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e9879c1a-7552-4b0b-9cfb-47ae8df102f3"
        },
        "item": {
          "id": "a217ac62-f73b-4a6c-9590-ff87a02759c1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4d19e570-05aa-4171-b2d7-fa27b02999d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eee65f-cadb-432d-80fa-36d5eb8c2d70",
        "cursor": {
          "ref": "73597c71-bdd6-45d0-b4aa-9c7c45334cbf",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a14c1371-063f-4613-bd1a-07d4c3f6e96d"
        },
        "item": {
          "id": "f6eee65f-cadb-432d-80fa-36d5eb8c2d70",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4e2fe6e2-a210-4654-88a4-c6395d4785d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbc51c5-2c93-466e-97c2-4393323d9192",
        "cursor": {
          "ref": "00d1298a-2799-4553-9c0e-8aff877eef35",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "41afaccd-012c-4519-b153-1899e3930fb6"
        },
        "item": {
          "id": "1fbc51c5-2c93-466e-97c2-4393323d9192",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "454e564c-916a-458e-b676-de857ab627da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff0913a-3320-49a6-bf06-01c1ee81adcb",
        "cursor": {
          "ref": "4b43e75c-1a86-498d-be58-fe7d9f57637c",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d8d03ed1-f627-4681-926a-d934ddd1af8f"
        },
        "item": {
          "id": "7ff0913a-3320-49a6-bf06-01c1ee81adcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "213935b7-037a-4b19-817c-456bf4c24f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac165e39-48f5-41fc-a75f-1a51a6fcab96",
        "cursor": {
          "ref": "b47fe6bb-a950-4941-b27c-eee6d135d7e6",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "50fc17aa-bebd-475a-b94a-54fd43139bcf"
        },
        "item": {
          "id": "ac165e39-48f5-41fc-a75f-1a51a6fcab96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4c0e505e-e4d0-4741-9cd3-5f19db9a3c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d63aa31-1f67-48d7-891f-80d6a3af3b98",
        "cursor": {
          "ref": "80617e25-a43c-40ab-892b-6b6b08d8a8d0",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fb8e2c02-a831-45d2-b0cb-88cb06f05899"
        },
        "item": {
          "id": "0d63aa31-1f67-48d7-891f-80d6a3af3b98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "81c3ebdd-be24-49c3-9db0-48a1cc974835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61a4054-ff8f-40fe-830c-393bb618c4ea",
        "cursor": {
          "ref": "3bbf4b70-c253-404d-863d-4c6387fe347d",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "68e87ba2-1514-4362-ad11-6a4bae59a98b"
        },
        "item": {
          "id": "d61a4054-ff8f-40fe-830c-393bb618c4ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "617b8189-5148-41e2-969f-088c46d33cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188e7191-fdcc-4048-8280-429160e15cc7",
        "cursor": {
          "ref": "e8d1a930-df68-49fa-bd5b-b7064b34e4cd",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e40cb46f-9961-4d57-a017-8c3dccd3b5c2"
        },
        "item": {
          "id": "188e7191-fdcc-4048-8280-429160e15cc7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d862977-6554-42fb-9bff-129439c00dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d8b658-3cdf-456c-9c8e-d1dafec0111e",
        "cursor": {
          "ref": "4cef8c92-76d4-4bdf-89ac-ec4b2780c7fe",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e7f0a757-2db1-4d79-b883-bf9fbcec53a5"
        },
        "item": {
          "id": "b4d8b658-3cdf-456c-9c8e-d1dafec0111e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aab8e4d6-5fd4-4365-8725-ea33cb56a9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c449897b-2d29-46e6-880e-3d99b7656f96",
        "cursor": {
          "ref": "9286a6a2-5d69-43dc-9875-a1ef241a8e94",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a6ad28b2-92f4-4f6e-9be6-f9497186834c"
        },
        "item": {
          "id": "c449897b-2d29-46e6-880e-3d99b7656f96",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f6eee4c2-b564-4ec2-b52a-dfd81cc7ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2be8ab-9c22-4d8f-a519-0dc3756a0e7e",
        "cursor": {
          "ref": "f2ef0c58-6ea3-4c1e-9cd1-a55d48610598",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5ce73416-ab08-487b-9b90-dcc31dd3d17c"
        },
        "item": {
          "id": "3e2be8ab-9c22-4d8f-a519-0dc3756a0e7e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c53a0b93-61f6-4ca1-8155-440dbbe37076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce713b5-428f-4b5c-b4a5-20fe6824bb66",
        "cursor": {
          "ref": "642092c3-3421-4f9d-a88b-6492fa373f78",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "12091d3d-2e43-4a0b-af79-14d78df674db"
        },
        "item": {
          "id": "3ce713b5-428f-4b5c-b4a5-20fe6824bb66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8f906ff4-6762-42a5-8bc4-fcc03f739d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8298f9a-642a-49ae-8c41-4f9eeee373e9",
        "cursor": {
          "ref": "1d73ed98-edaa-438a-b77a-86e75a3dc3a4",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cc115efa-61d9-474b-beb6-3802445cd47d"
        },
        "item": {
          "id": "a8298f9a-642a-49ae-8c41-4f9eeee373e9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fa6554f4-c066-4676-ac17-c4f69d396363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2108e28-c0ae-4a72-af3c-73f1f84fa46e",
        "cursor": {
          "ref": "3497a73a-a8e2-44e7-9468-668cf4a22c16",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "45ef7da5-0b73-418a-bca6-6b9d69437ae6"
        },
        "item": {
          "id": "b2108e28-c0ae-4a72-af3c-73f1f84fa46e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "000abbe4-f994-4976-bb22-b51bcfa0f1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f60eafe-576f-4b05-abe5-b0197a64f265",
        "cursor": {
          "ref": "7d960a55-0bf2-4619-933a-72ef06c2782d",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7384192c-e3eb-4aa1-84e9-55843cf3f7a6"
        },
        "item": {
          "id": "5f60eafe-576f-4b05-abe5-b0197a64f265",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1452f3b1-adb9-4f69-b8e4-b8010ed4ccbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d30b2-5b15-473d-8625-8442ce5ed228",
        "cursor": {
          "ref": "bdb29903-0aef-48d8-ae70-cc5aca1e8f44",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4384bbc7-52c2-4080-bf41-3595dd18f887"
        },
        "item": {
          "id": "ef8d30b2-5b15-473d-8625-8442ce5ed228",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b2e4cd2a-a1f1-4425-8530-b063657f2c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e236fb04-2c51-45fd-89bd-bdaee227fbd8",
        "cursor": {
          "ref": "0605cc02-2624-4e66-88ef-0ccfc26c7e94",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dfe8ee3a-a405-47c2-b387-e2daeeda6252"
        },
        "item": {
          "id": "e236fb04-2c51-45fd-89bd-bdaee227fbd8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "09b041ed-d3e2-436b-b281-77d891c27cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2868985-3870-4331-ad80-9f42434111bb",
        "cursor": {
          "ref": "ff7f8ea7-3833-4f85-9511-67607cbc2b1a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "69f0efe8-83d5-42bc-a946-5b2814d755db"
        },
        "item": {
          "id": "b2868985-3870-4331-ad80-9f42434111bb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b3e47634-27f4-4556-9b14-bc19f20107ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dba706-4ec4-4503-a145-63c0b96b3b38",
        "cursor": {
          "ref": "9ab44873-fd5b-4df1-89ed-df1fa260bdd7",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e5137229-9ad8-4800-be4b-378e7eb8d1ce"
        },
        "item": {
          "id": "a5dba706-4ec4-4503-a145-63c0b96b3b38",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "01783845-efc4-4857-8068-53cdce2de0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a62bda-2e0e-4f4a-8109-1de500e71256",
        "cursor": {
          "ref": "2c80b914-d68b-4264-8b36-6eba5c0f9508",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "982ed1a2-d38a-4639-93e7-b9f5719f881a"
        },
        "item": {
          "id": "29a62bda-2e0e-4f4a-8109-1de500e71256",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8207441c-1929-447a-ab7d-6dccf317711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106a6f52-95ab-4544-928b-4c5ae7817861",
        "cursor": {
          "ref": "0f7ea25a-d80a-468c-bbd0-369e9c2235e2",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "70814942-07b5-4d29-9426-acb049ab88e2"
        },
        "item": {
          "id": "106a6f52-95ab-4544-928b-4c5ae7817861",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2517f2cc-1031-4844-bc50-fa7d9ec94478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7315c628-2a9c-4f56-8dab-815959216d4c",
        "cursor": {
          "ref": "f5174c2f-033f-441a-aa67-42c01d52bd50",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d0e63e11-0a6c-4f84-96f8-89bca22736c5"
        },
        "item": {
          "id": "7315c628-2a9c-4f56-8dab-815959216d4c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a95ab042-dc78-41e8-a725-efc55533534e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc65e947-2fee-46cc-b14b-98b8eaa7467e",
        "cursor": {
          "ref": "f2e52d8c-08b2-4009-bd70-2fb84dfd7611",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "05a370fa-b79e-46b1-974f-6a8c3b8e92c0"
        },
        "item": {
          "id": "cc65e947-2fee-46cc-b14b-98b8eaa7467e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b9beee96-f0c3-4514-bc13-3bbcbeb052e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ff4e54-0926-48db-8a26-cb133e21a42f",
        "cursor": {
          "ref": "cf3c6394-a212-44d0-9043-41d27c2e17a5",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa7fa9b6-03d2-47d4-9ca7-999b6da15d2b"
        },
        "item": {
          "id": "89ff4e54-0926-48db-8a26-cb133e21a42f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e2cc10a5-dbec-49e7-b421-497619ff1b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faded9da-09a5-477a-ad74-33d5d67341cf",
        "cursor": {
          "ref": "cd4dcab8-e9a7-4f5a-b2e1-67290094519c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1d46b35a-aca5-4267-b35e-02cf1ad0508a"
        },
        "item": {
          "id": "faded9da-09a5-477a-ad74-33d5d67341cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c95c0975-a656-42a7-93f8-b6158536c45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05911646-1ed9-4ff7-a7dd-36f8849f1c87",
        "cursor": {
          "ref": "750135a3-0b8e-4416-9bc8-f475b27c1764",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0465bfc8-180f-413f-9b9f-0d43c2d217e6"
        },
        "item": {
          "id": "05911646-1ed9-4ff7-a7dd-36f8849f1c87",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "647bf13f-3828-4d11-b1e1-d2ddfd818207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17268e9-fe43-4725-9361-41771357fc58",
        "cursor": {
          "ref": "659283a9-8454-462e-920b-c0aeac1415d5",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "528eb547-84a4-4306-9df9-a6c6971f892a"
        },
        "item": {
          "id": "c17268e9-fe43-4725-9361-41771357fc58",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ceeb0b74-067e-4a35-88a7-18a8b574a86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a7f782-fc0d-4f4f-98ea-8df90ca3bf3c",
        "cursor": {
          "ref": "57a4d9bd-ad24-42de-b361-c8ed9cb85bfe",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ccad4119-0f0b-47dd-af76-72ea737414c4"
        },
        "item": {
          "id": "43a7f782-fc0d-4f4f-98ea-8df90ca3bf3c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0c1bbb4a-328f-481f-9ee6-58ba0f5412d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f378e31-f797-4d8c-88be-d396a7216a0f",
        "cursor": {
          "ref": "423d420e-8c79-4d2b-b844-987d3fce5a09",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9934bf19-1610-4d1d-aecb-a13c56659d1b"
        },
        "item": {
          "id": "8f378e31-f797-4d8c-88be-d396a7216a0f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "56bb313a-08fb-4d01-bc61-142c134f43e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c51373d-5b12-4140-85dd-9753b585cea3",
        "cursor": {
          "ref": "4340845c-b2ed-4f8e-9a16-de5a9202353f",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a84b814a-c1c6-467b-8a95-38bf9eb0e4c6"
        },
        "item": {
          "id": "1c51373d-5b12-4140-85dd-9753b585cea3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fc6a47bf-fd6f-4205-a086-7d37fe445b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce46ebd-f0ad-4e87-8fdc-4bc34f16e1c5",
        "cursor": {
          "ref": "911d99a3-9528-4b8d-8cf3-d287a197fb6b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "64586489-39e3-44f6-b0e6-7311f1006b1c"
        },
        "item": {
          "id": "4ce46ebd-f0ad-4e87-8fdc-4bc34f16e1c5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "16450988-5758-45e6-a6e1-7d121a233138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2896570-8651-4266-bcbb-847fae8bdc5c",
        "cursor": {
          "ref": "87462e0a-20e3-4502-9795-4e37c5689f09",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e504a58e-dfd6-4aeb-88d3-a5dce4d1b0d7"
        },
        "item": {
          "id": "c2896570-8651-4266-bcbb-847fae8bdc5c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d3f52498-869c-4181-8ffc-c354b8a50322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53342ee5-2c8a-4046-a26b-1020ca4c8795",
        "cursor": {
          "ref": "7255f558-c2f1-4178-bbca-48db319f5fb2",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "45e37ba1-613b-456c-9b46-fc653ef06b3b"
        },
        "item": {
          "id": "53342ee5-2c8a-4046-a26b-1020ca4c8795",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e2ca29cd-89b8-4a36-a78e-822d727fc5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bdd67c-6e38-44b3-8fe2-28dde6ad4518",
        "cursor": {
          "ref": "c44ad9ab-a97d-4950-9f8d-37c31b2292ac",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "af789388-b2c3-406a-83af-aa5b5e2d01ff"
        },
        "item": {
          "id": "65bdd67c-6e38-44b3-8fe2-28dde6ad4518",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3bdebdc8-6098-4972-b0ba-395536ab07e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc6ba1-76d2-444b-b659-04ba7f0b6fa1",
        "cursor": {
          "ref": "f80c3a08-dfa2-44ef-acf1-b2acb2c86358",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "86fb16e4-29ad-44cc-b651-2bc2dd3e4d17"
        },
        "item": {
          "id": "d7cc6ba1-76d2-444b-b659-04ba7f0b6fa1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "03081fc2-a109-4774-ad1d-194a9b8117e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70edec04-ba1c-44c0-a693-1a7923ca37dc",
        "cursor": {
          "ref": "9f08469a-0d13-4918-85e3-06c1d40280f3",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41b66de8-39c8-43ca-a67f-75d589bc0b4a"
        },
        "item": {
          "id": "70edec04-ba1c-44c0-a693-1a7923ca37dc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "be59db0b-581e-400f-a791-f8f9ff78bea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f82879b-fd8f-4d7b-bdd5-904e9fd6dc0c",
        "cursor": {
          "ref": "16100b36-c0b3-449c-90df-c6daeb2e0699",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a10f1729-e4ba-49df-8a6c-cf33e1e342eb"
        },
        "item": {
          "id": "5f82879b-fd8f-4d7b-bdd5-904e9fd6dc0c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b54a7a21-c316-41da-804d-5462a3e9108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51edd0c0-1974-4f39-97f9-f4dcb2fed169",
        "cursor": {
          "ref": "4f346cff-5cc6-4dca-9191-82efba573051",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c28bca5a-0c28-4759-b7fc-15cbf969d7e0"
        },
        "item": {
          "id": "51edd0c0-1974-4f39-97f9-f4dcb2fed169",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "379a1fed-5f28-4f8b-84fa-63a7c1bb450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7f0355-e7ee-4c59-8c9e-e8934414e741",
        "cursor": {
          "ref": "9058d579-90cb-4738-9c77-f72317f62d0d",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "82232ebb-c7a1-4dbd-92f4-8508086f554a"
        },
        "item": {
          "id": "ca7f0355-e7ee-4c59-8c9e-e8934414e741",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd67db79-d824-4fee-8417-c1d86f389682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b3c3d8-057e-4c26-8bed-94bcef3528b8",
        "cursor": {
          "ref": "d33cd842-14c1-4b10-9615-10e3231de951",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4ac1a8db-69fb-4859-8afa-d449aeb2854b"
        },
        "item": {
          "id": "c8b3c3d8-057e-4c26-8bed-94bcef3528b8",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0eb66a30-6f47-41ac-b2a0-87ff37cd012c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 509,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aecb527-9ed4-49f2-b821-53a1ec1ac2c4",
        "cursor": {
          "ref": "8edc238e-6853-45da-b07a-cff58c554ad7",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7b160157-1fad-4505-973e-ac603b0bbea4"
        },
        "item": {
          "id": "9aecb527-9ed4-49f2-b821-53a1ec1ac2c4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5556b43d-c8d6-4d9d-9765-70f4ca26186a",
          "status": "Created",
          "code": 201,
          "responseTime": 5888,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1943497b-41d8-40a7-8397-78670ff9fe23",
        "cursor": {
          "ref": "23e09d83-76ef-472d-9bce-0147a4ba99bd",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "38ffe385-a3e5-4452-93e4-9cce8838b4b3"
        },
        "item": {
          "id": "1943497b-41d8-40a7-8397-78670ff9fe23",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "23c60189-2f9d-4310-802e-9b9ace6265dd",
          "status": "Created",
          "code": 201,
          "responseTime": 5383,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf74de-c8da-4df9-810b-c749d7add8cf",
        "cursor": {
          "ref": "c090a422-0a63-4d0f-af0f-8340dd43d6ed",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "651b0967-d24a-4cbf-a46e-d1d0f2a9f242"
        },
        "item": {
          "id": "0adf74de-c8da-4df9-810b-c749d7add8cf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bfdbfd32-ca32-4195-a8d3-67aafcac2e5b",
          "status": "Created",
          "code": 201,
          "responseTime": 5808,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5516689a-d383-408c-bcb8-cdf0dbfc03d8",
        "cursor": {
          "ref": "c7b1d36d-405f-44e6-ba25-626771a2ca58",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d61d275c-5840-4fe0-8779-126e3721b4f4"
        },
        "item": {
          "id": "5516689a-d383-408c-bcb8-cdf0dbfc03d8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ee4f5fdb-e404-43a5-84ce-3bb8195847ef",
          "status": "Created",
          "code": 201,
          "responseTime": 5383,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2548c0da-907a-4485-a93b-9fd8a212bfbc",
        "cursor": {
          "ref": "ae5adbc4-82ea-4431-8f61-532b90b5f079",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ebf44677-b314-4d04-8617-ec360beeaf1b"
        },
        "item": {
          "id": "2548c0da-907a-4485-a93b-9fd8a212bfbc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9f960643-be88-434a-b94f-e66a88d10ce6",
          "status": "Created",
          "code": 201,
          "responseTime": 5607,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf076cb-31e9-4b52-bae5-68720c9ed03d",
        "cursor": {
          "ref": "bb58f86f-8300-46a6-b7f2-2388c4bb85d6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eca1f576-426f-42fa-827e-3d54a1e460a8"
        },
        "item": {
          "id": "daf076cb-31e9-4b52-bae5-68720c9ed03d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b45bfe83-1a26-471e-9e37-27baefd0a733",
          "status": "Created",
          "code": 201,
          "responseTime": 7093,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882db1e2-133e-4b5e-af82-dcbd643fb366",
        "cursor": {
          "ref": "ecd8545c-4a4f-4108-890c-a97f41f8ef93",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "25b72225-7396-4c99-b2af-6e93976fb99b"
        },
        "item": {
          "id": "882db1e2-133e-4b5e-af82-dcbd643fb366",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d1b90bb-e62d-45fe-876e-52f05cd1b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882db1e2-133e-4b5e-af82-dcbd643fb366",
        "cursor": {
          "ref": "ecd8545c-4a4f-4108-890c-a97f41f8ef93",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "25b72225-7396-4c99-b2af-6e93976fb99b"
        },
        "item": {
          "id": "882db1e2-133e-4b5e-af82-dcbd643fb366",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0d1b90bb-e62d-45fe-876e-52f05cd1b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9434bb6d-a8fb-4707-9abe-1203f83acdd8",
        "cursor": {
          "ref": "cd2ce3c5-b084-4560-96c1-89bd8f414464",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cdf33f0f-88cf-49a2-9a90-ed77e61aad2f"
        },
        "item": {
          "id": "9434bb6d-a8fb-4707-9abe-1203f83acdd8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "59a45336-a6f1-492d-983b-d28d7327b3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba47ee5-ca61-452d-97bc-8b8a77a45093",
        "cursor": {
          "ref": "8ebf32bd-563e-46af-a836-db960e9b7f5b",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a1126515-bb25-4029-94c9-0b6005a8f5c1"
        },
        "item": {
          "id": "bba47ee5-ca61-452d-97bc-8b8a77a45093",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be617150-2aab-4124-b052-880a28742b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556bcdf9-b98c-4bb0-a9b4-2185a92d0428",
        "cursor": {
          "ref": "dd1db0ca-be21-4e6c-8d4e-50180141d04d",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3731f14e-53c6-43c8-84eb-bc95d508ecaa"
        },
        "item": {
          "id": "556bcdf9-b98c-4bb0-a9b4-2185a92d0428",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4ba99e9f-f92a-4381-8109-a25152da2081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a5d41c-9c74-4440-98e7-2904bcc0df67",
        "cursor": {
          "ref": "7e08dc71-9e6a-4429-abc3-d6c4a9881e41",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "671e68c8-68cf-4f37-92e4-16ba7d05f164"
        },
        "item": {
          "id": "d4a5d41c-9c74-4440-98e7-2904bcc0df67",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "227f7677-f799-4e1e-a561-f20955f9e34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f902ea5b-1e88-4637-b02f-c5e30332f5d5",
        "cursor": {
          "ref": "f953ec06-6902-4646-84ea-1e0d943052fe",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "641acbbe-60b5-4aac-a8ce-5e3c4278b3f7"
        },
        "item": {
          "id": "f902ea5b-1e88-4637-b02f-c5e30332f5d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a4d5738-0744-4707-9b21-88b3067341d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0797b6-4820-46eb-9542-8da3c85d1949",
        "cursor": {
          "ref": "9eb5a1a9-dd64-4770-96c9-fee567d18863",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "812a4dbe-2677-44cb-a163-8e84b8062397"
        },
        "item": {
          "id": "2f0797b6-4820-46eb-9542-8da3c85d1949",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e7ec352a-4477-4cf1-b622-f4155693d0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61989b87-f6cc-4bdf-a012-171bc7345482",
        "cursor": {
          "ref": "004303de-fa3e-4ba3-86ba-498ae43d03a0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "07ebf0a8-fec1-44ed-b6e6-8e5ec00b5517"
        },
        "item": {
          "id": "61989b87-f6cc-4bdf-a012-171bc7345482",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "10848a5c-c695-40b5-a97a-2a1bcc410d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8ff671-19d9-48c7-af9f-24147e89a605",
        "cursor": {
          "ref": "d09a5b27-abea-4793-9307-ff8fc7b4d1d3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bc2d584b-6fb4-4742-9541-59deac0a443f"
        },
        "item": {
          "id": "3b8ff671-19d9-48c7-af9f-24147e89a605",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "60ef2c5f-65df-4a45-8af2-ba2115125089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c2f64c-44fd-4979-9533-3373a93b091c",
        "cursor": {
          "ref": "3ff56e66-056f-4535-9e6f-5e638e2f7b82",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c8055ad2-1143-46db-b7e5-b4974f49a06a"
        },
        "item": {
          "id": "e0c2f64c-44fd-4979-9533-3373a93b091c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2067e874-b2f4-46c9-8ed9-b08b20373a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36c0a5a-9415-4fe4-bd55-23c41b707b2d",
        "cursor": {
          "ref": "fa712baf-687f-4ecb-aed6-fca0e2b233ff",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7e59ef37-2ebe-45c9-8815-379aa5332d4a"
        },
        "item": {
          "id": "f36c0a5a-9415-4fe4-bd55-23c41b707b2d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1d2d2db0-2810-40b1-8ef3-937cc48a9a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaca31b-ce61-4cee-92b9-40235b50b653",
        "cursor": {
          "ref": "1bd367dc-0f41-4bf8-a47c-51a113784408",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b7a66bf9-7e35-4473-84a3-ed6671754821"
        },
        "item": {
          "id": "1eaca31b-ce61-4cee-92b9-40235b50b653",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cb0c8818-3397-414b-b6e3-56bcacd1716f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163ba46e-3766-4690-a507-dbb8faea3b9b",
        "cursor": {
          "ref": "b3c1aad0-7222-4879-8976-b85f3ceaecbd",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0d6bc12c-811e-4af8-85cf-850e4c525f70"
        },
        "item": {
          "id": "163ba46e-3766-4690-a507-dbb8faea3b9b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f8429d29-53db-42a1-8376-b99d7bb3867b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef87450-5507-47c6-9388-b1e51fede2d6",
        "cursor": {
          "ref": "1b773510-7d55-4ecf-ba21-cb1acf9b2279",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fbb99ef0-d03b-4075-bf02-4e1d9e4e84d1"
        },
        "item": {
          "id": "8ef87450-5507-47c6-9388-b1e51fede2d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39ee5725-311a-4a29-8f52-63754f0cb741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45e9635-8c30-4301-b312-626c280d5bef",
        "cursor": {
          "ref": "96bdade1-7a8b-4db4-9cf6-79568599c553",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7fab1fd0-1a82-4a35-8aef-1602730b4e37"
        },
        "item": {
          "id": "a45e9635-8c30-4301-b312-626c280d5bef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e174d528-7d12-42e1-ba22-da6533350faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8191469d-a694-4739-969d-e1b6f6d1996f",
        "cursor": {
          "ref": "807b78d1-0288-42f2-bec5-185e8d95fd6e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "910904f4-66e2-44c3-a243-7de04e468ed7"
        },
        "item": {
          "id": "8191469d-a694-4739-969d-e1b6f6d1996f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7169cf66-ae3f-44d5-8cfb-300a53e2d0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4a7f6c-3d84-496e-9977-b9c635ea821e",
        "cursor": {
          "ref": "dc04e504-4413-441b-bb55-85ff4f57f2da",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "38f30a5d-2410-459b-b2e6-09a83ef77b92"
        },
        "item": {
          "id": "4b4a7f6c-3d84-496e-9977-b9c635ea821e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4f194726-1401-4cf3-b26a-17e22e88da0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1582608-6081-44d2-ab85-5ea218c4dc42",
        "cursor": {
          "ref": "102d814f-3cfb-4154-9e2e-b9a98080ef42",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "00f17e61-4422-42f3-b3d0-f60b0cf025f6"
        },
        "item": {
          "id": "d1582608-6081-44d2-ab85-5ea218c4dc42",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "581b3bee-aea8-403c-9e84-b25aeec58ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd06780-39a5-4336-9dd8-5cc40aec8630",
        "cursor": {
          "ref": "d484c8ce-b6ef-4e7e-bb5d-7a29ad738d44",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c7694eb7-4f67-41ec-8d6a-f7bb1a95878b"
        },
        "item": {
          "id": "3dd06780-39a5-4336-9dd8-5cc40aec8630",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "909dae34-031c-4430-83f2-32354de11c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36acc784-b3ca-4c09-87d3-d313c78303b0",
        "cursor": {
          "ref": "94f69afc-95ce-47b8-ae57-d9c924116292",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0d2d99fb-e4f2-4301-a75c-b6e01801975f"
        },
        "item": {
          "id": "36acc784-b3ca-4c09-87d3-d313c78303b0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "785184a2-2a97-47b4-9eb3-fd06d51501fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd5590c-8d28-467b-beaf-ad98b8ed2d0b",
        "cursor": {
          "ref": "f8d47545-7bb4-4a57-841b-73c49b72d6c7",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c4327b96-47c8-4ce6-9835-0dfe51dbb039"
        },
        "item": {
          "id": "5bd5590c-8d28-467b-beaf-ad98b8ed2d0b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "699a50ae-4cf3-4a41-926d-5a6ed9a10b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af2f65-84f5-4537-89c1-afa8f20a0301",
        "cursor": {
          "ref": "d99e595c-ef76-4d9f-ba4c-fc78ea646008",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "83de7a82-484c-4cfc-89e8-ef19ef4b2280"
        },
        "item": {
          "id": "60af2f65-84f5-4537-89c1-afa8f20a0301",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "265105ed-13ab-4557-ba7b-5ff204983508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d657c7-fd86-44fa-896a-32c38299fc67",
        "cursor": {
          "ref": "2ccb0494-9f59-47cc-b744-cc81a63fa70e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9652597b-050d-4bec-8f63-5563e165e876"
        },
        "item": {
          "id": "e5d657c7-fd86-44fa-896a-32c38299fc67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cad7cdfc-d7fc-4cdf-8736-01312365397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd58e4c-f623-4262-b8e8-e5e891694a83",
        "cursor": {
          "ref": "72b0ec53-69a2-448a-8bc7-e9ea13377508",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69df9917-9062-4c60-af8b-44aa735b91fe"
        },
        "item": {
          "id": "0dd58e4c-f623-4262-b8e8-e5e891694a83",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f2fb3e4-4824-4756-a534-1b0f56ac4cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94102e2b-a9a8-4707-8732-23ec5e19734a",
        "cursor": {
          "ref": "4be6db7f-b2c1-4f69-8a8a-db4edc75cb6c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "149c7b35-fd6a-4cc4-ab08-8167e1d15a42"
        },
        "item": {
          "id": "94102e2b-a9a8-4707-8732-23ec5e19734a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "24eeec29-5831-4fdb-95ff-3ae8b1990506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c062f71-ca48-416c-bb0f-336ebdd0d974",
        "cursor": {
          "ref": "c50fec68-5d6a-49be-add7-4cf5c6d54ae8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1eb6e1d8-ee1e-4a33-91ca-295f73cb3bb4"
        },
        "item": {
          "id": "8c062f71-ca48-416c-bb0f-336ebdd0d974",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "23db0dac-64f3-469f-b2dd-b0ca33448254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f247a3c7-b414-4165-b93a-06cd7c993fcd",
        "cursor": {
          "ref": "e030c40c-1f87-412f-8498-fd9ed5f17627",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "39489c64-78dc-44af-95b9-b01810bc8687"
        },
        "item": {
          "id": "f247a3c7-b414-4165-b93a-06cd7c993fcd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "604684e4-9dbd-4101-b10f-a2a88dc9cf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9755cf-81b7-49ce-8255-b57cf3030a5f",
        "cursor": {
          "ref": "373e98f8-71b4-4757-b55a-e579d0749c93",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cea67a50-60b5-4fa9-9785-dc10a2716242"
        },
        "item": {
          "id": "3f9755cf-81b7-49ce-8255-b57cf3030a5f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "14b60697-9480-44e0-b7a7-800b2b091903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705acf8e-dcaf-44f9-a854-75e79aa3dcb5",
        "cursor": {
          "ref": "1a29a167-85c5-48f8-8467-84029fc50a49",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e3964be5-884b-4b1d-b024-0fdbd1cd8045"
        },
        "item": {
          "id": "705acf8e-dcaf-44f9-a854-75e79aa3dcb5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "396a3333-1caf-4611-82ca-246550802de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4592b4a3-443a-4e42-aacc-05986810d169",
        "cursor": {
          "ref": "9d0b810f-40be-41ef-9d36-01d11c0afbc9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b0f7876e-d481-49df-8535-e4204c2eb24e"
        },
        "item": {
          "id": "4592b4a3-443a-4e42-aacc-05986810d169",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2199400a-7984-4f15-b37d-9108a37f6dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2974f47b-8afc-4353-b8c8-2e362d89e50a",
        "cursor": {
          "ref": "2e256f8b-d0fa-4fb6-a665-a2674481e63b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "93113bb7-b98a-4d1d-bf72-86e16a6fa620"
        },
        "item": {
          "id": "2974f47b-8afc-4353-b8c8-2e362d89e50a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "528684b3-b091-4323-9c75-4e38147fd5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1ff331-b99f-4b6c-9acb-7699196a6ba6",
        "cursor": {
          "ref": "178dfc0a-4d36-4bc9-b8be-c616e86ed6ce",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1bb24998-29be-41ca-ae98-ca4426aa58f5"
        },
        "item": {
          "id": "6e1ff331-b99f-4b6c-9acb-7699196a6ba6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "19e0cb68-7a4a-42f5-9b5e-05e8b1ac8ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada50d4-5409-43ea-b52b-b33007fc700b",
        "cursor": {
          "ref": "78c550ff-0837-447c-b8cb-50c65d0ca9c0",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "efe00d11-1bd6-4be9-9c1a-f22d2ed58690"
        },
        "item": {
          "id": "bada50d4-5409-43ea-b52b-b33007fc700b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "522c0984-3d7d-4f1c-ac0f-c002f79eb61e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4059c81-9ff9-42fc-b130-d6210435430e",
        "cursor": {
          "ref": "76f77888-da64-42b1-9f0a-fb0c272bfc35",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1fa0f32-a74a-4139-9e91-f845f016a591"
        },
        "item": {
          "id": "a4059c81-9ff9-42fc-b130-d6210435430e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1d18125e-6edc-42c2-9d14-459125a7d17e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 687,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334cdfa3-4340-4db7-96ae-f75e82fc89c7",
        "cursor": {
          "ref": "5ac7e428-1e6a-4640-85c5-e8b48d8c7b9d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "757a36be-7709-4d49-a45b-6eb49bdbb62a"
        },
        "item": {
          "id": "334cdfa3-4340-4db7-96ae-f75e82fc89c7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3eecb82d-f47b-4043-8b88-9861d04cde2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334cdfa3-4340-4db7-96ae-f75e82fc89c7",
        "cursor": {
          "ref": "5ac7e428-1e6a-4640-85c5-e8b48d8c7b9d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "757a36be-7709-4d49-a45b-6eb49bdbb62a"
        },
        "item": {
          "id": "334cdfa3-4340-4db7-96ae-f75e82fc89c7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3eecb82d-f47b-4043-8b88-9861d04cde2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2cecd6-3fee-4838-afc9-40105294e379",
        "cursor": {
          "ref": "df316437-2203-4d7d-9669-f48b2bb53d40",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "db80c8b5-856c-4f2d-9f06-52a7111b673f"
        },
        "item": {
          "id": "2a2cecd6-3fee-4838-afc9-40105294e379",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ff27118-9c82-4160-997f-c8e407496c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c54e0c-171b-4034-acce-2fdf8bcd1401",
        "cursor": {
          "ref": "aa00c0bb-cf1e-4d7e-9d9c-832129e9209c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ab4cfb6-842c-4eca-b645-30da94924cac"
        },
        "item": {
          "id": "60c54e0c-171b-4034-acce-2fdf8bcd1401",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c94f019a-c1fc-4d5d-a243-b518ec9bce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f442e15-696e-4730-b088-abe4bed23348",
        "cursor": {
          "ref": "11068d68-e294-4e11-9d76-6051006d3191",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eb5bde0c-3a70-4840-8576-847d236f4f89"
        },
        "item": {
          "id": "2f442e15-696e-4730-b088-abe4bed23348",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4b54a317-4f3e-4e2b-b394-143d0daacd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dca642-4993-4796-a77a-99a05f9cdbd8",
        "cursor": {
          "ref": "1d4cd9c0-f995-4f45-aad4-27599b5e9d13",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "61b88009-1bf0-44ea-ae33-aa4ecd057950"
        },
        "item": {
          "id": "c7dca642-4993-4796-a77a-99a05f9cdbd8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "88400aba-1831-459e-a1cc-15f363311116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9690ec-420f-4471-8ecc-cb4058dbd8ca",
        "cursor": {
          "ref": "23123058-3225-4865-bae9-55df8141a91f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d2a1ac63-dd03-4ece-b6f9-717fdac32381"
        },
        "item": {
          "id": "dc9690ec-420f-4471-8ecc-cb4058dbd8ca",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b827fc83-4ae4-4cfd-a0be-4c9e36190cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f8e634-c1a6-4cf3-98c9-349a92f9978a",
        "cursor": {
          "ref": "0cc13bbd-1e7b-4e13-b1eb-cda798c3c9c7",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "93c1e71e-c91a-4a4c-9b72-11b1672c1fdb"
        },
        "item": {
          "id": "39f8e634-c1a6-4cf3-98c9-349a92f9978a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4219228a-3d2a-495c-82c1-05f1b5bbb102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aae06e-8b4c-43b2-9cac-48f80feada01",
        "cursor": {
          "ref": "30e2645a-32f5-4e0a-bc12-ed84181d6ad5",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4be270ff-ca86-4c27-b7bb-6ca24fe35a6f"
        },
        "item": {
          "id": "90aae06e-8b4c-43b2-9cac-48f80feada01",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d1e70f39-93e8-4269-bcf5-37ec5a88975a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09405003-c93e-404d-925f-8e57f4719b0f",
        "cursor": {
          "ref": "1573c3c3-e7b9-473e-8f96-9a938e7bd124",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c138f130-6b61-400e-829e-608d9af4d2b1"
        },
        "item": {
          "id": "09405003-c93e-404d-925f-8e57f4719b0f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7a2d5b7a-c703-4456-8dc4-eea9946f64ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931cf4b9-9073-4c35-bd70-ce891b5fc913",
        "cursor": {
          "ref": "8a271288-cd7c-47ca-b298-0e5e72a54d62",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8f829189-9da8-45ec-9479-0c4eacd71613"
        },
        "item": {
          "id": "931cf4b9-9073-4c35-bd70-ce891b5fc913",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e6853906-e750-43bf-8b56-a704f9cfe0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1b406c-2b79-4a81-82bf-5f60d774d22c",
        "cursor": {
          "ref": "7b470fc0-b319-49e5-815f-4e3adcb7ea0c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5d0fb827-f93e-4fd0-99ce-e3cf58a60eab"
        },
        "item": {
          "id": "bc1b406c-2b79-4a81-82bf-5f60d774d22c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9887d02f-180e-46ed-a480-d1b6eb7bc48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5357e60a-6013-4d2e-aaf4-2dc96f53654e",
        "cursor": {
          "ref": "233786a0-d112-410b-8489-12def51f8d3b",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "378d75fa-aba0-4beb-88df-101d5ef5d8a9"
        },
        "item": {
          "id": "5357e60a-6013-4d2e-aaf4-2dc96f53654e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05ffa2a2-1a99-4ef5-9dbf-ee0dffb62667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b837ec-8dd7-4be2-b17f-0249ba95935d",
        "cursor": {
          "ref": "ba4989e3-1e58-4864-87b7-23126bbbbd78",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "78bedbda-40d1-476f-b800-d98d294f4c24"
        },
        "item": {
          "id": "94b837ec-8dd7-4be2-b17f-0249ba95935d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5fbffbc3-3a2e-4124-9759-23e2ad77ee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2ad3a-fd23-4ba0-b414-ed4f1c8fada6",
        "cursor": {
          "ref": "5fa830e1-e8e2-484a-b682-c07d29092283",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "622624bc-1b86-4785-80a2-ee7cc0257824"
        },
        "item": {
          "id": "adb2ad3a-fd23-4ba0-b414-ed4f1c8fada6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b24f3581-f310-44f0-ad78-de6708478a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb48b36-196c-4090-a1a9-ed3f74a81e3b",
        "cursor": {
          "ref": "f906106b-d6cd-4e82-9f22-4c0508952868",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4850d8db-86fa-4be7-84cd-a7256a484ace"
        },
        "item": {
          "id": "0cb48b36-196c-4090-a1a9-ed3f74a81e3b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "de6d6fc9-cfe3-4062-a8eb-c050623fa795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764fb318-424e-42c7-a3c8-83f37971c26d",
        "cursor": {
          "ref": "a64ec006-b866-49c1-8113-63c262791372",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14fba4d0-9b5f-49ef-8788-00539b38574e"
        },
        "item": {
          "id": "764fb318-424e-42c7-a3c8-83f37971c26d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0d230fec-2837-44c0-a408-9b7cb5eb8644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1866191d-890f-4877-bca2-63523e9618b4",
        "cursor": {
          "ref": "b0190822-23f7-4a4a-acc0-486286388886",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fb474469-813d-4cfe-80ff-c2586c72aebf"
        },
        "item": {
          "id": "1866191d-890f-4877-bca2-63523e9618b4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1a5b0d36-0516-45ce-bcea-16e9ba0af3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ec596c-3341-495f-9642-eeb54132484d",
        "cursor": {
          "ref": "a9ca5165-d839-437a-b628-53552b874ca9",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4cae4645-7388-49e4-91b1-ee1ffc23919b"
        },
        "item": {
          "id": "12ec596c-3341-495f-9642-eeb54132484d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "96c14d95-0805-488c-8399-d8e75b3416cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ca9bfb-930a-4586-9086-5bc237813cde",
        "cursor": {
          "ref": "5c39174d-f153-4053-9882-49dc42d16915",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9eac22bb-c092-499f-8a34-2ab61bb31868"
        },
        "item": {
          "id": "97ca9bfb-930a-4586-9086-5bc237813cde",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9a3cff1c-ccad-4b3f-9d0b-26959646ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bf2788-88de-44ca-92c4-2abf071a2cc3",
        "cursor": {
          "ref": "227ef3c3-fff6-4702-9fba-06288b47a9e2",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d713637f-f41f-44d8-a968-b9e13327f27c"
        },
        "item": {
          "id": "31bf2788-88de-44ca-92c4-2abf071a2cc3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aca88ada-53e4-4e9e-a2ea-ce45bf42bcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfd1b2d-f07e-4645-9d52-f0d955c9c930",
        "cursor": {
          "ref": "5a99a301-62f4-4471-a5dd-b83a77d59c73",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dd4fc224-a91d-458a-bd31-f3533f62e59c"
        },
        "item": {
          "id": "6cfd1b2d-f07e-4645-9d52-f0d955c9c930",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81a61d77-a7e5-497b-b08c-4e91dcd976a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85df85d-7a2b-4527-95a6-6dd5d9d8e34f",
        "cursor": {
          "ref": "5f1453b5-d7be-44c8-b7de-1d865c1e828c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "48830d13-5cfc-49ef-895f-4c904ebf477c"
        },
        "item": {
          "id": "d85df85d-7a2b-4527-95a6-6dd5d9d8e34f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7317cbfc-be23-4d00-97e4-b00f54d68a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06738dd3-7d13-4c7b-a77b-abe86ac82561",
        "cursor": {
          "ref": "e07e0a57-58d2-49eb-b598-a597d58ba8af",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7e75d9ca-1d26-4694-a9f3-53707a87f367"
        },
        "item": {
          "id": "06738dd3-7d13-4c7b-a77b-abe86ac82561",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3d6e7772-f70b-45ff-a951-1714df37780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb58e3d-b24c-42fc-ba64-ada5c2527c1d",
        "cursor": {
          "ref": "5efcec95-9a16-41ad-85e2-f48ac89ed9a0",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "77877b6a-4e3a-4d01-ae70-a1ccb4dd92f6"
        },
        "item": {
          "id": "bcb58e3d-b24c-42fc-ba64-ada5c2527c1d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0400f288-0794-4568-93a2-e397eeeae54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d530544-949d-4da2-9621-44f6122cbb96",
        "cursor": {
          "ref": "8255e3e4-32e4-4d6f-9953-3eb4e8526b10",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c032816c-53c7-4f25-849e-757048c91318"
        },
        "item": {
          "id": "5d530544-949d-4da2-9621-44f6122cbb96",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6fdc5a03-51bf-4638-8742-4b5f3d4728e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a0b5dd-f164-4699-87d1-9b8a7bab6806",
        "cursor": {
          "ref": "6971d142-283d-4d08-b43a-83bfe48537ee",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e273ea24-955b-4786-af7c-90513db571e5"
        },
        "item": {
          "id": "b2a0b5dd-f164-4699-87d1-9b8a7bab6806",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8b92a08b-935e-400d-b95f-083e3fa610c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb92638-103c-436c-8542-6ba7b747e837",
        "cursor": {
          "ref": "cc372851-9e69-4fb9-afff-f824ae2854d1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "901d1e8d-1c44-4fd3-883b-c98844d842a0"
        },
        "item": {
          "id": "8fb92638-103c-436c-8542-6ba7b747e837",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3f92ba39-1580-42d2-9cc1-fb313451a068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b825c41f-e133-44db-b43a-367cedf2f1cc",
        "cursor": {
          "ref": "45d6c322-e940-4fff-bbaf-845aa40a2d22",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6f480ac5-ae28-439f-8823-1017168f453f"
        },
        "item": {
          "id": "b825c41f-e133-44db-b43a-367cedf2f1cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7b712357-863c-4739-9a53-359fd8db5bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fd3540-693b-4d9a-955d-405c33e6e231",
        "cursor": {
          "ref": "2b12bcba-db25-46aa-a601-a67978e51a1c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ff661ef8-f63c-4766-90a3-f00c8ec46972"
        },
        "item": {
          "id": "e0fd3540-693b-4d9a-955d-405c33e6e231",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "17467d43-df70-436f-a43f-4d96a3c07a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c0a771-75ae-461b-bbe9-040398841ffb",
        "cursor": {
          "ref": "5410eb43-8ec6-4f22-bf7d-1c5fd0867f27",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6fca8254-a5a3-4d04-be6c-4252b1f6e0cb"
        },
        "item": {
          "id": "74c0a771-75ae-461b-bbe9-040398841ffb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0948320e-06f1-4f22-93aa-9809b8f06321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b80bcf1-4af0-40b7-8b57-1d6c87ec1b45",
        "cursor": {
          "ref": "edfc16c2-1a19-4899-80d1-ae351a8feb8a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ec920f02-44ea-48a0-a822-1d7abcdba46c"
        },
        "item": {
          "id": "1b80bcf1-4af0-40b7-8b57-1d6c87ec1b45",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7285983a-201f-4bb4-8eb1-e1f127c54c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f990ed-0599-4219-9f0c-f8e45734099b",
        "cursor": {
          "ref": "b7b26cef-b2a6-422a-8c03-4dbdc7aa0e26",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "935b281d-ff4a-46e3-ae0f-32550460490f"
        },
        "item": {
          "id": "12f990ed-0599-4219-9f0c-f8e45734099b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8359d747-b54e-4637-882e-62f8f0b680c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c46e068-e558-4605-aebb-e60f51ad258c",
        "cursor": {
          "ref": "5d12ca08-6bd4-4165-8da4-f03f799fe0b2",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d64a601e-4102-4e89-9c1b-7d29b0c80fa1"
        },
        "item": {
          "id": "0c46e068-e558-4605-aebb-e60f51ad258c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b22f3a80-7600-4594-aea1-2febc8765649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0fa8d0-8a17-47cf-ad5b-8ce1f8873ebc",
        "cursor": {
          "ref": "1844fc0e-dee1-4186-a5b6-33acc7a873d9",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "06cb42de-e2dc-42ba-a181-a80a017d7003"
        },
        "item": {
          "id": "de0fa8d0-8a17-47cf-ad5b-8ce1f8873ebc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f80aaeb9-f84f-4bf6-b9dd-a1111d1623b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a817da9-5661-48ba-aa23-355979f5c306",
        "cursor": {
          "ref": "89c6f9a8-d8fd-460c-b422-67aafa8f1a95",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7d8ce258-a202-42a3-9cbf-3b410620ebb5"
        },
        "item": {
          "id": "3a817da9-5661-48ba-aa23-355979f5c306",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "39c90f73-ae7c-469a-b452-cfb262b53d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0033869c-5364-4231-8374-fbad5462a5e9",
        "cursor": {
          "ref": "db17eafa-fbfd-47a6-a937-7690d38642db",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2f71784-825c-4dd7-b65c-a14114f68242"
        },
        "item": {
          "id": "0033869c-5364-4231-8374-fbad5462a5e9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "60bdd291-3c8f-4dee-b470-fa1f36f03ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72db1463-232d-4441-85f4-386517f49a92",
        "cursor": {
          "ref": "705ba8b5-e27c-41b4-aeb3-39d73aeb8e20",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1c12b7d9-441c-4d37-a4b3-fdab01f5bae8"
        },
        "item": {
          "id": "72db1463-232d-4441-85f4-386517f49a92",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "00b0a79c-d93d-40b5-8ea9-b3fca7f29f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2496cb0-ac63-45bd-936d-1415ef73e8ea",
        "cursor": {
          "ref": "ee0b50ad-5843-4412-ac4e-29cc70d447d3",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0969cbe7-29c8-4107-b0da-5a5d89f8af78"
        },
        "item": {
          "id": "f2496cb0-ac63-45bd-936d-1415ef73e8ea",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b940f214-2c98-4f7c-a05e-3af222dea2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f642344e-62d6-4642-be71-07f4d0922b7a",
        "cursor": {
          "ref": "150192bb-8495-4a3c-ac17-5939f12cfd5e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a42204c7-938a-4cce-85e5-49336649f6e3"
        },
        "item": {
          "id": "f642344e-62d6-4642-be71-07f4d0922b7a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bdf7b52a-886a-4a8e-9e70-6124cbca63d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32e5bd2-b26a-4fc0-93a2-684b88617260",
        "cursor": {
          "ref": "0716e545-b33d-45c5-ae6c-1f3b02576125",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6f1b36a7-0c48-4df8-b38c-cbc6132aa251"
        },
        "item": {
          "id": "f32e5bd2-b26a-4fc0-93a2-684b88617260",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "df9c029b-9817-42ed-886e-804d23a8c97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46e1b6a-4a55-461f-a097-fbf85769c295",
        "cursor": {
          "ref": "a35b8d48-e5b4-46c2-9a6a-e47de7569168",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2c26cd09-ab36-45a5-bf9b-9a2fefd0cd13"
        },
        "item": {
          "id": "b46e1b6a-4a55-461f-a097-fbf85769c295",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d0a21eef-605a-4ce6-8650-b0ecb12857a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcf1bd1-9fa9-46d4-8f74-562b671d420f",
        "cursor": {
          "ref": "0f691276-530c-49ea-b4ed-a1831fa4de5c",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a364ad8-ec0b-49f2-92ea-eb80e5687129"
        },
        "item": {
          "id": "dbcf1bd1-9fa9-46d4-8f74-562b671d420f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "86b699c8-7835-40c6-aeeb-53cf84f33b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4304d6-4244-4198-8200-589ff3ed8ae9",
        "cursor": {
          "ref": "4a2e334f-e8cf-4126-9f3b-7a7ad40c6f3e",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "99c48728-31fd-4973-a5e3-a5ae5945b489"
        },
        "item": {
          "id": "3f4304d6-4244-4198-8200-589ff3ed8ae9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4e52163e-a8b1-4583-8117-75c8f36ceec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4856350-ba60-470a-b8f6-1fc6ab00b59b",
        "cursor": {
          "ref": "ff9f70d6-024a-432d-8942-f6252a66603a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bef7f6d2-feca-4dd0-81a1-adf758e39039"
        },
        "item": {
          "id": "a4856350-ba60-470a-b8f6-1fc6ab00b59b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "593882de-91ff-428c-b22a-d9ebd703bc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a370a4ee-0ed7-4630-aba9-5ae5e6fd1c71",
        "cursor": {
          "ref": "5f22b117-61f4-41d6-9f85-ae8a5d154440",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "19d51095-ea63-48c2-9699-76b20080f96d"
        },
        "item": {
          "id": "a370a4ee-0ed7-4630-aba9-5ae5e6fd1c71",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ef6dd988-3a27-48b5-9f99-b23d4b0c62b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941f8201-5dce-4152-8dfa-37096d8e6e00",
        "cursor": {
          "ref": "5ce7102d-4187-4d64-8cc8-09cca3fcc06e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f0fb1180-949e-4b47-95c6-3926d1595604"
        },
        "item": {
          "id": "941f8201-5dce-4152-8dfa-37096d8e6e00",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "afa5f55f-1262-4bb0-9969-731df2f169b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ba7fac-2950-4b61-af1b-87b40978e411",
        "cursor": {
          "ref": "bb77bb84-b1de-4f33-bcb5-70e31b258bf2",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f2db1579-ad6c-4b98-a882-f2110e134ae6"
        },
        "item": {
          "id": "a4ba7fac-2950-4b61-af1b-87b40978e411",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b37c8027-731c-445e-9b41-69775f8d38b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d51a234-59b6-4412-bc59-4c8cec48f5e1",
        "cursor": {
          "ref": "d47f9c7f-30e3-4f18-ba76-6bd85fa9baae",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "440fb2a3-8a3e-43f2-aea6-d5a5f5a1b2d2"
        },
        "item": {
          "id": "2d51a234-59b6-4412-bc59-4c8cec48f5e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "53cfd539-b121-43e1-b239-98fc90dd153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501a2b8a-25ab-4793-8223-470cdc8c9ce5",
        "cursor": {
          "ref": "0f084b68-76b2-454b-b907-4dfdb09e54ae",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56b865d1-a3e1-4f0a-8d89-bf694cd79ac7"
        },
        "item": {
          "id": "501a2b8a-25ab-4793-8223-470cdc8c9ce5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a07eb314-36e9-4225-86b9-34cdc6835929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4a9d66-a722-4667-8e3e-4c4d33fba7b0",
        "cursor": {
          "ref": "78a391cb-0f35-4918-89cf-3f728c8863f4",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "63efda96-fe93-4675-9c92-9af8c3396069"
        },
        "item": {
          "id": "ad4a9d66-a722-4667-8e3e-4c4d33fba7b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ab8ed9d0-38a7-46de-9d68-bb2870d66240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b370c4e-2fa1-4439-9c6f-74452d56d331",
        "cursor": {
          "ref": "87a0b96f-e665-408b-897c-81f7362cdec3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0b704cc7-58fb-4548-82e7-9c083a6bdfd2"
        },
        "item": {
          "id": "1b370c4e-2fa1-4439-9c6f-74452d56d331",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c36737bc-ea3f-4853-bc63-00e47a5f08ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1cf2e5-eac1-40eb-b023-0cae166580b6",
        "cursor": {
          "ref": "e6810c72-db67-4d01-8c22-97faf4049e00",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e00f7d1-5004-48cf-9f05-11ab0859813c"
        },
        "item": {
          "id": "5f1cf2e5-eac1-40eb-b023-0cae166580b6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7d462cfe-2fcc-43e8-8d0e-b6dc01256a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c2bf9-5f90-4102-ab39-ebd6e09b5cc4",
        "cursor": {
          "ref": "61141c4f-38a5-4f36-a79e-2cb89a937485",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1310e06a-df5d-44a6-a70d-c47030867337"
        },
        "item": {
          "id": "6c7c2bf9-5f90-4102-ab39-ebd6e09b5cc4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "052abccf-bc55-4733-902c-98a1d6ae4734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaeb405-af52-44a4-aaa4-8d0829758eae",
        "cursor": {
          "ref": "6f78101e-126d-43cd-83f9-66c7265411f8",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "11e7a097-ad87-4beb-8e86-51b958f7adb2"
        },
        "item": {
          "id": "7aaeb405-af52-44a4-aaa4-8d0829758eae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "adf50d10-8611-41c5-b74c-46bbd0ca12c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a72af6-2257-445d-bbb1-5a04fb4accc3",
        "cursor": {
          "ref": "4666e6e5-3fc0-4078-a913-68dcc0ec28c5",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a6e5637-4501-423b-aca5-a0290fdcd0a2"
        },
        "item": {
          "id": "52a72af6-2257-445d-bbb1-5a04fb4accc3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5376c841-7e16-4471-a8ed-0cfff6f60c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa255a2-4d65-4660-a17c-d48d59169bf9",
        "cursor": {
          "ref": "a999e8cb-ba60-4ccf-b454-4bdf672a11f1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "668e8385-da8b-4a53-8afe-5ef9a66dd7ad"
        },
        "item": {
          "id": "0fa255a2-4d65-4660-a17c-d48d59169bf9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a00d6345-a0aa-4616-87cd-052a3bf03ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0777753-0bde-425a-9278-22b10fc21225",
        "cursor": {
          "ref": "80ddd22a-8c3e-430e-a4f8-14037465e76e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5864786f-07bb-49f3-b858-bbec9958754a"
        },
        "item": {
          "id": "c0777753-0bde-425a-9278-22b10fc21225",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a1615ef1-c01e-4e08-bb5a-31cd1d5608ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29834e5d-297d-406f-83aa-d382ab84afad",
        "cursor": {
          "ref": "16911a73-45b0-4b9b-ab98-537bb1831814",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2671fe42-7c26-4582-8bd0-1795fc4d6dd3"
        },
        "item": {
          "id": "29834e5d-297d-406f-83aa-d382ab84afad",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9aac7d2a-42b9-4a4e-a976-e405444d44a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2e3428-8c2a-4867-afd4-aacb1145770a",
        "cursor": {
          "ref": "3e296dcc-7b4a-489f-a991-0644e7b739b5",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "885ac729-f9fa-4afd-a8aa-0448f47d765a"
        },
        "item": {
          "id": "7f2e3428-8c2a-4867-afd4-aacb1145770a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1028a451-57a9-4f3b-b4ed-bf3c30d5aae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e74b70-5576-4e39-8dbd-06feb9ca8eb4",
        "cursor": {
          "ref": "ff6a20b6-202b-454f-a6db-dcf9f583b981",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d7438a92-ef35-4551-9e3f-45be3fd1008a"
        },
        "item": {
          "id": "e6e74b70-5576-4e39-8dbd-06feb9ca8eb4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c7c74b6-bb1c-470f-aeb0-88e2456cbee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1be260f-d62a-46e3-a542-72acfbee871f",
        "cursor": {
          "ref": "2d6ba32e-4e87-4355-9e0f-88eefd94d571",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fc76cf91-38fc-4069-a786-b30e9f28a737"
        },
        "item": {
          "id": "e1be260f-d62a-46e3-a542-72acfbee871f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "687868da-60c3-48f8-b547-abbfbae253bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d71e62a-ca48-4435-9390-c8800cef4a6a",
        "cursor": {
          "ref": "62cf8d01-e188-4df4-a175-6730c83dadde",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a86d240-3a90-4ea4-8a71-5867e4b50244"
        },
        "item": {
          "id": "2d71e62a-ca48-4435-9390-c8800cef4a6a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "27578f8d-da4b-492e-97c0-978a940130ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0846b6-a69d-45d7-89c4-d4f68dd96b30",
        "cursor": {
          "ref": "5f67f55a-a5db-402e-bc05-9dca85e9ed8c",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b5f526a6-7858-46c2-8272-77a9de9f4c72"
        },
        "item": {
          "id": "ef0846b6-a69d-45d7-89c4-d4f68dd96b30",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2aca85e3-d7e4-4a11-ae95-249700aaf188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3888a2a1-abdc-45cb-af32-3a677badb038",
        "cursor": {
          "ref": "8b138fb7-ac39-4a07-bb23-5f1e6dc39485",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bf3486e2-6fa8-4793-b962-9d998564a405"
        },
        "item": {
          "id": "3888a2a1-abdc-45cb-af32-3a677badb038",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "93be00cc-e023-4e9b-8420-8afcbe74cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efb5ae5-0f3e-4d9e-87a5-0ec948fc7c34",
        "cursor": {
          "ref": "8da124bd-e3b9-404b-95ab-a5a0fa96452b",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f71b411e-3693-456e-86d3-b814bfdfa70b"
        },
        "item": {
          "id": "2efb5ae5-0f3e-4d9e-87a5-0ec948fc7c34",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "71f6ed4a-6763-4038-910b-12fbf9fa1216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e07ceb-8450-4551-b768-4f52ed13d71f",
        "cursor": {
          "ref": "f2b29b70-26a0-4903-abff-0d8624d412b0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0dbb84c2-dfdd-44e3-bef5-15ce563e3101"
        },
        "item": {
          "id": "24e07ceb-8450-4551-b768-4f52ed13d71f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "392a7148-665e-4189-85ef-897ef5d7cc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaaff03-743a-427f-813c-4e3f42e5ac94",
        "cursor": {
          "ref": "c4832250-466a-4078-b30d-6c4fa34fdbb9",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eb3f759c-11be-4178-bf9c-ff952b6a1f30"
        },
        "item": {
          "id": "baaaff03-743a-427f-813c-4e3f42e5ac94",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7286e8ec-59c8-4d01-a141-bdc33017d35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbea22e-15b3-46e3-9413-d14fafb88496",
        "cursor": {
          "ref": "1fd5758e-85df-4d47-b86d-82a8d70fb6c0",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b32b473-47ae-4c07-b6d2-59cf545a36a5"
        },
        "item": {
          "id": "1bbea22e-15b3-46e3-9413-d14fafb88496",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b6386ea3-1be9-470b-8644-5fe14f158c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79655e44-f1de-40bd-82bb-713be5d076d9",
        "cursor": {
          "ref": "f8ae00db-ff7f-4b63-85af-6c2a71aaecb0",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d8457547-ab3a-4a1f-8880-672e637ca577"
        },
        "item": {
          "id": "79655e44-f1de-40bd-82bb-713be5d076d9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e6f89f8b-65f1-4593-8a76-d202ca550549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905afd98-58c2-45ca-b96b-106b6ba32da0",
        "cursor": {
          "ref": "57af8d47-0ac1-46e1-b456-086f9c8c1b0c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "73c00335-8a36-47f8-975d-31ca16b07e10"
        },
        "item": {
          "id": "905afd98-58c2-45ca-b96b-106b6ba32da0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "87d8ea2b-6d54-4ff3-bda0-d2e86131a50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11bb9c8-167e-47a2-af81-fa6b7ac669df",
        "cursor": {
          "ref": "7b7c80a0-83ad-4b19-a5dd-23911261af59",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e49a1156-e7ee-40d1-8682-1049fe833279"
        },
        "item": {
          "id": "d11bb9c8-167e-47a2-af81-fa6b7ac669df",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db4b9393-89a0-43ec-911c-9694e0fba9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce199853-7702-4440-888a-90caac2720a1",
        "cursor": {
          "ref": "8d480e7a-4944-4749-be1c-081dfdbc3857",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f3d950f7-f40c-4d0a-80b0-2da9847f4ac1"
        },
        "item": {
          "id": "ce199853-7702-4440-888a-90caac2720a1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ec47923-ce9a-4a61-8933-caa887def76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5f899e-87a6-4cd6-89e0-a461b4f180be",
        "cursor": {
          "ref": "ed8bfab4-d384-4854-b2be-859e7e90109e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e0207d56-0380-4f96-aaed-1c5b75ba7474"
        },
        "item": {
          "id": "8a5f899e-87a6-4cd6-89e0-a461b4f180be",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0fcc081d-4878-495d-ab61-722c1acfc60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd19c3d5-871f-4286-9384-88f3b39424c7",
        "cursor": {
          "ref": "b6fa3f18-3472-4157-a3b2-2e3ca17397e0",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c379ad4f-e796-4048-9321-f024e6251548"
        },
        "item": {
          "id": "bd19c3d5-871f-4286-9384-88f3b39424c7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0699236e-7b90-4312-a652-910f4b012eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef501bf9-4b0f-44bd-a183-b15940cd7df1",
        "cursor": {
          "ref": "597459a2-bc79-48a6-998a-585e60e84271",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3f6473b3-437c-46f7-8783-c23380868a30"
        },
        "item": {
          "id": "ef501bf9-4b0f-44bd-a183-b15940cd7df1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f6e30c1e-c02b-4e36-815f-559d662635e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cdb1e2-ae93-44ef-ba83-b95b2ce04fe9",
        "cursor": {
          "ref": "8cac656f-0fdb-41c8-86b2-52b001bee1ef",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7fcb6466-37a2-4ef2-99b5-cf479899af6f"
        },
        "item": {
          "id": "10cdb1e2-ae93-44ef-ba83-b95b2ce04fe9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "99876f46-86f2-4019-947d-c763ed262a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc97ec10-0059-468a-9541-11bef3b1f741",
        "cursor": {
          "ref": "bd303694-0e08-45d9-bf99-5e70e68e51c0",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9bf981e3-bed4-423c-91fc-90ae9d479219"
        },
        "item": {
          "id": "cc97ec10-0059-468a-9541-11bef3b1f741",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d20e1686-5fac-4f82-b0b1-33d273f21a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bc5998-1c73-4c73-adab-9324f9eb5574",
        "cursor": {
          "ref": "75cf0408-041f-4378-880d-c6c3713f8b8e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fb08b1fc-76c7-4de2-9cd1-eb414290098a"
        },
        "item": {
          "id": "b8bc5998-1c73-4c73-adab-9324f9eb5574",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a14f7ab-2508-4a17-b29a-e1a60589f752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2fcffb-2ea3-49e4-a963-896024f1c1a6",
        "cursor": {
          "ref": "2fb62418-9cdb-452d-9f39-bf87688b6fbf",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "21178fd2-9c7f-4e25-9a7b-da486d040903"
        },
        "item": {
          "id": "ab2fcffb-2ea3-49e4-a963-896024f1c1a6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0cdfe57a-7f65-45c0-9e23-012e7fff7867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945225e4-d5b1-4706-962c-e402759d8cfe",
        "cursor": {
          "ref": "429a0672-31e2-48b8-8af9-bd405790161e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2a2212cf-4b72-465d-a2b4-20bbac343773"
        },
        "item": {
          "id": "945225e4-d5b1-4706-962c-e402759d8cfe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e8024976-f26d-4cd5-be49-3dcc6430ff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfb0222-4fa9-4d09-8675-c831857aaf48",
        "cursor": {
          "ref": "e7ac5ded-d588-43d5-a2ed-ac3eac240ffb",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5f0f5dbb-556d-45ad-95d0-b8c4b6f0b2b4"
        },
        "item": {
          "id": "8bfb0222-4fa9-4d09-8675-c831857aaf48",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "050635a8-be34-4cbe-85f6-fa9c2e202962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56506b4-462c-4503-ac15-dc71a0508f9a",
        "cursor": {
          "ref": "4bec757e-b9bc-41bc-bcd5-daa45a528857",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0bb77e2-1285-47df-bd44-df64706a22e4"
        },
        "item": {
          "id": "a56506b4-462c-4503-ac15-dc71a0508f9a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b7578f93-dbd5-4b1b-994f-c3d3ad11d975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad37ee8-134f-471a-a88e-b18b22eadafe",
        "cursor": {
          "ref": "ca67b41f-8e9b-43ec-bd43-20589d08a20b",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0f461775-42c0-4854-8481-45cef51401a9"
        },
        "item": {
          "id": "5ad37ee8-134f-471a-a88e-b18b22eadafe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ff272e4a-83e3-4bae-a1b8-d58be134987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5afd1f-d275-44cc-978f-a58852f3b154",
        "cursor": {
          "ref": "25acde77-9ea6-4959-89e8-6e313159f626",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a962418d-7b61-4b28-8910-461a0a8501cb"
        },
        "item": {
          "id": "3a5afd1f-d275-44cc-978f-a58852f3b154",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0d87ad43-d46b-4f1e-b621-c8aa5c27b16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1fb755-7a7b-4de5-9852-1dbac4cdc3d2",
        "cursor": {
          "ref": "d8997799-a8e7-4ad6-8a3e-a60b1f8529e5",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d0412133-9b5e-4129-9c47-60250597a198"
        },
        "item": {
          "id": "8d1fb755-7a7b-4de5-9852-1dbac4cdc3d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a16c8b87-ce22-4890-8279-70252a72464d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3034fa2c-41ff-4b2d-881c-cf55ade4c142",
        "cursor": {
          "ref": "dde7016d-694c-4fea-bf2d-02a369a795bc",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "41cbf435-eb19-44ab-bd25-0b6bd9aa5cc2"
        },
        "item": {
          "id": "3034fa2c-41ff-4b2d-881c-cf55ade4c142",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ae70e4ec-ba64-414b-8c8a-e2181067d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb52480-6144-4210-82f0-52c0daa923a3",
        "cursor": {
          "ref": "b32a6c39-2650-452f-aea7-0865a58965a8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c81880ce-2210-4d87-b253-741da1580105"
        },
        "item": {
          "id": "ffb52480-6144-4210-82f0-52c0daa923a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "121030d9-15f6-4613-91c6-eee61b2ab151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3093308-0c1c-4b80-b3f2-946c477ed846",
        "cursor": {
          "ref": "d1244323-9341-4794-bda4-d8accf41fe6b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b0a9aa14-8883-4119-9c24-f4911f08124c"
        },
        "item": {
          "id": "e3093308-0c1c-4b80-b3f2-946c477ed846",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "751153f7-6c66-495b-a737-6adba00d8da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f13d31-047f-4f8a-a651-f1fd0d1a75b1",
        "cursor": {
          "ref": "76ec5bb0-b7ad-486c-bcdf-cef4e310a570",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a775751d-a78b-443c-92af-9cebc3afde6f"
        },
        "item": {
          "id": "34f13d31-047f-4f8a-a651-f1fd0d1a75b1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2d6ba43b-9be4-40eb-adb7-296bb42a375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6b93b5-edcb-466c-bf08-681a1e1b0d73",
        "cursor": {
          "ref": "477505ee-e011-4cb0-b65e-709cdcb3fa09",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eeb23d5e-4701-4be0-9b60-3d1709d2253f"
        },
        "item": {
          "id": "cf6b93b5-edcb-466c-bf08-681a1e1b0d73",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a6e8e8e3-464c-4268-b1f8-f186e7d22984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38e6543-ee8b-4ef5-a3fe-f6eff1d465a1",
        "cursor": {
          "ref": "e1dc6a35-0322-43d2-a5ec-ac7c6e24c7c8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "60b590c8-bdf8-4114-afd2-ad6e8fa4577e"
        },
        "item": {
          "id": "b38e6543-ee8b-4ef5-a3fe-f6eff1d465a1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e0add6a3-c0d5-470d-af3f-4c18837db974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6984bf69-cefb-4406-9f97-b36db5034736",
        "cursor": {
          "ref": "a5858a47-fdf2-4c34-bda2-9449eefb8b2c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40f82ee2-daed-4257-962d-ddf46a2f79c3"
        },
        "item": {
          "id": "6984bf69-cefb-4406-9f97-b36db5034736",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "66d8b50b-92f2-4a82-bd55-39b180aab75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb574ada-3db4-4057-a306-d1387f789715",
        "cursor": {
          "ref": "056c2bd2-4bf2-4ce2-872d-dbd541b97466",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0471dd05-388c-4ea2-a7b8-d9b879851ac3"
        },
        "item": {
          "id": "cb574ada-3db4-4057-a306-d1387f789715",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2d29fd09-f7c8-4098-81ce-7e93c2a91c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f412302-6e5b-496a-ab9a-5b141d850c41",
        "cursor": {
          "ref": "8fd4d959-d79a-4d2a-9659-aeb3c1024b7a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c4835c8c-47a3-4b83-9d19-97cb4bd9d589"
        },
        "item": {
          "id": "5f412302-6e5b-496a-ab9a-5b141d850c41",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4d589edc-f467-447a-a435-927d117656be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8027d18-90a0-47d5-acbc-c9b79dc50491",
        "cursor": {
          "ref": "78f6155e-05be-4a45-ba20-d02bf97a174f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c608cbce-ecff-4573-bb33-9d822c141e04"
        },
        "item": {
          "id": "b8027d18-90a0-47d5-acbc-c9b79dc50491",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e4da4270-55cb-4f67-9b37-0a6bf29bfb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f1d084-fa85-4e82-b822-2c84143f178b",
        "cursor": {
          "ref": "035df824-894d-470b-b8bd-3518a3189937",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d98cf28f-2770-48b7-911a-e4861093e0de"
        },
        "item": {
          "id": "79f1d084-fa85-4e82-b822-2c84143f178b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ee3448bb-ec9e-4230-93ef-f828ffc300a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ec0592-2db1-4706-bf4b-4c8b730df2ac",
        "cursor": {
          "ref": "cc0120a2-21eb-4dcb-83f3-4a459b19d653",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "46da20b5-694e-4d49-ae57-9105cfccb493"
        },
        "item": {
          "id": "b9ec0592-2db1-4706-bf4b-4c8b730df2ac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f69b9d9b-ade0-4884-b57b-b60b23ccd7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7105712-c7f4-467c-9718-85fecb3ea4f5",
        "cursor": {
          "ref": "6641e873-d064-4182-a655-54295b7fa57d",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fa0e2471-24c9-4241-9f8a-9e6d5e943478"
        },
        "item": {
          "id": "f7105712-c7f4-467c-9718-85fecb3ea4f5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a45b730d-771e-4233-b477-abc469635f2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9755af95-f687-44ae-8801-0da8548ac1af",
        "cursor": {
          "ref": "f74cf2e1-f1b3-4a1b-9b68-60d5d1f6cdae",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46e285e3-69b2-4382-8d8a-750d8bcfcbd2"
        },
        "item": {
          "id": "9755af95-f687-44ae-8801-0da8548ac1af",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f368d427-8aee-454d-bae2-776b05bdc5da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 362,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35179ee6-c053-413f-9062-8f87ee28e7cb",
        "cursor": {
          "ref": "61f874c6-7426-427e-9d36-7a1f62fe9ae9",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "43d9ff97-de36-4a29-a5e3-efe5a0856962"
        },
        "item": {
          "id": "35179ee6-c053-413f-9062-8f87ee28e7cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4c4591e6-80ca-46df-865e-9c992d30c168",
          "status": "OK",
          "code": 200,
          "responseTime": 503,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "106caf77-3ae7-422a-861b-76287558bc5a",
        "cursor": {
          "ref": "137756c3-7622-4b1e-9342-57b845ddb2d1",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3bc70ad7-d7f1-4e90-8fb1-6b9c0e9c2033"
        },
        "item": {
          "id": "106caf77-3ae7-422a-861b-76287558bc5a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6c9311a3-6398-4e28-be11-fe923da612c0",
          "status": "OK",
          "code": 200,
          "responseTime": 1727,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19a594c-75fb-4c76-8540-d3d764f48b86",
        "cursor": {
          "ref": "ab8336a5-5218-40df-90ff-dc2532b1d6a4",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "03171c85-3aa9-45f7-a9af-ae9f5aec3a43"
        },
        "item": {
          "id": "c19a594c-75fb-4c76-8540-d3d764f48b86",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ae52ae5d-481c-4e08-9210-12e8d2a90a07",
          "status": "OK",
          "code": 200,
          "responseTime": 1498,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f094020-87ed-4966-b125-87e64b071280",
        "cursor": {
          "ref": "982eb8c3-c575-4627-aa3b-91ddb1466e07",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc8765c4-6053-4108-80dc-406f01a88537"
        },
        "item": {
          "id": "5f094020-87ed-4966-b125-87e64b071280",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "329c33b4-7c6b-4868-8e25-d20d116301d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f094020-87ed-4966-b125-87e64b071280",
        "cursor": {
          "ref": "982eb8c3-c575-4627-aa3b-91ddb1466e07",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc8765c4-6053-4108-80dc-406f01a88537"
        },
        "item": {
          "id": "5f094020-87ed-4966-b125-87e64b071280",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "329c33b4-7c6b-4868-8e25-d20d116301d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f094020-87ed-4966-b125-87e64b071280",
        "cursor": {
          "ref": "982eb8c3-c575-4627-aa3b-91ddb1466e07",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cc8765c4-6053-4108-80dc-406f01a88537"
        },
        "item": {
          "id": "5f094020-87ed-4966-b125-87e64b071280",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "329c33b4-7c6b-4868-8e25-d20d116301d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cd108c-7600-478a-82f2-e450abd7f078",
        "cursor": {
          "ref": "a731cf9e-8cc1-4c39-b1a4-2a902d78def8",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e9651aa-ee70-49bc-85ac-24d37aa53047"
        },
        "item": {
          "id": "36cd108c-7600-478a-82f2-e450abd7f078",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2e8da591-0d28-4b2b-80bb-92de408d97f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 454,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf9c9c-d4eb-4c90-84e4-b99b3a22f7c6",
        "cursor": {
          "ref": "dd3d1b83-9cf2-4dab-9b8f-e711f2b13826",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "06aa1b28-485c-4557-8dee-698d79ab21aa"
        },
        "item": {
          "id": "8fcf9c9c-d4eb-4c90-84e4-b99b3a22f7c6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ab9e8c5e-529a-4afb-b1f5-d1ba0473d5a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf9c9c-d4eb-4c90-84e4-b99b3a22f7c6",
        "cursor": {
          "ref": "dd3d1b83-9cf2-4dab-9b8f-e711f2b13826",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "06aa1b28-485c-4557-8dee-698d79ab21aa"
        },
        "item": {
          "id": "8fcf9c9c-d4eb-4c90-84e4-b99b3a22f7c6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ab9e8c5e-529a-4afb-b1f5-d1ba0473d5a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf928b2-fd2a-415b-a9e6-66200db69dd9",
        "cursor": {
          "ref": "fb39241c-5ba9-4e95-a73e-a556f1cd68a5",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b39f7ff-83cb-4153-bf5d-24c2689f6835"
        },
        "item": {
          "id": "6bf928b2-fd2a-415b-a9e6-66200db69dd9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "385d7221-6138-4fdf-8c04-3c79ff2c21a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 686,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4513e162-62f9-48d0-a00e-eb9dfd61d03c",
        "cursor": {
          "ref": "5d8d4932-df3b-4da8-b227-301fc3c34a49",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c98ec7be-6b0b-40eb-8623-4a0b77d23840"
        },
        "item": {
          "id": "4513e162-62f9-48d0-a00e-eb9dfd61d03c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4bf0d7ba-5d05-4444-a683-07de7add2c6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4513e162-62f9-48d0-a00e-eb9dfd61d03c",
        "cursor": {
          "ref": "5d8d4932-df3b-4da8-b227-301fc3c34a49",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c98ec7be-6b0b-40eb-8623-4a0b77d23840"
        },
        "item": {
          "id": "4513e162-62f9-48d0-a00e-eb9dfd61d03c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4bf0d7ba-5d05-4444-a683-07de7add2c6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e11783-9843-4caf-97be-65b1923049fe",
        "cursor": {
          "ref": "d3488c42-85e5-4c85-a8f9-2ee504caf443",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e2e61e61-2ac4-4f90-9342-bb0a9b80efed"
        },
        "item": {
          "id": "a0e11783-9843-4caf-97be-65b1923049fe",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "615a22b4-0f84-49e1-975d-8be5b372efe2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 690,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}